[
   {
      "author_association" : "MEMBER",
      "body" : "A change like this was originally suggested by @JeremyRubin here: https://github.com/sipa/bitcoin/pull/116",
      "created_at" : "2020-01-25T21:10:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#issuecomment-578443335",
      "id" : 578443335,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18002",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3ODQ0MzMzNQ==",
      "updated_at" : "2020-01-25T21:10:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578443335",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17977 ([WIP] Implement BIP 340-342 validation (Schnorr/taproot/tapscript) by sipa)\n* #16653 (script: add simple signature support (checker/creator) by kallewoof)\n* #16440 (BIP-322: Generic signed message format by kallewoof)\n* #16411 (BIP-325: Signet support by kallewoof)\n* #13062 (Make script interpreter independent from storage type CScript by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-01-26T01:11:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#issuecomment-578458898",
      "id" : 578458898,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18002",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3ODQ1ODg5OA==",
      "updated_at" : "2020-02-11T19:34:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578458898",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm generally a big fan of cleaning up this consensus logic such that the code is  \"tree-like\" and terminates at leaf branches, rather than having interleaved \"dag-like\" branches that merge into a common exit point. One of the key advantages of code structured in this way is it's much easier to see, at a glance, exactly how many \"versions\" (i.e., combinations of flags) we support. Otherwise, with N things that could either be on or off you get something like 2**N potential execution traces which makes it really hard to write tests for all flows (coverage is not enough).\r\n\r\nIt's a code style that I think we should strive to use when possible, and it makes me a bit extreme in that I go as far as to think we should re-write some other consensus logic (see https://github.com/bitcoin/bitcoin/pull/15969) to be more in line with this style.\r\n\r\nI say the above here not to advocate for more expansive changes at this time, but more so that other reviewers can appropriately discount my ACKs here if you disagree with this viewpoint.\r\n\r\nThat this makes Taproot simpler to review and implement is a plus, but I think these changes stand on their own.\r\n\r\nConcept ACK + lite CR-ack, untested.",
      "created_at" : "2020-01-26T02:27:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#issuecomment-578462602",
      "id" : 578462602,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18002",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3ODQ2MjYwMg==",
      "updated_at" : "2020-01-26T02:27:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578462602",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r370979869"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370979869"
         }
      },
      "author_association" : "MEMBER",
      "body" : "~Before this PR `SCRIPT_ERR_CLEANSTACK` would be enforced even on non version 0 witnessed. This change only enforce it on version 0 witnesses, this is probably a hardfork case?~ (not the case, I missed the `else` clause in the original code)",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-01-26T07:51:23Z",
      "diff_hunk" : "@@ -1428,45 +1445,31 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY);\n             }\n             scriptPubKey = CScript(witness.stack.back().begin(), witness.stack.back().end());\n-            stack = std::vector<std::vector<unsigned char> >(witness.stack.begin(), witness.stack.end() - 1);\n             uint256 hashScriptPubKey;\n             CSHA256().Write(&scriptPubKey[0], scriptPubKey.size()).Finalize(hashScriptPubKey.begin());\n             if (memcmp(hashScriptPubKey.begin(), program.data(), 32)) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n             }\n+            return ExecuteWitnessProgram({witness.stack.begin(), witness.stack.end() - 1}, scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else if (program.size() == WITNESS_V0_KEYHASH_SIZE) {\n             // Special case for pay-to-pubkeyhash; signature + pubkey in witness\n             if (witness.stack.size() != 2) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH); // 2 items in witness\n             }\n             scriptPubKey << OP_DUP << OP_HASH160 << program << OP_EQUALVERIFY << OP_CHECKSIG;\n-            stack = witness.stack;\n+            return ExecuteWitnessProgram(witness.stack, scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else {\n             return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH);\n         }\n-    } else if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM) {\n-        return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM);\n-    } else {\n-        // Higher version witness scripts return true for future softfork compatibility\n-        return set_success(serror);\n-    }\n-\n-    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n-    for (unsigned int i = 0; i < stack.size(); i++) {\n-        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE)\n-            return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n+        assert(false); // Unreachable code\n     }\n \n-    if (!EvalScript(stack, scriptPubKey, flags, checker, SigVersion::WITNESS_V0, serror)) {\n-        return false;\n+    if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM) {\n+        return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM);\n     }\n \n-    // Scripts inside witness implicitly require cleanstack behaviour\n-    if (stack.size() != 1)\n-        return set_error(serror, SCRIPT_ERR_CLEANSTACK);\n-    if (!CastToBool(stack.back()))\n-        return set_error(serror, SCRIPT_ERR_EVAL_FALSE);\n-    return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r370979869",
      "id" : 370979869,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3OTg2OQ==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 75,
      "path" : "src/script/interpreter.cpp",
      "position" : 76,
      "pull_request_review_id" : 348363504,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370979869",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r370980200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370980200"
         }
      },
      "author_association" : "MEMBER",
      "body" : "~EDIT: Actually right now, all non witness 0 script would be rejected by consensus? Because the stack of a non version 0 witness is always empty and this would violate `SCRIPT_ERR_CLEANSTACK`?~  (not the case, I missed the `else` clause in the original code)",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-01-26T07:58:28Z",
      "diff_hunk" : "@@ -1428,45 +1445,31 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY);\n             }\n             scriptPubKey = CScript(witness.stack.back().begin(), witness.stack.back().end());\n-            stack = std::vector<std::vector<unsigned char> >(witness.stack.begin(), witness.stack.end() - 1);\n             uint256 hashScriptPubKey;\n             CSHA256().Write(&scriptPubKey[0], scriptPubKey.size()).Finalize(hashScriptPubKey.begin());\n             if (memcmp(hashScriptPubKey.begin(), program.data(), 32)) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n             }\n+            return ExecuteWitnessProgram({witness.stack.begin(), witness.stack.end() - 1}, scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else if (program.size() == WITNESS_V0_KEYHASH_SIZE) {\n             // Special case for pay-to-pubkeyhash; signature + pubkey in witness\n             if (witness.stack.size() != 2) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH); // 2 items in witness\n             }\n             scriptPubKey << OP_DUP << OP_HASH160 << program << OP_EQUALVERIFY << OP_CHECKSIG;\n-            stack = witness.stack;\n+            return ExecuteWitnessProgram(witness.stack, scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else {\n             return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH);\n         }\n-    } else if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM) {\n-        return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM);\n-    } else {\n-        // Higher version witness scripts return true for future softfork compatibility\n-        return set_success(serror);\n-    }\n-\n-    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n-    for (unsigned int i = 0; i < stack.size(); i++) {\n-        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE)\n-            return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n+        assert(false); // Unreachable code\n     }\n \n-    if (!EvalScript(stack, scriptPubKey, flags, checker, SigVersion::WITNESS_V0, serror)) {\n-        return false;\n+    if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM) {\n+        return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM);\n     }\n \n-    // Scripts inside witness implicitly require cleanstack behaviour\n-    if (stack.size() != 1)\n-        return set_error(serror, SCRIPT_ERR_CLEANSTACK);\n-    if (!CastToBool(stack.back()))\n-        return set_error(serror, SCRIPT_ERR_EVAL_FALSE);\n-    return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r370980200",
      "id" : 370980200,
      "in_reply_to_id" : 370979869,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4MDIwMA==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 75,
      "path" : "src/script/interpreter.cpp",
      "position" : 76,
      "pull_request_review_id" : 348363771,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370980200",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK.\r\n\r\nI like the approach of trying to get small refactors onto the codebase that can be independently reviewed to make the taproot PR more reviewable.",
      "created_at" : "2020-01-26T08:04:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#issuecomment-578478085",
      "id" : 578478085,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18002",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3ODQ3ODA4NQ==",
      "updated_at" : "2020-01-26T08:06:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578478085",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r372697829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372697829"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Maybe `stack` passing could be clarified by passing as const reference and instantiating the local within? Or a doc commenting that it's an in var.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-01-30T00:03:43Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r372697829",
      "id" : 372697829,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY5NzgyOQ==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 350508596,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372697829",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r372698278"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372698278"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Passing it as const reference would require an unnecessary copy. I'll add a comment.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-01-30T00:05:23Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r372698278",
      "id" : 372698278,
      "in_reply_to_id" : 372697829,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY5ODI3OA==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 350509164,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372698278",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code Review ACK https://github.com/bitcoin/bitcoin/pull/18002/commits/1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "created_at" : "2020-01-30T00:11:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#issuecomment-580023477",
      "id" : 580023477,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18002",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDAyMzQ3Nw==",
      "updated_at" : "2020-01-30T00:11:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580023477",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r372701039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372701039"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sounds good re comment. Doesn't the copy occur in either case? AFAIK pass by value requires a copy to have a new instance available for modification.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-01-30T00:15:19Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r372701039",
      "id" : 372701039,
      "in_reply_to_id" : 372697829,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcwMTAzOQ==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 350512520,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372701039",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r372702063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372702063"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Pass by value is a terrible name.\n\nIt's just a variable on the callee side that is constructed in place by the caller. The call sites construct temporaries, so the move constructor will be invoked to construct the parameter.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-01-30T00:18:43Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r372702063",
      "id" : 372702063,
      "in_reply_to_id" : 372697829,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcwMjA2Mw==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 350513731,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372702063",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r372892925"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372892925"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Having `if () { ...; } else { ... }` instead of `if () { ...; assert(false); } ...` would let gcc and clang issue a compile-time warning (\"control reaches end of non-void function\") if the logic got messed up in future, but I don't think there's any way to get both a compile time warning and a runtime safety check (assert(false) overrules the \"control reaches end...\" warning), so just having the runtime safety check is probably best.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-01-30T11:20:06Z",
      "diff_hunk" : "@@ -1428,45 +1445,31 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY);\n             }\n             scriptPubKey = CScript(witness.stack.back().begin(), witness.stack.back().end());\n-            stack = std::vector<std::vector<unsigned char> >(witness.stack.begin(), witness.stack.end() - 1);\n             uint256 hashScriptPubKey;\n             CSHA256().Write(&scriptPubKey[0], scriptPubKey.size()).Finalize(hashScriptPubKey.begin());\n             if (memcmp(hashScriptPubKey.begin(), program.data(), 32)) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n             }\n+            return ExecuteWitnessProgram({witness.stack.begin(), witness.stack.end() - 1}, scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else if (program.size() == WITNESS_V0_KEYHASH_SIZE) {\n             // Special case for pay-to-pubkeyhash; signature + pubkey in witness\n             if (witness.stack.size() != 2) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH); // 2 items in witness\n             }\n             scriptPubKey << OP_DUP << OP_HASH160 << program << OP_EQUALVERIFY << OP_CHECKSIG;\n-            stack = witness.stack;\n+            return ExecuteWitnessProgram(witness.stack, scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else {\n             return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH);\n         }\n-    } else if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM) {\n-        return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM);\n-    } else {\n-        // Higher version witness scripts return true for future softfork compatibility\n-        return set_success(serror);\n-    }\n-\n-    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n-    for (unsigned int i = 0; i < stack.size(); i++) {\n-        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE)\n-            return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n+        assert(false); // Unreachable code",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r372892925",
      "id" : 372892925,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5MjkyNQ==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 61,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 350749895,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372892925",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r372894416"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372894416"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`for (const auto& el : stack) { if (el.size() > MAX_SCRIPT_ELEMENT_SIZE) { ...` ? Probably too gratuitous a change to justify. Likewise `++i` vs `i++` :)",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-01-30T11:23:50Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)\n+{\n+    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n+    for (unsigned int i = 0; i < stack.size(); i++) {\n+        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r372894416",
      "id" : 372894416,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5NDQxNg==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 8,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 350749895,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372894416",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r373310915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373310915"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Everything else is called `Eval` rather than `Execute`",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-01-31T04:23:33Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r373310915",
      "id" : 373310915,
      "in_reply_to_id" : 372697829,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMDkxNQ==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 350749895,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373310915",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r373919265"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373919265"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I didn't want to call it ...Eval, as it's not just evaluating a script (EvalScript just executes opcodes, and modifies a stack; this function is actually closer to VerifyScript which maps it to a true/false success overall).",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-03T04:35:05Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r373919265",
      "id" : 373919265,
      "in_reply_to_id" : 372697829,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkxOTI2NQ==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 352017278,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373919265",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376168256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376168256"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Concerning the `stack` parameter: would it make sense to declare it as an rvalue parameter (&&) and pass constructed temporaries in both calls (would need to change `witness.stack` to `{witness.stack.begin(), witness.stack.end()}`, to ensure and clarify that the move-constructor is _always_ involved? Just an idea following the \"explicit is better than implicit\" principle.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-07T01:09:48Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376168256",
      "id" : 376168256,
      "in_reply_to_id" : 372697829,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2ODI1Ng==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 354877984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376168256",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376198451"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376198451"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@theStack Ok, better like this?",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-07T03:25:37Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376198451",
      "id" : 376198451,
      "in_reply_to_id" : 372697829,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE5ODQ1MQ==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 354912612,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376198451",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376342950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376342950"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That was more of a suggestion/question than a concrete wish (you probably have way more C++ experience), but personally I'd prefer it, yes. Interestingly enough, on the first call explicitely calling the constructor would not be needed (passing `{witness.stack.begin(), witness.stack.end() - 1}` is sufficient), while on the second call only `{witness.stack}` would lead to an error and an explicit constructor call (`std::vector<std::vector<unsigned char>>(...)`) is needed.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-07T11:24:39Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376342950",
      "id" : 376342950,
      "in_reply_to_id" : 372697829,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM0Mjk1MA==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 355093278,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376342950",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376486003"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376486003"
         }
      },
      "author_association" : "NONE",
      "body" : "Why not `return EvalScript(stack, scriptPubKey, flags, checker, sigversion, serror));`",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-07T16:31:05Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>>&& stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)\n+{\n+    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n+    for (unsigned int i = 0; i < stack.size(); i++) {\n+        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+            return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n+        }\n+    }\n+\n+    // Run the script interpreter.\n+    if (!EvalScript(stack, scriptPubKey, flags, checker, sigversion, serror)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376486003",
      "id" : 376486003,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4NjAwMw==",
      "original_commit_id" : "139f7ffc71b706df748624e9c41d83a041b9f8b3",
      "original_position" : 14,
      "path" : "src/script/interpreter.cpp",
      "position" : 14,
      "pull_request_review_id" : 355280503,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376486003",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/1022650?v=4",
         "events_url" : "https://api.github.com/users/egp/events{/privacy}",
         "followers_url" : "https://api.github.com/users/egp/followers",
         "following_url" : "https://api.github.com/users/egp/following{/other_user}",
         "gists_url" : "https://api.github.com/users/egp/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/egp",
         "id" : 1022650,
         "login" : "egp",
         "node_id" : "MDQ6VXNlcjEwMjI2NTA=",
         "organizations_url" : "https://api.github.com/users/egp/orgs",
         "received_events_url" : "https://api.github.com/users/egp/received_events",
         "repos_url" : "https://api.github.com/users/egp/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/egp/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/egp/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/egp"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376486793"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376486793"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That would be incorrect. The lines below wouldn't be executed anymore.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-07T16:32:39Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>>&& stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)\n+{\n+    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n+    for (unsigned int i = 0; i < stack.size(); i++) {\n+        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+            return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n+        }\n+    }\n+\n+    // Run the script interpreter.\n+    if (!EvalScript(stack, scriptPubKey, flags, checker, sigversion, serror)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376486793",
      "id" : 376486793,
      "in_reply_to_id" : 376486003,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4Njc5Mw==",
      "original_commit_id" : "139f7ffc71b706df748624e9c41d83a041b9f8b3",
      "original_position" : 14,
      "path" : "src/script/interpreter.cpp",
      "position" : 14,
      "pull_request_review_id" : 355281567,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376486793",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376492299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376492299"
         }
      },
      "author_association" : "NONE",
      "body" : "Ah, I see. Sorry.\r\nI missed that because I am used to FP.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-07T16:43:20Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>>&& stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)\n+{\n+    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n+    for (unsigned int i = 0; i < stack.size(); i++) {\n+        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+            return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n+        }\n+    }\n+\n+    // Run the script interpreter.\n+    if (!EvalScript(stack, scriptPubKey, flags, checker, sigversion, serror)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376492299",
      "id" : 376492299,
      "in_reply_to_id" : 376486003,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5MjI5OQ==",
      "original_commit_id" : "139f7ffc71b706df748624e9c41d83a041b9f8b3",
      "original_position" : 14,
      "path" : "src/script/interpreter.cpp",
      "position" : 14,
      "pull_request_review_id" : 355288870,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376492299",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/1022650?v=4",
         "events_url" : "https://api.github.com/users/egp/events{/privacy}",
         "followers_url" : "https://api.github.com/users/egp/followers",
         "following_url" : "https://api.github.com/users/egp/following{/other_user}",
         "gists_url" : "https://api.github.com/users/egp/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/egp",
         "id" : 1022650,
         "login" : "egp",
         "node_id" : "MDQ6VXNlcjEwMjI2NTA=",
         "organizations_url" : "https://api.github.com/users/egp/orgs",
         "received_events_url" : "https://api.github.com/users/egp/received_events",
         "repos_url" : "https://api.github.com/users/egp/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/egp/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/egp/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/egp"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376549319"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376549319"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, I'm aware it wasn't necessary to invoke the constructor explicitly, but it's probably clearer this way (semantically it's equivalent).",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-07T18:49:55Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376549319",
      "id" : 376549319,
      "in_reply_to_id" : 372697829,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0OTMxOQ==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 355362582,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376549319",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376812933"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376812933"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You could do:\r\n\r\n```diff\r\n-static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>>&& stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)\r\n+static bool ExecuteWitnessProgram(std::vector<valtype>::const_iterator begin, std::vector<valtype>::const_iterator end, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)\r\n {\r\n+    std::vector<valtype> stack{begin, end};\r\n```\r\n\r\nand just pass the iterators in directly.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-09T20:31:55Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r376812933",
      "id" : 376812933,
      "in_reply_to_id" : 372697829,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxMjkzMw==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 355631441,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376812933",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r377737871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377737871"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hi ð I'd also like to bikeshed this function name please.\r\n\r\nMy understanding is that the witness program is the 20/32 byte commitment to the spending condition. The 'witness script' is what is actually executed. Does `ExecuteWitnessScript()` makes more sense as a function name? For both P2WPKH and P2WSH, the program is not actually passed in here.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-11T16:12:40Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>>&& stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r377737871",
      "id" : 377737871,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzczNzg3MQ==",
      "original_commit_id" : "139f7ffc71b706df748624e9c41d83a041b9f8b3",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 356790212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377737871",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r377740655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377740655"
         }
      },
      "author_association" : "MEMBER",
      "body" : "calling `set_success()` isn't required here. It only needs to be called once, by `VerifyScript()`. Anything further up the stack can just return true.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-11T16:17:02Z",
      "diff_hunk" : "@@ -1428,45 +1445,31 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY);\n             }\n             scriptPubKey = CScript(witness.stack.back().begin(), witness.stack.back().end());\n-            stack = std::vector<std::vector<unsigned char> >(witness.stack.begin(), witness.stack.end() - 1);\n             uint256 hashScriptPubKey;\n             CSHA256().Write(&scriptPubKey[0], scriptPubKey.size()).Finalize(hashScriptPubKey.begin());\n             if (memcmp(hashScriptPubKey.begin(), program.data(), 32)) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n             }\n+            return ExecuteWitnessProgram(std::vector<std::vector<unsigned char>>(witness.stack.begin(), witness.stack.end() - 1), scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else if (program.size() == WITNESS_V0_KEYHASH_SIZE) {\n             // Special case for pay-to-pubkeyhash; signature + pubkey in witness\n             if (witness.stack.size() != 2) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH); // 2 items in witness\n             }\n             scriptPubKey << OP_DUP << OP_HASH160 << program << OP_EQUALVERIFY << OP_CHECKSIG;\n-            stack = witness.stack;\n+            return ExecuteWitnessProgram(std::vector<std::vector<unsigned char>>(witness.stack), scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else {\n             return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH);\n         }\n-    } else if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM) {\n-        return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM);\n-    } else {\n-        // Higher version witness scripts return true for future softfork compatibility\n-        return set_success(serror);\n-    }\n-\n-    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n-    for (unsigned int i = 0; i < stack.size(); i++) {\n-        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE)\n-            return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n+        assert(false); // Unreachable code\n     }\n \n-    if (!EvalScript(stack, scriptPubKey, flags, checker, SigVersion::WITNESS_V0, serror)) {\n-        return false;\n+    if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM) {\n+        return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM);\n     }\n \n-    // Scripts inside witness implicitly require cleanstack behaviour\n-    if (stack.size() != 1)\n-        return set_error(serror, SCRIPT_ERR_CLEANSTACK);\n-    if (!CastToBool(stack.back()))\n-        return set_error(serror, SCRIPT_ERR_EVAL_FALSE);\n-    return true;\n+    // Higher version witness scripts return true for future softfork compatibility\n+    return set_success(serror);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r377740655",
      "id" : 377740655,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc0MDY1NQ==",
      "original_commit_id" : "139f7ffc71b706df748624e9c41d83a041b9f8b3",
      "original_position" : 77,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 356790212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377740655",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378224169"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378224169"
         }
      },
      "author_association" : "MEMBER",
      "body" : "agree with @ajtowns, this seems nicer\r\n```diff\r\n-    for (unsigned int i = 0; i < stack.size(); i++) {\r\n-        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE) {\r\n+    for (const auto& el : stack) {\r\n+        if (el.size() > MAX_SCRIPT_ELEMENT_SIZE) {\r\n```\r\n",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-12T12:36:50Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)\n+{\n+    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n+    for (unsigned int i = 0; i < stack.size(); i++) {\n+        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378224169",
      "id" : 378224169,
      "in_reply_to_id" : 372894416,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIyNDE2OQ==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 8,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 357417326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378224169",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378224871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378224871"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> calling `set_success()` isn't required here. It only needs to be called once, by `VerifyScript()`\r\n\r\nagree with @jnewbery here AFAICT",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-12T12:38:26Z",
      "diff_hunk" : "@@ -1428,45 +1445,31 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY);\n             }\n             scriptPubKey = CScript(witness.stack.back().begin(), witness.stack.back().end());\n-            stack = std::vector<std::vector<unsigned char> >(witness.stack.begin(), witness.stack.end() - 1);\n             uint256 hashScriptPubKey;\n             CSHA256().Write(&scriptPubKey[0], scriptPubKey.size()).Finalize(hashScriptPubKey.begin());\n             if (memcmp(hashScriptPubKey.begin(), program.data(), 32)) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n             }\n+            return ExecuteWitnessProgram(std::vector<std::vector<unsigned char>>(witness.stack.begin(), witness.stack.end() - 1), scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else if (program.size() == WITNESS_V0_KEYHASH_SIZE) {\n             // Special case for pay-to-pubkeyhash; signature + pubkey in witness\n             if (witness.stack.size() != 2) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH); // 2 items in witness\n             }\n             scriptPubKey << OP_DUP << OP_HASH160 << program << OP_EQUALVERIFY << OP_CHECKSIG;\n-            stack = witness.stack;\n+            return ExecuteWitnessProgram(std::vector<std::vector<unsigned char>>(witness.stack), scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else {\n             return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH);\n         }\n-    } else if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM) {\n-        return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM);\n-    } else {\n-        // Higher version witness scripts return true for future softfork compatibility\n-        return set_success(serror);\n-    }\n-\n-    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n-    for (unsigned int i = 0; i < stack.size(); i++) {\n-        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE)\n-            return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n+        assert(false); // Unreachable code\n     }\n \n-    if (!EvalScript(stack, scriptPubKey, flags, checker, SigVersion::WITNESS_V0, serror)) {\n-        return false;\n+    if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM) {\n+        return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM);\n     }\n \n-    // Scripts inside witness implicitly require cleanstack behaviour\n-    if (stack.size() != 1)\n-        return set_error(serror, SCRIPT_ERR_CLEANSTACK);\n-    if (!CastToBool(stack.back()))\n-        return set_error(serror, SCRIPT_ERR_EVAL_FALSE);\n-    return true;\n+    // Higher version witness scripts return true for future softfork compatibility\n+    return set_success(serror);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378224871",
      "id" : 378224871,
      "in_reply_to_id" : 377740655,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIyNDg3MQ==",
      "original_commit_id" : "139f7ffc71b706df748624e9c41d83a041b9f8b3",
      "original_position" : 77,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 357417326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378224871",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review ACK 139f7ffc71b706df748624e9c41d83a041b9f8b3\r\n\r\nVerified the changes are a pure refactor. Also ran test locally. I agree with both of @jnewbery s comments but can also be merged as it is right now.",
      "created_at" : "2020-02-12T18:15:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#issuecomment-585342836",
      "id" : 585342836,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18002",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NTM0MjgzNg==",
      "updated_at" : "2020-02-12T18:15:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585342836",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378467589"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378467589"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done. I think the compiler can do an equally good job of detecting missing branches, and it avoids an assertion in consensus code.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-12T19:33:26Z",
      "diff_hunk" : "@@ -1428,45 +1445,31 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY);\n             }\n             scriptPubKey = CScript(witness.stack.back().begin(), witness.stack.back().end());\n-            stack = std::vector<std::vector<unsigned char> >(witness.stack.begin(), witness.stack.end() - 1);\n             uint256 hashScriptPubKey;\n             CSHA256().Write(&scriptPubKey[0], scriptPubKey.size()).Finalize(hashScriptPubKey.begin());\n             if (memcmp(hashScriptPubKey.begin(), program.data(), 32)) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n             }\n+            return ExecuteWitnessProgram({witness.stack.begin(), witness.stack.end() - 1}, scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else if (program.size() == WITNESS_V0_KEYHASH_SIZE) {\n             // Special case for pay-to-pubkeyhash; signature + pubkey in witness\n             if (witness.stack.size() != 2) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH); // 2 items in witness\n             }\n             scriptPubKey << OP_DUP << OP_HASH160 << program << OP_EQUALVERIFY << OP_CHECKSIG;\n-            stack = witness.stack;\n+            return ExecuteWitnessProgram(witness.stack, scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else {\n             return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH);\n         }\n-    } else if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM) {\n-        return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM);\n-    } else {\n-        // Higher version witness scripts return true for future softfork compatibility\n-        return set_success(serror);\n-    }\n-\n-    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n-    for (unsigned int i = 0; i < stack.size(); i++) {\n-        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE)\n-            return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n+        assert(false); // Unreachable code",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378467589",
      "id" : 378467589,
      "in_reply_to_id" : 372892925,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2NzU4OQ==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 61,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 357729648,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378467589",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378468106"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378468106"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, I'm making style improvements anyway.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-12T19:34:22Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)\n+{\n+    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n+    for (unsigned int i = 0; i < stack.size(); i++) {\n+        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378468106",
      "id" : 378468106,
      "in_reply_to_id" : 372894416,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2ODEwNg==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 8,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 357730255,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:34:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378468106",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378468284"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378468284"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Bikeshed accepted.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-12T19:34:45Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>>&& stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378468284",
      "id" : 378468284,
      "in_reply_to_id" : 377737871,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2ODI4NA==",
      "original_commit_id" : "139f7ffc71b706df748624e9c41d83a041b9f8b3",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 357730498,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:34:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378468284",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378468354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378468354"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-12T19:34:55Z",
      "diff_hunk" : "@@ -1428,45 +1445,31 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY);\n             }\n             scriptPubKey = CScript(witness.stack.back().begin(), witness.stack.back().end());\n-            stack = std::vector<std::vector<unsigned char> >(witness.stack.begin(), witness.stack.end() - 1);\n             uint256 hashScriptPubKey;\n             CSHA256().Write(&scriptPubKey[0], scriptPubKey.size()).Finalize(hashScriptPubKey.begin());\n             if (memcmp(hashScriptPubKey.begin(), program.data(), 32)) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n             }\n+            return ExecuteWitnessProgram(std::vector<std::vector<unsigned char>>(witness.stack.begin(), witness.stack.end() - 1), scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else if (program.size() == WITNESS_V0_KEYHASH_SIZE) {\n             // Special case for pay-to-pubkeyhash; signature + pubkey in witness\n             if (witness.stack.size() != 2) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH); // 2 items in witness\n             }\n             scriptPubKey << OP_DUP << OP_HASH160 << program << OP_EQUALVERIFY << OP_CHECKSIG;\n-            stack = witness.stack;\n+            return ExecuteWitnessProgram(std::vector<std::vector<unsigned char>>(witness.stack), scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else {\n             return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH);\n         }\n-    } else if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM) {\n-        return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM);\n-    } else {\n-        // Higher version witness scripts return true for future softfork compatibility\n-        return set_success(serror);\n-    }\n-\n-    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n-    for (unsigned int i = 0; i < stack.size(); i++) {\n-        if (stack.at(i).size() > MAX_SCRIPT_ELEMENT_SIZE)\n-            return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n+        assert(false); // Unreachable code\n     }\n \n-    if (!EvalScript(stack, scriptPubKey, flags, checker, SigVersion::WITNESS_V0, serror)) {\n-        return false;\n+    if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM) {\n+        return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM);\n     }\n \n-    // Scripts inside witness implicitly require cleanstack behaviour\n-    if (stack.size() != 1)\n-        return set_error(serror, SCRIPT_ERR_CLEANSTACK);\n-    if (!CastToBool(stack.back()))\n-        return set_error(serror, SCRIPT_ERR_EVAL_FALSE);\n-    return true;\n+    // Higher version witness scripts return true for future softfork compatibility\n+    return set_success(serror);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378468354",
      "id" : 378468354,
      "in_reply_to_id" : 377740655,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2ODM1NA==",
      "original_commit_id" : "139f7ffc71b706df748624e9c41d83a041b9f8b3",
      "original_position" : 77,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 357730598,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378468354",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378469508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378469508"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, as that makes it also more compatible with #13062.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-12T19:37:10Z",
      "diff_hunk" : "@@ -1416,9 +1416,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessProgram(std::vector<std::vector<unsigned char>> stack, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378469508",
      "id" : 378469508,
      "in_reply_to_id" : 372697829,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2OTUwOA==",
      "original_commit_id" : "1e1e28cdc207b7f12a8dce953e61c7c508c63611",
      "original_position" : 4,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 357732059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T19:37:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378469508",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've made a few invasive changes here, which will need re-review.",
      "created_at" : "2020-02-12T19:38:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#issuecomment-585380689",
      "id" : 585380689,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18002",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NTM4MDY4OQ==",
      "updated_at" : "2020-02-12T19:38:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585380689",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Re-ACK c8e24ddce31a8de6255b23c19d958c1cd44a8847\r\n\r\nNew changes addressed the review comments.",
      "created_at" : "2020-02-12T20:31:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#issuecomment-585403662",
      "id" : 585403662,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18002",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NTQwMzY2Mg==",
      "updated_at" : "2020-02-12T20:31:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585403662",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378576451"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378576451"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For my understanding, is there a reason why `auto` would not be preferred here?\r\n```diff\r\n-    for (const valtype& elem : stack) {\r\n+    for (const auto& elem : stack) {\r\n```",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-12T23:42:20Z",
      "diff_hunk" : "@@ -1414,9 +1414,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessScript(std::vector<valtype>::const_iterator begin, std::vector<valtype>::const_iterator end, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)\n+{\n+    std::vector<valtype> stack{begin, end};\n+\n+    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n+    for (const valtype& elem : stack) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r378576451",
      "id" : 378576451,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU3NjQ1MQ==",
      "original_commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "original_position" : 9,
      "path" : "src/script/interpreter.cpp",
      "position" : 9,
      "pull_request_review_id" : 357867729,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-12T23:44:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378576451",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK https://github.com/bitcoin/bitcoin/commit/c8e24ddce31a8de6255b23c19d958c1cd44a8847\r\nChecked that since my previous ACK https://github.com/bitcoin/bitcoin/commit/139f7ffc71b706df748624e9c41d83a041b9f8b3 the following changes have been made:\r\n- s/ExecuteWitnessProgram/ExecuteWitnessScript\r\n- pass script stack to ExecuteWitnessScript as const_iterator pair (and create local copy) \r\ninstead of rvalue reference\r\n- use range-based for loop for stack item size check\r\n- in success case, just return `true` instead of the not needed `set_success(...)`\r\n- removed the assertion for unreachable code, put the bottom part in an else-branch instead and intentionally have no return statement at the end of the function (if it is ever reached, the compiler would spit out a warning, indicating a flawed logic above)",
      "created_at" : "2020-02-16T18:47:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#issuecomment-586739286",
      "id" : 586739286,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18002",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjczOTI4Ng==",
      "updated_at" : "2020-02-16T18:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586739286",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code Review Re-ACK https://github.com/bitcoin/bitcoin/pull/18002/commits/c8e24ddce31a8de6255b23c19d958c1cd44a8847\r\n\r\nnit: could use `cbegin/cend`",
      "created_at" : "2020-02-17T20:58:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#issuecomment-587155456",
      "id" : 587155456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18002",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NzE1NTQ1Ng==",
      "updated_at" : "2020-02-17T20:58:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587155456",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r380952434"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380952434"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Personal preference.",
      "commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-18T21:42:56Z",
      "diff_hunk" : "@@ -1414,9 +1414,26 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+static bool ExecuteWitnessScript(std::vector<valtype>::const_iterator begin, std::vector<valtype>::const_iterator end, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)\n+{\n+    std::vector<valtype> stack{begin, end};\n+\n+    // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n+    for (const valtype& elem : stack) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#discussion_r380952434",
      "id" : 380952434,
      "in_reply_to_id" : 378576451,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk1MjQzNA==",
      "original_commit_id" : "c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "original_position" : 9,
      "path" : "src/script/interpreter.cpp",
      "position" : 9,
      "pull_request_review_id" : 360694374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18002",
      "updated_at" : "2020-02-18T21:42:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380952434",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK c8e24ddce31a8de6255b23c19d958c1cd44a8847",
      "created_at" : "2020-02-19T02:34:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#issuecomment-588004472",
      "id" : 588004472,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18002",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODAwNDQ3Mg==",
      "updated_at" : "2020-02-19T02:34:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588004472",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code Review reACK",
      "created_at" : "2020-02-19T12:53:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18002#issuecomment-588212705",
      "id" : 588212705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18002",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODIxMjcwNQ==",
      "updated_at" : "2020-02-19T12:53:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588212705",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   }
]
