{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "**Expected behavior**\r\n\r\nFunctional tests that complete successfully without attaching a C++ debugger should also complete successfully when a C++ debugger is attached.\r\n\r\n**Actual behavior**\r\n\r\nFunctional tests that automatically stop _(referred to as node0.**a**)_ and then start a node _(referred to as node0.**b**)_ (e.g. `feature_reindex.py`, `mempool_persist.py`) fail when `lldb` is attached to the bitcoind process of node0.a. The test framework raises `AssertionError: [node 0] Error: no RPC connection`, with the stderr output of `node0.b` indicating that `node0 stderr Error: Cannot obtain a lock on data directory /var/folders/sn/cvk2394n1y582qrt04llpzyw0000gn/T/bitcoin_func_test_x8dfwjci/node0/regtest. Bitcoin Core is probably already running.`\r\n\r\nEmpirically, it seems that node0.b is started before the lock of the process of node0.a is properly released by the filesystem.\r\n\r\nFull stacktrace of the AssertionError:\r\n```\r\nTestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"./test/functional/test_framework/test_framework.py\", line 537, in start_nodes\r\n    node.wait_for_rpc_connection()\r\n  File \"./test/functional/test_framework/test_node.py\", line 224, in wait_for_rpc_connection\r\n    raise FailedToStartError(self._node_msg(\r\ntest_framework.test_node.FailedToStartError: [node 0] bitcoind exited with status 1 during initialization\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"./test/functional/test_framework/test_framework.py\", line 132, in main\r\n    self.run_test()\r\n  File \"./test/functional/feature_reindex.py\", line 36, in run_test\r\n    self.reindex(False)\r\n  File \"./test/functional/feature_reindex.py\", line 30, in reindex\r\n    self.start_nodes(extra_args)\r\n  File \"./test/functional/test_framework/test_framework.py\", line 540, in start_nodes\r\n    self.stop_nodes()\r\n  File \"./test/functional/test_framework/test_framework.py\", line 555, in stop_nodes\r\n    node.stop_node(wait=wait, wait_until_stopped=False)\r\n  File \"./test/functional/test_framework/test_node.py\", line 335, in stop_node\r\n    self.stop(wait=wait)\r\n  File \"./test/functional/test_framework/test_node.py\", line 183, in __getattr__\r\n    assert self.rpc_connected and self.rpc is not None, self._node_msg(\"Error: no RPC connection\")\r\nAssertionError: [node 0] Error: no RPC connection\r\n```\r\n\r\n**To reproduce**\r\nIt seems the issue is not reproducible on all platforms, e.g. @LarryRuane reported he could not reproduce with either `lldb` or `gdb` on his linux setup. However, given the nature of how this can be fixed (see further), it doesn't look like an issue that would be exclusive to my setup. Would be great if people can try to reproduce and report back with their system information to further pin this down.\r\n\r\n1. `git checkout master`\r\n2. in `./test/functional/feature_reindex.py`, add a pdb breakpoint before running the first test. The placement of the breakpoint is important, the bug is only reproducible when the C++ debugger is attached (step 4) before a node stop/start cycle.\r\n```python\r\n...\r\n    def run_test(self):\r\n        import pdb; pdb.set_trace()  # Added this line\r\n        self.reindex(False)\r\n...\r\n``` \r\n3. run `./test/functional/feature_reindex.py`\r\n4. attach your C++ debugger, e.g. `PATH=/usr/bin /usr/bin/lldb -p $(pgrep bitcoind)`\r\n5. `continue` your C++ debugger (you don't need to set any breakpoints)\r\n6. `continue` pdb\r\n7. test_framework should raise `AssertionError: [node 0] Error: no RPC connection`\r\n\r\nNote: when skipping steps 4 and 5, the test should still run fine. It's attaching the C++ debugger that seems to interfere with releasing the filesystem lock in time.\r\n\r\n**Ideas to fix**\r\nI've tried some simple fixes to resolve the issue, ordered by increasing complexity. I've added commit shas that contain an example implementation.\r\n\r\n1. Add a sleep timer: c44a0eba\r\n2. Remove .lock file: a619c6750\r\n3. Explicitly remove the lock: 96c862a92\r\n\r\nIf this seems like an issue worth fixing, I'd be happy to try to implement the fix in a PR. I will probably need some guidance when it comes to filesystem locks and how it affects different platforms, and as mentioned earlier I'd need some reports on which systems (mostly OS and C++ debugger) this issue does or does not affect.\r\n\r\n**System information**\r\n\r\n<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\r\nThe issue can be replicated with current master branch 0bd7ca9\r\n\r\n<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\r\nI'm running macOS 12.0.1, Apple M1 Pro with lldb version lldb-1300.0.32.4\r\n",
   "closed_at" : null,
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
      "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
      "followers_url" : "https://api.github.com/users/stickies-v/followers",
      "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
      "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/stickies-v",
      "id" : 69010457,
      "login" : "stickies-v",
      "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
      "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
      "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
      "repos_url" : "https://api.github.com/users/stickies-v/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/stickies-v"
   },
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23651/comments",
   "created_at" : "2021-12-02T14:22:00Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23651/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/23651",
   "id" : 1069606186,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "description" : null,
         "id" : 64585,
         "name" : "Bug",
         "node_id" : "MDU6TGFiZWw2NDU4NQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23651/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII584_wOUq",
   "number" : 23651,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23651/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23651/timeline",
   "title" : "test: C++ debugger interferes with functional tests that quickly stop/start nodes",
   "updated_at" : "2021-12-02T14:46:24Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23651",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
      "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
      "followers_url" : "https://api.github.com/users/stickies-v/followers",
      "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
      "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/stickies-v",
      "id" : 69010457,
      "login" : "stickies-v",
      "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
      "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
      "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
      "repos_url" : "https://api.github.com/users/stickies-v/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/stickies-v"
   }
}
