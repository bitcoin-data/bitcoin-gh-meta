[
   {
      "author_association" : "MEMBER",
      "body" : "I know that in the beginning we had one fuzz binary and *one* fuzz corpus. To clarify, this is not what I am suggesting. I am suggesting to have one fuzz binary, but a fuzz corpus for each target.",
      "created_at" : "2020-10-05T17:31:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20088#issuecomment-703777994",
      "id" : 703777994,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20088",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMzc3Nzk5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-05T17:31:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/703777994",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kcc In the past we've followed your advice of creating one fuzz binary for each fuzzer. Is there a problem with instead having a single binary, but choosing the test with a command-line argument (and thus still having separate corpora for different tests)?",
      "created_at" : "2020-10-05T17:34:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20088#issuecomment-703779606",
      "id" : 703779606,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20088",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMzc3OTYwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-05T17:34:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/703779606",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I guess there will be a runtime overhead of parsing which test to run, but that is a constant cost, only paid once when the binary is started. So at least it shouldn't be an issue for in-process fuzzers such as libfuzzer.",
      "created_at" : "2020-10-05T17:39:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20088#issuecomment-703782363",
      "id" : 703782363,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20088",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMzc4MjM2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-05T17:39:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/703782363",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @practicalswift ",
      "created_at" : "2020-10-12T07:54:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20088#issuecomment-706946823",
      "id" : 706946823,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20088",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwNjk0NjgyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-12T07:54:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/706946823",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the ping @fanquake!\r\n\r\nWhen doing large scale fuzzing with the goal of reaching as good coverage as possible I think we definitely need support for one-binary-per-target.\r\n\r\nDon't take my word for it though: @kcc of C++ sanity fame who introduced the sanitizers, libFuzzer, OSS-Fuzz, CFI, etc. wrote this in https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-334516409: \"I always advocate for one-binary-per-target because it makes fuzzing more efficient.\" :)\r\n\r\nAlmost all fuzzing platforms are written assuming such a structure with one binary per fuzzer and one corpus per binary. If passing runtime arguments is supported at all then `fuzzing_harness -t foo` and `fuzzing_harness -t bar` are typically expected to share the same corpus.\r\n\r\nWith that said I think it could make sense to add a configure option which would build the fuzzing harnesses as one binary (with individual targets selected as a runtime argument) to speed up normal day-to-day compilation. That could hopefully be enabled by default to make sure the fuzzing harnesses still compiles are non-fuzzing code changes (currently that is often noticed only at CI stage).\r\n\r\nWould that make sense?",
      "created_at" : "2020-10-13T09:46:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20088#issuecomment-707625943",
      "id" : 707625943,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20088",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwNzYyNTk0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-13T09:54:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/707625943",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Almost all fuzzing platforms are written assuming such a structure with one binary per fuzzer and one corpus per binary\r\n\r\nOur primary concern is to be able to run the fuzzers ourselves, locally and on ci. With an increasing number of targets and increasing number of seeds, the compile-time and run-time for this will only ever increase. By default devs already don't compile the fuzz tests (#19388), let alone run them. We purely rely on ci for this, which again doesn't come with infinite resources.\r\n\r\nSupporting fuzzing platforms is a secondary goal. If they are not flexible enough to be configurable for our setting, then :shrug:. Regardless, have you tried creating wrapper bash scripts with the content `FUZZ=addr_deserialize ./src/test/fuzz.exe` and tried if that works for your favourite fuzzing platform?",
      "created_at" : "2020-12-03T16:39:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20088#issuecomment-738126585",
      "id" : 738126585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20088",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczODEyNjU4NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-03T16:39:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738126585",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
