{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Increase robustness when loading malformed `mempool.dat` files.\r\n\r\nAvoids the following three signed integer overflows when loading malformed `mempool.dat` files:\r\n\r\n```\r\n$ xxd -p -r > mempool.dat-crash-1 <<EOF\r\n0100000000000000000000000004000000000000000000000000ffffffff\r\nffffff7f00000000000000000000000000\r\nEOF\r\n$ cp mempool.dat-crash-1 ~/.bitcoin/regtest/mempool.dat\r\n$Â UBSAN_OPTIONS=\"print_stacktrace=1:halt_on_error=1:report_error_type=1\" src/bitcoind -regtest\r\nvalidation.cpp:5079:23: runtime error: signed integer overflow: 9223372036854775807 + 1209600 cannot be represented in type 'long'\r\n    #0 0x5618d335197f in LoadMempool(CTxMemPool&) src/validation.cpp:5079:23\r\n    #1 0x5618d3350df3 in CChainState::LoadMempool(ArgsManager const&) src/validation.cpp:4217:9\r\n    #2 0x5618d2b9345f in ThreadImport(ChainstateManager&, std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> >, ArgsManager const&) src/init.cpp:762:33\r\n    #3 0x5618d2b92162 in AppInitMain(util::Ref const&, NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_14::operator()() const src/init.cpp:1881:9\r\n```\r\n\r\n```\r\n$ xxd -p -r > mempool.dat-crash-2 <<EOF\r\n010000000000000000050900000000000509000000000000800000000000\r\n0000000000000000000000800000000000\r\nEOF\r\n$ cp mempool.dat-crash-2 ~/.bitcoin/regtest/mempool.dat\r\n$Â UBSAN_OPTIONS=\"print_stacktrace=1:halt_on_error=1:report_error_type=1\" src/bitcoind -regtest\r\nutil/moneystr.cpp:16:34: runtime error: negation of -9223372036854775808 cannot be represented in type 'CAmount' (aka 'long'); cast to an unsigned type to negate this value to itself                                                                                  \r\n    #0 0x5618a4a6366c in FormatMoney[abi:cxx11](long const&) src/util/moneystr.cpp:16:34\r\n    #1 0x5618a406c2f1 in CTxMemPool::PrioritiseTransaction(uint256 const&, long const&) src/txmempool.cpp:861:77\r\n    #2 0x5618a411064f in LoadMempool(CTxMemPool&) src/validation.cpp:5076:22\r\n    #3 0x5618a410fdf3 in CChainState::LoadMempool(ArgsManager const&) src/validation.cpp:4217:9\r\n    #4 0x5618a395245f in ThreadImport(ChainstateManager&, std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> >, ArgsManager const&) src/init.cpp:762:33\r\n    #5 0x5618a3951162 in AppInitMain(util::Ref const&, NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_14::operator()() const src/init.cpp:1881:9\r\n```\r\n\r\n```\r\n$ xxd -p -r > mempool.dat-crash-3 <<EOF\r\n0100000000000000000000000000000001253d8c0000000000000000006b\r\n00000000f7000000ff00f7000000ff0000000000000000000000800000ff\r\n0000\r\nEOF\r\n$ cp mempool.dat-crash-3 ~/.bitcoin/regtest/mempool.dat\r\n$Â UBSAN_OPTIONS=\"print_stacktrace=1:halt_on_error=1:report_error_type=1\" src/bitcoind -regtest\r\nutil/moneystr.cpp:16:34: runtime error: negation of -9223372036854775808 cannot be represented in type 'CAmount' (aka 'long'); cast to an unsigned type to negate this value to itself                                                                                  \r\n    #0 0x5575f515e66c in FormatMoney[abi:cxx11](long const&) src/util/moneystr.cpp:16:34\r\n    #1 0x5575f47672f1 in CTxMemPool::PrioritiseTransaction(uint256 const&, long const&) src/txmempool.cpp:861:77\r\n    #2 0x5575f480bc82 in LoadMempool(CTxMemPool&) src/validation.cpp:5107:18\r\n    #3 0x5575f480adf3 in CChainState::LoadMempool(ArgsManager const&) src/validation.cpp:4217:9\r\n    #4 0x5575f404d45f in ThreadImport(ChainstateManager&, std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> >, ArgsManager const&) src/init.cpp:762:33\r\n    #5 0x5575f404c162 in AppInitMain(util::Ref const&, NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_14::operator()() const src/init.cpp:1881:9\r\n```\r\n\r\nFixes #19278.",
   "closed_at" : "2021-01-14T15:39:59Z",
   "closed_by" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   },
   "comments" : 5,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20089/comments",
   "created_at" : "2020-10-05T19:06:43Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20089/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/20089",
   "id" : 715089001,
   "labels" : [
      {
         "color" : "6060aa",
         "default" : false,
         "description" : null,
         "id" : 118379652,
         "name" : "Validation",
         "node_id" : "MDU6TGFiZWwxMTgzNzk2NTI=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20089/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NDk4MDU2NjI2",
   "number" : 20089,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/20089.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20089",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/20089.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20089"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "validation: Increase robustness when loading malformed mempool.dat files (LoadMempool)",
   "updated_at" : "2021-01-14T15:39:59Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20089",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
