[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r496656286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496656286"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Note: This change isn't strictly necessary, but using `w8` instead of `wallet.dat` here makes the test more robust so `default_wallet_filename` can be changed in the future. The top level wallet directory will always contain a `w8` file, but may or may not contain a `wallet.dat` file, depending on the `default_wallet_filename` value.",
      "commit_id" : "5338dfaef077b5c38e3a87d76f12068147a5db2d",
      "created_at" : "2020-09-29T11:55:15Z",
      "diff_hunk" : "@@ -108,7 +107,7 @@ def wallet_file(name):\n \n         # should not initialize if wallet path can't be created\n         exp_stderr = \"boost::filesystem::create_directory:\"\n-        self.nodes[0].assert_start_raises_init_error(['-wallet=wallet.dat/bad'], exp_stderr, match=ErrorMatch.PARTIAL_REGEX)\n+        self.nodes[0].assert_start_raises_init_error(['-wallet=w8/bad'], exp_stderr, match=ErrorMatch.PARTIAL_REGEX)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r496656286",
      "id" : 496656286,
      "line" : 110,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NjI4Ng==",
      "original_commit_id" : "9fbba7ca8712be85a72b8499c437c6259b171d03",
      "original_line" : 110,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "test/functional/wallet_multiwallet.py",
      "position" : 62,
      "pull_request_review_id" : 498388433,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-29T17:06:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496656286",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19502 (Bugfix: Wallet: Soft-fail exceptions within ListWalletDir file checks by luke-jr)\n* #19297 ([test] WIP: rewrite generate() in test_node to gain determinism in test data by glowang)\n* #19168 (Refactor: Improve setup_clean_chain semantics by fjahr)\n* #18836 (wallet: upgradewallet fixes and additional tests by achow101)\n* #18788 (tests: Update more tests to work with descriptor wallets by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-09-29T12:58:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#issuecomment-700685003",
      "id" : 700685003,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20034",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDY4NTAwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T18:39:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700685003",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Do all of the changes need to happen in one commit? Also, the build without wallet doesn't pass the tests",
      "created_at" : "2020-09-29T13:10:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#issuecomment-700691520",
      "id" : 700691520,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20034",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDY5MTUyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T13:10:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700691520",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, I'll check the no wallet build. I don't think this is PR hard to review. It was very difficult to write, because every one change I made broke other things and required more changes. But in the end, the main change was just dropping -wallet=\"\" arguments and tweaking things to work around the dropped arguments.\r\n\r\nI would also expect if you're looking at one test and want to see how this PR affects the test, you'd rather look at one diff instead of multiple diffs. But I guess you have that option regardless by diffing across commits, so I'll see if there are sensible ways to have multiple commits.",
      "created_at" : "2020-09-29T14:30:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#issuecomment-700744365",
      "id" : 700744365,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20034",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDc0NDM2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T14:30:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700744365",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated 9fbba7ca8712be85a72b8499c437c6259b171d03 -> c072c8585dde004db0aadbf4309fb97a952a6f29 ([`pr/defw.1`](https://github.com/ryanofsky/bitcoin/commits/pr/defw.1) -> [`pr/defw.2`](https://github.com/ryanofsky/bitcoin/commits/pr/defw.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/defw.1..pr/defw.2)) with suggestions from Marco (thanks!) splitting up commits and adding missing is_wallet_compiled check",
      "created_at" : "2020-09-29T15:03:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#issuecomment-700768006",
      "id" : 700768006,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20034",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDc2ODAwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T15:03:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700768006",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't really like removing the `createwallet` override as it makes it more difficult to enable additional tests for descriptor wallets and lets us enable a test for descriptor wallets without having to modify every `createwallet` call in a test.",
      "created_at" : "2020-09-29T16:16:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#issuecomment-700814066",
      "id" : 700814066,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20034",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDgxNDA2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T16:16:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700814066",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: @achow101 https://github.com/bitcoin/bitcoin/pull/20034#issuecomment-700814066\r\n\r\n> I don't really like removing the `createwallet` override as it makes it more difficult to enable additional tests for descriptor wallets and lets us enable a test for descriptor wallets without having to modify every `createwallet` call in a test.\r\n\r\nThanks! Dropped commit be968c406944a74550799d28200255436c880f4b as I didn't realize it was separable. The change does seem like a win to me for simplicity and making things explicit, so maybe I will try to revive it in some form. But there's no reason to include it here.\r\n\r\n---\r\n\r\nUpdated c072c8585dde004db0aadbf4309fb97a952a6f29 -> 5338dfaef077b5c38e3a87d76f12068147a5db2d ([`pr/defw.2`](https://github.com/ryanofsky/bitcoin/commits/pr/defw.2) -> [`pr/defw.3`](https://github.com/ryanofsky/bitcoin/commits/pr/defw.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/defw.2..pr/defw.3)) just dropping commit be968c406944a74550799d28200255436c880f4b\r\n\r\n",
      "created_at" : "2020-09-29T17:08:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#issuecomment-700852887",
      "id" : 700852887,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20034",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDg1Mjg4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T17:08:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700852887",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r496914396"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496914396"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should the `-wallet=wallet.dat` throughout this test use `self.wallet_data_filename` too then?",
      "commit_id" : "5338dfaef077b5c38e3a87d76f12068147a5db2d",
      "created_at" : "2020-09-29T17:27:41Z",
      "diff_hunk" : "@@ -213,7 +213,7 @@ def test_salvage(self):\n         self.assert_tool_output('', '-wallet=salvage', 'salvage')\n \n     def run_test(self):\n-        self.wallet_path = os.path.join(self.nodes[0].datadir, self.chain, 'wallets', 'wallet.dat')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r496914396",
      "id" : 496914396,
      "line" : 216,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkxNDM5Ng==",
      "original_commit_id" : "cef6f09997b110fba9089a37abb4653101541046",
      "original_line" : 216,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/tool_wallet.py",
      "position" : 40,
      "pull_request_review_id" : 498719028,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-29T18:15:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496914396",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r496916277"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496916277"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why?",
      "commit_id" : "5338dfaef077b5c38e3a87d76f12068147a5db2d",
      "created_at" : "2020-09-29T17:30:30Z",
      "diff_hunk" : "@@ -94,10 +94,10 @@ def wallet_file(name):\n         #   w7_symlink - to verify symlinked wallet path is initialized correctly\n         #   w8         - to verify existing wallet file is loaded correctly\n         #   ''         - to verify default wallet file is created correctly\n-        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', '']\n-        extra_args = ['-wallet={}'.format(n) for n in wallet_names]\n+        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', self.default_wallet_name]\n+        extra_args = ['-nowallet'] + ['-wallet={}'.format(n) for n in wallet_names]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r496916277",
      "id" : 496916277,
      "line" : 97,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkxNjI3Nw==",
      "original_commit_id" : "cef6f09997b110fba9089a37abb4653101541046",
      "original_line" : 98,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "test/functional/wallet_multiwallet.py",
      "position" : 50,
      "pull_request_review_id" : 498719028,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-29T18:15:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496916277",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r496960050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496960050"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/20034#discussion_r496914396\r\n\r\n> Should the `-wallet=wallet.dat` throughout this test use `self.wallet_data_filename` too then?\r\n\r\nIt effectively is. I think you are maybe only looking at the first commit, not the overall diff? The wallet.dat references are removed in the second commit, since more robust way to refer to wallets is by directory name not data file name. (The data file name used inside wallets is an implementation detail and referring to it is only supported in limited cases for backwards compatibility. Dropping references to the data file name lets the test work with all default_wallet_name values.)",
      "commit_id" : "5338dfaef077b5c38e3a87d76f12068147a5db2d",
      "created_at" : "2020-09-29T18:44:35Z",
      "diff_hunk" : "@@ -213,7 +213,7 @@ def test_salvage(self):\n         self.assert_tool_output('', '-wallet=salvage', 'salvage')\n \n     def run_test(self):\n-        self.wallet_path = os.path.join(self.nodes[0].datadir, self.chain, 'wallets', 'wallet.dat')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r496960050",
      "id" : 496960050,
      "in_reply_to_id" : 496914396,
      "line" : 216,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk2MDA1MA==",
      "original_commit_id" : "cef6f09997b110fba9089a37abb4653101541046",
      "original_line" : 216,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/tool_wallet.py",
      "position" : 40,
      "pull_request_review_id" : 498777374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-29T18:51:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496960050",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r496962672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496962672"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/20034#discussion_r496916277\r\n\r\n> Why?\r\n\r\nSpecifying `-nowallet` keeps test behavior unchanged now that the load on startup option is used. Probably if you were writing this test from scratch, you would drop `-nowallet` and instead change the checks below. But this is the most minimal update for the existing test, it is also nice because it keeps the test more narrow and robust to outside changes.",
      "commit_id" : "5338dfaef077b5c38e3a87d76f12068147a5db2d",
      "created_at" : "2020-09-29T18:49:12Z",
      "diff_hunk" : "@@ -94,10 +94,10 @@ def wallet_file(name):\n         #   w7_symlink - to verify symlinked wallet path is initialized correctly\n         #   w8         - to verify existing wallet file is loaded correctly\n         #   ''         - to verify default wallet file is created correctly\n-        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', '']\n-        extra_args = ['-wallet={}'.format(n) for n in wallet_names]\n+        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', self.default_wallet_name]\n+        extra_args = ['-nowallet'] + ['-wallet={}'.format(n) for n in wallet_names]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r496962672",
      "id" : 496962672,
      "in_reply_to_id" : 496916277,
      "line" : 97,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk2MjY3Mg==",
      "original_commit_id" : "cef6f09997b110fba9089a37abb4653101541046",
      "original_line" : 98,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "test/functional/wallet_multiwallet.py",
      "position" : 50,
      "pull_request_review_id" : 498777374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-29T18:51:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496962672",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 5338dfaef077b5c38e3a87d76f12068147a5db2d",
      "created_at" : "2020-09-29T19:12:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#issuecomment-700925004",
      "id" : 700925004,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20034",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDkyNTAwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T19:12:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700925004",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r498101079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498101079"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in the first commit:\r\n\r\nThe test passes without this change, so I am still wondering why this is needed.\r\n\r\nAlso, the commit doesn't seem to be exhaustive. The `wallet.dat/bad` should be replaced as well. Also, the usages in `tool_wallet.py`. See the diff I used for testing:\r\n\r\n```diff\r\ndiff --git a/src/wallet/db.cpp b/src/wallet/db.cpp\r\nindex bd1d114730..89d7325e1c 100644\r\n--- a/src/wallet/db.cpp\r\n+++ b/src/wallet/db.cpp\r\n@@ -20,6 +20,6 @@ void SplitWalletPath(const fs::path& wallet_path, fs::path& env_directory, std::\r\n         // Normal case: Interpret wallet path as a directory path containing\r\n         // data and log files.\r\n         env_directory = wallet_path;\r\n-        database_filename = \"wallet.dat\";\r\n+        database_filename = \"wallet_dat\";\r\n     }\r\n }\r\ndiff --git a/src/wallet/test/db_tests.cpp b/src/wallet/test/db_tests.cpp\r\nindex 8f0083cd2e..3489d48879 100644\r\n--- a/src/wallet/test/db_tests.cpp\r\n+++ b/src/wallet/test/db_tests.cpp\r\n@@ -29,7 +29,7 @@ BOOST_AUTO_TEST_CASE(getwalletenv_file)\r\n \r\n BOOST_AUTO_TEST_CASE(getwalletenv_directory)\r\n {\r\n-    std::string expected_name = \"wallet.dat\";\r\n+    std::string expected_name = \"wallet_dat\";\r\n     const fs::path datadir = GetDataDir();\r\n \r\n     std::string filename;\r\ndiff --git a/src/wallet/walletutil.cpp b/src/wallet/walletutil.cpp\r\nindex e4c72aed98..3a16cb3e75 100644\r\n--- a/src/wallet/walletutil.cpp\r\n+++ b/src/wallet/walletutil.cpp\r\n@@ -71,11 +71,11 @@ std::vector<fs::path> ListWalletDir()\r\n         // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\r\n         const fs::path path = it->path().string().substr(offset);\r\n \r\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\r\n+        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet_dat\")) {\r\n             // Found a directory which contains wallet.dat btree file, add it as a wallet.\r\n             paths.emplace_back(path);\r\n         } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\r\n-            if (it->path().filename() == \"wallet.dat\") {\r\n+            if (it->path().filename() == \"wallet_dat\") {\r\n                 // Found top-level wallet.dat btree file, add top level directory \"\"\r\n                 // as a wallet.\r\n                 paths.emplace_back();\r\ndiff --git a/test/functional/test_framework/test_framework.py b/test/functional/test_framework/test_framework.py\r\nindex 100be26c59..fa72420178 100755\r\n--- a/test/functional/test_framework/test_framework.py\r\n+++ b/test/functional/test_framework/test_framework.py\r\n@@ -103,7 +103,7 @@ class BitcoinTestFramework(metaclass=BitcoinTestMetaClass):\r\n         self.supports_cli = True\r\n         self.bind_to_localhost_only = True\r\n         self.default_wallet_name = \"\"\r\n-        self.wallet_data_filename = \"wallet.dat\"\r\n+        self.wallet_data_filename = \"wallet_dat\"\r\n         self.set_test_params()\r\n         self.parse_args()\r\n         if self.options.timeout_factor == 0 :\r\ndiff --git a/test/functional/tool_wallet.py b/test/functional/tool_wallet.py\r\nindex ef68e224b6..8d3e7f8f62 100755\r\n--- a/test/functional/tool_wallet.py\r\n+++ b/test/functional/tool_wallet.py\r\n@@ -73,7 +73,7 @@ class ToolWalletTest(BitcoinTestFramework):\r\n         locked_dir = os.path.join(self.options.tmpdir, \"node0\", \"regtest\", \"wallets\")\r\n         self.assert_raises_tool_error(\r\n             'Error initializing wallet database environment \"{}\"!'.format(locked_dir),\r\n-            '-wallet=wallet.dat',\r\n+            '-wallet=wallet_dat',\r\n             'info',\r\n         )\r\n         path = os.path.join(self.options.tmpdir, \"node0\", \"regtest\", \"wallets\", \"nonexistent.dat\")\r\n@@ -104,7 +104,7 @@ class ToolWalletTest(BitcoinTestFramework):\r\n             Transactions: 0\r\n             Address Book: 3\r\n         ''')\r\n-        self.assert_tool_output(out, '-wallet=wallet.dat', 'info')\r\n+        self.assert_tool_output(out, '-wallet=wallet_dat', 'info')\r\n         timestamp_after = self.wallet_timestamp()\r\n         self.log.debug('Wallet file timestamp after calling info: {}'.format(timestamp_after))\r\n         self.log_wallet_timestamp_comparison(timestamp_before, timestamp_after)\r\n@@ -143,7 +143,7 @@ class ToolWalletTest(BitcoinTestFramework):\r\n             Transactions: 1\r\n             Address Book: 3\r\n         ''')\r\n-        self.assert_tool_output(out, '-wallet=wallet.dat', 'info')\r\n+        self.assert_tool_output(out, '-wallet=wallet_dat', 'info')\r\n         shasum_after = self.wallet_shasum()\r\n         timestamp_after = self.wallet_timestamp()\r\n         self.log.debug('Wallet file timestamp after calling info: {}'.format(timestamp_after))\r\ndiff --git a/test/functional/wallet_dump.py b/test/functional/wallet_dump.py\r\nindex 09581d864b..5fdabf89c8 100755\r\n--- a/test/functional/wallet_dump.py\r\n+++ b/test/functional/wallet_dump.py\r\n@@ -203,7 +203,7 @@ class WalletDumpTest(BitcoinTestFramework):\r\n         assert result['ismine']\r\n \r\n         self.log.info('Check that wallet is flushed')\r\n-        with self.nodes[0].assert_debug_log(['Flushing wallet.dat'], timeout=20):\r\n+        with self.nodes[0].assert_debug_log(['Flushing wallet_dat'], timeout=20):\r\n             self.nodes[0].getnewaddress()\r\n \r\n \r\ndiff --git a/test/functional/wallet_multiwallet.py b/test/functional/wallet_multiwallet.py\r\nindex 7b975af065..71aa86abdb 100755\r\n--- a/test/functional/wallet_multiwallet.py\r\n+++ b/test/functional/wallet_multiwallet.py\r\n@@ -95,7 +95,7 @@ class MultiWalletTest(BitcoinTestFramework):\r\n         #   w8         - to verify existing wallet file is loaded correctly\r\n         #   ''         - to verify default wallet file is created correctly\r\n         wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', self.default_wallet_name]\r\n-        extra_args = ['-nowallet'] + ['-wallet={}'.format(n) for n in wallet_names]\r\n+        extra_args = ['-wallet={}'.format(n) for n in wallet_names]\r\n         self.start_node(0, extra_args)\r\n         assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), [self.default_wallet_name, os.path.join('sub', 'w5'), 'w', 'w1', 'w2', 'w3', 'w7', 'w7_symlink', 'w8'])\r\n \r\n@@ -108,7 +108,7 @@ class MultiWalletTest(BitcoinTestFramework):\r\n \r\n         # should not initialize if wallet path can't be created\r\n         exp_stderr = \"boost::filesystem::create_directory:\"\r\n-        self.nodes[0].assert_start_raises_init_error(['-wallet=wallet.dat/bad'], exp_stderr, match=ErrorMatch.PARTIAL_REGEX)\r\n+        self.nodes[0].assert_start_raises_init_error(['-wallet={}/bad'.format(self.wallet_data_filename)], exp_stderr, match=ErrorMatch.PARTIAL_REGEX)\r\n \r\n         self.nodes[0].assert_start_raises_init_error(['-walletdir=wallets'], 'Error: Specified -walletdir \"wallets\" does not exist')\r\n         self.nodes[0].assert_start_raises_init_error(['-walletdir=wallets'], 'Error: Specified -walletdir \"wallets\" is a relative path', cwd=data_dir())\r\n",
      "commit_id" : "5338dfaef077b5c38e3a87d76f12068147a5db2d",
      "created_at" : "2020-10-01T09:18:05Z",
      "diff_hunk" : "@@ -94,10 +94,10 @@ def wallet_file(name):\n         #   w7_symlink - to verify symlinked wallet path is initialized correctly\n         #   w8         - to verify existing wallet file is loaded correctly\n         #   ''         - to verify default wallet file is created correctly\n-        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', '']\n-        extra_args = ['-wallet={}'.format(n) for n in wallet_names]\n+        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', self.default_wallet_name]\n+        extra_args = ['-nowallet'] + ['-wallet={}'.format(n) for n in wallet_names]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r498101079",
      "id" : 498101079,
      "in_reply_to_id" : 496916277,
      "line" : 97,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEwMTA3OQ==",
      "original_commit_id" : "cef6f09997b110fba9089a37abb4653101541046",
      "original_line" : 98,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "test/functional/wallet_multiwallet.py",
      "position" : 50,
      "pull_request_review_id" : 500158242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T09:34:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498101079",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r498110303"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498110303"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 5338dfaef077b5c38e3a87d76f12068147a5db2d:\r\n\r\nWould be good to add a short comment here to say:\r\n\r\n* Will be used to create wallets on setup\r\n* Defaults to create a default wallet for each node\r\n* List can be shorter than the number of nodes, or include None entries to skip wallet creation",
      "commit_id" : "5338dfaef077b5c38e3a87d76f12068147a5db2d",
      "created_at" : "2020-10-01T09:33:07Z",
      "diff_hunk" : "@@ -102,6 +102,7 @@ def __init__(self):\n         self.rpc_timeout = 60  # Wait for up to 60 seconds for the RPC server to respond\n         self.supports_cli = True\n         self.bind_to_localhost_only = True\n+        self.wallet_names = None",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r498110303",
      "id" : 498110303,
      "line" : 105,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODExMDMwMw==",
      "original_commit_id" : "5338dfaef077b5c38e3a87d76f12068147a5db2d",
      "original_line" : 105,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 4,
      "pull_request_review_id" : 500158242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T09:34:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498110303",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r498110826"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498110826"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could add an assert to check self.num_nodes >= len(wallet_names)?",
      "commit_id" : "5338dfaef077b5c38e3a87d76f12068147a5db2d",
      "created_at" : "2020-10-01T09:34:00Z",
      "diff_hunk" : "@@ -396,13 +386,10 @@ def setup_nodes(self):\n                 assert_equal(chain_info[\"initialblockdownload\"], False)\n \n     def import_deterministic_coinbase_privkeys(self):\n-        for n in self.nodes:\n-            try:\n-                n.getwalletinfo()\n-            except JSONRPCException as e:\n-                assert str(e).startswith('Method not found')\n-                continue\n-\n+        wallet_names = [self.default_wallet_name] * len(self.nodes) if self.wallet_names is None else self.wallet_names\n+        for wallet_name, n in zip(wallet_names, self.nodes):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#discussion_r498110826",
      "id" : 498110826,
      "line" : 390,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODExMDgyNg==",
      "original_commit_id" : "5338dfaef077b5c38e3a87d76f12068147a5db2d",
      "original_line" : 390,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 48,
      "pull_request_review_id" : 500158242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20034",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T09:34:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498110826",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK c1585bca8dae01dee6a1dd8eadae2f8b100503df, only effective change is adding documentation ðµ\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK c1585bca8dae01dee6a1dd8eadae2f8b100503df, only effective change is adding documentation ðµ\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUhp/gv9HLJ3Y2W8Ok3zvRURR+0h8Qo5u1mOhbHmlS/HNUyM92HAL9OI7D+J+uZa\r\n4ZlfbjiNaGgqEWcrbI1ptkPUy1VsBRCZKSmAMpJdQ9ahbY8UAQo/x1AyBYSnFdPD\r\nMxSxfQ81YzwE8aCvezZdkBGx3t4f1EcBK2+2Q1e8EPjHhNOdZLfEAXoo0CIoBpB9\r\nDzKEMh9hzRE5M3/ELloNLMhVy4XJ7HcH/GjoSPuxQggEKIDBluBiJDaCi2MnTV0C\r\nvqj61OVr4ekci/YhpIvY049iW2XP3jp4qfYPHiInn8IK+swTlrSQ7dFjTfS10etr\r\nwEmfNHWWlmvGQe1pUBIdabQ+FpwBC8CLg8NPavETm+mRx98EL2GwdPPCiPsU3oS+\r\nVWttIL28ICzQZEpcDXcXij2XodcOANVlGifhmyxxxlyj2hVNU8cWp2Ep5fw1kcnH\r\neAn7wZztEJntWSKc7BhJW9EJ+rA+CX+OSMT7dBmqVVXUDP6XwaVlUoZ/sqWWPjcy\r\njTy++c1j\r\n=XL4w\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `21bb7e58a106d518ab420a88873a29f5a4a1169244282ef31f53cec8fd2f3417  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e89294010821bb7e58a106d518ab420a88873a29f5a4a1169244282ef31f53cec8fd2f3417f0105341ae36f5f1a93dad127b21d1374d2908fff01011e6a29c2cb49a3ade999f9c62f4254708f0203cae9f0e757d1ba2bd0064da63a4d612f28a664c8113ddfb560da175a61f1a2f08f1045f7741d9f008b4ffd91c837cd0ca0083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff010a158f29c4fb1fa4c99518f5396b7417708f0209b02a28087a08d383c0e72c9930389e003811a6ff441c78f87c6a6aed4d1d35508f1045f7741d8f008c36198091ee741560083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff010e3277f1e828c2674bf9ec96c97b65b0308f020fb383a8a2c61e37e0f117b15df132e733ea29ba1221416a71e1b47cdb40506e608f1045f7741d8f008812736410382f6230083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010fa40fde691c1f28bd59f98325523ef5708f02082f6dd4e19258b9ee320cebf806284b8abacee74a48c2d3e068d37d86d36bde508f1045f7741d7f008ea71d0d1c820db1e0083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "created_at" : "2020-10-02T15:07:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#issuecomment-702788342",
      "id" : 702788342,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20034",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjc4ODM0Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-02T15:07:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702788342",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested with \r\n\r\n```diff\r\ndiff --git a/src/wallet/db.cpp b/src/wallet/db.cpp\r\nindex bd1d114730..89d7325e1c 100644\r\n--- a/src/wallet/db.cpp\r\n+++ b/src/wallet/db.cpp\r\n@@ -20,6 +20,6 @@ void SplitWalletPath(const fs::path& wallet_path, fs::path& env_directory, std::\r\n         // Normal case: Interpret wallet path as a directory path containing\r\n         // data and log files.\r\n         env_directory = wallet_path;\r\n-        database_filename = \"wallet.dat\";\r\n+        database_filename = \"wallet_dat\";\r\n     }\r\n }\r\ndiff --git a/src/wallet/test/db_tests.cpp b/src/wallet/test/db_tests.cpp\r\nindex 8f0083cd2e..3489d48879 100644\r\n--- a/src/wallet/test/db_tests.cpp\r\n+++ b/src/wallet/test/db_tests.cpp\r\n@@ -29,7 +29,7 @@ BOOST_AUTO_TEST_CASE(getwalletenv_file)\r\n \r\n BOOST_AUTO_TEST_CASE(getwalletenv_directory)\r\n {\r\n-    std::string expected_name = \"wallet.dat\";\r\n+    std::string expected_name = \"wallet_dat\";\r\n     const fs::path datadir = GetDataDir();\r\n \r\n     std::string filename;\r\ndiff --git a/src/wallet/walletutil.cpp b/src/wallet/walletutil.cpp\r\nindex e4c72aed98..3a16cb3e75 100644\r\n--- a/src/wallet/walletutil.cpp\r\n+++ b/src/wallet/walletutil.cpp\r\n@@ -71,11 +71,11 @@ std::vector<fs::path> ListWalletDir()\r\n         // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\r\n         const fs::path path = it->path().string().substr(offset);\r\n \r\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\r\n+        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet_dat\")) {\r\n             // Found a directory which contains wallet.dat btree file, add it as a wallet.\r\n             paths.emplace_back(path);\r\n         } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\r\n-            if (it->path().filename() == \"wallet.dat\") {\r\n+            if (it->path().filename() == \"wallet_dat\") {\r\n                 // Found top-level wallet.dat btree file, add top level directory \"\"\r\n                 // as a wallet.\r\n                 paths.emplace_back();\r\ndiff --git a/test/functional/test_framework/test_framework.py b/test/functional/test_framework/test_framework.py\r\nindex 2824d80434..6ab813ff1c 100755\r\n--- a/test/functional/test_framework/test_framework.py\r\n+++ b/test/functional/test_framework/test_framework.py\r\n@@ -104,7 +104,7 @@ class BitcoinTestFramework(metaclass=BitcoinTestMetaClass):\r\n         self.bind_to_localhost_only = True\r\n         self.parse_args()\r\n         self.default_wallet_name = \"\"\r\n-        self.wallet_data_filename = \"wallet.dat\"\r\n+        self.wallet_data_filename = \"wallet_dat\"\r\n         # Optional list of wallet names that can be set in set_test_params to\r\n         # create and import keys to. If unset, default is len(nodes) *\r\n         # [default_wallet_name]. If wallet names are None, wallet creation is\r\ndiff --git a/test/functional/wallet_dump.py b/test/functional/wallet_dump.py\r\nindex 09581d864b..5fdabf89c8 100755\r\n--- a/test/functional/wallet_dump.py\r\n+++ b/test/functional/wallet_dump.py\r\n@@ -203,7 +203,7 @@ class WalletDumpTest(BitcoinTestFramework):\r\n         assert result['ismine']\r\n \r\n         self.log.info('Check that wallet is flushed')\r\n-        with self.nodes[0].assert_debug_log(['Flushing wallet.dat'], timeout=20):\r\n+        with self.nodes[0].assert_debug_log(['Flushing wallet_dat'], timeout=20):\r\n             self.nodes[0].getnewaddress()\r\n \r\n \r\n",
      "created_at" : "2020-10-02T15:36:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20034#issuecomment-702804390",
      "id" : 702804390,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20034",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjgwNDM5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-02T15:36:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702804390",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
