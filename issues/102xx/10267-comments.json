[
   {
      "body" : "Yeah. Why not. This can be useful.\r\n\r\n* I would recommend to use `-addconf=` (otherwise user may think it replaces the bitcoin.conf configuration file).\r\n* If I follow `GetConfigFile()` correctly, you can also use absolut paths, right?",
      "created_at" : "2017-04-24T06:12:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-296533141",
      "id" : 296533141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-04-24T06:12:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296533141",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Why not making the existing `-config` a repeatable argument.",
      "created_at" : "2017-04-24T07:15:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-296551716",
      "id" : 296551716,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-04-24T07:15:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296551716",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "@jonasschnelli Good point - will switch to `-addconf=`. Yes, you can use absolute paths. My worry above is for when a user presumes the path is relative to the config file when it is in fact not.\r\n\r\n@NicolasDorier I think `-config` simply tells what name to use and defaults to `bitcoin.conf` -- it doesn't actually load the file. This feature lets you load other files arbitrarily from within `bitcoin.conf`.\r\n",
      "created_at" : "2017-04-24T08:00:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-296565587",
      "id" : 296565587,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-04-24T08:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296565587",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "[Unsquashed history](https://github.com/kallewoof/bitcoin/tree/feature-config-readconfig-unsquashed): [1](https://github.com/kallewoof/bitcoin/commit/b2c56e1ae2dad03bfd8af64cdf0d185317b19662) Ã¢ÂÂ [2](https://github.com/kallewoof/bitcoin/commit/770b88e3514a1d289bb64d0d66d276ca24197b06) Ã¢ÂÂ [3Ã¢ÂÂ±1](https://github.com/kallewoof/bitcoin/commit/bc4a972bcc50ad37d5b386b52cfe7f7a5b3d87cd) Ã¢ÂÂ [4Ã¢ÂÂ±2](https://github.com/kallewoof/bitcoin/commit/0aae401523a8986617bd1306748dae3d9c08f107)",
      "created_at" : "2017-04-24T09:35:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-296595191",
      "id" : 296595191,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-04-25T06:29:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296595191",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "Concept ACK\r\n\r\n> My worry above is for when a user presumes the path is relative to the config file when it is in fact not.\r\n\r\nYes, making it relative to the data directory is a good choice. I think we should handle all relative paths in `bitcoind` that way.\r\n\r\n> Why not making the existing -config a repeatable argument.\r\n\r\nThat was also my first thought, but it may just be confusing as it changes the meaning of the option slightly. It's possible that some setups already use multiple `-conf` options, and rely on the overriding behavior.\r\n\r\nSo I'm good with making it an explicit option.  Another suggestion for the name would be `-includeconf`.",
      "created_at" : "2017-04-24T11:53:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-296636109",
      "id" : 296636109,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-04-24T11:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296636109",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Concept ACK. Don't care much about the name, but what about -extraconf ?",
      "created_at" : "2017-04-24T16:50:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-296739899",
      "id" : 296739899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-04-24T16:50:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296739899",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "From the given suggestions I think `includeconf` is the most clear so I'll switch to that.\r\n\r\n@laanwj:\r\n\r\n> Yes, making it relative to the data directory is a good choice. I think we should handle all relative paths in bitcoind that way.\r\n\r\nTo clarify, you mean that the relative path inside /dir/file.conf should be /dir/, not [bitcoin datadir], right? It will require some lines of code I bet but I think that makes sense too.",
      "created_at" : "2017-04-25T01:47:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-296868359",
      "id" : 296868359,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-04-25T01:47:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296868359",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "The `includeconf` feature now defines the path relative to the file being read, if any. For command line, it is [datadir], for `/dir/abc.conf` it is `/dir/`. I tested this with\r\n```\r\nsrc/testreadconfig/bitcoin.conf: [...] includeconf=../global.conf\r\nsrc/global.conf: includeconf=secrets.conf\r\nsrc/secrets.conf: rpcpassword=foo\r\n```\r\nwith `bitcoind  -datadir=testreadconfig`. Ensured `bitcoin-cli` with password `foo` worked and password `bar` did not. \r\n\r\n[[...]](https://github.com/kallewoof/bitcoin/tree/feature-config-readconfig-unsquashed): Ã¢ÂÂ [5Ã¢ÂÂ±1](https://github.com/kallewoof/bitcoin/commit/f88e7ce8ec842ce2b46b551b0efc067ae8276a6f) Ã¢ÂÂ [6Ã¢ÂÂ±2](https://github.com/kallewoof/bitcoin/commit/cc917f86045a978c11d7be6e1fe7a4da93748b9a)",
      "created_at" : "2017-04-25T03:00:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-296880385",
      "id" : 296880385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-04-25T06:35:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296880385",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "> To clarify, you mean that the relative path inside /dir/file.conf should be /dir/, not [bitcoin datadir], right? It > will require some lines of code I bet but I think that makes sense too.\r\n\r\nYes, seems good to me too. So it's like C's include \"\" - I wasn't thinking about relative includes in other includes.\r\n",
      "created_at" : "2017-04-25T05:14:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-296910968",
      "id" : 296910968,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-04-25T05:14:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296910968",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "To clarify, the code now does what @laanwj suggested.",
      "created_at" : "2017-04-25T07:34:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-296942171",
      "id" : 296942171,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-04-25T07:34:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296942171",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "> I am not sure how to test this in a neat manner. Feedback on this would be nice. Will dig/think though.\r\n\r\nSome ideas:\r\n- RPC test that creates a tree of bitcoin config files including each other beneath the data directory\r\n- Starts a node w/ `-includeconf=<path>`\r\n- Then interrogate node over RPC to verify the files got included, in the right order\r\n\r\nTo achieve the latter the option `uacomment=` is useful, as these will be added to an array, then querying `getnetworkinfo` to see if the `(...)` part of the `subversion` matches expected content and order.",
      "created_at" : "2017-05-01T11:59:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-298323813",
      "id" : 298323813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-05-01T11:59:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298323813",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj's suggested test method seems sensible. I'm happy to review that or lend a hand implementing it. Feel free to reach me on IRC.",
      "created_at" : "2017-05-01T21:43:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-298440791",
      "id" : 298440791,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-05-01T21:43:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298440791",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Thanks for the suggestion! I added a test that checks for load order and ensures circular include is guarded against. @jnewbery review would be wonderful :)\r\n\r\nEdit: If anyone has ideas why travis is failing I'd appreciate it. It works fine on all the machines I test it on locally (mac, linux).",
      "created_at" : "2017-05-02T01:28:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-298475283",
      "id" : 298475283,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-05-02T04:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298475283",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "> If anyone has ideas why travis is failing I'd appreciate it\r\n\r\nYou've made `ReadConfigFile()` recursive (through `ProcessSetting()`). `ReadConfigFile()` locks cs_args, and then at the end calls `ClearDatadirCache()`, which locks csPathCached. That means that the bottom-most `ReadConfigFile()` locks csPathCached while cs_args is still held.\r\n\r\nThere's already a function that locks in the other order: `GetDataDir()` locks csPathCached and then locks cs_args (in its call to `IsArgSet()`).\r\n\r\nIf those two functions are called in different threads, we'd have a deadlock.\r\n\r\nThere's a CPP_FLAG option that checks lock ordering `CPPFLAGS=-DDEBUG_LOCKORDER`, which is used in Travis build 5. That's why that build is failing. You can repro locally by running `configure` with that option.\r\n\r\nYou can fix this by not locking cs_args recursively.",
      "created_at" : "2017-05-02T15:33:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-298671493",
      "id" : 298671493,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-05-02T15:33:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298671493",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery Thanks a lot for the explanation! I should've paid closer attention to locks considering the added recursiveness.\r\n\r\n97ee63b fixes this by moving the conditionally-locked code into a new `ReadConfigStream` function which is called with locking/clearing in one case and without in the other, based on a `bool lockAndClear` added to `ReadConfigFile`.\r\n\r\n(Also had to tweak tests a tiny bit; 8fb6511.)",
      "created_at" : "2017-05-08T04:02:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-299767955",
      "id" : 299767955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-05-08T04:02:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/299767955",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "I think you've introduced a subtle bug here. If `-datadir` is configured in one of the additional config files, then the datadir cache won't be cleared, which means that bitcoind will continue to use the old datadir.\r\n\r\nI think you should try to not make ReadConfigFile recursive. For me, it would be acceptable to only allow one level of redirection here (ie the \"base\" config file can specify `-includeconf` config file, but those included config files cannot themselves include other config files). I think that would be a simpler model and would remove a whole bunch of potential bugs (circular references, blowing the stack through too many `-includeconf` redirects, etc). ",
      "created_at" : "2017-05-15T19:57:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-301586719",
      "id" : 301586719,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-05-15T19:57:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301586719",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery Hm, no the datadir cache is cleared after any recursions happen, which means it is always cleared, just not directly after the config file has been parsed. There are two cases:\r\n1. ParseParameters ([util.cpp:407](https://github.com/kallewoof/bitcoin/blame/feature-config-readconfig-unsquashed/src/util.cpp#L407) called from [bitcoind.cpp:75](https://github.com/kallewoof/bitcoin/blame/feature-config-readconfig-unsquashed/src/bitcoind.cpp#L75)) -- this will work as normal and does not require cache clearing.\r\n2. Nested ReadConfigs from the initial bitcoin.conf file: [bitcoind:107](https://github.com/kallewoof/bitcoin/blame/feature-config-readconfig-unsquashed/src/bitcoind.cpp#L107) calls `ReadConfigFile` with the `lockAndClear` flag set; recursion then happens in ProcessSetting (L401) via ReadConfigStream (L622) with `lockAndClear` unset. Eventually this gets back to original caller which leaves ReadConfigStream and gets to [util.cpp:649](https://github.com/kallewoof/bitcoin/blame/feature-config-readconfig-unsquashed/src/util.cpp#L649) which clears the datadir cache.\r\nOr am I missing something?\r\n\r\nAs for forbidding multiple levels of recursion, I think the value outweighs the issues personally (and I addressed circular refs I believe), but if people think it's not worth it I'll restrict it to one include.",
      "created_at" : "2017-05-16T00:54:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-301644638",
      "id" : 301644638,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-05-16T00:55:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301644638",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "@kallewoof yes you're right. datadir cache is cleared after all files are read. My mistake.\r\n\r\nI still don't like the recursion and the fact that there can be multiple levels of imports. It means there are more edge cases and unexpected behaviour. For example, if `-includeconf` is included as a command line parameter, then the includeconf file is read *before* the regular conf file, and so takes precedence. If an includeconf line is included in the regular conf file, then it is read *during* the regular config file, and which settings are taken from the regular conf file and which are taken from the includeconf file depend on the ordering of settings in the regular conf file.\r\n\r\nThe new `warnOnFailure` and `lockAndClear` bool arguments to `ReadConfigFile()` seem pretty strange to me. They're only used when `ReadConfigFile()` is being called recursively, and they control a large chunk of the behaviour within `ReadConfigFile()`. That's a clue to me that maybe the functionality isn't split up correctly - perhaps the locking/clearing should be in an outer function which calls an inner function for each of the config files?\r\n\r\nFinally, you've introduced a new crash bug. If `-conf` or `-includeconf` don't refer to a valid file, the bitcoind will crash on startup. Here's the backtrace:\r\n\r\n```\r\nCore was generated by `bitcoind -datadir=/tmp/user/1000/test6p7xn_xt/856/node0 -server -keypool=1 -dis'.\r\nProgram terminated with signal SIGABRT, Aborted.\r\n#0  0x00007f3b77df0428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\r\n54\t../sysdeps/unix/sysv/linux/raise.c: No such file or directory.\r\n(gdb) bt\r\n#0  0x00007f3b77df0428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\r\n#1  0x00007f3b77df202a in __GI_abort () at abort.c:89\r\n#2  0x00007f3b7873284d in __gnu_cxx::__verbose_terminate_handler() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#3  0x00007f3b787306b6 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#4  0x00007f3b78730701 in std::terminate() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#5  0x00007f3b78730919 in __cxa_throw () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#6  0x00007f3b79f29f82 in boost::filesystem::detail::canonical(boost::filesystem::path const&, boost::filesystem::path const&, boost::system::error_code*) () from /usr/lib/x86_64-linux-gnu/libboost_filesystem.so.1.58.0\r\n#7  0x000055e5c58b2ae2 in boost::filesystem::canonical (base=..., p=...) at /usr/include/boost/filesystem/operations.hpp:459\r\n#8  GetConfigFile (confPath=\"global.conf\", relativePath=\"\") at util.cpp:603\r\n#9  0x000055e5c58b4353 in ArgsManager::ProcessSetting (this=this@entry=0x55e5c5db1fa0 <gArgs>, strKey=\"-includeconf\", strValue=\"global.conf\", relativePath=\"\") at util.cpp:386\r\n#10 0x000055e5c58b487d in ArgsManager::ParseParameters (this=0x55e5c5db1fa0 <gArgs>, argc=<optimized out>, argv=<optimized out>) at util.cpp:424\r\n#11 0x000055e5c5653d4a in ParseParameters (argv=0x7fff5492e618, argc=14) at util.h:263\r\n#12 AppInit (argc=14, argv=0x7fff5492e618) at bitcoind.cpp:75\r\n#13 0x000055e5c5648bef in main (argc=14, argv=0x7fff5492e618) at bitcoind.cpp:196\r\n(gdb) quit\r\n```\r\n\r\nIf I use an invalid filename for `-conf` on master. I don't see this crash.",
      "created_at" : "2017-05-16T15:00:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-301810263",
      "id" : 301810263,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-05-16T15:00:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301810263",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery Thanks a lot for all the feedback.\r\n\r\n> I still don't like the recursion and the fact that there can be multiple levels of imports. It means there are more edge cases and unexpected behaviour. For example, if -includeconf is included as a command line parameter, then the includeconf file is read before the regular conf file, and so takes precedence. If an includeconf line is included in the regular conf file, then it is read during the regular config file, and which settings are taken from the regular conf file and which are taken from the includeconf file depend on the ordering of settings in the regular conf file.\r\n\r\nThat is the case without recursion as well, unless we forbid command line case. (Which I can do already, even while keeping recursion.)\r\n\r\n> The new warnOnFailure and lockAndClear bool arguments to ReadConfigFile() seem pretty strange to me. They're only used when ReadConfigFile() is being called recursively, and they control a large chunk of the behaviour within ReadConfigFile(). That's a clue to me that maybe the functionality isn't split up correctly - perhaps the locking/clearing should be in an outer function which calls an inner function for each of the config files?\r\n\r\nHm.. the warnOnFailure was just a nice-to-have to inform the user when an explicitly included file didn't actually exist, but I can remove it for cleanliness. Since I moved most of ReadConfigFile into ReadConfigStream, the only remaining stuff was the caching stuff, which doesn't feel odd to me. I'm not actually sure why you consider this to be a problem: the ReadConfigFile is mostly there to do or not do the locking and data cache clearing, and the ReadConfigStream is there to do the actual reading/parsing part.\r\n\r\nThat said, I'm not overly attached to the idea of allowing recursion, so unless someone speaks *for* it I am going to try to simplify the code to only allow one single include and to only allow it in the file, i.e. not from command line. I believe that would address most of your concerns.\r\n\r\nEdit: Oh, and thanks for finding the crash -- I was sure I tested that, but I guess not.\r\n\r\nEdit 2: Yeah, I never tested the case where the path was not a valid path, only when it was a non-existent one.",
      "created_at" : "2017-05-17T02:22:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-301967013",
      "id" : 301967013,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-05-17T08:37:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301967013",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119456769"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119456769"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it'd be clearer to rename this to `ReadConfigFiles()`. You could remove the `confPath` argument since it's a property of the `ArgsManager` class. The three places where this is called can just call `gArgs.ReadConfigFiles()`.\r\n\r\nThe responsibilities of this function then becomes very clear: read all the config files.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-05-31T19:52:40Z",
      "diff_hunk" : "@@ -592,26 +592,41 @@ fs::path GetConfigFile(const std::string& confPath)\n     return pathConfigFile;\n }\n \n+void ArgsManager::ReadConfigStream(fs::ifstream& streamConfig)\n+{\n+    std::set<std::string> setOptions;\n+    setOptions.insert(\"*\");\n+\n+    for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it) {\n+        // Don't overwrite existing settings so command line settings override bitcoin.conf\n+        std::string strKey = std::string(\"-\") + it->string_key;\n+        std::string strValue = it->value[0];\n+        InterpretNegativeSetting(strKey, strValue);\n+        if (mapArgs.count(strKey) == 0) {\n+            mapArgs[strKey] = strValue;\n+        }\n+        mapMultiArgs[strKey].push_back(strValue);\n+    }\n+}\n+\n void ArgsManager::ReadConfigFile(const std::string& confPath)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119456769",
      "id" : 119456769,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ1Njc2OQ==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 21,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 41338462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119456769",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119457041"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119457041"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd prefer to name this function ReadConfigFile(). At the moment, the only type of input it can read is a file, so naming it `ReadInputStream()` is a little misleading.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-05-31T19:53:57Z",
      "diff_hunk" : "@@ -592,26 +592,41 @@ fs::path GetConfigFile(const std::string& confPath)\n     return pathConfigFile;\n }\n \n+void ArgsManager::ReadConfigStream(fs::ifstream& streamConfig)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119457041",
      "id" : 119457041,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ1NzA0MQ==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 4,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 41338462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119457041",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119459000"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119459000"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can we have an else clause that prints an error message if we fail to open an includeconfig file?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-05-31T20:02:39Z",
      "diff_hunk" : "@@ -592,26 +592,41 @@ fs::path GetConfigFile(const std::string& confPath)\n     return pathConfigFile;\n }\n \n+void ArgsManager::ReadConfigStream(fs::ifstream& streamConfig)\n+{\n+    std::set<std::string> setOptions;\n+    setOptions.insert(\"*\");\n+\n+    for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it) {\n+        // Don't overwrite existing settings so command line settings override bitcoin.conf\n+        std::string strKey = std::string(\"-\") + it->string_key;\n+        std::string strValue = it->value[0];\n+        InterpretNegativeSetting(strKey, strValue);\n+        if (mapArgs.count(strKey) == 0) {\n+            mapArgs[strKey] = strValue;\n+        }\n+        mapMultiArgs[strKey].push_back(strValue);\n+    }\n+}\n+\n void ArgsManager::ReadConfigFile(const std::string& confPath)\n {\n     fs::ifstream streamConfig(GetConfigFile(confPath));\n     if (!streamConfig.good())\n         return; // No bitcoin.conf file is OK\n \n+    std::string includeconf;\n     {\n         LOCK(cs_args);\n-        std::set<std::string> setOptions;\n-        setOptions.insert(\"*\");\n-\n-        for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n-        {\n-            // Don't overwrite existing settings so command line settings override bitcoin.conf\n-            std::string strKey = std::string(\"-\") + it->string_key;\n-            std::string strValue = it->value[0];\n-            InterpretNegativeSetting(strKey, strValue);\n-            if (mapArgs.count(strKey) == 0)\n-                mapArgs[strKey] = strValue;\n-            mapMultiArgs[strKey].push_back(strValue);\n+        ReadConfigStream(streamConfig);\n+        if (mapArgs.count(\"-includeconf\")) includeconf = mapArgs[\"-includeconf\"];\n+    }\n+    if (includeconf != \"\") {\n+        fs::path includeFile = GetConfigFile(includeconf);\n+        fs::ifstream includeConfig(includeFile);\n+        if (includeConfig.good()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119459000",
      "id" : 119459000,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ1OTAwMA==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 48,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 41338462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119459000",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119459007"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119459007"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not directly:\r\n\r\n```\r\nfs::ifstream includeConfig(GetConfigFile(includeconf));\r\n```\r\n\r\n(like above)\r\n",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-05-31T20:02:41Z",
      "diff_hunk" : "@@ -592,26 +592,41 @@ fs::path GetConfigFile(const std::string& confPath)\n     return pathConfigFile;\n }\n \n+void ArgsManager::ReadConfigStream(fs::ifstream& streamConfig)\n+{\n+    std::set<std::string> setOptions;\n+    setOptions.insert(\"*\");\n+\n+    for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it) {\n+        // Don't overwrite existing settings so command line settings override bitcoin.conf\n+        std::string strKey = std::string(\"-\") + it->string_key;\n+        std::string strValue = it->value[0];\n+        InterpretNegativeSetting(strKey, strValue);\n+        if (mapArgs.count(strKey) == 0) {\n+            mapArgs[strKey] = strValue;\n+        }\n+        mapMultiArgs[strKey].push_back(strValue);\n+    }\n+}\n+\n void ArgsManager::ReadConfigFile(const std::string& confPath)\n {\n     fs::ifstream streamConfig(GetConfigFile(confPath));\n     if (!streamConfig.good())\n         return; // No bitcoin.conf file is OK\n \n+    std::string includeconf;\n     {\n         LOCK(cs_args);\n-        std::set<std::string> setOptions;\n-        setOptions.insert(\"*\");\n-\n-        for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n-        {\n-            // Don't overwrite existing settings so command line settings override bitcoin.conf\n-            std::string strKey = std::string(\"-\") + it->string_key;\n-            std::string strValue = it->value[0];\n-            InterpretNegativeSetting(strKey, strValue);\n-            if (mapArgs.count(strKey) == 0)\n-                mapArgs[strKey] = strValue;\n-            mapMultiArgs[strKey].push_back(strValue);\n+        ReadConfigStream(streamConfig);\n+        if (mapArgs.count(\"-includeconf\")) includeconf = mapArgs[\"-includeconf\"];\n+    }\n+    if (includeconf != \"\") {\n+        fs::path includeFile = GetConfigFile(includeconf);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119459007",
      "id" : 119459007,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ1OTAwNw==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 46,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 41338462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119459007",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119459369"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119459369"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is it possible to add a log to this function to output which file it's reading, or is it too early to start logging?\r\n\r\nSorry - by my earlier comment, I didn't mean you should remove the logging on failure, just that the structure of the function suggested to me that it shouldn't be called recursively.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-05-31T20:04:15Z",
      "diff_hunk" : "@@ -592,26 +592,41 @@ fs::path GetConfigFile(const std::string& confPath)\n     return pathConfigFile;\n }\n \n+void ArgsManager::ReadConfigStream(fs::ifstream& streamConfig)\n+{\n+    std::set<std::string> setOptions;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119459369",
      "id" : 119459369,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ1OTM2OQ==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 6,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 41338462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119459369",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119460309"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119460309"
         }
      },
      "author_association" : "MEMBER",
      "body" : "not required. `setup_network()` in the base class just calls `setup_nodes()` when there's only one node.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-05-31T20:08:27Z",
      "diff_hunk" : "@@ -0,0 +1,43 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the -includeconf directive.\"\"\"\n+\n+import os\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class IncludeConfTest(BitcoinTestFramework):\n+\n+    def setup_chain(self):\n+        super().setup_chain()\n+        # Create additional config file\n+        # - tmpdir/node0/relative.conf\n+        with open(os.path.join(self.options.tmpdir+\"/node0\", \"relative.conf\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(\"uacomment=relative\\n\")\n+        with open(os.path.join(self.options.tmpdir+\"/node0\", \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"uacomment=main\\nincludeconf=relative.conf\\n\")\n+        # subversion should end with \"(main; relative)/\"\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def setup_network(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119460309",
      "id" : 119460309,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ2MDMwOQ==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 27,
      "path" : "test/functional/includeconf.py",
      "position" : null,
      "pull_request_review_id" : 41338462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119460309",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119460371"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119460371"
         }
      },
      "author_association" : "MEMBER",
      "body" : "no space before open parentheses please. ",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-05-31T20:08:46Z",
      "diff_hunk" : "@@ -0,0 +1,43 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the -includeconf directive.\"\"\"\n+\n+import os\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class IncludeConfTest(BitcoinTestFramework):\n+\n+    def setup_chain(self):\n+        super().setup_chain()\n+        # Create additional config file\n+        # - tmpdir/node0/relative.conf\n+        with open(os.path.join(self.options.tmpdir+\"/node0\", \"relative.conf\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(\"uacomment=relative\\n\")\n+        with open(os.path.join(self.options.tmpdir+\"/node0\", \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"uacomment=main\\nincludeconf=relative.conf\\n\")\n+        # subversion should end with \"(main; relative)/\"\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test (self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119460371",
      "id" : 119460371,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ2MDM3MQ==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 30,
      "path" : "test/functional/includeconf.py",
      "position" : null,
      "pull_request_review_id" : 41338462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119460371",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119460418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119460418"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: spaces around `+` please",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-05-31T20:08:56Z",
      "diff_hunk" : "@@ -0,0 +1,43 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the -includeconf directive.\"\"\"\n+\n+import os\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class IncludeConfTest(BitcoinTestFramework):\n+\n+    def setup_chain(self):\n+        super().setup_chain()\n+        # Create additional config file\n+        # - tmpdir/node0/relative.conf\n+        with open(os.path.join(self.options.tmpdir+\"/node0\", \"relative.conf\"), \"w\", encoding=\"utf8\") as f:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119460418",
      "id" : 119460418,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ2MDQxOA==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 16,
      "path" : "test/functional/includeconf.py",
      "position" : null,
      "pull_request_review_id" : 41338462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119460418",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119460514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119460514"
         }
      },
      "author_association" : "MEMBER",
      "body" : "My personal preference is to have the description of the test in the module-level doc string (since that's the first thing people see when they open the file).",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-05-31T20:09:28Z",
      "diff_hunk" : "@@ -0,0 +1,43 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the -includeconf directive.\"\"\"\n+\n+import os\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class IncludeConfTest(BitcoinTestFramework):\n+\n+    def setup_chain(self):\n+        super().setup_chain()\n+        # Create additional config file\n+        # - tmpdir/node0/relative.conf\n+        with open(os.path.join(self.options.tmpdir+\"/node0\", \"relative.conf\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(\"uacomment=relative\\n\")\n+        with open(os.path.join(self.options.tmpdir+\"/node0\", \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"uacomment=main\\nincludeconf=relative.conf\\n\")\n+        # subversion should end with \"(main; relative)/\"\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test (self):\n+        '''",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119460514",
      "id" : 119460514,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ2MDUxNA==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 31,
      "path" : "test/functional/includeconf.py",
      "position" : null,
      "pull_request_review_id" : 41338462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119460514",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119460768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119460768"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It'd be nice to have a couple of other subtests:\r\n\r\n- including `--includeconf` in the command line argument has no effect\r\n- including `includeconf` in an includeconf file has no effect.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-05-31T20:10:43Z",
      "diff_hunk" : "@@ -0,0 +1,43 @@\n+#!/usr/bin/env python3",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119460768",
      "id" : 119460768,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ2MDc2OA==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 1,
      "path" : "test/functional/includeconf.py",
      "position" : null,
      "pull_request_review_id" : 41338462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119460768",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119521331"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119521331"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I named if for the fact it got an`ifstream` as argument, but you're right that it's probably better to just name it `ReadConfigFile`.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-06-01T03:26:28Z",
      "diff_hunk" : "@@ -592,26 +592,41 @@ fs::path GetConfigFile(const std::string& confPath)\n     return pathConfigFile;\n }\n \n+void ArgsManager::ReadConfigStream(fs::ifstream& streamConfig)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119521331",
      "id" : 119521331,
      "in_reply_to_id" : 119457041,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTUyMTMzMQ==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 4,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 41408318,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119521331",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119521387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119521387"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I am logging before the call to this method now. That should cover it I think.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-06-01T03:27:05Z",
      "diff_hunk" : "@@ -592,26 +592,41 @@ fs::path GetConfigFile(const std::string& confPath)\n     return pathConfigFile;\n }\n \n+void ArgsManager::ReadConfigStream(fs::ifstream& streamConfig)\n+{\n+    std::set<std::string> setOptions;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119521387",
      "id" : 119521387,
      "in_reply_to_id" : 119459369,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTUyMTM4Nw==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 6,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 41408370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119521387",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119521430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119521430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done!",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-06-01T03:27:19Z",
      "diff_hunk" : "@@ -592,26 +592,41 @@ fs::path GetConfigFile(const std::string& confPath)\n     return pathConfigFile;\n }\n \n+void ArgsManager::ReadConfigStream(fs::ifstream& streamConfig)\n+{\n+    std::set<std::string> setOptions;\n+    setOptions.insert(\"*\");\n+\n+    for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it) {\n+        // Don't overwrite existing settings so command line settings override bitcoin.conf\n+        std::string strKey = std::string(\"-\") + it->string_key;\n+        std::string strValue = it->value[0];\n+        InterpretNegativeSetting(strKey, strValue);\n+        if (mapArgs.count(strKey) == 0) {\n+            mapArgs[strKey] = strValue;\n+        }\n+        mapMultiArgs[strKey].push_back(strValue);\n+    }\n+}\n+\n void ArgsManager::ReadConfigFile(const std::string& confPath)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119521430",
      "id" : 119521430,
      "in_reply_to_id" : 119456769,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTUyMTQzMA==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 21,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 41408395,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119521430",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119521548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119521548"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure what a neat and tidy way to test that would look like. Should I just make multiple classes, one for each, and then call them one at a time in the bottom `if __name__ == '__main__':`?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-06-01T03:29:07Z",
      "diff_hunk" : "@@ -0,0 +1,43 @@\n+#!/usr/bin/env python3",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119521548",
      "id" : 119521548,
      "in_reply_to_id" : 119460768,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTUyMTU0OA==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 1,
      "path" : "test/functional/includeconf.py",
      "position" : null,
      "pull_request_review_id" : 41408518,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119521548",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "Updated and squashed. [Unsquashed history](https://github.com/kallewoof/bitcoin/tree/feature-config-readconfig-unsquashed).",
      "created_at" : "2017-06-01T05:45:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-305394856",
      "id" : 305394856,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-06-01T05:45:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/305394856",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119619962"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119619962"
         }
      },
      "author_association" : "MEMBER",
      "body" : "These don't actually need to be separate tests. You can just have the following in `setup_chain()`:\r\n\r\n```python\r\n        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relative.conf\"), \"w\", encoding=\"utf8\") as f:\r\n            f.write(\"uacomment=relative\\nincludeconf=relativeofrelative.conf\\n\")\r\n        with open(os.path.join(self.options.tmpdir + \"/node0\", \"bitcoin.conf\"), 'a', encoding='utf8') as f:\r\n            f.write(\"uacomment=main\\nincludeconf=relative.conf\\n\")\r\n        with open(os.path.join(self.options.tmpdir + \"/node0\", \"commandline.conf\"), \"w\", encoding=\"utf8\") as f:\r\n            f.write(\"uacomment=commandline\\n\")\r\n        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relativeofrelative.conf\"), \"w\", encoding=\"utf8\") as f:\r\n            f.write(\"uacomment=relativeofrelative\\n\")\r\n```\r\n\r\nand the following line in `__init__()`:\r\n\r\n```python\r\n        self.extra_args = [['-includeconf=commandline.conf']]\r\n```\r\n\r\nand then keep the same assert:\r\n\r\n```python\r\n        assert subversion.endswith(\"main; relative)/\")\r\n```\r\n\r\nto check that neither `comandline.conf` nor `relativeofrelative.conf` have been included.\r\n\r\n(I recommend you also update the docstring to describe what's happening)",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-06-01T13:55:14Z",
      "diff_hunk" : "@@ -0,0 +1,43 @@\n+#!/usr/bin/env python3",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119619962",
      "id" : 119619962,
      "in_reply_to_id" : 119460768,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTYxOTk2Mg==",
      "original_commit_id" : "9c20870eaef5d3dc11512d78215189df720ef471",
      "original_position" : 1,
      "path" : "test/functional/includeconf.py",
      "position" : null,
      "pull_request_review_id" : 41516081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119619962",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Looks great. Tested ACK bc4f7a4b3f614dc2125c6af60da448606b622688\r\n\r\nOne suggestion for adding to the testcase. Up to you whether you want to take it.",
      "created_at" : "2017-06-01T13:56:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-305500672",
      "id" : 305500672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-06-01T13:56:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/305500672",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "This conflicts a little bit with https://github.com/bitcoin/bitcoin/pull/8994/commits/7246faea3e4421e609e6a24294bd23a45d2343de\r\n\r\nThere I use the old ArgsManager::ReadConfigFile(path) which this PR remove.\r\nCould you conserve that method even if it's temporarily unused (although preferrably using it internally like \"ArgsManager::ReadConfigFile(fs::ifstream& streamConfig)\")?\r\n\r\n```\r\nvoid ArgsManager::ReadConfigFile(const std::string& confPath)\r\n{\r\n     fs::ifstream streamConfig(GetConfigFile(confPath));\r\n      if (!streamConfig.good())\r\n          return; // No bitcoin.conf file is OK\r\n// ...\r\n}\r\n```\r\nOr perhaps I should restore it later if this PR gets merged first.\r\nutACK bc4f7a4b3f614dc2125c6af60da448606b622688 beyond that.\r\n",
      "created_at" : "2017-06-01T14:32:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-305511658",
      "id" : 305511658,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-06-01T14:32:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/305511658",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119630957"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119630957"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shouldn't ClearDatadirCache() be called from ArgsManager::ReadConfigFile(fs::ifstream& streamConfig) ?\r\n",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-06-01T14:34:34Z",
      "diff_hunk" : "@@ -596,26 +596,47 @@ fs::path GetConfigFile(const std::string& confPath)\n     return pathConfigFile;\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFile(fs::ifstream& streamConfig)\n+{\n+    std::set<std::string> setOptions;\n+    setOptions.insert(\"*\");\n+\n+    for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it) {\n+        // Don't overwrite existing settings so command line settings override bitcoin.conf\n+        std::string strKey = std::string(\"-\") + it->string_key;\n+        std::string strValue = it->value[0];\n+        InterpretNegativeSetting(strKey, strValue);\n+        if (mapArgs.count(strKey) == 0) {\n+            mapArgs[strKey] = strValue;\n+        }\n+        mapMultiArgs[strKey].push_back(strValue);\n+    }\n+}\n+\n+void ArgsManager::ReadConfigFiles()\n {\n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream streamConfig(GetConfigFile(confPath));\n     if (!streamConfig.good())\n         return; // No bitcoin.conf file is OK\n \n+    // we do not allow -includeconf from command line, so we clear it here\n+    mapArgs.erase(\"-includeconf\");\n+\n+    std::string includeconf;\n     {\n         LOCK(cs_args);\n-        std::set<std::string> setOptions;\n-        setOptions.insert(\"*\");\n-\n-        for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n-        {\n-            // Don't overwrite existing settings so command line settings override bitcoin.conf\n-            std::string strKey = std::string(\"-\") + it->string_key;\n-            std::string strValue = it->value[0];\n-            InterpretNegativeSetting(strKey, strValue);\n-            if (mapArgs.count(strKey) == 0)\n-                mapArgs[strKey] = strValue;\n-            mapMultiArgs[strKey].push_back(strValue);\n+        ReadConfigFile(streamConfig);\n+        if (mapArgs.count(\"-includeconf\")) includeconf = mapArgs[\"-includeconf\"];\n+    }\n+    if (includeconf != \"\") {\n+        LogPrintf(\"Attempting to include configuration file %s\\n\", includeconf.c_str());\n+        fs::ifstream includeConfig(GetConfigFile(includeconf));\n+        if (includeConfig.good()) {\n+            LOCK(cs_args);\n+            ReadConfigFile(includeConfig);\n+        } else {\n+            LogPrintf(\"Failed to include configuration file %s\\n\", includeconf.c_str());\n         }\n     }\n     // If datadir is changed in .conf file:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r119630957",
      "id" : 119630957,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTYzMDk1Nw==",
      "original_commit_id" : "7a062e7f08b70a8e45e605a988ea664717dd5081",
      "original_position" : 60,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 41528149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119630957",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r120025037"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120025037"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ReadConfigFile is only called from ReadConfigFiles, which clears the data cache already, so it should be fine I think.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-06-05T00:05:49Z",
      "diff_hunk" : "@@ -596,26 +596,47 @@ fs::path GetConfigFile(const std::string& confPath)\n     return pathConfigFile;\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFile(fs::ifstream& streamConfig)\n+{\n+    std::set<std::string> setOptions;\n+    setOptions.insert(\"*\");\n+\n+    for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it) {\n+        // Don't overwrite existing settings so command line settings override bitcoin.conf\n+        std::string strKey = std::string(\"-\") + it->string_key;\n+        std::string strValue = it->value[0];\n+        InterpretNegativeSetting(strKey, strValue);\n+        if (mapArgs.count(strKey) == 0) {\n+            mapArgs[strKey] = strValue;\n+        }\n+        mapMultiArgs[strKey].push_back(strValue);\n+    }\n+}\n+\n+void ArgsManager::ReadConfigFiles()\n {\n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream streamConfig(GetConfigFile(confPath));\n     if (!streamConfig.good())\n         return; // No bitcoin.conf file is OK\n \n+    // we do not allow -includeconf from command line, so we clear it here\n+    mapArgs.erase(\"-includeconf\");\n+\n+    std::string includeconf;\n     {\n         LOCK(cs_args);\n-        std::set<std::string> setOptions;\n-        setOptions.insert(\"*\");\n-\n-        for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n-        {\n-            // Don't overwrite existing settings so command line settings override bitcoin.conf\n-            std::string strKey = std::string(\"-\") + it->string_key;\n-            std::string strValue = it->value[0];\n-            InterpretNegativeSetting(strKey, strValue);\n-            if (mapArgs.count(strKey) == 0)\n-                mapArgs[strKey] = strValue;\n-            mapMultiArgs[strKey].push_back(strValue);\n+        ReadConfigFile(streamConfig);\n+        if (mapArgs.count(\"-includeconf\")) includeconf = mapArgs[\"-includeconf\"];\n+    }\n+    if (includeconf != \"\") {\n+        LogPrintf(\"Attempting to include configuration file %s\\n\", includeconf.c_str());\n+        fs::ifstream includeConfig(GetConfigFile(includeconf));\n+        if (includeConfig.good()) {\n+            LOCK(cs_args);\n+            ReadConfigFile(includeConfig);\n+        } else {\n+            LogPrintf(\"Failed to include configuration file %s\\n\", includeconf.c_str());\n         }\n     }\n     // If datadir is changed in .conf file:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r120025037",
      "id" : 120025037,
      "in_reply_to_id" : 119630957,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDAyNTAzNw==",
      "original_commit_id" : "7a062e7f08b70a8e45e605a988ea664717dd5081",
      "original_position" : 60,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 41954657,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120025037",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "@jtimon The method was not removed, it was renamed. If you change to `ReadConfigFiles` you should get the exact same result after this is merged. Let me know if that is not the case!",
      "created_at" : "2017-06-05T00:06:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-306076660",
      "id" : 306076660,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-06-05T00:06:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306076660",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r120181681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120181681"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, unless you conserve a ```ArgsManager::ReadConfigFile(const std::string& confPath)```, then that will presumably call call ```ArgsManager::ReadConfigFile(fs::ifstream& streamConfig``` too.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2017-06-05T18:50:59Z",
      "diff_hunk" : "@@ -596,26 +596,47 @@ fs::path GetConfigFile(const std::string& confPath)\n     return pathConfigFile;\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFile(fs::ifstream& streamConfig)\n+{\n+    std::set<std::string> setOptions;\n+    setOptions.insert(\"*\");\n+\n+    for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it) {\n+        // Don't overwrite existing settings so command line settings override bitcoin.conf\n+        std::string strKey = std::string(\"-\") + it->string_key;\n+        std::string strValue = it->value[0];\n+        InterpretNegativeSetting(strKey, strValue);\n+        if (mapArgs.count(strKey) == 0) {\n+            mapArgs[strKey] = strValue;\n+        }\n+        mapMultiArgs[strKey].push_back(strValue);\n+    }\n+}\n+\n+void ArgsManager::ReadConfigFiles()\n {\n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream streamConfig(GetConfigFile(confPath));\n     if (!streamConfig.good())\n         return; // No bitcoin.conf file is OK\n \n+    // we do not allow -includeconf from command line, so we clear it here\n+    mapArgs.erase(\"-includeconf\");\n+\n+    std::string includeconf;\n     {\n         LOCK(cs_args);\n-        std::set<std::string> setOptions;\n-        setOptions.insert(\"*\");\n-\n-        for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n-        {\n-            // Don't overwrite existing settings so command line settings override bitcoin.conf\n-            std::string strKey = std::string(\"-\") + it->string_key;\n-            std::string strValue = it->value[0];\n-            InterpretNegativeSetting(strKey, strValue);\n-            if (mapArgs.count(strKey) == 0)\n-                mapArgs[strKey] = strValue;\n-            mapMultiArgs[strKey].push_back(strValue);\n+        ReadConfigFile(streamConfig);\n+        if (mapArgs.count(\"-includeconf\")) includeconf = mapArgs[\"-includeconf\"];\n+    }\n+    if (includeconf != \"\") {\n+        LogPrintf(\"Attempting to include configuration file %s\\n\", includeconf.c_str());\n+        fs::ifstream includeConfig(GetConfigFile(includeconf));\n+        if (includeConfig.good()) {\n+            LOCK(cs_args);\n+            ReadConfigFile(includeConfig);\n+        } else {\n+            LogPrintf(\"Failed to include configuration file %s\\n\", includeconf.c_str());\n         }\n     }\n     // If datadir is changed in .conf file:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r120181681",
      "id" : 120181681,
      "in_reply_to_id" : 119630957,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDE4MTY4MQ==",
      "original_commit_id" : "7a062e7f08b70a8e45e605a988ea664717dd5081",
      "original_position" : 60,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 42123505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120181681",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "The method that is removed is the one that allows you to call with a path, ```ArgsManager::ReadConfigFile(const std::string& confPath)```.  The new ```ReadConfigFiles()``` will work just fine here, but in #8994 I cannot use it, because want I want is precisely to load from a different file (and not allow -includeconf or command line for \"custom chainparams\" configuration). If I use ```AgsManager::ReadConfigFile(fs::ifstream& streamConfig)``` directly from chainparams.cpp, not only I will duplicate code, but also call things like GetConfigFile(), which I would prefer not to call from chainparams.cpp. So my conclusion is that I would just restore ```ArgsManager::ReadConfigFile(const std::string& confPath)```. That's why I ask that you maintain it even if you don't need it for anything (but it can also be removed and then restored, it's not a big deal)\r\n",
      "created_at" : "2017-06-05T19:01:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-306274454",
      "id" : 306274454,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-06-05T19:01:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306274454",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Ohh, damn... It seems the removal of the path may have been premature. What do you think of `ReadConfigFiles()` Ã¢ÂÂ `ReadConfigFiles(std::string path = \"\", bool allowIncludes = true)` whose default does exactly what `ReadConfigFiles` does now? @jtimon @jnewbery",
      "created_at" : "2017-06-06T00:35:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-306348380",
      "id" : 306348380,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-06-06T02:10:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306348380",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "I think ReadConfigFiles() shouldn't take any arguments and should be responsible for finding and reading all config files. I don't understand why you'd want to read config files from other places in the codebase in #8994. It seems to me to be much simpler to reason about what config is loaded if it all happens in one place.",
      "created_at" : "2017-06-06T17:14:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-306555188",
      "id" : 306555188,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-06-06T17:14:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306555188",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@kallewoof yeah, I think that would work too, and you could still call it without parameters. That solution is very simple for me to \"restore\" on #8994 if people don't like it here. There's no need to slow this down if other people don't like my request. Thank you for offering a good and simple solution to my concern.\r\n\r\n@jnewbery I don't want the chain custom parameters to be perceived as \"config\". They select the chain you will be on, it is mostly intended to create new testnets, and sharing a \"testnet config file\" for a newly created one could be a useful thing. But perhaps that's something to discuss on #8994 rather than here. I still have it on a separated commit in case people prefer to allow consensus critical parameters to be passed from command line or the other config files that con be loaded.\r\n",
      "created_at" : "2017-06-06T23:53:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-306646616",
      "id" : 306646616,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-06-06T23:53:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306646616",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon \r\n\r\n> I don't want the chain custom parameters to be perceived as \"config\".\r\n\r\nI actually think having the customchain config file contain general config could be useful. There seemed to be some enthusiasm for #9374 , which is similar in nature - it allows a separate config file for each separate chain.\r\n\r\nThis is a bit of a sidetrack from this PR though, which I think is a good and useful improvement. This needs rebasing because of a conflict in test_runner.py. Assuming just that needs changing, then I still ACK this. I'll give some more feedback in #9374.",
      "created_at" : "2017-06-14T21:12:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-308559653",
      "id" : 308559653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-06-14T21:12:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308559653",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "alternative: this PR could move the:\r\n\r\n```\r\nfs::ifstream streamConfig(GetConfigFile(confPath));\r\nif (!streamConfig.good())\r\n```\r\nlines into the new `ReadConfigFile()` function instead of leaving them in `ReadConfigFiles()`, and have `ReadConfigFile()` take a `std::string` instead of a `fs::ifstream&`. That would remove some code duplication (since that's called for both the 'base' config file and the -includeconf file).\r\n\r\n#9374 could then call `ReadConfigFile()` exactly as before.",
      "created_at" : "2017-06-14T21:30:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-308564058",
      "id" : 308564058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-06-14T21:30:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308564058",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery I would need to either change the return value to be a success flag for `streamConfig.good()`, or add an additional `bool warnOnFailure` flag, like I had before, as we currently don't warn for the main config missing, but we do warn for `includeconf`s.\r\n\r\nRebased, btw.",
      "created_at" : "2017-06-15T03:44:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-308620359",
      "id" : 308620359,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-06-15T03:44:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308620359",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "Required rebase after `gArgs` PR #10607. I've rebased here: https://github.com/jnewbery/bitcoin/tree/pr10267\r\n\r\nI've also implemented my suggested change to make `ReadConfigFile` take a `std::string` here: https://github.com/jnewbery/bitcoin/tree/pr10267.1.\r\n\r\n@kallewoof - can you let me know what you think? I think this resolves @jtimon's concerns so this doesn't conflict badly with his PR.",
      "created_at" : "2017-08-14T18:14:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-322266401",
      "id" : 322266401,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-08-14T18:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322266401",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery Looks great! I rebased and adopted your changes. I tried to pull your commits into my branch but things exploded. Sorry about that. :/\r\nWill squash if you think ca507fc looks OK. (I picked slightly different varnames from you -- any reason for using snake case? I don't see it used elsewhere.)",
      "created_at" : "2017-08-15T03:12:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-322366193",
      "id" : 322366193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-08-15T06:46:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322366193",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "@kallewoof - no problem. My branch was just an example. Feel free to do whatever you want with it. (for future reference if you want to take the commits from my branch, easiest way is to add github.com/jnewbery/bitcoin as a remote, then `git fetch` from my remote, then `git reset --hard <sha of my branch>` from your branch).\r\n\r\nFor snake case convention, see 'symbol naming conventions' here: https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#developer-notes . No need to change old code to use the conventions, but new PRs should follow them if possible.",
      "created_at" : "2017-08-15T14:09:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-322476990",
      "id" : 322476990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-08-15T14:09:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322476990",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery That's what I did, but when I tried rebasing master on top of it things exploded. I'll try again.\r\n\r\nAs for the symbol naming convention, I'm amazed I didn't catch that considering I'm a big fan of conventions myself. Will definitely start using it. The `m_foo` thing for class member vars looks ugly as hell to me, but ah well.\r\n\r\nEdit: worked fine this time. Must've fatfingered something. Thanks!",
      "created_at" : "2017-08-16T05:12:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-322668144",
      "id" : 322668144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-08-16T05:15:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322668144",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery Digging, but:\r\n```\r\nPOTENTIAL DEADLOCK DETECTED\r\nPrevious lock order was:\r\n (1) cs_args  util.cpp:628\r\n (2) csPathCached  util.cpp:558\r\nCurrent lock order is:\r\n (2) csPathCached  util.cpp:558\r\n (1) cs_args  util.cpp:432\r\nAssertion failed: (false), function potential_deadlock_detected, file sync.cpp, line 98.\r\n```\r\nIt looks like there are two paths that may end up in a deadlock:\r\n1. First:\r\n   * `ReadConfigFiles()` [locks `cs_args`]\r\n   * `ReadConfigFile(conf_path)`\r\n   * `GetConfigFile(conf_path)`\r\n   * `GetDataDir(false)` [locks `csPathCached`]\r\n   * `gArgs.IsArgSet(\"-datadir\")` [locks `cs_args`]\r\n2. Second:\r\n   * `GetDataDir(_)` [locks `csPathCached`]\r\n   * `gArgs.IsArgSet(\"-datadir\")` [locks `cs_args`]\r\n\r\nPath 1 will lock `cs_args`, then `csPathCached`, and path 2 will lock `csPathCached`, then `cs_args`. I'm not sure the effect of path 1 locking `cs_args` twice. Perhaps it's a NOP when already locked, but in either case, this seems to be the issue.\r\n\r\nI've reset to the original version (rebased) for now as I can't figure this one out right now.",
      "created_at" : "2017-08-16T09:14:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-322713074",
      "id" : 322713074,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-08-16T09:58:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322713074",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Needs rebase. Is this still valid?",
      "created_at" : "2017-11-23T12:08:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-346601837",
      "id" : 346601837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-11-23T12:08:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346601837",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased. It is valid, yes.",
      "created_at" : "2017-11-24T04:20:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-346740060",
      "id" : 346740060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-11-24T04:20:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346740060",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\nN.B. this could be very useful in the context of https://github.com/bitcoin/bitcoin/pull/11862, using `-regtest.includeconf` for example",
      "created_at" : "2017-12-11T10:40:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-350686669",
      "id" : 350686669,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2017-12-11T10:40:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350686669",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Ping (since you self-assigned)",
      "created_at" : "2018-02-23T08:16:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-367940221",
      "id" : 367940221,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-02-23T08:16:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/367940221",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r175794947"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175794947"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need to update this file.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-03-20T14:51:03Z",
      "diff_hunk" : "@@ -44,6 +44,10 @@ Specify configuration file (default: bitcoin.conf)\n .IP\n Specify data directory\n .HP\n+\\fB\\-includeconf=\\fR<dir>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r175794947",
      "id" : 175794947,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTc5NDk0Nw==",
      "original_commit_id" : "fd1ad5936d3c16b77c7bac60defc3a666fd122e9",
      "original_position" : 4,
      "path" : "doc/man/bitcoin-qt.1",
      "position" : null,
      "pull_request_review_id" : 105382898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175794947",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r175794997"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175794997"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need to update this file.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-03-20T14:51:10Z",
      "diff_hunk" : "@@ -49,6 +49,10 @@ Run in the background as a daemon and accept commands\n .IP\n Specify data directory\n .HP\n+\\fB\\-includeconf=\\fR<dir>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r175794997",
      "id" : 175794997,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTc5NDk5Nw==",
      "original_commit_id" : "fd1ad5936d3c16b77c7bac60defc3a666fd122e9",
      "original_position" : 4,
      "path" : "doc/man/bitcoind.1",
      "position" : null,
      "pull_request_review_id" : 105382898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175794997",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r175795168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175795168"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need to update this file.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-03-20T14:51:38Z",
      "diff_hunk" : "@@ -382,6 +382,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specified -walletdir \\\"%s\\\" is not a director\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify configuration file (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify connection timeout in milliseconds (minimum: 1, default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify data directory\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify additional configuration file, relative to the -datadir path\"),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r175795168",
      "id" : 175795168,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTc5NTE2OA==",
      "original_commit_id" : "fd1ad5936d3c16b77c7bac60defc3a666fd122e9",
      "original_position" : 4,
      "path" : "src/qt/bitcoinstrings.cpp",
      "position" : null,
      "pull_request_review_id" : 105382898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175795168",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r175795753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175795753"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This should be the only change in your second commit. I recommend just squashing it with the first commit.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-03-20T14:53:07Z",
      "diff_hunk" : "@@ -338,6 +338,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize));\n     }\n+    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r175795753",
      "id" : 175795753,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTc5NTc1Mw==",
      "original_commit_id" : "fd1ad5936d3c16b77c7bac60defc3a666fd122e9",
      "original_position" : 4,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 105382898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175795753",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r175810328"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175810328"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it'd be useful to be able to include multiple `-includeconf` arguments in the main config file (for example, if we want a `main.includeconf`, `test.includeconf` and `regtest.includeconf`). Can you make this a string vector and then iterate through the `includeconf`s?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-03-20T15:27:18Z",
      "diff_hunk" : "@@ -631,26 +631,47 @@ fs::path GetConfigFile(const std::string& confPath)\n     return pathConfigFile;\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFile(fs::ifstream& streamConfig)\n+{\n+    std::set<std::string> setOptions;\n+    setOptions.insert(\"*\");\n+\n+    for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it) {\n+        // Don't overwrite existing settings so command line settings override bitcoin.conf\n+        std::string strKey = std::string(\"-\") + it->string_key;\n+        std::string strValue = it->value[0];\n+        InterpretNegativeSetting(strKey, strValue);\n+        if (mapArgs.count(strKey) == 0) {\n+            mapArgs[strKey] = strValue;\n+        }\n+        mapMultiArgs[strKey].push_back(strValue);\n+    }\n+}\n+\n+void ArgsManager::ReadConfigFiles()\n {\n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream streamConfig(GetConfigFile(confPath));\n     if (!streamConfig.good())\n         return; // No bitcoin.conf file is OK\n \n+    // we do not allow -includeconf from command line, so we clear it here\n+    mapArgs.erase(\"-includeconf\");\n+\n+    std::string includeconf;\n     {\n         LOCK(cs_args);\n-        std::set<std::string> setOptions;\n-        setOptions.insert(\"*\");\n-\n-        for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n-        {\n-            // Don't overwrite existing settings so command line settings override bitcoin.conf\n-            std::string strKey = std::string(\"-\") + it->string_key;\n-            std::string strValue = it->value[0];\n-            InterpretNegativeSetting(strKey, strValue);\n-            if (mapArgs.count(strKey) == 0)\n-                mapArgs[strKey] = strValue;\n-            mapMultiArgs[strKey].push_back(strValue);\n+        ReadConfigFile(streamConfig);\n+        if (mapArgs.count(\"-includeconf\")) includeconf = mapArgs[\"-includeconf\"];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r175810328",
      "id" : 175810328,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTgxMDMyOA==",
      "original_commit_id" : "fd1ad5936d3c16b77c7bac60defc3a666fd122e9",
      "original_position" : 48,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 105382898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175810328",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r175811425"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175811425"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This test now needs to be named `feature_includeconf`",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-03-20T15:30:00Z",
      "diff_hunk" : "@@ -0,0 +1,38 @@\n+#!/usr/bin/env python3",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r175811425",
      "id" : 175811425,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTgxMTQyNQ==",
      "original_commit_id" : "fd1ad5936d3c16b77c7bac60defc3a666fd122e9",
      "original_position" : 1,
      "path" : "test/functional/includeconf.py",
      "position" : null,
      "pull_request_review_id" : 105382898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175811425",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r176634706"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176634706"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, coolness.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-03-23T04:00:49Z",
      "diff_hunk" : "@@ -338,6 +338,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize));\n     }\n+    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r176634706",
      "id" : 176634706,
      "in_reply_to_id" : 175795753,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjYzNDcwNg==",
      "original_commit_id" : "fd1ad5936d3c16b77c7bac60defc3a666fd122e9",
      "original_position" : 4,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 106373316,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176634706",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r176634795"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176634795"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That makes sense, yeah.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-03-23T04:01:57Z",
      "diff_hunk" : "@@ -631,26 +631,47 @@ fs::path GetConfigFile(const std::string& confPath)\n     return pathConfigFile;\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFile(fs::ifstream& streamConfig)\n+{\n+    std::set<std::string> setOptions;\n+    setOptions.insert(\"*\");\n+\n+    for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it) {\n+        // Don't overwrite existing settings so command line settings override bitcoin.conf\n+        std::string strKey = std::string(\"-\") + it->string_key;\n+        std::string strValue = it->value[0];\n+        InterpretNegativeSetting(strKey, strValue);\n+        if (mapArgs.count(strKey) == 0) {\n+            mapArgs[strKey] = strValue;\n+        }\n+        mapMultiArgs[strKey].push_back(strValue);\n+    }\n+}\n+\n+void ArgsManager::ReadConfigFiles()\n {\n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream streamConfig(GetConfigFile(confPath));\n     if (!streamConfig.good())\n         return; // No bitcoin.conf file is OK\n \n+    // we do not allow -includeconf from command line, so we clear it here\n+    mapArgs.erase(\"-includeconf\");\n+\n+    std::string includeconf;\n     {\n         LOCK(cs_args);\n-        std::set<std::string> setOptions;\n-        setOptions.insert(\"*\");\n-\n-        for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n-        {\n-            // Don't overwrite existing settings so command line settings override bitcoin.conf\n-            std::string strKey = std::string(\"-\") + it->string_key;\n-            std::string strValue = it->value[0];\n-            InterpretNegativeSetting(strKey, strValue);\n-            if (mapArgs.count(strKey) == 0)\n-                mapArgs[strKey] = strValue;\n-            mapMultiArgs[strKey].push_back(strValue);\n+        ReadConfigFile(streamConfig);\n+        if (mapArgs.count(\"-includeconf\")) includeconf = mapArgs[\"-includeconf\"];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r176634795",
      "id" : 176634795,
      "in_reply_to_id" : 175810328,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjYzNDc5NQ==",
      "original_commit_id" : "fd1ad5936d3c16b77c7bac60defc3a666fd122e9",
      "original_position" : 48,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 106373415,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176634795",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery Thanks a lot for review / code suggestions. I'll add multiple includeconf support and then push updated code.\r\n\r\nEdit: I put some comments on your commit, and made the changes on my end.",
      "created_at" : "2018-03-23T04:30:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-375541721",
      "id" : 375541721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-03-23T04:30:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375541721",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This PR times out on job 2 without the timeout bump in 47848d0. I have not investigated the cause for this increase, and I find it unlikely that the new tests would be the actual cause.",
      "created_at" : "2018-03-23T08:09:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-375574743",
      "id" : 375574743,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-03-23T08:09:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375574743",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The travis job is timing out when running `make check` (the unit tests):\r\n\r\n```\r\n$ if [ \"$RUN_TESTS\" = \"true\" ]; then travis_wait 40 make $MAKEJOBS check VERBOSE=1; fi    1913.41s\r\n```\r\n\r\nHere's the end of the output from that command:\r\n\r\n```\r\nmake[1]: Leaving directory `/home/travis/build/bitcoin/bitcoin/build/bitcoin-i686-w64-mingw32'\r\n/home/travis/.travis/job_stages: line 169: 28077 Terminated              travis_jigger $! $timeout $cmd\r\n```\r\n\r\n@MarcoFalke / @laanwj - any idea why the unit tests would stall for half an hour here?",
      "created_at" : "2018-03-23T19:10:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-375770224",
      "id" : 375770224,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-03-23T19:10:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375770224",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @MarcoFalke / @laanwj - any idea why the unit tests would stall for half an hour here?\r\n\r\nSomething must have changed recently, but I think one reason why tests are slow is that they are running using wine to emulate windows. I'm also seeing the same timeouts with 11851.\r\n\r\n",
      "created_at" : "2018-03-23T19:26:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-375774124",
      "id" : 375774124,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-03-23T19:26:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375774124",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r176842599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176842599"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can remove ` (Currently fails)`",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-03-23T19:29:41Z",
      "diff_hunk" : "@@ -0,0 +1,71 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests the includeconf argument\n+\n+Verify that:\n+\n+1. adding includeconf to the configuration file causes the includeconf\n+   file to be loaded in the correct order.\n+2. includeconf cannot be used as a command line argument.\n+3. includeconf cannot be used recursively (ie includeconf can only\n+   be used from the base config file).\n+4. multiple includeconf arguments can be specified in the main config\n+   file (Currently fails).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r176842599",
      "id" : 176842599,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njg0MjU5OQ==",
      "original_commit_id" : "47848d0fb0705facd7d4cf24c50d450386155f5a",
      "original_position" : 15,
      "path" : "test/functional/feature_includeconf.py",
      "position" : null,
      "pull_request_review_id" : 106622794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176842599",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I am fine with bumping to 40 or 50 minutes. In case we need that much time, it will time out due to the global limit anyway. The long term solution would be to somehow speed up the unit tests on Wine, but that doesn't have to block this (and other) pull requests.\r\n\r\nCould cherry-pick that change to a separate pull request, though.",
      "created_at" : "2018-03-23T19:33:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-375775708",
      "id" : 375775708,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-03-23T19:33:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375775708",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Could cherry-pick that change to a separate pull request, though.\r\n\r\nHere you go: #12772",
      "created_at" : "2018-03-23T20:00:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-375782090",
      "id" : 375782090,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-03-23T20:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375782090",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r176898318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176898318"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, fixed.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-03-24T03:30:59Z",
      "diff_hunk" : "@@ -0,0 +1,71 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests the includeconf argument\n+\n+Verify that:\n+\n+1. adding includeconf to the configuration file causes the includeconf\n+   file to be loaded in the correct order.\n+2. includeconf cannot be used as a command line argument.\n+3. includeconf cannot be used recursively (ie includeconf can only\n+   be used from the base config file).\n+4. multiple includeconf arguments can be specified in the main config\n+   file (Currently fails).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r176898318",
      "id" : 176898318,
      "in_reply_to_id" : 176842599,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njg5ODMxOA==",
      "original_commit_id" : "47848d0fb0705facd7d4cf24c50d450386155f5a",
      "original_position" : 15,
      "path" : "test/functional/feature_includeconf.py",
      "position" : null,
      "pull_request_review_id" : 106688081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176898318",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'll just keep that commit in here until the other is merged and then drop it.",
      "created_at" : "2018-03-24T03:31:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-375843407",
      "id" : 375843407,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-03-24T03:31:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375843407",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "#11862 is merged. Please rebase.\r\n\r\nI'll commit to re-reviewing this once it's rebased.",
      "created_at" : "2018-04-16T19:11:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-381716576",
      "id" : 381716576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-04-16T19:11:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381716576",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Edit: resolved. I am now checking both `\"-includeconf\"` and `\"-\" + GetChainName() + \".includeconf\"` explicitly.",
      "created_at" : "2018-04-17T04:40:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-381838265",
      "id" : 381838265,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-04-17T04:49:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381838265",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182209546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182209546"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Help text could be expanded a bit to say that this can't be set from the command line - only from within the .conf file.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-17T20:08:58Z",
      "diff_hunk" : "@@ -358,6 +358,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize));\n     }\n+    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182209546",
      "id" : 182209546,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIwOTU0Ng==",
      "original_commit_id" : "d46656f6b8f2d002258be258806583f0752b1daf",
      "original_position" : 4,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 112971929,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182209546",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182231465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182231465"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was going to say that this isn't required because `ArgsManager::GetArgs()` already checks the network-specific config. However, we haven't yet set `m_network` (that only happens in `SelectParams()`) so you're right and you do need this manual check.\r\n\r\nI don't know if there's a better way to avoid doing this manually. Perhaps @ajtowns can suggest something? At the least, I think you should add a comment like:\r\n\r\n```\r\n        // We haven't set m_network yet (that happens in SelectParms()), so manually check\r\n        // for network.includeconf args.\r\n```\r\nYou can also remove the block/braces.\r\n\r\n",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-17T20:58:05Z",
      "diff_hunk" : "@@ -943,18 +943,40 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n+\n+        // we do not allow -includeconf from command line, so we clear it here\n+        auto it = m_override_args.find(\"-includeconf\");\n+        if (it != m_override_args.end()) m_override_args.erase(it);\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+        {\n+            std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182231465",
      "id" : 182231465,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIzMTQ2NQ==",
      "original_commit_id" : "d46656f6b8f2d002258be258806583f0752b1daf",
      "original_position" : 24,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 112971929,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182231465",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182282359"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182282359"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I thought I had done that already. Fixing.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T00:52:29Z",
      "diff_hunk" : "@@ -358,6 +358,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize));\n     }\n+    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182282359",
      "id" : 182282359,
      "in_reply_to_id" : 182209546,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjI4MjM1OQ==",
      "original_commit_id" : "d46656f6b8f2d002258be258806583f0752b1daf",
      "original_position" : 4,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 113047706,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182282359",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182282430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182282430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point on adding comment. I added braces to throw `includeconf_net` out of scope as it was no longer used, and this makes that obvious.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T00:52:52Z",
      "diff_hunk" : "@@ -943,18 +943,40 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n+\n+        // we do not allow -includeconf from command line, so we clear it here\n+        auto it = m_override_args.find(\"-includeconf\");\n+        if (it != m_override_args.end()) m_override_args.erase(it);\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+        {\n+            std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182282430",
      "id" : 182282430,
      "in_reply_to_id" : 182231465,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjI4MjQzMA==",
      "original_commit_id" : "d46656f6b8f2d002258be258806583f0752b1daf",
      "original_position" : 24,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113047790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182282430",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182283781"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182283781"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated. Feedback welcome!",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T01:04:57Z",
      "diff_hunk" : "@@ -358,6 +358,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize));\n     }\n+    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182283781",
      "id" : 182283781,
      "in_reply_to_id" : 182209546,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjI4Mzc4MQ==",
      "original_commit_id" : "d46656f6b8f2d002258be258806583f0752b1daf",
      "original_position" : 4,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 113049309,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182283781",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed @jnewbery nits (sans bracket removal).",
      "created_at" : "2018-04-18T01:30:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-382214756",
      "id" : 382214756,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-04-18T01:30:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382214756",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182300203"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182300203"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should use doc/release-notes-pr10267.md instead?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T03:31:54Z",
      "diff_hunk" : "@@ -96,6 +96,13 @@ Low-level RPC changes\n   with any `-wallet=<path>` options, there is no change in behavior, and the\n   name of any wallet is just its `<path>` string.\n \n+Changed command-line options\n+-----------------------------",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182300203",
      "id" : 182300203,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMwMDIwMw==",
      "original_commit_id" : "13d536d9a544a1e8e95840ae4b15e90667a86c7d",
      "original_position" : 5,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 113067466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182300203",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182300289"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182300289"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems like this change should have been in the `-includepath` commit",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T03:32:58Z",
      "diff_hunk" : "@@ -358,7 +358,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize));\n     }\n-    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path\"));\n+    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path (only useable from configuration file, not command line)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182300289",
      "id" : 182300289,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMwMDI4OQ==",
      "original_commit_id" : "13d536d9a544a1e8e95840ae4b15e90667a86c7d",
      "original_position" : 5,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 113067466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182300289",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182300485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182300485"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should this issue a warning rather than just silently ignoring it? I'd be inclined to move this check into `ParseParameters` fwiw.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T03:35:17Z",
      "diff_hunk" : "@@ -943,18 +943,42 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n+\n+        // we do not allow -includeconf from command line, so we clear it here\n+        auto it = m_override_args.find(\"-includeconf\");\n+        if (it != m_override_args.end()) m_override_args.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182300485",
      "id" : 182300485,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMwMDQ4NQ==",
      "original_commit_id" : "2f8d4a12b26f5e4d5aed9ceeb8e42ee13ee594c0",
      "original_position" : 13,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113067466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182300485",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182305880"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182305880"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this is subtly \"wrong\" fwiw: if you have `[main] includeconf=foo.conf` in bitcoin.conf, and then set `testnet=1` in foo.conf, you'll have foo.conf included, and be running testnet not mainnet, so you \"shouldn't\" have included foo.conf (and any other settings from the [main] section won't have been used). That might be too subtle to worry about though.\r\n\r\nIt's perhaps less subtly wrong in that if you said `includeconf=force-testnet.conf [testnet] includeconf=testnet-params.conf`, with force-testnet.conf setting `testnet=1`, you would not end up including testnet-params.conf, whereas if you set `-testnet` on the command line, you would.\r\n\r\nThe easiest approach might be to not allow `[regtest] includeconf=rt.conf` at all, but that would probably be annoying (particularly with custom chains).\r\n\r\nA thought I had was that maybe `[regtest] includeconf=rt.conf` should treat all the options in rt.conf as being network-specific, so if rt.conf says `connect=10.10.10.10 [main] connect=10.10.10.20 [regtest] connect=10.10.10.30`, that would get interpreted as if it was `[regtest] connect=10.10.10.10 connect=10.10.10.30`. That would avoid the inconsistency above, in that it would turn `[main] includeconf=foo.conf` into essentially `[main] testnet=1` which would just be ignored.\r\n\r\nI think it might be better to do it as four phases though: (1) read \"-conf\", (2) read the includeconfs that aren't under a section, (3) work out the chain based on everything noted so far, and (4) read the \"-chain.includeconf\" options from -conf (but not letting that change the chain).",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T04:30:53Z",
      "diff_hunk" : "@@ -943,18 +943,40 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n+\n+        // we do not allow -includeconf from command line, so we clear it here\n+        auto it = m_override_args.find(\"-includeconf\");\n+        if (it != m_override_args.end()) m_override_args.erase(it);\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+        {\n+            std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182305880",
      "id" : 182305880,
      "in_reply_to_id" : 182231465,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMwNTg4MA==",
      "original_commit_id" : "d46656f6b8f2d002258be258806583f0752b1daf",
      "original_position" : 24,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113067466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182305880",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182306366"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182306366"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I was expecting subversion to end with \"main; relative\", which would ensure relative.conf's options are being used despite it trying to recurse into relative2. No big deal either way.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T04:35:44Z",
      "diff_hunk" : "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests the includeconf argument\n+\n+Verify that:\n+\n+1. adding includeconf to the configuration file causes the includeconf\n+   file to be loaded in the correct order.\n+2. includeconf cannot be used as a command line argument.\n+3. includeconf cannot be used recursively (ie includeconf can only\n+   be used from the base config file).\n+4. multiple includeconf arguments can be specified in the main config\n+   file.\n+\"\"\"\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class IncludeConfTest(BitcoinTestFramework):\n+    def setup_chain(self):\n+        super().setup_chain()\n+        # Create additional config files\n+        # - tmpdir/node0/relative.conf\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relative.conf\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(\"uacomment=relative\\n\")\n+        # - tmpdir/node0/relative2.conf\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relative2.conf\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(\"uacomment=relative2\\n\")\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"bitcoin.conf\"), \"a\", encoding='utf8') as f:\n+            f.write(\"uacomment=main\\nincludeconf=relative.conf\\n\")\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.log.info(\"-includeconf works from config file. subversion should end with 'main; relative)/'\")\n+\n+        subversion = self.nodes[0].getnetworkinfo()[\"subversion\"]\n+        assert subversion.endswith(\"main; relative)/\")\n+\n+        self.log.info(\"-includeconf cannot be used as command-line arg. subversion should still end with 'main; relative)/'\")\n+        self.restart_node(0, extra_args=[\"-includeconf=relative2.conf\"])\n+\n+        subversion = self.nodes[0].getnetworkinfo()[\"subversion\"]\n+        assert subversion.endswith(\"main; relative)/\")\n+\n+        self.log.info(\"-includeconf cannot be used recursively. subversion should end with 'main)/'\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182306366",
      "id" : 182306366,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMwNjM2Ng==",
      "original_commit_id" : "f945bdd90a97e6be936184f76b08cdca104f53aa",
      "original_position" : 50,
      "path" : "test/functional/feature_includeconf.py",
      "position" : null,
      "pull_request_review_id" : 113067466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182306366",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182309263"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182309263"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should that be a new file with only the changes, or a copy of `doc/release-notes.md`? Never seen that way of adding release notes before.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T04:59:48Z",
      "diff_hunk" : "@@ -96,6 +96,13 @@ Low-level RPC changes\n   with any `-wallet=<path>` options, there is no change in behavior, and the\n   name of any wallet is just its `<path>` string.\n \n+Changed command-line options\n+-----------------------------",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182309263",
      "id" : 182309263,
      "in_reply_to_id" : 182300203,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMwOTI2Mw==",
      "original_commit_id" : "13d536d9a544a1e8e95840ae4b15e90667a86c7d",
      "original_position" : 5,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 113077282,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182309263",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182309304"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182309304"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You mean the `-includeconf` commit? I tend to separate doc and code commits, usually.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T05:00:13Z",
      "diff_hunk" : "@@ -358,7 +358,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize));\n     }\n-    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path\"));\n+    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path (only useable from configuration file, not command line)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182309304",
      "id" : 182309304,
      "in_reply_to_id" : 182300289,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMwOTMwNA==",
      "original_commit_id" : "13d536d9a544a1e8e95840ae4b15e90667a86c7d",
      "original_position" : 5,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 113077338,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182309304",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182309378"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182309378"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A warning would probably be helpful, yeah. Will look into moving into `ParseParameters`.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T05:01:02Z",
      "diff_hunk" : "@@ -943,18 +943,42 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n+\n+        // we do not allow -includeconf from command line, so we clear it here\n+        auto it = m_override_args.find(\"-includeconf\");\n+        if (it != m_override_args.end()) m_override_args.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182309378",
      "id" : 182309378,
      "in_reply_to_id" : 182300485,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMwOTM3OA==",
      "original_commit_id" : "2f8d4a12b26f5e4d5aed9ceeb8e42ee13ee594c0",
      "original_position" : 13,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113077435,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182309378",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182309989"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182309989"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point -- I am readding `uacomment=relative\\n` to `relative.conf` and checking that subversion ends with `main; relative)`.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T05:05:53Z",
      "diff_hunk" : "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests the includeconf argument\n+\n+Verify that:\n+\n+1. adding includeconf to the configuration file causes the includeconf\n+   file to be loaded in the correct order.\n+2. includeconf cannot be used as a command line argument.\n+3. includeconf cannot be used recursively (ie includeconf can only\n+   be used from the base config file).\n+4. multiple includeconf arguments can be specified in the main config\n+   file.\n+\"\"\"\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class IncludeConfTest(BitcoinTestFramework):\n+    def setup_chain(self):\n+        super().setup_chain()\n+        # Create additional config files\n+        # - tmpdir/node0/relative.conf\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relative.conf\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(\"uacomment=relative\\n\")\n+        # - tmpdir/node0/relative2.conf\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relative2.conf\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(\"uacomment=relative2\\n\")\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"bitcoin.conf\"), \"a\", encoding='utf8') as f:\n+            f.write(\"uacomment=main\\nincludeconf=relative.conf\\n\")\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.log.info(\"-includeconf works from config file. subversion should end with 'main; relative)/'\")\n+\n+        subversion = self.nodes[0].getnetworkinfo()[\"subversion\"]\n+        assert subversion.endswith(\"main; relative)/\")\n+\n+        self.log.info(\"-includeconf cannot be used as command-line arg. subversion should still end with 'main; relative)/'\")\n+        self.restart_node(0, extra_args=[\"-includeconf=relative2.conf\"])\n+\n+        subversion = self.nodes[0].getnetworkinfo()[\"subversion\"]\n+        assert subversion.endswith(\"main; relative)/\")\n+\n+        self.log.info(\"-includeconf cannot be used recursively. subversion should end with 'main)/'\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182309989",
      "id" : 182309989,
      "in_reply_to_id" : 182306366,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMwOTk4OQ==",
      "original_commit_id" : "f945bdd90a97e6be936184f76b08cdca104f53aa",
      "original_position" : 50,
      "path" : "test/functional/feature_includeconf.py",
      "position" : null,
      "pull_request_review_id" : 113078034,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182309989",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182310473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182310473"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Err, yeah. You add the help message in the -includeconf commit, then change it in the release notes commit.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T05:10:42Z",
      "diff_hunk" : "@@ -358,7 +358,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize));\n     }\n-    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path\"));\n+    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path (only useable from configuration file, not command line)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182310473",
      "id" : 182310473,
      "in_reply_to_id" : 182300289,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMxMDQ3Mw==",
      "original_commit_id" : "13d536d9a544a1e8e95840ae4b15e90667a86c7d",
      "original_position" : 5,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 113078594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182310473",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182310660"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182310660"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's brand new! Just a new file with the section you want to add. There's a couple there already (12823, 12892) to use as examples.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T05:12:19Z",
      "diff_hunk" : "@@ -96,6 +96,13 @@ Low-level RPC changes\n   with any `-wallet=<path>` options, there is no change in behavior, and the\n   name of any wallet is just its `<path>` string.\n \n+Changed command-line options\n+-----------------------------",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182310660",
      "id" : 182310660,
      "in_reply_to_id" : 182300203,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMxMDY2MA==",
      "original_commit_id" : "13d536d9a544a1e8e95840ae4b15e90667a86c7d",
      "original_position" : 5,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 113078803,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182310660",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns \r\n\r\n> I think this is subtly \"wrong\" fwiw: if you have [main] includeconf=foo.conf in bitcoin.conf, and then set testnet=1 in foo.conf, you'll have foo.conf included, and be running testnet not mainnet, so you \"shouldn't\" have included foo.conf (and any other settings from the [main] section won't have been used). That might be too subtle to worry about though.\r\n\r\nI don't think we need to care about that. If the user explicitly includes foo.conf from [main] and foo.conf sets to testnet, arguably they would want to use testnet \"whenever main is used\". Maybe they want to guarantee never mainnet?\r\n\r\n> A thought I had was that maybe [regtest] includeconf=rt.conf should treat all the options in rt.conf as being network-specific, so if rt.conf says connect=10.10.10.10 [main] connect=10.10.10.20 [regtest] connect=10.10.10.30, that would get interpreted as if it was [regtest] connect=10.10.10.10 connect=10.10.10.30. That would avoid the inconsistency above, in that it would turn [main] includeconf=foo.conf into essentially [main] testnet=1 which would just be ignored.\r\n\r\nI'm not sure I follow here. `includeconf` has the exact same semantics as `#include` in C++. The current default behavior seems the most logical one.\r\n\r\n> I think it might be better to do it as four phases though: (1) read \"-conf\", (2) read the includeconfs that aren't under a section, (3) work out the chain based on everything noted so far, and (4) read the \"-chain.includeconf\" options from -conf (but not letting that change the chain).\r\n\r\nI noted above a case where a user want an included conf to change the chain. Is it worth the effort to prevent this?\r\n",
      "created_at" : "2018-04-18T05:22:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-382265510",
      "id" : 382265510,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-04-18T05:22:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382265510",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182313273"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182313273"
         }
      },
      "author_association" : "MEMBER",
      "body" : "OH. Fixed! Thanks...",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T05:36:17Z",
      "diff_hunk" : "@@ -358,7 +358,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize));\n     }\n-    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path\"));\n+    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path (only useable from configuration file, not command line)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182313273",
      "id" : 182313273,
      "in_reply_to_id" : 182300289,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMxMzI3Mw==",
      "original_commit_id" : "13d536d9a544a1e8e95840ae4b15e90667a86c7d",
      "original_position" : 5,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 113081743,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182313273",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182313367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182313367"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Warning added -- I used `fprintf(stderr, ..)` though, cause it hasn't processed `-printtoconsole` or anything yet.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T05:36:54Z",
      "diff_hunk" : "@@ -943,18 +943,42 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n+\n+        // we do not allow -includeconf from command line, so we clear it here\n+        auto it = m_override_args.find(\"-includeconf\");\n+        if (it != m_override_args.end()) m_override_args.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182313367",
      "id" : 182313367,
      "in_reply_to_id" : 182300485,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMxMzM2Nw==",
      "original_commit_id" : "2f8d4a12b26f5e4d5aed9ceeb8e42ee13ee594c0",
      "original_position" : 13,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113081846,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182313367",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns Thanks for review! I believe I addressed your concerns, except for the discussion ^.",
      "created_at" : "2018-04-18T05:37:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-382267874",
      "id" : 382267874,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-04-18T05:37:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382267874",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182432653"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182432653"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think that these are good observations, but that we don't necessarily need to police such pathological edge-cases. The special casing for `[regtest] testnet=1` etc in https://github.com/bitcoin/bitcoin/pull/11862/commits/005ad266491f43d7a9bfd959396037416cb32a55 was useful because it's easy enough to have a config file like:\r\n\r\n```\r\noption1=0\r\noption2=1\r\n[regtest]\r\noption3=1\r\n```\r\n\r\nand then append `testnet=1` to the end, without realising that you're actually adding `regtest.testnet=1`. (in fact, this PR does something similar here: https://github.com/bitcoin/bitcoin/pull/10267/files#diff-a3677de1e28a0e9b37d66c11cc9a760bR31 by appending an argument that becomes a network-specific argument). This kind of config error is easy to make, ambiguous, and ought to be policed.\r\n\r\nThe config that you're describing here:\r\n\r\n> if you said includeconf=force-testnet.conf [testnet] includeconf=testnet-params.conf, with force-testnet.conf setting testnet=1, you would not end up including testnet-params.conf, whereas if you set -testnet on the command line, you would.\r\n\r\nseems much more contorted. I don't think a user should reasonably expect that setting the network in an `includeconf` file should change how the network-specific `includeconf`s in the base config file are interpreted. That behaviour also feels a bit too multi-leveled in that we're reading a specific `includeconf` file based on the content of a different `includeconf` file (I argued against such behaviour here: https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-301810263 because I think it leads to an overly complex model).",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T13:49:03Z",
      "diff_hunk" : "@@ -943,18 +943,40 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n+\n+        // we do not allow -includeconf from command line, so we clear it here\n+        auto it = m_override_args.find(\"-includeconf\");\n+        if (it != m_override_args.end()) m_override_args.erase(it);\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+        {\n+            std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182432653",
      "id" : 182432653,
      "in_reply_to_id" : 182231465,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjQzMjY1Mw==",
      "original_commit_id" : "d46656f6b8f2d002258be258806583f0752b1daf",
      "original_position" : 24,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113225368,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182432653",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182435641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182435641"
         }
      },
      "author_association" : "MEMBER",
      "body" : "May be clearer to append to the config file, rather than rewrite the `uacomment` param:\r\n\r\n```python\r\n        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relative.conf\"), \"a\", encoding=\"utf8\") as f:\r\n            f.write(\"includeconf=relative2.conf\\n\")\r\n```\r\n\r\nalthough you may disagree, in which case it's fine to leave as is!\r\n\r\nYou should certainly update the log above though:\r\n\r\n```\r\nself.log.info(\"-includeconf cannot be used recursively. subversion should end with 'main; relative)/'\")\r\n```",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T13:57:36Z",
      "diff_hunk" : "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests the includeconf argument\n+\n+Verify that:\n+\n+1. adding includeconf to the configuration file causes the includeconf\n+   file to be loaded in the correct order.\n+2. includeconf cannot be used as a command line argument.\n+3. includeconf cannot be used recursively (ie includeconf can only\n+   be used from the base config file).\n+4. multiple includeconf arguments can be specified in the main config\n+   file.\n+\"\"\"\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class IncludeConfTest(BitcoinTestFramework):\n+    def setup_chain(self):\n+        super().setup_chain()\n+        # Create additional config files\n+        # - tmpdir/node0/relative.conf\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relative.conf\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(\"uacomment=relative\\n\")\n+        # - tmpdir/node0/relative2.conf\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relative2.conf\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(\"uacomment=relative2\\n\")\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"bitcoin.conf\"), \"a\", encoding='utf8') as f:\n+            f.write(\"uacomment=main\\nincludeconf=relative.conf\\n\")\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.log.info(\"-includeconf works from config file. subversion should end with 'main; relative)/'\")\n+\n+        subversion = self.nodes[0].getnetworkinfo()[\"subversion\"]\n+        assert subversion.endswith(\"main; relative)/\")\n+\n+        self.log.info(\"-includeconf cannot be used as command-line arg. subversion should still end with 'main; relative)/'\")\n+        self.restart_node(0, extra_args=[\"-includeconf=relative2.conf\"])\n+\n+        subversion = self.nodes[0].getnetworkinfo()[\"subversion\"]\n+        assert subversion.endswith(\"main; relative)/\")\n+\n+        self.log.info(\"-includeconf cannot be used recursively. subversion should end with 'main)/'\")\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relative.conf\"), \"w\", encoding=\"utf8\") as f:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182435641",
      "id" : 182435641,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjQzNTY0MQ==",
      "original_commit_id" : "f083a0e57ca7c991af56425e44cb5aeeaa383a50",
      "original_position" : 51,
      "path" : "test/functional/feature_includeconf.py",
      "position" : null,
      "pull_request_review_id" : 113229199,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182435641",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182439174"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182439174"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@kallewoof \r\n\r\n>  I added braces to throw includeconf_net out of scope\r\n\r\nI don't know of any other places in the codebase that add blocks to throw local variables out of scope. Obviously functionally the same, but I'd personally have a preference to not add code blocks like this, since it makes the code slightly less clear.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T14:06:53Z",
      "diff_hunk" : "@@ -943,18 +943,40 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n+\n+        // we do not allow -includeconf from command line, so we clear it here\n+        auto it = m_override_args.find(\"-includeconf\");\n+        if (it != m_override_args.end()) m_override_args.erase(it);\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+        {\n+            std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182439174",
      "id" : 182439174,
      "in_reply_to_id" : 182231465,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjQzOTE3NA==",
      "original_commit_id" : "d46656f6b8f2d002258be258806583f0752b1daf",
      "original_position" : 24,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113233505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182439174",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK f083a0e57ca7c991af56425e44cb5aeeaa383a50 with a couple of comments.\r\n\r\nI agree with @kallewoof that the include precedence in the current implementation is fine. Perhaps more detailed documentation would satisfy @ajtowns ?",
      "created_at" : "2018-04-18T14:08:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-382399228",
      "id" : 382399228,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-04-18T14:08:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382399228",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd be happier if there weren't any weird edge cases, but I'm okay with not fixing them. I'll have another look over the latest commits tomorrow, but expect I'd beh appy to ack them as is.",
      "created_at" : "2018-04-18T15:30:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-382428494",
      "id" : 382428494,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-04-18T15:30:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382428494",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182597187"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182597187"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Makes sense! Fixed.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T23:23:13Z",
      "diff_hunk" : "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests the includeconf argument\n+\n+Verify that:\n+\n+1. adding includeconf to the configuration file causes the includeconf\n+   file to be loaded in the correct order.\n+2. includeconf cannot be used as a command line argument.\n+3. includeconf cannot be used recursively (ie includeconf can only\n+   be used from the base config file).\n+4. multiple includeconf arguments can be specified in the main config\n+   file.\n+\"\"\"\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class IncludeConfTest(BitcoinTestFramework):\n+    def setup_chain(self):\n+        super().setup_chain()\n+        # Create additional config files\n+        # - tmpdir/node0/relative.conf\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relative.conf\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(\"uacomment=relative\\n\")\n+        # - tmpdir/node0/relative2.conf\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relative2.conf\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(\"uacomment=relative2\\n\")\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"bitcoin.conf\"), \"a\", encoding='utf8') as f:\n+            f.write(\"uacomment=main\\nincludeconf=relative.conf\\n\")\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.log.info(\"-includeconf works from config file. subversion should end with 'main; relative)/'\")\n+\n+        subversion = self.nodes[0].getnetworkinfo()[\"subversion\"]\n+        assert subversion.endswith(\"main; relative)/\")\n+\n+        self.log.info(\"-includeconf cannot be used as command-line arg. subversion should still end with 'main; relative)/'\")\n+        self.restart_node(0, extra_args=[\"-includeconf=relative2.conf\"])\n+\n+        subversion = self.nodes[0].getnetworkinfo()[\"subversion\"]\n+        assert subversion.endswith(\"main; relative)/\")\n+\n+        self.log.info(\"-includeconf cannot be used recursively. subversion should end with 'main)/'\")\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relative.conf\"), \"w\", encoding=\"utf8\") as f:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182597187",
      "id" : 182597187,
      "in_reply_to_id" : 182435641,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjU5NzE4Nw==",
      "original_commit_id" : "f083a0e57ca7c991af56425e44cb5aeeaa383a50",
      "original_position" : 51,
      "path" : "test/functional/feature_includeconf.py",
      "position" : null,
      "pull_request_review_id" : 113425106,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182597187",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182600198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182600198"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This should be a loop, otherwise only the first `-includeconf` is removed from `m_override_args`. Also update comment above accordingly.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T23:42:56Z",
      "diff_hunk" : "@@ -682,6 +682,15 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n             m_override_args[key].push_back(val);\n         }\n     }\n+\n+    // we do not allow -includeconf from command line, so we clear it here\n+    auto it = m_override_args.find(\"-includeconf\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182600198",
      "id" : 182600198,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwMDE5OA==",
      "original_commit_id" : "a89353e950a4ab29175b7c6b08beee6d244fa22e",
      "original_position" : 6,
      "path" : "src/util.cpp",
      "position" : 6,
      "pull_request_review_id" : 113428405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182600198",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182600785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182600785"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe `Skipping invalid configuration file ...`?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T23:46:33Z",
      "diff_hunk" : "@@ -943,18 +952,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+        {\n+            // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+            // for network.includeconf args.\n+            std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+            includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+        }\n+\n+        if (includeconf.size() > 0) {\n+            for (const std::string& to_include : includeconf) {\n+                LogPrintf(\"Attempting to include configuration file %s\\n\", to_include.c_str());\n+                fs::ifstream include_config(GetConfigFile(to_include));\n+                if (include_config.good()) {\n+                    ReadConfigStream(include_config);\n+                } else {\n+                    LogPrintf(\"Failed to include configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182600785",
      "id" : 182600785,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwMDc4NQ==",
      "original_commit_id" : "a89353e950a4ab29175b7c6b08beee6d244fa22e",
      "original_position" : 49,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113428405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182600785",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182601598"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182601598"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Prefer to log the success case since you also log the failure case?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T23:52:13Z",
      "diff_hunk" : "@@ -943,18 +952,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+        {\n+            // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+            // for network.includeconf args.\n+            std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+            includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+        }\n+\n+        if (includeconf.size() > 0) {\n+            for (const std::string& to_include : includeconf) {\n+                LogPrintf(\"Attempting to include configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182601598",
      "id" : 182601598,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwMTU5OA==",
      "original_commit_id" : "a89353e950a4ab29175b7c6b08beee6d244fa22e",
      "original_position" : 44,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113428405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182601598",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182601882"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182601882"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit, keep sorted?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T23:54:02Z",
      "diff_hunk" : "@@ -358,6 +358,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize));\n     }\n+    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path (only useable from configuration file, not command line)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182601882",
      "id" : 182601882,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwMTg4Mg==",
      "original_commit_id" : "a89353e950a4ab29175b7c6b08beee6d244fa22e",
      "original_position" : 4,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 113428405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182601882",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182602070"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182602070"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit, remove extra `-`.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-18T23:55:16Z",
      "diff_hunk" : "@@ -0,0 +1,6 @@\n+Changed command-line options\n+-----------------------------",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182602070",
      "id" : 182602070,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwMjA3MA==",
      "original_commit_id" : "a89353e950a4ab29175b7c6b08beee6d244fa22e",
      "original_position" : 2,
      "path" : "doc/release-notes-pr10267.md",
      "position" : null,
      "pull_request_review_id" : 113428405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182602070",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182603623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182603623"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree with @jnewbery, there is no reason to do this. At first sight I thought there was a lock somewhere.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-19T00:06:23Z",
      "diff_hunk" : "@@ -943,18 +943,40 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n+\n+        // we do not allow -includeconf from command line, so we clear it here\n+        auto it = m_override_args.find(\"-includeconf\");\n+        if (it != m_override_args.end()) m_override_args.erase(it);\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+        {\n+            std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182603623",
      "id" : 182603623,
      "in_reply_to_id" : 182231465,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwMzYyMw==",
      "original_commit_id" : "d46656f6b8f2d002258be258806583f0752b1daf",
      "original_position" : 24,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113432276,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182603623",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182605242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182605242"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It is defined as a `std::map<std::string, std::vector<std::string>>`, which may only have one entry per key. It removes the vector itself, which may contain multiple values. (I am only showing the first for simplicity in the error output.)",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-19T00:19:19Z",
      "diff_hunk" : "@@ -682,6 +682,15 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n             m_override_args[key].push_back(val);\n         }\n     }\n+\n+    // we do not allow -includeconf from command line, so we clear it here\n+    auto it = m_override_args.find(\"-includeconf\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182605242",
      "id" : 182605242,
      "in_reply_to_id" : 182600198,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwNTI0Mg==",
      "original_commit_id" : "a89353e950a4ab29175b7c6b08beee6d244fa22e",
      "original_position" : 6,
      "path" : "src/util.cpp",
      "position" : 6,
      "pull_request_review_id" : 113434174,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182605242",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182605519"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182605519"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Addressing the nit below (log success), I believe the current form looks better:\r\n```C++\r\n                    LogPrintf(\"Included configuration file %s\\n\", to_include.c_str());\r\n                } else {\r\n                    LogPrintf(\"Failed to include configuration file %s\\n\", to_include.c_str());\r\n```",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-19T00:21:41Z",
      "diff_hunk" : "@@ -943,18 +952,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+        {\n+            // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+            // for network.includeconf args.\n+            std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+            includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+        }\n+\n+        if (includeconf.size() > 0) {\n+            for (const std::string& to_include : includeconf) {\n+                LogPrintf(\"Attempting to include configuration file %s\\n\", to_include.c_str());\n+                fs::ifstream include_config(GetConfigFile(to_include));\n+                if (include_config.good()) {\n+                    ReadConfigStream(include_config);\n+                } else {\n+                    LogPrintf(\"Failed to include configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182605519",
      "id" : 182605519,
      "in_reply_to_id" : 182600785,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwNTUxOQ==",
      "original_commit_id" : "a89353e950a4ab29175b7c6b08beee6d244fa22e",
      "original_position" : 49,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113434479,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182605519",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182605641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182605641"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Holy crap, it's sorted! No idea how I failed to see that. Thanks.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-19T00:22:31Z",
      "diff_hunk" : "@@ -358,6 +358,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize));\n     }\n+    strUsage += HelpMessageOpt(\"-includeconf=<file>\", _(\"Specify additional configuration file, relative to the -datadir path (only useable from configuration file, not command line)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182605641",
      "id" : 182605641,
      "in_reply_to_id" : 182601882,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwNTY0MQ==",
      "original_commit_id" : "a89353e950a4ab29175b7c6b08beee6d244fa22e",
      "original_position" : 4,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 113434614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182605641",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182605997"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182605997"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right. Either log all or nothing?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-19T00:25:02Z",
      "diff_hunk" : "@@ -682,6 +682,15 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n             m_override_args[key].push_back(val);\n         }\n     }\n+\n+    // we do not allow -includeconf from command line, so we clear it here\n+    auto it = m_override_args.find(\"-includeconf\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182605997",
      "id" : 182605997,
      "in_reply_to_id" : 182600198,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwNTk5Nw==",
      "original_commit_id" : "a89353e950a4ab29175b7c6b08beee6d244fa22e",
      "original_position" : 6,
      "path" : "src/util.cpp",
      "position" : 6,
      "pull_request_review_id" : 113435006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182605997",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182606658"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182606658"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Remove this condition. If it's empty then there is nothing to loop below.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-19T00:29:53Z",
      "diff_hunk" : "@@ -943,18 +952,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+        {\n+            // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+            // for network.includeconf args.\n+            std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+            includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+        }\n+\n+        if (includeconf.size() > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182606658",
      "id" : 182606658,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwNjY1OA==",
      "original_commit_id" : "b9631d174604f23b1e4ea7fe7f03d89fa0016383",
      "original_position" : 42,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113435697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182606658",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182606905"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182606905"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Makes sense. Added loop over vector.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-19T00:31:49Z",
      "diff_hunk" : "@@ -682,6 +682,15 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n             m_override_args[key].push_back(val);\n         }\n     }\n+\n+    // we do not allow -includeconf from command line, so we clear it here\n+    auto it = m_override_args.find(\"-includeconf\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182606905",
      "id" : 182606905,
      "in_reply_to_id" : 182600198,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwNjkwNQ==",
      "original_commit_id" : "a89353e950a4ab29175b7c6b08beee6d244fa22e",
      "original_position" : 6,
      "path" : "src/util.cpp",
      "position" : 6,
      "pull_request_review_id" : 113435982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182606905",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182607042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182607042"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If someone does `-noincludeconf`, I believe it will exist, but the vector will be empty. See line 682, which adds the key to the map, but clears it (the vector, not the map).",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-19T00:32:53Z",
      "diff_hunk" : "@@ -943,18 +952,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+        {\n+            // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+            // for network.includeconf args.\n+            std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+            includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+        }\n+\n+        if (includeconf.size() > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182607042",
      "id" : 182607042,
      "in_reply_to_id" : 182606658,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwNzA0Mg==",
      "original_commit_id" : "b9631d174604f23b1e4ea7fe7f03d89fa0016383",
      "original_position" : 42,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113436118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182607042",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182607235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182607235"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry, line 950, not 682. 682 is for `m_override_args`.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-19T00:34:28Z",
      "diff_hunk" : "@@ -943,18 +952,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+        {\n+            // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+            // for network.includeconf args.\n+            std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+            includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+        }\n+\n+        if (includeconf.size() > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182607235",
      "id" : 182607235,
      "in_reply_to_id" : 182606658,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwNzIzNQ==",
      "original_commit_id" : "b9631d174604f23b1e4ea7fe7f03d89fa0016383",
      "original_position" : 42,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113436326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182607235",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182607501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182607501"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Actually, nevermind, you're right. The for loop will just skip.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-19T00:36:37Z",
      "diff_hunk" : "@@ -943,18 +952,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+        {\n+            // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+            // for network.includeconf args.\n+            std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+            includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+        }\n+\n+        if (includeconf.size() > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182607501",
      "id" : 182607501,
      "in_reply_to_id" : 182606658,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYwNzUwMQ==",
      "original_commit_id" : "b9631d174604f23b1e4ea7fe7f03d89fa0016383",
      "original_position" : 42,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113436587,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182607501",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "After testing `-noincludeconf`, I did some tweaks so that you *can* do `-noincludeconf` from command line to disable `includeconf` stuff inside the main config file.",
      "created_at" : "2018-04-19T01:01:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-382575752",
      "id" : 382575752,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-04-19T01:01:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382575752",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182614119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182614119"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`printf`?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-19T01:34:26Z",
      "diff_hunk" : "@@ -943,18 +954,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        if (m_override_args.count(\"-includeconf\") == 0) {\n+            std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+            {\n+                // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+                // for network.includeconf args.\n+                std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+                includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+            }\n+\n+            for (const std::string& to_include : includeconf) {\n+                fs::ifstream include_config(GetConfigFile(to_include));\n+                if (include_config.good()) {\n+                    ReadConfigStream(include_config);\n+                    LogPrintf(\"Included configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182614119",
      "id" : 182614119,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYxNDExOQ==",
      "original_commit_id" : "6746e4349b3a3982fc8eee4a17c9289c319bf354",
      "original_position" : 49,
      "path" : "src/util.cpp",
      "position" : 51,
      "pull_request_review_id" : 113436245,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182614119",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182614146"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182614146"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`fprintf(stderr`?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-19T01:34:42Z",
      "diff_hunk" : "@@ -943,18 +954,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        if (m_override_args.count(\"-includeconf\") == 0) {\n+            std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+            {\n+                // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+                // for network.includeconf args.\n+                std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+                includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+            }\n+\n+            for (const std::string& to_include : includeconf) {\n+                fs::ifstream include_config(GetConfigFile(to_include));\n+                if (include_config.good()) {\n+                    ReadConfigStream(include_config);\n+                    LogPrintf(\"Included configuration file %s\\n\", to_include.c_str());\n+                } else {\n+                    LogPrintf(\"Failed to include configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r182614146",
      "id" : 182614146,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYxNDE0Ng==",
      "original_commit_id" : "6746e4349b3a3982fc8eee4a17c9289c319bf354",
      "original_position" : 51,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 113436245,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182614146",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed @promag nits.\r\n\r\nEdit: Actually, hm. I didn't address the release note point. Will make another update after verifying behavior.\r\n\r\nEdit 2: I believe I covered the specific case @promag is talking about now.",
      "created_at" : "2018-04-19T03:06:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-382595503",
      "id" : 382595503,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-04-19T04:51:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382595503",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183794447"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183794447"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't understand why this is a print statement. It'll get printed every time bitcoind or bitcoin-qt is started, and each time bitcoin-cli is called.\r\n\r\nI think just a normal log here is fine.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-24T16:16:10Z",
      "diff_hunk" : "@@ -943,18 +954,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        if (m_override_args.count(\"-includeconf\") == 0) {\n+            std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+            {\n+                // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+                // for network.includeconf args.\n+                std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+                includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+            }\n+\n+            for (const std::string& to_include : includeconf) {\n+                fs::ifstream include_config(GetConfigFile(to_include));\n+                if (include_config.good()) {\n+                    ReadConfigStream(include_config);\n+                    printf(\"Included configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183794447",
      "id" : 183794447,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mzc5NDQ0Nw==",
      "original_commit_id" : "3c4dd4f3862ba93c88e83b394df426ceb1c157d9",
      "original_position" : 49,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 114860911,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183794447",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183794610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183794610"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you add a comment to explain why you're checking that count == 0?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-24T16:16:43Z",
      "diff_hunk" : "@@ -943,18 +954,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        if (m_override_args.count(\"-includeconf\") == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183794610",
      "id" : 183794610,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mzc5NDYxMA==",
      "original_commit_id" : "3c4dd4f3862ba93c88e83b394df426ceb1c157d9",
      "original_position" : 36,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 114860911,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183794610",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183797689"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183797689"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It'd be nice if we could be more aggressive here and fail to start if a `-includeconf` argument is provided on the command line (since continuing to startup would be continuing with config that the user has specified that they don't want).\r\n\r\n`ParseParameters()` doesn't currently have a way to return errors, and callers don't wrap calls with try-except (unlike `GetChainName()` for example). Perhaps a future PR could change the function to return a bool, so we could indicate an error to the caller and abort startup.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-24T16:25:46Z",
      "diff_hunk" : "@@ -682,6 +682,17 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n             m_override_args[key].push_back(val);\n         }\n     }\n+\n+    // we do not allow -includeconf from command line, so we clear it here\n+    auto it = m_override_args.find(\"-includeconf\");\n+    if (it != m_override_args.end()) {\n+        if (it->second.size() > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183797689",
      "id" : 183797689,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mzc5NzY4OQ==",
      "original_commit_id" : "3c4dd4f3862ba93c88e83b394df426ceb1c157d9",
      "original_position" : 8,
      "path" : "src/util.cpp",
      "position" : 8,
      "pull_request_review_id" : 114860911,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183797689",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183799692"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183799692"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: prefer `os.path.join(self.options.tmpdir, \"node0\", \"relative.conf\")` for better portability.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-24T16:32:04Z",
      "diff_hunk" : "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests the includeconf argument\n+\n+Verify that:\n+\n+1. adding includeconf to the configuration file causes the includeconf\n+   file to be loaded in the correct order.\n+2. includeconf cannot be used as a command line argument.\n+3. includeconf cannot be used recursively (ie includeconf can only\n+   be used from the base config file).\n+4. multiple includeconf arguments can be specified in the main config\n+   file.\n+\"\"\"\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class IncludeConfTest(BitcoinTestFramework):\n+    def setup_chain(self):\n+        super().setup_chain()\n+        # Create additional config files\n+        # - tmpdir/node0/relative.conf\n+        with open(os.path.join(self.options.tmpdir + \"/node0\", \"relative.conf\"), \"w\", encoding=\"utf8\") as f:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183799692",
      "id" : 183799692,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mzc5OTY5Mg==",
      "original_commit_id" : "3c4dd4f3862ba93c88e83b394df426ceb1c157d9",
      "original_position" : 26,
      "path" : "test/functional/feature_includeconf.py",
      "position" : null,
      "pull_request_review_id" : 114860911,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183799692",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183929801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183929801"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The reason is because `-printtoconsole` or `-debug` etc. have not been activated yet. A log would effectively be a NOP.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-25T02:24:03Z",
      "diff_hunk" : "@@ -943,18 +954,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        if (m_override_args.count(\"-includeconf\") == 0) {\n+            std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+            {\n+                // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+                // for network.includeconf args.\n+                std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+                includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+            }\n+\n+            for (const std::string& to_include : includeconf) {\n+                fs::ifstream include_config(GetConfigFile(to_include));\n+                if (include_config.good()) {\n+                    ReadConfigStream(include_config);\n+                    printf(\"Included configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183929801",
      "id" : 183929801,
      "in_reply_to_id" : 183794447,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzkyOTgwMQ==",
      "original_commit_id" : "3c4dd4f3862ba93c88e83b394df426ceb1c157d9",
      "original_position" : 49,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 115022246,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183929801",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183930353"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183930353"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Makes sense. I'm leaving it for now as it sounds like a future thing, I think.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-25T02:29:58Z",
      "diff_hunk" : "@@ -682,6 +682,17 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n             m_override_args[key].push_back(val);\n         }\n     }\n+\n+    // we do not allow -includeconf from command line, so we clear it here\n+    auto it = m_override_args.find(\"-includeconf\");\n+    if (it != m_override_args.end()) {\n+        if (it->second.size() > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183930353",
      "id" : 183930353,
      "in_reply_to_id" : 183797689,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzkzMDM1Mw==",
      "original_commit_id" : "3c4dd4f3862ba93c88e83b394df426ceb1c157d9",
      "original_position" : 8,
      "path" : "src/util.cpp",
      "position" : 8,
      "pull_request_review_id" : 115022844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183930353",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183947741"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183947741"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hm, you're right that it prints every time you call bitcoin-cli etc. That's ugly. I'll think of something.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-25T05:54:12Z",
      "diff_hunk" : "@@ -943,18 +954,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        if (m_override_args.count(\"-includeconf\") == 0) {\n+            std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+            {\n+                // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+                // for network.includeconf args.\n+                std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+                includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+            }\n+\n+            for (const std::string& to_include : includeconf) {\n+                fs::ifstream include_config(GetConfigFile(to_include));\n+                if (include_config.good()) {\n+                    ReadConfigStream(include_config);\n+                    printf(\"Included configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183947741",
      "id" : 183947741,
      "in_reply_to_id" : 183794447,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mzk0Nzc0MQ==",
      "original_commit_id" : "3c4dd4f3862ba93c88e83b394df426ceb1c157d9",
      "original_position" : 49,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 115043238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183947741",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183949676"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183949676"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm removing this entirely. As LogPrintf it is NOP and as printf it is ugly. I think we can live without being told the include was successful. The error case will be spammy, but I think that's okay.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-25T06:10:46Z",
      "diff_hunk" : "@@ -943,18 +954,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        if (m_override_args.count(\"-includeconf\") == 0) {\n+            std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+            {\n+                // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+                // for network.includeconf args.\n+                std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+                includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+            }\n+\n+            for (const std::string& to_include : includeconf) {\n+                fs::ifstream include_config(GetConfigFile(to_include));\n+                if (include_config.good()) {\n+                    ReadConfigStream(include_config);\n+                    printf(\"Included configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183949676",
      "id" : 183949676,
      "in_reply_to_id" : 183794447,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mzk0OTY3Ng==",
      "original_commit_id" : "3c4dd4f3862ba93c88e83b394df426ceb1c157d9",
      "original_position" : 49,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 115045556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183949676",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183971226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183971226"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`fprintf(stderr, ...`?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-25T08:05:20Z",
      "diff_hunk" : "@@ -445,6 +445,17 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n             m_override_args[key].push_back(val);\n         }\n     }\n+\n+    // we do not allow -includeconf from command line, so we clear it here\n+    auto it = m_override_args.find(\"-includeconf\");\n+    if (it != m_override_args.end()) {\n+        if (it->second.size() > 0) {\n+            for (const auto& ic : it->second) {\n+                printf(\"warning: -includeconf cannot be used from commandline; ignoring -includeconf=%s\\n\", ic.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183971226",
      "id" : 183971226,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mzk3MTIyNg==",
      "original_commit_id" : "01e3fcccc3eee69ff1a8b0e858038757edef79ff",
      "original_position" : 10,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 115070601,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183971226",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183972503"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183972503"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Makes sense. Done.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-25T08:10:29Z",
      "diff_hunk" : "@@ -445,6 +445,17 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n             m_override_args[key].push_back(val);\n         }\n     }\n+\n+    // we do not allow -includeconf from command line, so we clear it here\n+    auto it = m_override_args.find(\"-includeconf\");\n+    if (it != m_override_args.end()) {\n+        if (it->second.size() > 0) {\n+            for (const auto& ic : it->second) {\n+                printf(\"warning: -includeconf cannot be used from commandline; ignoring -includeconf=%s\\n\", ic.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183972503",
      "id" : 183972503,
      "in_reply_to_id" : 183971226,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mzk3MjUwMw==",
      "original_commit_id" : "01e3fcccc3eee69ff1a8b0e858038757edef79ff",
      "original_position" : 10,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 115072108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183972503",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183978555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183978555"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Actually, I remember now. The reason was because travis fails for certain tests when using fprintf.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-25T08:31:40Z",
      "diff_hunk" : "@@ -445,6 +445,17 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n             m_override_args[key].push_back(val);\n         }\n     }\n+\n+    // we do not allow -includeconf from command line, so we clear it here\n+    auto it = m_override_args.find(\"-includeconf\");\n+    if (it != m_override_args.end()) {\n+        if (it->second.size() > 0) {\n+            for (const auto& ic : it->second) {\n+                printf(\"warning: -includeconf cannot be used from commandline; ignoring -includeconf=%s\\n\", ic.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183978555",
      "id" : 183978555,
      "in_reply_to_id" : 183971226,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mzk3ODU1NQ==",
      "original_commit_id" : "01e3fcccc3eee69ff1a8b0e858038757edef79ff",
      "original_position" : 10,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 115079205,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183978555",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183983398"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183983398"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should probably fix the test instead in that case :-)",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-25T08:48:55Z",
      "diff_hunk" : "@@ -445,6 +445,17 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n             m_override_args[key].push_back(val);\n         }\n     }\n+\n+    // we do not allow -includeconf from command line, so we clear it here\n+    auto it = m_override_args.find(\"-includeconf\");\n+    if (it != m_override_args.end()) {\n+        if (it->second.size() > 0) {\n+            for (const auto& ic : it->second) {\n+                printf(\"warning: -includeconf cannot be used from commandline; ignoring -includeconf=%s\\n\", ic.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183983398",
      "id" : 183983398,
      "in_reply_to_id" : 183971226,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mzk4MzM5OA==",
      "original_commit_id" : "01e3fcccc3eee69ff1a8b0e858038757edef79ff",
      "original_position" : 10,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 115084872,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183983398",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183987899"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183987899"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I thought it was a travis internal thing to automatically assume error when stderr was printed to. I can't find any reference to this though... digging.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-25T09:04:44Z",
      "diff_hunk" : "@@ -445,6 +445,17 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n             m_override_args[key].push_back(val);\n         }\n     }\n+\n+    // we do not allow -includeconf from command line, so we clear it here\n+    auto it = m_override_args.find(\"-includeconf\");\n+    if (it != m_override_args.end()) {\n+        if (it->second.size() > 0) {\n+            for (const auto& ic : it->second) {\n+                printf(\"warning: -includeconf cannot be used from commandline; ignoring -includeconf=%s\\n\", ic.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183987899",
      "id" : 183987899,
      "in_reply_to_id" : 183971226,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mzk4Nzg5OQ==",
      "original_commit_id" : "01e3fcccc3eee69ff1a8b0e858038757edef79ff",
      "original_position" : 10,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 115090335,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183987899",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183989514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183989514"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's actually `test_runner.py`, not travis. Digging more.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-25T09:10:41Z",
      "diff_hunk" : "@@ -445,6 +445,17 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n             m_override_args[key].push_back(val);\n         }\n     }\n+\n+    // we do not allow -includeconf from command line, so we clear it here\n+    auto it = m_override_args.find(\"-includeconf\");\n+    if (it != m_override_args.end()) {\n+        if (it->second.size() > 0) {\n+            for (const auto& ic : it->second) {\n+                printf(\"warning: -includeconf cannot be used from commandline; ignoring -includeconf=%s\\n\", ic.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r183989514",
      "id" : 183989514,
      "in_reply_to_id" : 183971226,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mzk4OTUxNA==",
      "original_commit_id" : "01e3fcccc3eee69ff1a8b0e858038757edef79ff",
      "original_position" : 10,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 115092336,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183989514",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "utACK 8eebf2a55f43bbcf83b64051f5d1a6355b0d0145",
      "created_at" : "2018-04-25T09:12:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-384218656",
      "id" : 384218656,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-04-25T09:12:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384218656",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@kallewoof Feel free to take over https://github.com/laanwj/bitcoin/commit/57b1b57cba84ea60e4de7cc0549aa448132e7573  to fix the stderr issue (and check stderr output)",
      "created_at" : "2018-04-25T11:46:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-384258422",
      "id" : 384258422,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-04-25T11:46:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384258422",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r184230829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184230829"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "LogPrintf gets stored and replayed when going to a logfile; we could fix it so the same thing happens with printtoconsole?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-25T23:05:29Z",
      "diff_hunk" : "@@ -943,18 +954,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        if (m_override_args.count(\"-includeconf\") == 0) {\n+            std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+            {\n+                // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+                // for network.includeconf args.\n+                std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+                includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+            }\n+\n+            for (const std::string& to_include : includeconf) {\n+                fs::ifstream include_config(GetConfigFile(to_include));\n+                if (include_config.good()) {\n+                    ReadConfigStream(include_config);\n+                    printf(\"Included configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r184230829",
      "id" : 184230829,
      "in_reply_to_id" : 183794447,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDIzMDgyOQ==",
      "original_commit_id" : "3c4dd4f3862ba93c88e83b394df426ceb1c157d9",
      "original_position" : 49,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 115384513,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184230829",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r184263533"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184263533"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@ajtowns Really? I thought I checked the log file and didn't see it. If it is replayed, I should add it back.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-26T03:41:10Z",
      "diff_hunk" : "@@ -943,18 +954,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        if (m_override_args.count(\"-includeconf\") == 0) {\n+            std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+            {\n+                // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+                // for network.includeconf args.\n+                std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+                includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+            }\n+\n+            for (const std::string& to_include : includeconf) {\n+                fs::ifstream include_config(GetConfigFile(to_include));\n+                if (include_config.good()) {\n+                    ReadConfigStream(include_config);\n+                    printf(\"Included configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r184263533",
      "id" : 184263533,
      "in_reply_to_id" : 183794447,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDI2MzUzMw==",
      "original_commit_id" : "3c4dd4f3862ba93c88e83b394df426ceb1c157d9",
      "original_position" : 49,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 115421964,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184263533",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Ohh, nice. Thanks for the fix. I squashed it into 488f947.",
      "created_at" : "2018-04-26T03:45:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-384503926",
      "id" : 384503926,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-04-26T03:47:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384503926",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r184264063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184264063"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I restored LogPrintf line.",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-26T03:46:43Z",
      "diff_hunk" : "@@ -943,18 +954,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        if (m_override_args.count(\"-includeconf\") == 0) {\n+            std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+            {\n+                // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+                // for network.includeconf args.\n+                std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+                includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+            }\n+\n+            for (const std::string& to_include : includeconf) {\n+                fs::ifstream include_config(GetConfigFile(to_include));\n+                if (include_config.good()) {\n+                    ReadConfigStream(include_config);\n+                    printf(\"Included configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r184264063",
      "id" : 184264063,
      "in_reply_to_id" : 183794447,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDI2NDA2Mw==",
      "original_commit_id" : "3c4dd4f3862ba93c88e83b394df426ceb1c157d9",
      "original_position" : 49,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 115422636,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184264063",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r184366910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184366910"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "#13088 should add support replay for console logs as well as debug.log fwiw",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-04-26T12:16:20Z",
      "diff_hunk" : "@@ -943,18 +954,38 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        if (m_override_args.count(\"-includeconf\") == 0) {\n+            std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+            {\n+                // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+                // for network.includeconf args.\n+                std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+                includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+            }\n+\n+            for (const std::string& to_include : includeconf) {\n+                fs::ifstream include_config(GetConfigFile(to_include));\n+                if (include_config.good()) {\n+                    ReadConfigStream(include_config);\n+                    printf(\"Included configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r184366910",
      "id" : 184366910,
      "in_reply_to_id" : 183794447,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDM2NjkxMA==",
      "original_commit_id" : "3c4dd4f3862ba93c88e83b394df426ceb1c157d9",
      "original_position" : 49,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 115546965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184366910",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'd prefer to not to have special stderr checking for this test. I have a PR open here: #12755 which adds stderr checking to the test framework.\r\n\r\nI've also prepared a branch here: https://github.com/bitcoin/bitcoin/compare/master...jnewbery:pr10267.3?expand=1 which rebases this PR on #12755 and adds explicit stderr checking.\r\n\r\nWould you mind either:\r\n- removing the stderr checking from this PR entirely (and I'll add it as part of #12755); or\r\n- resetting this PR to https://github.com/jnewbery/bitcoin/tree/pr10267.3 (which would mean that this PR now depends on #12755)\r\n",
      "created_at" : "2018-04-30T20:54:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-385525703",
      "id" : 385525703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-04-30T20:58:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385525703",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery Wouldn't it be simpler to fix this in a follow-up PR once #12755 is merged?",
      "created_at" : "2018-05-01T04:31:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-385596813",
      "id" : 385596813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-05-01T04:31:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385596813",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r185223531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185223531"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: PEP8 import ordering please (std library first, then local application imports)",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-05-01T13:42:07Z",
      "diff_hunk" : "@@ -0,0 +1,78 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests the includeconf argument\n+\n+Verify that:\n+\n+1. adding includeconf to the configuration file causes the includeconf\n+   file to be loaded in the correct order.\n+2. includeconf cannot be used as a command line argument.\n+3. includeconf cannot be used recursively (ie includeconf can only\n+   be used from the base config file).\n+4. multiple includeconf arguments can be specified in the main config\n+   file.\n+\"\"\"\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework, assert_equal\n+import tempfile",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r185223531",
      "id" : 185223531,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTIyMzUzMQ==",
      "original_commit_id" : "6d5605517b477538f0447d41fe0bc734da27d10c",
      "original_position" : 20,
      "path" : "test/functional/feature_includeconf.py",
      "position" : null,
      "pull_request_review_id" : 116568176,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185223531",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r185223953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185223953"
         }
      },
      "author_association" : "MEMBER",
      "body" : "micronit: all other tests have `set_test_params()` as the first method. I think that makes more logical sense since that method is called by `__init__()`. Do you mind doing the same here?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-05-01T13:44:10Z",
      "diff_hunk" : "@@ -0,0 +1,78 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests the includeconf argument\n+\n+Verify that:\n+\n+1. adding includeconf to the configuration file causes the includeconf\n+   file to be loaded in the correct order.\n+2. includeconf cannot be used as a command line argument.\n+3. includeconf cannot be used recursively (ie includeconf can only\n+   be used from the base config file).\n+4. multiple includeconf arguments can be specified in the main config\n+   file.\n+\"\"\"\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework, assert_equal\n+import tempfile\n+\n+class IncludeConfTest(BitcoinTestFramework):\n+    def setup_chain(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r185223953",
      "id" : 185223953,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTIyMzk1Mw==",
      "original_commit_id" : "6d5605517b477538f0447d41fe0bc734da27d10c",
      "original_position" : 23,
      "path" : "test/functional/feature_includeconf.py",
      "position" : null,
      "pull_request_review_id" : 116568176,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-05-02T05:26:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185223953",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery Thanks for review! Addressed your nits.",
      "created_at" : "2018-05-02T05:27:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-385868625",
      "id" : 385868625,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-05-02T05:27:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385868625",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery I'm a little confused. Should I close this PR in favor of #12755? I thought #12755 only added the error stuff, but it includes this PR as well now.",
      "created_at" : "2018-05-02T05:31:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-385869030",
      "id" : 385869030,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-05-02T05:31:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385869030",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested ACK 25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4.\r\n\r\n>  I'm a little confused. Should I close this PR in favor of #12755? I thought #12755 only added the error stuff, but it includes this PR as well now.\r\n\r\nSorry - I haven't been very clear in my updates. Now that this PR includes stderr testing, it conflicts with #12755. My initial suggestions were to remove the stderr testing from this test, or rebase on top of #12755. But now I think it would make more sense to rebase #12755 on this, since this PR has been around for so long and should almost be ready for merge.\r\n\r\nI've rebased #12755 on this. As soon as this PR is merged, #12755 will be ready to go in.",
      "created_at" : "2018-05-03T19:48:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-386414819",
      "id" : 386414819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-05-07T13:49:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386414819",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think this is very nearly ready for merge. Are previous reviewers @laanwj, @ajtowns @promag, @ryanofsky, @MarcoFalke @MeshCollider, @jonasschnelli able to re-review this?",
      "created_at" : "2018-05-08T19:11:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-387510818",
      "id" : 387510818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-05-08T19:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387510818",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "utACK 25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4\n\n\n",
      "created_at" : "2018-05-08T19:40:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-387518534",
      "id" : 387518534,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-05-08T19:40:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387518534",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 25b7ab9.\r\n\r\nI suggest to add a warning if -includeconf is used in  an included file (follow up PR).",
      "created_at" : "2018-05-08T21:20:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-387546144",
      "id" : 387546144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-05-08T21:20:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387546144",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "When working on the locking annotations (see #13126) I noticed that `ArgsManager::ReadConfigFiles()` introduced in this PR accesses `m_override_args` without first locking `cs_args`.\r\n\r\nThe PR #13126 adds the correct locking. FWIW Travis will catch this type of `cs_args` locking violations when #13126 is merged :-)",
      "created_at" : "2018-05-12T20:30:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#issuecomment-388580967",
      "id" : 388580967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10267",
      "updated_at" : "2018-05-12T20:30:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388580967",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r192503723"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192503723"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: should probably be an (init)error, since it is clearly an invalid command line",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-06-01T20:13:27Z",
      "diff_hunk" : "@@ -0,0 +1,78 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests the includeconf argument\n+\n+Verify that:\n+\n+1. adding includeconf to the configuration file causes the includeconf\n+   file to be loaded in the correct order.\n+2. includeconf cannot be used as a command line argument.\n+3. includeconf cannot be used recursively (ie includeconf can only\n+   be used from the base config file).\n+4. multiple includeconf arguments can be specified in the main config\n+   file.\n+\"\"\"\n+import os\n+import tempfile\n+\n+from test_framework.test_framework import BitcoinTestFramework, assert_equal\n+\n+class IncludeConfTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def setup_chain(self):\n+        super().setup_chain()\n+        # Create additional config files\n+        # - tmpdir/node0/relative.conf\n+        with open(os.path.join(self.options.tmpdir, \"node0\", \"relative.conf\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(\"uacomment=relative\\n\")\n+        # - tmpdir/node0/relative2.conf\n+        with open(os.path.join(self.options.tmpdir, \"node0\", \"relative2.conf\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(\"uacomment=relative2\\n\")\n+        with open(os.path.join(self.options.tmpdir, \"node0\", \"bitcoin.conf\"), \"a\", encoding='utf8') as f:\n+            f.write(\"uacomment=main\\nincludeconf=relative.conf\\n\")\n+\n+    def run_test(self):\n+        self.log.info(\"-includeconf works from config file. subversion should end with 'main; relative)/'\")\n+\n+        subversion = self.nodes[0].getnetworkinfo()[\"subversion\"]\n+        assert subversion.endswith(\"main; relative)/\")\n+\n+        self.log.info(\"-includeconf cannot be used as command-line arg. subversion should still end with 'main; relative)/'\")\n+        self.stop_node(0)\n+        with tempfile.SpooledTemporaryFile(max_size=2**16) as log_stderr:\n+            self.start_node(0, extra_args=[\"-includeconf=relative2.conf\"], stderr=log_stderr)\n+\n+            subversion = self.nodes[0].getnetworkinfo()[\"subversion\"]\n+            assert subversion.endswith(\"main; relative)/\")\n+            log_stderr.seek(0)\n+            stderr = log_stderr.read().decode('utf-8').strip()\n+            assert_equal(stderr, 'warning: -includeconf cannot be used from commandline; ignoring -includeconf=relative2.conf')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r192503723",
      "id" : 192503723,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjUwMzcyMw==",
      "original_commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "original_position" : 54,
      "path" : "test/functional/feature_includeconf.py",
      "position" : 54,
      "pull_request_review_id" : 125302563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-06-01T20:15:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192503723",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r192504008"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192504008"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: return false on error?",
      "commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "created_at" : "2018-06-01T20:14:43Z",
      "diff_hunk" : "@@ -706,18 +717,40 @@ void ArgsManager::ReadConfigStream(std::istream& stream)\n     }\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigFiles()\n {\n     {\n         LOCK(cs_args);\n         m_config_args.clear();\n     }\n \n+    const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n         ReadConfigStream(stream);\n+        // if there is an -includeconf in the override args, but it is empty, that means the user\n+        // passed '-noincludeconf' on the command line, in which case we should not include anything\n+        if (m_override_args.count(\"-includeconf\") == 0) {\n+            std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n+            {\n+                // We haven't set m_network yet (that happens in SelectParams()), so manually check\n+                // for network.includeconf args.\n+                std::vector<std::string> includeconf_net(GetArgs(std::string(\"-\") + GetChainName() + \".includeconf\"));\n+                includeconf.insert(includeconf.end(), includeconf_net.begin(), includeconf_net.end());\n+            }\n+\n+            for (const std::string& to_include : includeconf) {\n+                fs::ifstream include_config(GetConfigFile(to_include));\n+                if (include_config.good()) {\n+                    ReadConfigStream(include_config);\n+                    LogPrintf(\"Included configuration file %s\\n\", to_include.c_str());\n+                } else {\n+                    fprintf(stderr, \"Failed to include configuration file %s\\n\", to_include.c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10267#discussion_r192504008",
      "id" : 192504008,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjUwNDAwOA==",
      "original_commit_id" : "25b7ab9c02f691be6c1aa71a9cf51ac1a6ea9db4",
      "original_position" : 53,
      "path" : "src/util.cpp",
      "position" : 53,
      "pull_request_review_id" : 125302563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10267",
      "updated_at" : "2018-06-01T20:15:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192504008",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
