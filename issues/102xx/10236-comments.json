[
   {
      "body" : "I think the major inefficiency is in BDB itself.\r\nNot sure if we can improve this much further.\r\n\r\nIMO the most promising solution to this is switching the database type. @sipa's logdb was IMO the best alternative (https://github.com/bitcoin/bitcoin/pull/5686). Though, append only maybe no longer be always efficient (since `abandontransaction` we do update single-property wtx state).\r\n\r\nOthers have discussed about switching to sqlite, which IMO is reasonable for the transactions and maybe the pubkey cache.\r\n\r\nFor HD wallets, we could probably store the 256bit seed material as Bech32 together with the used-keypath-scheme in a single file that only gets written once. Then maybe use a form of @sipa's logdb as wtx/pubkey storage.\r\n\r\nThe path to that would be to abstract the database interface first (in order to allow BerkleyDB and LogDb the same time [to allow smooth migrations]).\r\n\r\nWe already made some baby-steps (#9256, #9143, #9142), next one would be #9951.",
      "created_at" : "2017-04-20T11:43:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-295700452",
      "id" : 295700452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "updated_at" : "2017-04-20T11:43:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295700452",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> For HD wallets, we could probably store the 256bit seed material as Bech32\r\n\r\nBech32 is designed to protect against human transcription errors, not faulty hardware or software. If you want to protect against hardware errors, your best approach is just writing the whole thing multiple times. Even something like an RS code only corrects individual bytes/words, while disk errors are more likely to lose entire sectors.",
      "created_at" : "2017-04-20T11:52:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-295703814",
      "id" : 295703814,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "updated_at" : "2017-04-20T11:52:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295703814",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> Bech32 is designed to protect against human transcription errors, not faulty hardware or software. If you want to protect against hardware errors, your best approach is just writing the whole thing multiple times. Even something like an RS code only corrects individual bytes/words, while disk errors are more likely to lose entire sectors.\r\n\r\nFair point.",
      "created_at" : "2017-04-20T11:53:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-295704165",
      "id" : 295704165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "updated_at" : "2017-04-20T11:53:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295704165",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> Is there some way of safely updating a BDB database without rewriting the whole file to disk for every update? This seems like a major inefficiency.\r\n\r\nTo be clear: despite the name, ThreadFlushWalletDB was not actually a flush thread.\r\n\r\nWhat does the actual fsyncing I'm talking about in the blog post is the destructor of CWalletDB if the constructur was called with `_fFlushOnClose = true`.\r\n\r\n`ThreadFlushWalletDB` doesn't exist anymore in master. It now is scheduled by `CScheduler` and has the more suitable name `MaybeCompactWalletDB`. \r\n\r\nBut more importantly: Compacting the database is not required to \"safely update\" the database. The only reason for doing it is to keep the database contained to one file most of the time.\r\nNormally a bdb database consists of a `.dat` file and a directory with log files that contain uncompacted updates to it. But this was deemed confusing for users, a long time ago.\r\n\r\nIf you don't care about that you could (AFAIK!) safely disable that periodic compaction.\r\n\r\n> I've been struggling with this issue of ever increasing hard drive use as wallet size grows for years now, but only recently discovered the root cause of the problem.\r\n\r\nThis one I don't understand - why would compaction result in a larger file? Isn't it just that your wallet accumulates more transactions and keys over time?",
      "created_at" : "2017-04-20T14:06:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-295750244",
      "id" : 295750244,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "updated_at" : "2017-04-20T14:08:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295750244",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj Compaction doesn't result in a larger file. But constantly rewriting an ever growing file is problem.\r\n\r\nI would prefer if there was an option to have the wallet 'forget' about transactions which are no longer of any interest. ie. if it no longer gives me any utxos then I don't care about it. I do care about account balances, but not individual transactions. That way the wallet.dat file wouldn't grow without limit. In the past I have seen wallet.dat grow as large as 260,857,856 bytes. Having 260MB written to disk every 2 seconds can really kill performance.",
      "created_at" : "2017-04-20T19:33:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-295872508",
      "id" : 295872508,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "updated_at" : "2017-08-02T09:51:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295872508",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/573356?v=4",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "@dooglus As said, you could disable the rewrite. Just make sure you do a compaction before you move the wallet.dat around and/or change the berkeleydb version.\r\n\r\nAs for deleting old transactions, that's a completely different subject. I don't think the disk space taken by the wallet is a big issue, compared to the block chain it's peanuts. However the fact that the wallet stores all transactions in memory is a problem there.",
      "created_at" : "2017-04-20T19:39:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-295874857",
      "id" : 295874857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "updated_at" : "2017-04-20T19:39:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295874857",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj The disk space taken by the wallet isn't a problem. The problem is that the whole wallet is rewritten every time anything in it changes. We already tell people not to copy wallet.dat while the client is running, so couldn't we simply only run the compaction on shutdown?\r\n\r\nIs compaction currently guaranteed to happen on shutdown, or is it possible that an incoming transaction happens in the last 2 seconds before shutdown and hence no compaction happens?",
      "created_at" : "2017-04-20T20:52:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-295907500",
      "id" : 295907500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "updated_at" : "2017-04-20T20:52:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295907500",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "> Is compaction currently guaranteed to happen on shutdown, or is it possible that an incoming transaction happens in the last 2 seconds before shutdown and hence no compaction happens?\r\n\r\nIt should be guaranteed at a clean shutdown. The reason for doing it intermediately, too, is to make sure it's also (usually, mostly) in compacted form after a crash.\r\n\r\n(because people tend to want to move wallet.dat's around, and that's more not less likely after a crash)",
      "created_at" : "2017-08-24T09:02:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-324577392",
      "id" : 324577392,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "updated_at" : "2017-08-24T09:02:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324577392",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Also having issues with this; and was forced to run with -flushwallet=0\r\n\r\nIs there any concerns about running with flushwallet=0, other than not moving the wallet in non-flushed state?  Is backupwallet still safe to use?\r\n\r\nNote that this flag made a huge performance improvement for me.",
      "created_at" : "2018-02-16T01:15:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-366116924",
      "id" : 366116924,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "updated_at" : "2018-02-16T01:15:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366116924",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2044211?v=4",
         "events_url" : "https://api.github.com/users/AdvancedStyle/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AdvancedStyle/followers",
         "following_url" : "https://api.github.com/users/AdvancedStyle/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AdvancedStyle/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AdvancedStyle",
         "id" : 2044211,
         "login" : "AdvancedStyle",
         "organizations_url" : "https://api.github.com/users/AdvancedStyle/orgs",
         "received_events_url" : "https://api.github.com/users/AdvancedStyle/received_events",
         "repos_url" : "https://api.github.com/users/AdvancedStyle/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AdvancedStyle/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AdvancedStyle/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AdvancedStyle"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> Is there any concerns about running with flushwallet=0, other than not moving the wallet in non-flushed state\r\n\r\nNothing besides what is mentioned here. BerkeleyDB is perfectly usable without periodic compaction, if taking into account that a database is a directory, not a single file.\r\n\r\n>  Is backupwallet still safe to use?\r\n\r\nYes. Backupwallet does the necessary close/checkpoint before copying, see `CWalletDBWrapper::Backup`.",
      "created_at" : "2018-02-16T07:33:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-366163300",
      "id" : 366163300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "updated_at" : "2018-02-16T07:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366163300",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The feature request didn't seem to attract much attention in the past. Also, the issue seems not important enough right now to keep it sitting around idle in the list of open issues.\r\n\r\nClosing due to lack of interest. Pull requests with improvements are always welcome.",
      "created_at" : "2020-05-09T12:38:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-626169873",
      "id" : 626169873,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjE2OTg3Mw==",
      "updated_at" : "2020-05-09T12:38:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626169873",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
