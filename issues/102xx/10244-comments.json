[
   {
      "body" : "ClientModel and WalletModel were already meant as abstraction layer for accessing the core from the GUI. What is your rationale for adding another layer?",
      "created_at" : "2017-04-20T19:41:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-295875877",
      "id" : 295875877,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-04-20T19:41:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295875877",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "> ClientModel and WalletModel were already meant as abstraction layer for accessing the core from the GUI. What is your rationale for adding another layer?\r\n\r\nClientModel and WalletModel might have been intended to be an abstraction layer, but they are not functioning like one. There are libbitcoin functions and global variables accessed all over Qt code right now. With this change, all of these calls (there are around 200 of them) are stripped out of Qt code and moved into a one file: [src/ipc/local/interfaces.cpp](https://github.com/ryanofsky/bitcoin/blob/pr/ipc-local/src/ipc/local/interfaces.cpp).",
      "created_at" : "2017-04-20T19:47:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-295877901",
      "id" : 295877901,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-04-20T19:47:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295877901",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "I once did a similar thing,.. but stopped at some point and now I know why.\r\nIt's an impressive code change and I kinda like a central point (your interfaces.cpp) where communication between the node, the wallet and the GUI happens.\r\n\r\nI also agree with @laanwj that the clientmodel (node) and the walletmodal (wallet) are originally though to be that layer.\r\nThough, there are many violations AFAIK.\r\n\r\nWhat would be the downsides of using the exiting layers (clientmodel / walletmodel) better?",
      "created_at" : "2017-04-20T19:48:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-295878426",
      "id" : 295878426,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-04-20T19:48:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295878426",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> What would be the downsides of using the exiting layers (clientmodel / walletmodel) better?\r\n\r\nIf you look at the `ClientModel` class, you can see it is doing a lot more work than the `ipc::local::Node` class is. Similarly with `WalletModel` and `ipc::local::Wallet.` The ipc classes are just simple shims around low-level node and wallet functionality, while Qt objects implement higher level logic specific to our current GUI. I think `ClientModel` and `WalletModel` classes are still useful after this change. They will just have 1 job instead of 2. Instead of serving as both abstraction layers and MVC model classes, they will serve only as MVC model classes.\r\n\r\nAlso, and in more concrete terms, the reason these interfaces live outside the src/qt directory is that with #10102, they need to be accessed not only by `bitcoin-qt` but also by `bitcoind` (specifically inside the `StartServer` function in [src/ipc/server.cpp](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/ipc/server.cpp) which is called here: https://github.com/ryanofsky/bitcoin/commit/ab0afba3a44255b3eec80f4eebe45a851ae23927#diff-6e30027c2045842fe842430d98d099fb",
      "created_at" : "2017-04-20T20:10:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-295887270",
      "id" : 295887270,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-04-20T20:11:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295887270",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "The general IPC interface makes sense to me. The main problem I see for any type of low latency IPC/RPC is the missing asynchronity.\r\nTake `getWalletTxDetails`. This IPC call may take 2-3 seconds depending on the communication protocol and database you are using. Ideally the GUI is design to handle it asynchronous (like an RPC call) otherwise this will lead to GUI thread freezes. Not sure if this would be solvable as a generic part in the IPC layer of if the wallet/GUI logic must handle it.",
      "created_at" : "2017-04-21T11:09:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-296163518",
      "id" : 296163518,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-04-21T11:09:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296163518",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> The main problem I see for any type of low latency IPC/RPC is the missing asynchronity.\r\n\r\nNot sure if you saw the comments about this in the other pr starting here: https://github.com/bitcoin/bitcoin/pull/10102#issuecomment-294094610\r\n\r\nThese changes are orthogonal to event processing / blocking issues in the UI. If UI blocked before, it will still block after these changes, if UI didn't block before, it won't start blocking now because of these changes. If remote calls are too slow because of socket/serialization overhead, we can process UI events in the background while they are being made. There are many ways to accomplish this, with one possible way described in that comment above. If anything, having calls get funnelled through an IPC framework makes it easier, not harder to add more asynchronicity.",
      "created_at" : "2017-04-21T11:32:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-296167489",
      "id" : 296167489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-04-21T11:37:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296167489",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "Also would point out that Node and Wallet interfaces in [ipc/interfaces.h](https://github.com/ryanofsky/bitcoin/blob/pr/ipc-local/src/ipc/interfaces.h) were mainly designed with goal of changing existing Qt code as little as possible. They aren't in any way set in stone, and I would expect them to evolve over time. Probably some calls will get consolidated, others will get broken up, calls that currently return big chunks of data will be made streaming, etc.",
      "created_at" : "2017-04-21T11:50:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-296170668",
      "id" : 296170668,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-04-21T11:50:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296170668",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "Thinking again and discussing this with @sipa / @laanwj, I think we should use the existing client-/walletmodal as node/wallet abstraction (including a possible IPC abstraction).\r\n\r\nWhat's missing in the first place are better asynchronous messaging between the GUI and the wallet/node.\r\n\r\nIMO using a thread with queue for general node/wallet communication (and eventual additional threads for procedures that usually take longer) seems after a low hanging fruit with direct benefits.\r\n\r\nUsing QT slots/signals for all(most?) communication would be required anyways and would be beneficial even without IPC and therefor should be done first.",
      "created_at" : "2017-04-21T11:51:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-296170774",
      "id" : 296170774,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-04-21T11:52:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296170774",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> What's missing in the first place are better asynchronous messaging between the GUI and the wallet/node.\r\n\r\nAgain I think this is (and should be) an independent issue, but if you want to flesh out some more concrete suggestions and I would be happy to hear them.\r\n\r\n> IMO using a thread with queue for general node/wallet communication (and eventual additional threads for procedures that usually take longer) seems after a low hanging fruit with direct benefits.\r\n\r\nThis is exactly what the change I was suggesting in https://github.com/bitcoin/bitcoin/pull/10102#issuecomment-294094610 does.",
      "created_at" : "2017-04-21T12:00:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-296172416",
      "id" : 296172416,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-04-21T12:01:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296172416",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "> Using QT slots/signals for all(most?) communication would be required anyways and would be beneficial even without IPC and therefor should be done first.\r\n\r\nThis was my point too. Making the GUI asynchronous would avoid ever hard-freezing the GUI. Modern operating systems assume that an application has crashed if its GUI thread is unresponsive. This is a priority for improving user experience. For example: Currently, if e.g. a transaction is sent while the cs_main lock is held the entire thing hangs for a moment. Ideally it would display a modal dialog with a status, or progress animation instead. There are similar issues at startup.\r\n\r\nSure, this is only partially related to IPC work: When the GUI already would communicate with Qt signals and slots with the core backend (similar to how RPCConsole and RPCThread communicate, for example), it could be mostly oblivious whether this backend exists in-process or communicates over a pipe.\r\n\r\nAlthough it's laudable that you're working on this, it looks to me that what you are doing currently is simply replicating what we do now but replacing direct core calls with IPC calls. The drawback is that it calcifies some things that shouldn't have been designed that way in the first place (e.g. into multiple abstraction layers), making it harder to improve later.\r\n",
      "created_at" : "2017-04-21T12:10:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-296174182",
      "id" : 296174182,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-04-21T12:10:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296174182",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "> The drawback is that it calcifies some things\r\n\r\nCould you be more concrete about this? I don't see how it is true. Direct calls before are still direct calls now. If we want to follow the RPCConsole / RPCExecutor model in other parts of Qt code, I don't see how any of the changes I've made for IPC make this more difficult.",
      "created_at" : "2017-04-21T12:59:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-296183743",
      "id" : 296183743,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-04-21T12:59:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296183743",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "I had a look at discussion in IRC (https://botbot.me/freenode/bitcoin-core-dev/msg/84348426/)\r\n\r\nWith respect, what I think you guys are missing on the `WalletModel`/`ClientModel` topic is that the `ipc::local::WalletImpl` and `ipc::local::NodeImpl` classes in [ipc/local/interfaces.cpp](https://github.com/ryanofsky/bitcoin/blob/pr/ipc-local/src/ipc/local/interfaces.cpp) are only **temporarily** being created and invoked within the `bitcoin-qt` process. In the next PR they are created and run in the `bitcoind` process instead of `bitcoin-qt`. That's the reason these classes do not reside in the `src/qt` directory and one reason why they don't really substitute for the `WalletModel`/`ClientModel` classes. See my previous comment for details and a code pointer: https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-295887270. \r\n\r\nHowever, I do see that it is kind of silly to have cases where Qt code calls a `WalletModel`/`ClientModel` method that merely forwards to a `WalletImpl`/`NodeImpl` method. I can easily clear this up by inlining these `WalletModel`/`ClientModel` methods, which would make the classes more lean.\r\n\r\nAlso, if this PR will be too difficult to review because of its size (https://botbot.me/freenode/bitcoin-core-dev/msg/84348447/), I can easily decompose it into smaller PRs that could be gradually merged. It is already broken up into separate commits, and many of the individual commits could be further broken up (right now they try to group together related changes).",
      "created_at" : "2017-04-21T13:32:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-296191498",
      "id" : 296191498,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-04-21T13:32:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296191498",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "@laanwj and @jonasschnelli can you let me know if you still see issues with this approach?\r\n\r\nOn the Qt model class issue, I pulled out a bunch of model methods that were just wrapping IPC calls so it should be clearer what actual work [walletmodel.cpp](https://github.com/ryanofsky/bitcoin/blob/pr/ipc-local/src/qt/walletmodel.cpp) and [clientmodel.cpp](https://github.com/ryanofsky/bitcoin/blob/pr/ipc-local/src/qt/clientmodel.cpp) are doing. I also added a little blurb to the [IPC README](https://github.com/ryanofsky/bitcoin/tree/pr/ipc-local/src/ipc#does-having-an-ipc-layer-make-qt-model-classes-redundant) describing what the distinction between Qt model classes and the IPC interface classes is supposed to be.\r\n\r\nOn the asynchronous GUI issue, I created #10504 for more discussion, but think that issue is mostly unrelated to the changes in this PR, except as far as some changes here might potentially make it easier to identify blocking calls and make them asynchronous.\r\n",
      "created_at" : "2017-06-01T19:00:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-305588012",
      "id" : 305588012,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-06-01T19:00:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/305588012",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "Concept ACK on the approach, moving things to interfaces instead of global calls is usually good as it makes it easier to see what the interface to the core is.\r\n",
      "created_at" : "2017-06-15T13:38:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-308731640",
      "id" : 308731640,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-06-15T13:38:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308731640",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Concept ACK.\r\nI think we could try to rebase and get this in once 0.15 has been split off",
      "created_at" : "2017-06-15T13:58:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-308738280",
      "id" : 308738280,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-06-15T13:58:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308738280",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@promag re: https://botbot.me/freenode/bitcoin-core-dev/msg/92986206/\r\n\r\n> \\<promag> to change the current wallet from widgets to qtquick would take several PR's (which would sit there for a long time)\r\n> \\<promag> dunno if the IPC PR from ryanofsky is going forward\r\n> \\<promag> both require lots of changes to the wallet ui code\r\n> \\<promag> that's why I think adding IPC to glue a new wallet ui is probably easier\r\n> \\<promag> we could have both bitcoin-qt and bitcoin-quick and later drop support for the first\r\n> \\<promag> anyway, moving to qtquick is something IMHO we should plan\r\n\r\nI don't think you need any IPC stuff for this. This PR by itself, which is a refactoring, provides interfaces for GUI code to access node&wallet state while being less tied to their internals. The Node and Wallet interfaces here would probably have to be extended in various ways to do things you'd want in a more modern UI, but they do provide a base of functionality that someone could use to implement one.",
      "created_at" : "2017-11-01T13:14:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-341102695",
      "id" : 341102695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-11-01T13:14:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341102695",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Another IRC mention of this: https://botbot.me/freenode/bitcoin-core-dev/msg/93856775/",
      "created_at" : "2017-12-01T22:37:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-348632889",
      "id" : 348632889,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2017-12-01T22:37:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348632889",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173273761"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173273761"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems like we should be able to remove `init.h` inclusions from src/qt. I tried this removal locally and it compiles okay.\r\n```\r\n $ git grep init.h src/qt\r\n\r\nsrc/qt/bitcoin.cpp:#include <init.h>\r\nsrc/qt/bitcoingui.cpp:#include <init.h>\r\nsrc/qt/coincontroldialog.cpp:#include <init.h>\r\nsrc/qt/guiutil.cpp:#include <init.h>\r\nsrc/qt/optionsmodel.cpp:#include <init.h>\r\nsrc/qt/signverifymessagedialog.cpp:#include <init.h>\r\nsrc/qt/splashscreen.cpp:#include <init.h>\r\nsrc/qt/utilitydialog.cpp:#include <init.h>\r\nsrc/qt/winshutdownmonitor.cpp:#include <init.h>\r\n```",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-08T19:58:50Z",
      "diff_hunk" : "@@ -27,16 +27,14 @@\n #endif\n \n #include <init.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173273761",
      "id" : 173273761,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzI3Mzc2MQ==",
      "original_commit_id" : "9cdbd195ba85b1af12fe8c55db3880df73e107ff",
      "original_position" : 3,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 3,
      "pull_request_review_id" : 102437485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173273761",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173285690"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173285690"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Needs `override`?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-08T20:47:19Z",
      "diff_hunk" : "@@ -0,0 +1,453 @@\n+#include <interface/wallet.h>\n+\n+#include <amount.h>\n+#include <chain.h>\n+#include <consensus/validation.h>\n+#include <interface/handler.h>\n+#include <net.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <rpc/server.h>\n+#include <script/ismine.h>\n+#include <script/standard.h>\n+#include <support/allocators/secure.h>\n+#include <sync.h>\n+#include <timedata.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <wallet/feebumper.h>\n+#include <wallet/init.h>\n+#include <wallet/rpcwallet.h>\n+#include <wallet/wallet.h>\n+\n+#include <memory>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+class CScheduler;\n+\n+namespace interface {\n+namespace {\n+\n+class PendingWalletTxImpl : public PendingWalletTx\n+{\n+public:\n+    PendingWalletTxImpl(CWallet& wallet) : m_wallet(wallet), m_key(&wallet) {}\n+\n+    const CTransaction& get() override { return *m_wtx.tx; }\n+\n+    int64_t getVirtualSize() override { return GetVirtualTransactionSize(*m_wtx.tx); }\n+\n+    bool commit(WalletValueMap value_map,\n+        WalletOrderForm order_form,\n+        std::string from_account,\n+        std::string& reject_reason) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        m_wtx.mapValue = std::move(value_map);\n+        m_wtx.vOrderForm = std::move(order_form);\n+        m_wtx.strFromAccount = std::move(from_account);\n+        CValidationState state;\n+        if (!m_wallet.CommitTransaction(m_wtx, m_key, ::g_connman.get(), state)) {\n+            reject_reason = state.GetRejectReason();\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    CWalletTx m_wtx;\n+    CWallet& m_wallet;\n+    CReserveKey m_key;\n+};\n+\n+//! Construct wallet tx struct.\n+WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n+{\n+    WalletTx result;\n+    result.tx = wtx.tx;\n+    result.txin_is_mine.reserve(wtx.tx->vin.size());\n+    for (const auto& txin : wtx.tx->vin) {\n+        result.txin_is_mine.emplace_back(wallet.IsMine(txin));\n+    }\n+    result.txout_is_mine.reserve(wtx.tx->vout.size());\n+    result.txout_address.reserve(wtx.tx->vout.size());\n+    result.txout_address_is_mine.reserve(wtx.tx->vout.size());\n+    for (const auto& txout : wtx.tx->vout) {\n+        result.txout_is_mine.emplace_back(wallet.IsMine(txout));\n+        result.txout_address.emplace_back();\n+        result.txout_address_is_mine.emplace_back(ExtractDestination(txout.scriptPubKey, result.txout_address.back()) ?\n+                                                      IsMine(wallet, result.txout_address.back()) :\n+                                                      ISMINE_NO);\n+    }\n+    result.credit = wtx.GetCredit(ISMINE_ALL);\n+    result.debit = wtx.GetDebit(ISMINE_ALL);\n+    result.change = wtx.GetChange();\n+    result.time = wtx.GetTxTime();\n+    result.value_map = wtx.mapValue;\n+    result.is_coinbase = wtx.IsCoinBase();\n+    return result;\n+}\n+\n+//! Construct wallet tx status struct.\n+WalletTxStatus MakeWalletTxStatus(const CWalletTx& wtx)\n+{\n+    WalletTxStatus result;\n+    auto mi = ::mapBlockIndex.find(wtx.hashBlock);\n+    CBlockIndex* block = mi != ::mapBlockIndex.end() ? mi->second : nullptr;\n+    result.block_height = (block ? block->nHeight : std::numeric_limits<int>::max()),\n+    result.blocks_to_maturity = wtx.GetBlocksToMaturity();\n+    result.depth_in_main_chain = wtx.GetDepthInMainChain();\n+    result.request_count = wtx.GetRequestCount();\n+    result.time_received = wtx.nTimeReceived;\n+    result.lock_time = wtx.tx->nLockTime;\n+    result.is_final = CheckFinalTx(*wtx.tx);\n+    result.is_trusted = wtx.IsTrusted();\n+    result.is_abandoned = wtx.isAbandoned();\n+    result.is_coinbase = wtx.IsCoinBase();\n+    result.is_in_main_chain = wtx.IsInMainChain();\n+    return result;\n+}\n+\n+//! Construct wallet TxOut struct.\n+WalletTxOut MakeWalletTxOut(CWallet& wallet, const CWalletTx& wtx, int n, int depth)\n+{\n+    WalletTxOut result;\n+    result.txout = wtx.tx->vout[n];\n+    result.time = wtx.GetTxTime();\n+    result.depth_in_main_chain = depth;\n+    result.is_spent = wallet.IsSpent(wtx.GetHash(), n);\n+    return result;\n+}\n+\n+class WalletImpl : public Wallet\n+{\n+public:\n+    WalletImpl(CWallet& wallet) : m_wallet(wallet) {}\n+\n+    bool encryptWallet(const SecureString& wallet_passphrase) override\n+    {\n+        return m_wallet.EncryptWallet(wallet_passphrase);\n+    }\n+    bool isCrypted() override { return m_wallet.IsCrypted(); }\n+    bool lock() override { return m_wallet.Lock(); }\n+    bool unlock(const SecureString& wallet_passphrase) override { return m_wallet.Unlock(wallet_passphrase); }\n+    bool isLocked() override { return m_wallet.IsLocked(); }\n+    bool changeWalletPassphrase(const SecureString& old_wallet_passphrase,\n+        const SecureString& new_wallet_passphrase) override\n+    {\n+        return m_wallet.ChangeWalletPassphrase(old_wallet_passphrase, new_wallet_passphrase);\n+    }\n+    bool backupWallet(const std::string& filename) override { return m_wallet.BackupWallet(filename); }\n+    bool getKeyFromPool(bool internal, CPubKey& pub_key) override\n+    {\n+        return m_wallet.GetKeyFromPool(pub_key, internal);\n+    }\n+    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet.GetPubKey(address, pub_key); }\n+    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet.GetKey(address, key); }\n+    bool isSpendable(const CTxDestination& dest) override { return IsMine(m_wallet, dest) & ISMINE_SPENDABLE; }\n+    bool haveWatchOnly() override { return m_wallet.HaveWatchOnly(); };\n+    bool setAddressBook(const CTxDestination& dest, const std::string& name, const std::string& purpose) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        return m_wallet.SetAddressBook(dest, name, purpose);\n+    }\n+    bool delAddressBook(const CTxDestination& dest) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        return m_wallet.DelAddressBook(dest);\n+    }\n+    bool getAddress(const CTxDestination& dest, std::string* name, isminetype* is_mine) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        auto it = m_wallet.mapAddressBook.find(dest);\n+        if (it == m_wallet.mapAddressBook.end()) {\n+            return false;\n+        }\n+        if (name) {\n+            *name = it->second.name;\n+        }\n+        if (is_mine) {\n+            *is_mine = IsMine(m_wallet, dest);\n+        }\n+        return true;\n+    }\n+    std::vector<WalletAddress> getAddresses() override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        std::vector<WalletAddress> result;\n+        for (const auto& item : m_wallet.mapAddressBook) {\n+            result.emplace_back();\n+            result.back().dest = item.first;\n+            result.back().is_mine = IsMine(m_wallet, item.first);\n+            result.back().name = item.second.name;\n+            result.back().purpose = item.second.purpose;\n+        }\n+        return result;\n+    }\n+    void learnRelatedScripts(const CPubKey& key, OutputType type) override { m_wallet.LearnRelatedScripts(key, type); }\n+    bool addDestData(const CTxDestination& dest, const std::string& key, const std::string& value) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        return m_wallet.AddDestData(dest, key, value);\n+    }\n+    bool eraseDestData(const CTxDestination& dest, const std::string& key) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        return m_wallet.EraseDestData(dest, key);\n+    }\n+    std::vector<std::string> getDestValues(const std::string& prefix) override\n+    {\n+        return m_wallet.GetDestValues(prefix);\n+    }\n+    void lockCoin(const COutPoint& output) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.LockCoin(output);\n+    }\n+    void unlockCoin(const COutPoint& output) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.UnlockCoin(output);\n+    }\n+    bool isLockedCoin(const COutPoint& output) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.IsLockedCoin(output.hash, output.n);\n+    }\n+    void listLockedCoins(std::vector<COutPoint>& outputs) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.ListLockedCoins(outputs);\n+    }\n+    std::unique_ptr<PendingWalletTx> createTransaction(const std::vector<CRecipient>& recipients,\n+        const CCoinControl& coin_control,\n+        bool sign,\n+        int& change_pos,\n+        CAmount& fee,\n+        std::string& fail_reason) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto pending = MakeUnique<PendingWalletTxImpl>(m_wallet);\n+        if (!m_wallet.CreateTransaction(recipients, pending->m_wtx, pending->m_key, fee, change_pos,\n+                fail_reason, coin_control, sign)) {\n+            return {};\n+        }\n+        return std::move(pending);\n+    }\n+    bool transactionCanBeAbandoned(const uint256& txid) override { return m_wallet.TransactionCanBeAbandoned(txid); }\n+    bool abandonTransaction(const uint256& txid) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.AbandonTransaction(txid);\n+    }\n+    bool transactionCanBeBumped(const uint256& txid) override\n+    {\n+        return feebumper::TransactionCanBeBumped(&m_wallet, txid);\n+    }\n+    bool createBumpTransaction(const uint256& txid,\n+        const CCoinControl& coin_control,\n+        CAmount total_fee,\n+        std::vector<std::string>& errors,\n+        CAmount& old_fee,\n+        CAmount& new_fee,\n+        CMutableTransaction& mtx) override\n+    {\n+        return feebumper::CreateTransaction(&m_wallet, txid, coin_control, total_fee, errors, old_fee, new_fee, mtx) ==\n+               feebumper::Result::OK;\n+    }\n+    bool signBumpTransaction(CMutableTransaction& mtx) override { return feebumper::SignTransaction(&m_wallet, mtx); }\n+    bool commitBumpTransaction(const uint256& txid,\n+        CMutableTransaction&& mtx,\n+        std::vector<std::string>& errors,\n+        uint256& bumped_txid) override\n+    {\n+        return feebumper::CommitTransaction(&m_wallet, txid, std::move(mtx), errors, bumped_txid) ==\n+               feebumper::Result::OK;\n+    }\n+    CTransactionRef getTx(const uint256& txid) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto mi = m_wallet.mapWallet.find(txid);\n+        if (mi != m_wallet.mapWallet.end()) {\n+            return mi->second.tx;\n+        }\n+        return {};\n+    }\n+    WalletTx getWalletTx(const uint256& txid) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto mi = m_wallet.mapWallet.find(txid);\n+        if (mi != m_wallet.mapWallet.end()) {\n+            return MakeWalletTx(m_wallet, mi->second);\n+        }\n+        return {};\n+    }\n+    std::vector<WalletTx> getWalletTxs() override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        std::vector<WalletTx> result;\n+        result.reserve(m_wallet.mapWallet.size());\n+        for (const auto& entry : m_wallet.mapWallet) {\n+            result.emplace_back(MakeWalletTx(m_wallet, entry.second));\n+        }\n+        return result;\n+    }\n+    bool tryGetTxStatus(const uint256& txid,\n+        interface::WalletTxStatus& tx_status,\n+        int& num_blocks,\n+        int64_t& adjusted_time) override\n+    {\n+        TRY_LOCK(::cs_main, locked_chain);\n+        if (!locked_chain) {\n+            return false;\n+        }\n+        TRY_LOCK(m_wallet.cs_wallet, locked_wallet);\n+        if (!locked_wallet) {\n+            return false;\n+        }\n+        auto mi = m_wallet.mapWallet.find(txid);\n+        if (mi == m_wallet.mapWallet.end()) {\n+            return false;\n+        }\n+        num_blocks = ::chainActive.Height();\n+        adjusted_time = GetAdjustedTime();\n+        tx_status = MakeWalletTxStatus(mi->second);\n+        return true;\n+    }\n+    WalletTx getWalletTxDetails(const uint256& txid,\n+        WalletTxStatus& tx_status,\n+        WalletOrderForm& order_form,\n+        bool& in_mempool,\n+        int& num_blocks,\n+        int64_t& adjusted_time) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto mi = m_wallet.mapWallet.find(txid);\n+        if (mi != m_wallet.mapWallet.end()) {\n+            num_blocks = ::chainActive.Height();\n+            adjusted_time = GetAdjustedTime();\n+            in_mempool = mi->second.InMempool();\n+            order_form = mi->second.vOrderForm;\n+            tx_status = MakeWalletTxStatus(mi->second);\n+            return MakeWalletTx(m_wallet, mi->second);\n+        }\n+        return {};\n+    }\n+    WalletBalances getBalances() override\n+    {\n+        WalletBalances result;\n+        result.balance = m_wallet.GetBalance();\n+        result.unconfirmed_balance = m_wallet.GetUnconfirmedBalance();\n+        result.immature_balance = m_wallet.GetImmatureBalance();\n+        result.have_watch_only = m_wallet.HaveWatchOnly();\n+        if (result.have_watch_only) {\n+            result.watch_only_balance = m_wallet.GetWatchOnlyBalance();\n+            result.unconfirmed_watch_only_balance = m_wallet.GetUnconfirmedWatchOnlyBalance();\n+            result.immature_watch_only_balance = m_wallet.GetImmatureWatchOnlyBalance();\n+        }\n+        return result;\n+    }\n+    bool tryGetBalances(WalletBalances& balances, int& num_blocks) override\n+    {\n+        TRY_LOCK(::cs_main, locked_chain);\n+        if (!locked_chain) return false;\n+        TRY_LOCK(m_wallet.cs_wallet, locked_wallet);\n+        if (!locked_wallet) {\n+            return false;\n+        }\n+        balances = getBalances();\n+        num_blocks = ::chainActive.Height();\n+        return true;\n+    }\n+    CAmount getBalance() override { return m_wallet.GetBalance(); }\n+    CAmount getAvailableBalance(const CCoinControl& coin_control) override\n+    {\n+        return m_wallet.GetAvailableBalance(&coin_control);\n+    }\n+    isminetype txinIsMine(const CTxIn& txin) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.IsMine(txin);\n+    }\n+    isminetype txoutIsMine(const CTxOut& txout) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.IsMine(txout);\n+    }\n+    CAmount getDebit(const CTxIn& txin, isminefilter filter) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.GetDebit(txin, filter);\n+    }\n+    CAmount getCredit(const CTxOut& txout, isminefilter filter) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.GetCredit(txout, filter);\n+    }\n+    CoinsList listCoins() override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        CoinsList result;\n+        for (const auto& entry : m_wallet.ListCoins()) {\n+            auto& group = result[entry.first];\n+            for (const auto& coin : entry.second) {\n+                group.emplace_back(\n+                    COutPoint(coin.tx->GetHash(), coin.i), MakeWalletTxOut(m_wallet, *coin.tx, coin.i, coin.nDepth));\n+            }\n+        }\n+        return result;\n+    }\n+    std::vector<WalletTxOut> getCoins(const std::vector<COutPoint>& outputs) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        std::vector<WalletTxOut> result;\n+        result.reserve(outputs.size());\n+        for (const auto& output : outputs) {\n+            result.emplace_back();\n+            auto it = m_wallet.mapWallet.find(output.hash);\n+            if (it != m_wallet.mapWallet.end()) {\n+                int depth = it->second.GetDepthInMainChain();\n+                if (depth >= 0) {\n+                    result.back() = MakeWalletTxOut(m_wallet, it->second, output.n, depth);\n+                }\n+            }\n+        }\n+        return result;\n+    }\n+    bool hdEnabled() override { return m_wallet.IsHDEnabled(); }\n+    OutputType getDefaultAddressType() { return g_address_type; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173285690",
      "id" : 173285690,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzI4NTY5MA==",
      "original_commit_id" : "9cdbd195ba85b1af12fe8c55db3880df73e107ff",
      "original_position" : 421,
      "path" : "src/interface/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 102437485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173285690",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173300689"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173300689"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Unused?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-08T21:42:03Z",
      "diff_hunk" : "@@ -0,0 +1,37 @@\n+#include <interface/wallet.h>\n+\n+#include <interface/handler.h>\n+#include <rpc/server.h>\n+#include <util.h>\n+#include <wallet/init.h>\n+#include <wallet/rpcwallet.h>\n+#include <wallet/wallet.h>\n+\n+#include <memory>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+class CScheduler;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173300689",
      "id" : 173300689,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzMwMDY4OQ==",
      "original_commit_id" : "9ac4cfdf91ee31dc6515ebb935b1c79457c3cc6a",
      "original_position" : 15,
      "path" : "src/interface/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 102437485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173300689",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173469241"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173469241"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The naming of `nodes` is a little confusing (would expect it to be a vector of `interface::Node` instances), especially when elements of it are named `node` in the loop below. Does `node_stats` make more sense?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-09T14:48:22Z",
      "diff_hunk" : "@@ -56,38 +57,26 @@ class PeerTablePriv\n     std::map<NodeId, int> mapNodeRows;\n \n     /** Pull a full list of peers from vNodes into our cache */\n-    void refreshPeers()\n+    void refreshPeers(interface::Node& node)\n     {\n         {\n             cachedNodeStats.clear();\n-            std::vector<CNodeStats> vstats;\n-            if(g_connman)\n-                g_connman->GetNodeStats(vstats);\n+\n+            interface::Node::NodesStats nodes;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173469241",
      "id" : 173469241,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzQ2OTI0MQ==",
      "original_commit_id" : "bcd694497a3d5b7f0d0dc3566474a31a1f48c4e7",
      "original_position" : 21,
      "path" : "src/qt/peertablemodel.cpp",
      "position" : null,
      "pull_request_review_id" : 102437485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173469241",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173487964"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173487964"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since we're passing in nullptr for `node` here, is it worth adding `&& node` to [line 306](https://github.com/bitcoin/bitcoin/blob/9cdbd195ba85b1af12fe8c55db3880df73e107ff/src/qt/rpcconsole.cpp#L306) (or something similar) to be cautious?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-09T15:51:57Z",
      "diff_hunk" : "@@ -863,7 +870,7 @@ void RPCConsole::on_lineEdit_returnPressed()\n         std::string strFilteredCmd;\n         try {\n             std::string dummy;\n-            if (!RPCParseCommandLine(dummy, cmd.toStdString(), false, &strFilteredCmd)) {\n+            if (!RPCParseCommandLine(nullptr, dummy, cmd.toStdString(), false, &strFilteredCmd)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173487964",
      "id" : 173487964,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzQ4Nzk2NA==",
      "original_commit_id" : "07cdbb757fb0513dbb3d81eab026dfb2d8961efc",
      "original_position" : 110,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : 143,
      "pull_request_review_id" : 102437485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173487964",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173501882"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173501882"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like this is already acquired as-needed in `CWallet::SetAddressBook`, but maybe this acquisition is intentional.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-09T16:39:04Z",
      "diff_hunk" : "@@ -17,15 +31,215 @@ class CScheduler;\n namespace interface {\n namespace {\n \n+class PendingWalletTxImpl : public PendingWalletTx\n+{\n+public:\n+    PendingWalletTxImpl(CWallet& wallet) : m_wallet(wallet), m_key(&wallet) {}\n+\n+    const CTransaction& get() override { return *m_wtx.tx; }\n+\n+    int64_t getVirtualSize() override { return GetVirtualTransactionSize(*m_wtx.tx); }\n+\n+    bool commit(WalletValueMap value_map,\n+        WalletOrderForm order_form,\n+        std::string from_account,\n+        std::string& reject_reason) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        m_wtx.mapValue = std::move(value_map);\n+        m_wtx.vOrderForm = std::move(order_form);\n+        m_wtx.strFromAccount = std::move(from_account);\n+        CValidationState state;\n+        if (!m_wallet.CommitTransaction(m_wtx, m_key, ::g_connman.get(), state)) {\n+            reject_reason = state.GetRejectReason();\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    CWalletTx m_wtx;\n+    CWallet& m_wallet;\n+    CReserveKey m_key;\n+};\n+\n class WalletImpl : public Wallet\n {\n public:\n     WalletImpl(CWallet& wallet) : m_wallet(wallet) {}\n \n+    bool encryptWallet(const SecureString& wallet_passphrase) override\n+    {\n+        return m_wallet.EncryptWallet(wallet_passphrase);\n+    }\n+    bool isCrypted() override { return m_wallet.IsCrypted(); }\n+    bool lock() override { return m_wallet.Lock(); }\n+    bool unlock(const SecureString& wallet_passphrase) override { return m_wallet.Unlock(wallet_passphrase); }\n+    bool isLocked() override { return m_wallet.IsLocked(); }\n+    bool changeWalletPassphrase(const SecureString& old_wallet_passphrase,\n+        const SecureString& new_wallet_passphrase) override\n+    {\n+        return m_wallet.ChangeWalletPassphrase(old_wallet_passphrase, new_wallet_passphrase);\n+    }\n+    bool backupWallet(const std::string& filename) override { return m_wallet.BackupWallet(filename); }\n+    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet.GetPubKey(address, pub_key); }\n+    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet.GetKey(address, key); }\n+    bool isSpendable(const CTxDestination& dest) override { return IsMine(m_wallet, dest) & ISMINE_SPENDABLE; }\n+    bool haveWatchOnly() override { return m_wallet.HaveWatchOnly(); };\n+    bool setAddressBook(const CTxDestination& dest, const std::string& name, const std::string& purpose) override\n+    {\n+        LOCK(m_wallet.cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173501882",
      "id" : 173501882,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzUwMTg4Mg==",
      "original_commit_id" : "c664c4365844eaf0a3244295e81c1f07d86e0b09",
      "original_position" : 83,
      "path" : "src/interface/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 102437485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173501882",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "After reading the discussion again, Concept ACK.\r\n\r\nWhile WalletModel and ClientModel were designed as an abstraction for the \"core\", they're incomplete in that regard (many direct calls bypass the abstraction), and a bit too high level (having significant logic of their own).\r\n\r\nI guess we can see this PR as introducing a perfect abstraction, with no logic of its own.\r\n\r\n@ryanofsky What do you think the future responsibilities of WalletModel and ClientModel should be? Should they be turned into logic on the core side (abstracted by the new interfaces), or just inlined into the calls sites inside the GUI?",
      "created_at" : "2018-03-09T17:29:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-371883024",
      "id" : 371883024,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-03-09T17:52:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/371883024",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @ryanofsky What do you think the future responsibilities of WalletModel and ClientModel should be? Should they be turned into logic on the core signed, abstracted by the new interfaces, or just inlined into the calls sites inside the GUI?\r\n\r\nI think if model code is just calling interface functions it should probably be inlined. But if model code is doing something useful to support the gui, like caching, it should be kept. If there is model code that makes too many assumptions about node/wallet internals, or implements functionality that could be useful for RPCs, I think it should be moved into the core and wrapped by new interfaces.\r\n\r\nExample of code that could be inlined:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/9cdbd195ba85b1af12fe8c55db3880df73e107ff/src/qt/walletmodel.cpp#L354-L366\r\n\r\nExample of code that should be kept:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/9cdbd195ba85b1af12fe8c55db3880df73e107ff/src/qt/clientmodel.cpp#L73-L86\r\n\r\nAn example of code that should be probably be moved into the core is a lot of the startup and config code in [qt/bitcoin.cpp](https://github.com/bitcoin/bitcoin/blob/9cdbd195ba85b1af12fe8c55db3880df73e107ff/src/qt/bitcoin.cpp).",
      "created_at" : "2018-03-09T18:20:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-371900598",
      "id" : 371900598,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-03-09T18:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/371900598",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173528339"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173528339"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Dead code?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-09T18:24:32Z",
      "diff_hunk" : "@@ -182,7 +186,29 @@ class NodeImpl : public Node\n     }\n     bool getNetworkActive() override { return g_connman && g_connman->GetNetworkActive(); }\n     unsigned int getTxConfirmTarget() override { CHECK_WALLET(return ::nTxConfirmTarget); }\n+    CAmount getRequiredFee(unsigned int tx_bytes) override { CHECK_WALLET(return GetRequiredFee(tx_bytes)); }\n+    CAmount getMinimumFee(unsigned int tx_bytes,\n+        const CCoinControl& coin_control,\n+        int* returned_target,\n+        FeeReason* reason) override\n+    {\n+        FeeCalculation fee_calc;\n+        CHECK_WALLET(return GetMinimumFee(tx_bytes, coin_control, ::mempool, ::feeEstimator, &fee_calc));\n+        if (returned_target) *returned_target = fee_calc.returnedTarget;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173528339",
      "id" : 173528339,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzUyODMzOQ==",
      "original_commit_id" : "a5cbfc01b6ec7dc440a0141c89b98cd39f8d60c8",
      "original_position" : 30,
      "path" : "src/interface/node.cpp",
      "position" : null,
      "pull_request_review_id" : 102437485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173528339",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173531920"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173531920"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could define a ctor here to avoid the `emplace_back`-related boilerplate above, but that's just minor style.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-09T18:37:51Z",
      "diff_hunk" : "@@ -206,6 +221,15 @@ class PendingWalletTx\n         std::string& reject_reason) = 0;\n };\n \n+//! Information about one wallet address.\n+struct WalletAddress\n+{\n+    CTxDestination dest;\n+    isminetype is_mine;\n+    std::string name;\n+    std::string purpose;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173531920",
      "id" : 173531920,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzUzMTkyMA==",
      "original_commit_id" : "9ec1240f5eba4e2663fa77aab29d1ff61e0eebc2",
      "original_position" : 58,
      "path" : "src/interface/wallet.h",
      "position" : 277,
      "pull_request_review_id" : 102437485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173531920",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173535338"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173535338"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Appears to be unused.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-09T18:50:59Z",
      "diff_hunk" : "@@ -11,6 +11,7 @@\n #include <functional>\n #include <map>\n #include <memory>\n+#include <set>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173535338",
      "id" : 173535338,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzUzNTMzOA==",
      "original_commit_id" : "ffe5e3487d9409a4ad61792e84fface90e286699",
      "original_position" : 4,
      "path" : "src/interface/wallet.h",
      "position" : null,
      "pull_request_review_id" : 102437485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173535338",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173540820"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173540820"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This may not be practical to change for legacy reasons, but I find the naming here confusing; it makes me think bool and not vector. Something like `my_txout_addresses` (and likewise for two others above) seems clearer.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-09T19:11:58Z",
      "diff_hunk" : "@@ -251,6 +288,38 @@ struct WalletBalances\n     }\n };\n \n+// Wallet transaction information.\n+struct WalletTx\n+{\n+    CTransactionRef tx;\n+    std::vector<isminetype> txin_is_mine;\n+    std::vector<isminetype> txout_is_mine;\n+    std::vector<CTxDestination> txout_address;\n+    std::vector<isminetype> txout_address_is_mine;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173540820",
      "id" : 173540820,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzU0MDgyMA==",
      "original_commit_id" : "80d9a255f65d7f647f6d86158b64c50142f32a18",
      "original_position" : 70,
      "path" : "src/interface/wallet.h",
      "position" : 312,
      "pull_request_review_id" : 102437485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173540820",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173550190"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173550190"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, nevermind; the include should stay in some files: \r\n```\r\n $ for i in Interrupt Shutdown ShutdownRequested InitParameter AppInit HelpMessageMode HelpMessage LicenseInfo; do git grep \"${i}*()\" src/qt | cut -d':' -f 1 | sort -u; done\r\n\r\nsrc/qt/bitcoin.cpp\r\nsrc/qt/bitcoingui.cpp\r\nsrc/qt/bitcoingui.h\r\nsrc/qt/splashscreen.cpp\r\nsrc/qt/winshutdownmonitor.cpp\r\nsrc/qt/utilitydialog.cpp\r\n```",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-09T19:48:21Z",
      "diff_hunk" : "@@ -27,16 +27,14 @@\n #endif\n \n #include <init.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173550190",
      "id" : 173550190,
      "in_reply_to_id" : 173273761,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzU1MDE5MA==",
      "original_commit_id" : "9cdbd195ba85b1af12fe8c55db3880df73e107ff",
      "original_position" : 3,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 3,
      "pull_request_review_id" : 102767768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173550190",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174177885"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174177885"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173528339\r\n\r\n> Dead code?\r\n\r\nThe returned_target output isn't used here but is needed a little later from `SendCoinsDialog::updateSmartFeeLabel` in the \"Remove direct bitcoin calls from qt/sendcoinsdialog.cpp\" commit.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T15:35:47Z",
      "diff_hunk" : "@@ -182,7 +186,29 @@ class NodeImpl : public Node\n     }\n     bool getNetworkActive() override { return g_connman && g_connman->GetNetworkActive(); }\n     unsigned int getTxConfirmTarget() override { CHECK_WALLET(return ::nTxConfirmTarget); }\n+    CAmount getRequiredFee(unsigned int tx_bytes) override { CHECK_WALLET(return GetRequiredFee(tx_bytes)); }\n+    CAmount getMinimumFee(unsigned int tx_bytes,\n+        const CCoinControl& coin_control,\n+        int* returned_target,\n+        FeeReason* reason) override\n+    {\n+        FeeCalculation fee_calc;\n+        CHECK_WALLET(return GetMinimumFee(tx_bytes, coin_control, ::mempool, ::feeEstimator, &fee_calc));\n+        if (returned_target) *returned_target = fee_calc.returnedTarget;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174177885",
      "id" : 174177885,
      "in_reply_to_id" : 173528339,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE3Nzg4NQ==",
      "original_commit_id" : "a5cbfc01b6ec7dc440a0141c89b98cd39f8d60c8",
      "original_position" : 30,
      "path" : "src/interface/node.cpp",
      "position" : null,
      "pull_request_review_id" : 103485677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174177885",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174177928"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174177928"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173531920\r\n\r\n> Could define a ctor here to avoid the emplace_back-related boilerplate above, but that's just minor style.\r\n\r\nNice, done in c6bf991ce90e8c290bff56f74de900f5b27af793.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T15:35:53Z",
      "diff_hunk" : "@@ -206,6 +221,15 @@ class PendingWalletTx\n         std::string& reject_reason) = 0;\n };\n \n+//! Information about one wallet address.\n+struct WalletAddress\n+{\n+    CTxDestination dest;\n+    isminetype is_mine;\n+    std::string name;\n+    std::string purpose;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174177928",
      "id" : 174177928,
      "in_reply_to_id" : 173531920,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE3NzkyOA==",
      "original_commit_id" : "9ec1240f5eba4e2663fa77aab29d1ff61e0eebc2",
      "original_position" : 58,
      "path" : "src/interface/wallet.h",
      "position" : 277,
      "pull_request_review_id" : 103485677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174177928",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174177968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174177968"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173540820\r\n\r\n> This may not be practical to change for legacy reasons, but I find the naming here confusing; it makes me think bool and not vector. Something like my_txout_addresses (and likewise for two others above) seems clearer.\r\n\r\nI think I disagree. A name like `my_txout_addresses` to me suggests a list of addresses, not a list of isminetype statuses. I think it should be pretty clear in context (e.g. `wtx.txout_is_mine[i]` or `txout_is_mine.emplace_back`) that these are vectors and not singular values, but it's not a problem to to rename the struct members if there's a different suggestion. Maybe it could be good to change the suffixes from `_is_mine` to `_isminetype` to make it clearer values are enums and not bools.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T15:35:59Z",
      "diff_hunk" : "@@ -251,6 +288,38 @@ struct WalletBalances\n     }\n };\n \n+// Wallet transaction information.\n+struct WalletTx\n+{\n+    CTransactionRef tx;\n+    std::vector<isminetype> txin_is_mine;\n+    std::vector<isminetype> txout_is_mine;\n+    std::vector<CTxDestination> txout_address;\n+    std::vector<isminetype> txout_address_is_mine;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174177968",
      "id" : 174177968,
      "in_reply_to_id" : 173540820,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE3Nzk2OA==",
      "original_commit_id" : "80d9a255f65d7f647f6d86158b64c50142f32a18",
      "original_position" : 70,
      "path" : "src/interface/wallet.h",
      "position" : 312,
      "pull_request_review_id" : 103485677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174177968",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174178024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174178024"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173273761\r\n\r\n> Seems like we should be able to remove init.h\r\n\r\nRemoved in a few places in d5c84fdb9d1b6863018a3206e33bb4d57ce2b3fa, 990f4e4503d5f0eaaa3b724d2d9a2396c57a6ff1, and 2da306b742c4487b1fbcee75ece66f1d14a5dfc0.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T15:36:07Z",
      "diff_hunk" : "@@ -27,16 +27,14 @@\n #endif\n \n #include <init.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174178024",
      "id" : 174178024,
      "in_reply_to_id" : 173273761,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE3ODAyNA==",
      "original_commit_id" : "9cdbd195ba85b1af12fe8c55db3880df73e107ff",
      "original_position" : 3,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 3,
      "pull_request_review_id" : 103485677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174178024",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174178060"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174178060"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173469241\r\n\r\n> The naming of nodes is a little confusing\r\n\r\nRenamed `node` and `nodes` in 2504665640b434fd150ffe0f04f7a3aade7de8d4.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T15:36:14Z",
      "diff_hunk" : "@@ -56,38 +57,26 @@ class PeerTablePriv\n     std::map<NodeId, int> mapNodeRows;\n \n     /** Pull a full list of peers from vNodes into our cache */\n-    void refreshPeers()\n+    void refreshPeers(interface::Node& node)\n     {\n         {\n             cachedNodeStats.clear();\n-            std::vector<CNodeStats> vstats;\n-            if(g_connman)\n-                g_connman->GetNodeStats(vstats);\n+\n+            interface::Node::NodesStats nodes;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174178060",
      "id" : 174178060,
      "in_reply_to_id" : 173469241,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE3ODA2MA==",
      "original_commit_id" : "bcd694497a3d5b7f0d0dc3566474a31a1f48c4e7",
      "original_position" : 21,
      "path" : "src/qt/peertablemodel.cpp",
      "position" : null,
      "pull_request_review_id" : 103485677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174178060",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174178105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174178105"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173487964\r\n\r\n> Since we're passing in nullptr for node here, is it worth adding && node to line 306 (or something similar) to be cautious?\r\n\r\nWent with an assert in a0fa93d471a9deb986e4207dd09f679b655cae49",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T15:36:21Z",
      "diff_hunk" : "@@ -863,7 +870,7 @@ void RPCConsole::on_lineEdit_returnPressed()\n         std::string strFilteredCmd;\n         try {\n             std::string dummy;\n-            if (!RPCParseCommandLine(dummy, cmd.toStdString(), false, &strFilteredCmd)) {\n+            if (!RPCParseCommandLine(nullptr, dummy, cmd.toStdString(), false, &strFilteredCmd)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174178105",
      "id" : 174178105,
      "in_reply_to_id" : 173487964,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE3ODEwNQ==",
      "original_commit_id" : "07cdbb757fb0513dbb3d81eab026dfb2d8961efc",
      "original_position" : 110,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : 143,
      "pull_request_review_id" : 103485677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174178105",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174179009"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174179009"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173535338\r\n\r\n> Appears to be unused.\r\n\r\nRemoved in 113a1bc44fa1df87e494b71ae5dd53567ab72f30\r\n\r\n",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T15:38:44Z",
      "diff_hunk" : "@@ -11,6 +11,7 @@\n #include <functional>\n #include <map>\n #include <memory>\n+#include <set>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174179009",
      "id" : 174179009,
      "in_reply_to_id" : 173535338,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE3OTAwOQ==",
      "original_commit_id" : "ffe5e3487d9409a4ad61792e84fface90e286699",
      "original_position" : 4,
      "path" : "src/interface/wallet.h",
      "position" : null,
      "pull_request_review_id" : 103485677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174179009",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174179493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174179493"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173501882\r\n\r\n> Looks like this is already acquired as-needed in CWallet::SetAddressBook, but maybe this acquisition is intentional.\r\n\r\nGood catch, removed locks in setAddressBook and delAddressBook in \r\n7fcc6e43025fb2692acdd722dab2ef9598711377 and a25886384f7c2e3f5b2f86ef28fd86d4ccc7e3d7.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T15:39:59Z",
      "diff_hunk" : "@@ -17,15 +31,215 @@ class CScheduler;\n namespace interface {\n namespace {\n \n+class PendingWalletTxImpl : public PendingWalletTx\n+{\n+public:\n+    PendingWalletTxImpl(CWallet& wallet) : m_wallet(wallet), m_key(&wallet) {}\n+\n+    const CTransaction& get() override { return *m_wtx.tx; }\n+\n+    int64_t getVirtualSize() override { return GetVirtualTransactionSize(*m_wtx.tx); }\n+\n+    bool commit(WalletValueMap value_map,\n+        WalletOrderForm order_form,\n+        std::string from_account,\n+        std::string& reject_reason) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        m_wtx.mapValue = std::move(value_map);\n+        m_wtx.vOrderForm = std::move(order_form);\n+        m_wtx.strFromAccount = std::move(from_account);\n+        CValidationState state;\n+        if (!m_wallet.CommitTransaction(m_wtx, m_key, ::g_connman.get(), state)) {\n+            reject_reason = state.GetRejectReason();\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    CWalletTx m_wtx;\n+    CWallet& m_wallet;\n+    CReserveKey m_key;\n+};\n+\n class WalletImpl : public Wallet\n {\n public:\n     WalletImpl(CWallet& wallet) : m_wallet(wallet) {}\n \n+    bool encryptWallet(const SecureString& wallet_passphrase) override\n+    {\n+        return m_wallet.EncryptWallet(wallet_passphrase);\n+    }\n+    bool isCrypted() override { return m_wallet.IsCrypted(); }\n+    bool lock() override { return m_wallet.Lock(); }\n+    bool unlock(const SecureString& wallet_passphrase) override { return m_wallet.Unlock(wallet_passphrase); }\n+    bool isLocked() override { return m_wallet.IsLocked(); }\n+    bool changeWalletPassphrase(const SecureString& old_wallet_passphrase,\n+        const SecureString& new_wallet_passphrase) override\n+    {\n+        return m_wallet.ChangeWalletPassphrase(old_wallet_passphrase, new_wallet_passphrase);\n+    }\n+    bool backupWallet(const std::string& filename) override { return m_wallet.BackupWallet(filename); }\n+    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet.GetPubKey(address, pub_key); }\n+    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet.GetKey(address, key); }\n+    bool isSpendable(const CTxDestination& dest) override { return IsMine(m_wallet, dest) & ISMINE_SPENDABLE; }\n+    bool haveWatchOnly() override { return m_wallet.HaveWatchOnly(); };\n+    bool setAddressBook(const CTxDestination& dest, const std::string& name, const std::string& purpose) override\n+    {\n+        LOCK(m_wallet.cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174179493",
      "id" : 174179493,
      "in_reply_to_id" : 173501882,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE3OTQ5Mw==",
      "original_commit_id" : "c664c4365844eaf0a3244295e81c1f07d86e0b09",
      "original_position" : 83,
      "path" : "src/interface/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 103485677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174179493",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174180418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174180418"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173300689\r\n\r\n> Unused?\r\n\r\nRemoved in 3495f5a3a1f3fe587f9013442084a77955c3564b. I think this somehow got pulled in from my changes in #10973.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T15:42:18Z",
      "diff_hunk" : "@@ -0,0 +1,37 @@\n+#include <interface/wallet.h>\n+\n+#include <interface/handler.h>\n+#include <rpc/server.h>\n+#include <util.h>\n+#include <wallet/init.h>\n+#include <wallet/rpcwallet.h>\n+#include <wallet/wallet.h>\n+\n+#include <memory>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+class CScheduler;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174180418",
      "id" : 174180418,
      "in_reply_to_id" : 173300689,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE4MDQxOA==",
      "original_commit_id" : "9ac4cfdf91ee31dc6515ebb935b1c79457c3cc6a",
      "original_position" : 15,
      "path" : "src/interface/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 103485677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174180418",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174181038"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174181038"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173285690\r\n\r\n> Needs override?\r\n\r\nAdded in 2a2c549eb7c45cff1ef21a9b1b3b9a5d1d1cec37.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T15:43:55Z",
      "diff_hunk" : "@@ -0,0 +1,453 @@\n+#include <interface/wallet.h>\n+\n+#include <amount.h>\n+#include <chain.h>\n+#include <consensus/validation.h>\n+#include <interface/handler.h>\n+#include <net.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <rpc/server.h>\n+#include <script/ismine.h>\n+#include <script/standard.h>\n+#include <support/allocators/secure.h>\n+#include <sync.h>\n+#include <timedata.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <wallet/feebumper.h>\n+#include <wallet/init.h>\n+#include <wallet/rpcwallet.h>\n+#include <wallet/wallet.h>\n+\n+#include <memory>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+class CScheduler;\n+\n+namespace interface {\n+namespace {\n+\n+class PendingWalletTxImpl : public PendingWalletTx\n+{\n+public:\n+    PendingWalletTxImpl(CWallet& wallet) : m_wallet(wallet), m_key(&wallet) {}\n+\n+    const CTransaction& get() override { return *m_wtx.tx; }\n+\n+    int64_t getVirtualSize() override { return GetVirtualTransactionSize(*m_wtx.tx); }\n+\n+    bool commit(WalletValueMap value_map,\n+        WalletOrderForm order_form,\n+        std::string from_account,\n+        std::string& reject_reason) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        m_wtx.mapValue = std::move(value_map);\n+        m_wtx.vOrderForm = std::move(order_form);\n+        m_wtx.strFromAccount = std::move(from_account);\n+        CValidationState state;\n+        if (!m_wallet.CommitTransaction(m_wtx, m_key, ::g_connman.get(), state)) {\n+            reject_reason = state.GetRejectReason();\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    CWalletTx m_wtx;\n+    CWallet& m_wallet;\n+    CReserveKey m_key;\n+};\n+\n+//! Construct wallet tx struct.\n+WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n+{\n+    WalletTx result;\n+    result.tx = wtx.tx;\n+    result.txin_is_mine.reserve(wtx.tx->vin.size());\n+    for (const auto& txin : wtx.tx->vin) {\n+        result.txin_is_mine.emplace_back(wallet.IsMine(txin));\n+    }\n+    result.txout_is_mine.reserve(wtx.tx->vout.size());\n+    result.txout_address.reserve(wtx.tx->vout.size());\n+    result.txout_address_is_mine.reserve(wtx.tx->vout.size());\n+    for (const auto& txout : wtx.tx->vout) {\n+        result.txout_is_mine.emplace_back(wallet.IsMine(txout));\n+        result.txout_address.emplace_back();\n+        result.txout_address_is_mine.emplace_back(ExtractDestination(txout.scriptPubKey, result.txout_address.back()) ?\n+                                                      IsMine(wallet, result.txout_address.back()) :\n+                                                      ISMINE_NO);\n+    }\n+    result.credit = wtx.GetCredit(ISMINE_ALL);\n+    result.debit = wtx.GetDebit(ISMINE_ALL);\n+    result.change = wtx.GetChange();\n+    result.time = wtx.GetTxTime();\n+    result.value_map = wtx.mapValue;\n+    result.is_coinbase = wtx.IsCoinBase();\n+    return result;\n+}\n+\n+//! Construct wallet tx status struct.\n+WalletTxStatus MakeWalletTxStatus(const CWalletTx& wtx)\n+{\n+    WalletTxStatus result;\n+    auto mi = ::mapBlockIndex.find(wtx.hashBlock);\n+    CBlockIndex* block = mi != ::mapBlockIndex.end() ? mi->second : nullptr;\n+    result.block_height = (block ? block->nHeight : std::numeric_limits<int>::max()),\n+    result.blocks_to_maturity = wtx.GetBlocksToMaturity();\n+    result.depth_in_main_chain = wtx.GetDepthInMainChain();\n+    result.request_count = wtx.GetRequestCount();\n+    result.time_received = wtx.nTimeReceived;\n+    result.lock_time = wtx.tx->nLockTime;\n+    result.is_final = CheckFinalTx(*wtx.tx);\n+    result.is_trusted = wtx.IsTrusted();\n+    result.is_abandoned = wtx.isAbandoned();\n+    result.is_coinbase = wtx.IsCoinBase();\n+    result.is_in_main_chain = wtx.IsInMainChain();\n+    return result;\n+}\n+\n+//! Construct wallet TxOut struct.\n+WalletTxOut MakeWalletTxOut(CWallet& wallet, const CWalletTx& wtx, int n, int depth)\n+{\n+    WalletTxOut result;\n+    result.txout = wtx.tx->vout[n];\n+    result.time = wtx.GetTxTime();\n+    result.depth_in_main_chain = depth;\n+    result.is_spent = wallet.IsSpent(wtx.GetHash(), n);\n+    return result;\n+}\n+\n+class WalletImpl : public Wallet\n+{\n+public:\n+    WalletImpl(CWallet& wallet) : m_wallet(wallet) {}\n+\n+    bool encryptWallet(const SecureString& wallet_passphrase) override\n+    {\n+        return m_wallet.EncryptWallet(wallet_passphrase);\n+    }\n+    bool isCrypted() override { return m_wallet.IsCrypted(); }\n+    bool lock() override { return m_wallet.Lock(); }\n+    bool unlock(const SecureString& wallet_passphrase) override { return m_wallet.Unlock(wallet_passphrase); }\n+    bool isLocked() override { return m_wallet.IsLocked(); }\n+    bool changeWalletPassphrase(const SecureString& old_wallet_passphrase,\n+        const SecureString& new_wallet_passphrase) override\n+    {\n+        return m_wallet.ChangeWalletPassphrase(old_wallet_passphrase, new_wallet_passphrase);\n+    }\n+    bool backupWallet(const std::string& filename) override { return m_wallet.BackupWallet(filename); }\n+    bool getKeyFromPool(bool internal, CPubKey& pub_key) override\n+    {\n+        return m_wallet.GetKeyFromPool(pub_key, internal);\n+    }\n+    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet.GetPubKey(address, pub_key); }\n+    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet.GetKey(address, key); }\n+    bool isSpendable(const CTxDestination& dest) override { return IsMine(m_wallet, dest) & ISMINE_SPENDABLE; }\n+    bool haveWatchOnly() override { return m_wallet.HaveWatchOnly(); };\n+    bool setAddressBook(const CTxDestination& dest, const std::string& name, const std::string& purpose) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        return m_wallet.SetAddressBook(dest, name, purpose);\n+    }\n+    bool delAddressBook(const CTxDestination& dest) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        return m_wallet.DelAddressBook(dest);\n+    }\n+    bool getAddress(const CTxDestination& dest, std::string* name, isminetype* is_mine) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        auto it = m_wallet.mapAddressBook.find(dest);\n+        if (it == m_wallet.mapAddressBook.end()) {\n+            return false;\n+        }\n+        if (name) {\n+            *name = it->second.name;\n+        }\n+        if (is_mine) {\n+            *is_mine = IsMine(m_wallet, dest);\n+        }\n+        return true;\n+    }\n+    std::vector<WalletAddress> getAddresses() override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        std::vector<WalletAddress> result;\n+        for (const auto& item : m_wallet.mapAddressBook) {\n+            result.emplace_back();\n+            result.back().dest = item.first;\n+            result.back().is_mine = IsMine(m_wallet, item.first);\n+            result.back().name = item.second.name;\n+            result.back().purpose = item.second.purpose;\n+        }\n+        return result;\n+    }\n+    void learnRelatedScripts(const CPubKey& key, OutputType type) override { m_wallet.LearnRelatedScripts(key, type); }\n+    bool addDestData(const CTxDestination& dest, const std::string& key, const std::string& value) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        return m_wallet.AddDestData(dest, key, value);\n+    }\n+    bool eraseDestData(const CTxDestination& dest, const std::string& key) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        return m_wallet.EraseDestData(dest, key);\n+    }\n+    std::vector<std::string> getDestValues(const std::string& prefix) override\n+    {\n+        return m_wallet.GetDestValues(prefix);\n+    }\n+    void lockCoin(const COutPoint& output) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.LockCoin(output);\n+    }\n+    void unlockCoin(const COutPoint& output) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.UnlockCoin(output);\n+    }\n+    bool isLockedCoin(const COutPoint& output) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.IsLockedCoin(output.hash, output.n);\n+    }\n+    void listLockedCoins(std::vector<COutPoint>& outputs) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.ListLockedCoins(outputs);\n+    }\n+    std::unique_ptr<PendingWalletTx> createTransaction(const std::vector<CRecipient>& recipients,\n+        const CCoinControl& coin_control,\n+        bool sign,\n+        int& change_pos,\n+        CAmount& fee,\n+        std::string& fail_reason) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto pending = MakeUnique<PendingWalletTxImpl>(m_wallet);\n+        if (!m_wallet.CreateTransaction(recipients, pending->m_wtx, pending->m_key, fee, change_pos,\n+                fail_reason, coin_control, sign)) {\n+            return {};\n+        }\n+        return std::move(pending);\n+    }\n+    bool transactionCanBeAbandoned(const uint256& txid) override { return m_wallet.TransactionCanBeAbandoned(txid); }\n+    bool abandonTransaction(const uint256& txid) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.AbandonTransaction(txid);\n+    }\n+    bool transactionCanBeBumped(const uint256& txid) override\n+    {\n+        return feebumper::TransactionCanBeBumped(&m_wallet, txid);\n+    }\n+    bool createBumpTransaction(const uint256& txid,\n+        const CCoinControl& coin_control,\n+        CAmount total_fee,\n+        std::vector<std::string>& errors,\n+        CAmount& old_fee,\n+        CAmount& new_fee,\n+        CMutableTransaction& mtx) override\n+    {\n+        return feebumper::CreateTransaction(&m_wallet, txid, coin_control, total_fee, errors, old_fee, new_fee, mtx) ==\n+               feebumper::Result::OK;\n+    }\n+    bool signBumpTransaction(CMutableTransaction& mtx) override { return feebumper::SignTransaction(&m_wallet, mtx); }\n+    bool commitBumpTransaction(const uint256& txid,\n+        CMutableTransaction&& mtx,\n+        std::vector<std::string>& errors,\n+        uint256& bumped_txid) override\n+    {\n+        return feebumper::CommitTransaction(&m_wallet, txid, std::move(mtx), errors, bumped_txid) ==\n+               feebumper::Result::OK;\n+    }\n+    CTransactionRef getTx(const uint256& txid) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto mi = m_wallet.mapWallet.find(txid);\n+        if (mi != m_wallet.mapWallet.end()) {\n+            return mi->second.tx;\n+        }\n+        return {};\n+    }\n+    WalletTx getWalletTx(const uint256& txid) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto mi = m_wallet.mapWallet.find(txid);\n+        if (mi != m_wallet.mapWallet.end()) {\n+            return MakeWalletTx(m_wallet, mi->second);\n+        }\n+        return {};\n+    }\n+    std::vector<WalletTx> getWalletTxs() override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        std::vector<WalletTx> result;\n+        result.reserve(m_wallet.mapWallet.size());\n+        for (const auto& entry : m_wallet.mapWallet) {\n+            result.emplace_back(MakeWalletTx(m_wallet, entry.second));\n+        }\n+        return result;\n+    }\n+    bool tryGetTxStatus(const uint256& txid,\n+        interface::WalletTxStatus& tx_status,\n+        int& num_blocks,\n+        int64_t& adjusted_time) override\n+    {\n+        TRY_LOCK(::cs_main, locked_chain);\n+        if (!locked_chain) {\n+            return false;\n+        }\n+        TRY_LOCK(m_wallet.cs_wallet, locked_wallet);\n+        if (!locked_wallet) {\n+            return false;\n+        }\n+        auto mi = m_wallet.mapWallet.find(txid);\n+        if (mi == m_wallet.mapWallet.end()) {\n+            return false;\n+        }\n+        num_blocks = ::chainActive.Height();\n+        adjusted_time = GetAdjustedTime();\n+        tx_status = MakeWalletTxStatus(mi->second);\n+        return true;\n+    }\n+    WalletTx getWalletTxDetails(const uint256& txid,\n+        WalletTxStatus& tx_status,\n+        WalletOrderForm& order_form,\n+        bool& in_mempool,\n+        int& num_blocks,\n+        int64_t& adjusted_time) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto mi = m_wallet.mapWallet.find(txid);\n+        if (mi != m_wallet.mapWallet.end()) {\n+            num_blocks = ::chainActive.Height();\n+            adjusted_time = GetAdjustedTime();\n+            in_mempool = mi->second.InMempool();\n+            order_form = mi->second.vOrderForm;\n+            tx_status = MakeWalletTxStatus(mi->second);\n+            return MakeWalletTx(m_wallet, mi->second);\n+        }\n+        return {};\n+    }\n+    WalletBalances getBalances() override\n+    {\n+        WalletBalances result;\n+        result.balance = m_wallet.GetBalance();\n+        result.unconfirmed_balance = m_wallet.GetUnconfirmedBalance();\n+        result.immature_balance = m_wallet.GetImmatureBalance();\n+        result.have_watch_only = m_wallet.HaveWatchOnly();\n+        if (result.have_watch_only) {\n+            result.watch_only_balance = m_wallet.GetWatchOnlyBalance();\n+            result.unconfirmed_watch_only_balance = m_wallet.GetUnconfirmedWatchOnlyBalance();\n+            result.immature_watch_only_balance = m_wallet.GetImmatureWatchOnlyBalance();\n+        }\n+        return result;\n+    }\n+    bool tryGetBalances(WalletBalances& balances, int& num_blocks) override\n+    {\n+        TRY_LOCK(::cs_main, locked_chain);\n+        if (!locked_chain) return false;\n+        TRY_LOCK(m_wallet.cs_wallet, locked_wallet);\n+        if (!locked_wallet) {\n+            return false;\n+        }\n+        balances = getBalances();\n+        num_blocks = ::chainActive.Height();\n+        return true;\n+    }\n+    CAmount getBalance() override { return m_wallet.GetBalance(); }\n+    CAmount getAvailableBalance(const CCoinControl& coin_control) override\n+    {\n+        return m_wallet.GetAvailableBalance(&coin_control);\n+    }\n+    isminetype txinIsMine(const CTxIn& txin) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.IsMine(txin);\n+    }\n+    isminetype txoutIsMine(const CTxOut& txout) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.IsMine(txout);\n+    }\n+    CAmount getDebit(const CTxIn& txin, isminefilter filter) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.GetDebit(txin, filter);\n+    }\n+    CAmount getCredit(const CTxOut& txout, isminefilter filter) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        return m_wallet.GetCredit(txout, filter);\n+    }\n+    CoinsList listCoins() override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        CoinsList result;\n+        for (const auto& entry : m_wallet.ListCoins()) {\n+            auto& group = result[entry.first];\n+            for (const auto& coin : entry.second) {\n+                group.emplace_back(\n+                    COutPoint(coin.tx->GetHash(), coin.i), MakeWalletTxOut(m_wallet, *coin.tx, coin.i, coin.nDepth));\n+            }\n+        }\n+        return result;\n+    }\n+    std::vector<WalletTxOut> getCoins(const std::vector<COutPoint>& outputs) override\n+    {\n+        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        std::vector<WalletTxOut> result;\n+        result.reserve(outputs.size());\n+        for (const auto& output : outputs) {\n+            result.emplace_back();\n+            auto it = m_wallet.mapWallet.find(output.hash);\n+            if (it != m_wallet.mapWallet.end()) {\n+                int depth = it->second.GetDepthInMainChain();\n+                if (depth >= 0) {\n+                    result.back() = MakeWalletTxOut(m_wallet, it->second, output.n, depth);\n+                }\n+            }\n+        }\n+        return result;\n+    }\n+    bool hdEnabled() override { return m_wallet.IsHDEnabled(); }\n+    OutputType getDefaultAddressType() { return g_address_type; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174181038",
      "id" : 174181038,
      "in_reply_to_id" : 173285690,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE4MTAzOA==",
      "original_commit_id" : "9cdbd195ba85b1af12fe8c55db3880df73e107ff",
      "original_position" : 421,
      "path" : "src/interface/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 103485677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174181038",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174266521"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174266521"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah sorry, what I meant was that, because of the way `CHECK_WALLET` works, it doesn't look like we'll ever make it to this line or the one below it.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T20:04:43Z",
      "diff_hunk" : "@@ -182,7 +186,29 @@ class NodeImpl : public Node\n     }\n     bool getNetworkActive() override { return g_connman && g_connman->GetNetworkActive(); }\n     unsigned int getTxConfirmTarget() override { CHECK_WALLET(return ::nTxConfirmTarget); }\n+    CAmount getRequiredFee(unsigned int tx_bytes) override { CHECK_WALLET(return GetRequiredFee(tx_bytes)); }\n+    CAmount getMinimumFee(unsigned int tx_bytes,\n+        const CCoinControl& coin_control,\n+        int* returned_target,\n+        FeeReason* reason) override\n+    {\n+        FeeCalculation fee_calc;\n+        CHECK_WALLET(return GetMinimumFee(tx_bytes, coin_control, ::mempool, ::feeEstimator, &fee_calc));\n+        if (returned_target) *returned_target = fee_calc.returnedTarget;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174266521",
      "id" : 174266521,
      "in_reply_to_id" : 173528339,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDI2NjUyMQ==",
      "original_commit_id" : "a5cbfc01b6ec7dc440a0141c89b98cd39f8d60c8",
      "original_position" : 30,
      "path" : "src/interface/node.cpp",
      "position" : null,
      "pull_request_review_id" : 103591576,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174266521",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174266882"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174266882"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, you're totally right; I misunderstood the content of these vectors. Thanks for the clarification.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T20:06:09Z",
      "diff_hunk" : "@@ -251,6 +288,38 @@ struct WalletBalances\n     }\n };\n \n+// Wallet transaction information.\n+struct WalletTx\n+{\n+    CTransactionRef tx;\n+    std::vector<isminetype> txin_is_mine;\n+    std::vector<isminetype> txout_is_mine;\n+    std::vector<CTxDestination> txout_address;\n+    std::vector<isminetype> txout_address_is_mine;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174266882",
      "id" : 174266882,
      "in_reply_to_id" : 173540820,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDI2Njg4Mg==",
      "original_commit_id" : "80d9a255f65d7f647f6d86158b64c50142f32a18",
      "original_position" : 70,
      "path" : "src/interface/wallet.h",
      "position" : 312,
      "pull_request_review_id" : 103592057,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174266882",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174278109"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174278109"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173528339\r\n\r\n> Ah sorry, what I meant was that, because of the way CHECK_WALLET works, it doesn't look like we'll ever make it to this line or the one below it.\r\n\r\n:man_facepalming: Good catch, fixed in 8aced6d22ddf6cf2af6ed02ad8344b583c238b9f",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T20:45:36Z",
      "diff_hunk" : "@@ -182,7 +186,29 @@ class NodeImpl : public Node\n     }\n     bool getNetworkActive() override { return g_connman && g_connman->GetNetworkActive(); }\n     unsigned int getTxConfirmTarget() override { CHECK_WALLET(return ::nTxConfirmTarget); }\n+    CAmount getRequiredFee(unsigned int tx_bytes) override { CHECK_WALLET(return GetRequiredFee(tx_bytes)); }\n+    CAmount getMinimumFee(unsigned int tx_bytes,\n+        const CCoinControl& coin_control,\n+        int* returned_target,\n+        FeeReason* reason) override\n+    {\n+        FeeCalculation fee_calc;\n+        CHECK_WALLET(return GetMinimumFee(tx_bytes, coin_control, ::mempool, ::feeEstimator, &fee_calc));\n+        if (returned_target) *returned_target = fee_calc.returnedTarget;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174278109",
      "id" : 174278109,
      "in_reply_to_id" : 173528339,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDI3ODEwOQ==",
      "original_commit_id" : "a5cbfc01b6ec7dc440a0141c89b98cd39f8d60c8",
      "original_position" : 30,
      "path" : "src/interface/node.cpp",
      "position" : null,
      "pull_request_review_id" : 103605462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174278109",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174292493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174292493"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r173528339\r\n\r\nPrevious comment looks a little odd in gmail. Github apparently tries to render `:man_facepalming:` as `['FACE PALM', 'ZERO WIDTH JOINER', 'MALE SIGN', 'VARIATION SELECTOR-16']` in unicode.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-13T21:35:43Z",
      "diff_hunk" : "@@ -182,7 +186,29 @@ class NodeImpl : public Node\n     }\n     bool getNetworkActive() override { return g_connman && g_connman->GetNetworkActive(); }\n     unsigned int getTxConfirmTarget() override { CHECK_WALLET(return ::nTxConfirmTarget); }\n+    CAmount getRequiredFee(unsigned int tx_bytes) override { CHECK_WALLET(return GetRequiredFee(tx_bytes)); }\n+    CAmount getMinimumFee(unsigned int tx_bytes,\n+        const CCoinControl& coin_control,\n+        int* returned_target,\n+        FeeReason* reason) override\n+    {\n+        FeeCalculation fee_calc;\n+        CHECK_WALLET(return GetMinimumFee(tx_bytes, coin_control, ::mempool, ::feeEstimator, &fee_calc));\n+        if (returned_target) *returned_target = fee_calc.returnedTarget;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174292493",
      "id" : 174292493,
      "in_reply_to_id" : 173528339,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDI5MjQ5Mw==",
      "original_commit_id" : "a5cbfc01b6ec7dc440a0141c89b98cd39f8d60c8",
      "original_position" : 30,
      "path" : "src/interface/node.cpp",
      "position" : null,
      "pull_request_review_id" : 103622356,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174292493",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174503950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174503950"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested that custom config files still work.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T15:36:23Z",
      "diff_hunk" : "@@ -0,0 +1,49 @@\n+#include <interface/node.h>\n+\n+#include <chainparams.h>\n+#include <init.h>\n+#include <interface/handler.h>\n+#include <scheduler.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <warnings.h>\n+\n+#include <boost/thread/thread.hpp>\n+\n+namespace interface {\n+namespace {\n+\n+class NodeImpl : public Node\n+{\n+    void parseParameters(int argc, const char* const argv[]) override\n+    {\n+        gArgs.ParseParameters(argc, argv);\n+    }\n+    void readConfigFile(const std::string& conf_path) override { gArgs.ReadConfigFile(conf_path); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174503950",
      "id" : 174503950,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDUwMzk1MA==",
      "original_commit_id" : "fc7de6d6fb8a73347f7bc97d57634e4627c66c2e",
      "original_position" : 22,
      "path" : "src/interface/node.cpp",
      "position" : 55,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174503950",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174512732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174512732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: this comment disappeared?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T15:58:54Z",
      "diff_hunk" : "@@ -178,11 +180,7 @@ class BitcoinCore: public QObject\n {\n     Q_OBJECT\n public:\n-    explicit BitcoinCore();\n-    /** Basic initialization, before starting initialization/shutdown thread.\n-     * Return true on success.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174512732",
      "id" : 174512732,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDUxMjczMg==",
      "original_commit_id" : "fc7de6d6fb8a73347f7bc97d57634e4627c66c2e",
      "original_position" : 15,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 23,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174512732",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174514197"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174514197"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice & short :-)",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T16:02:47Z",
      "diff_hunk" : "@@ -0,0 +1,49 @@\n+#include <interface/node.h>\n+\n+#include <chainparams.h>\n+#include <init.h>\n+#include <interface/handler.h>\n+#include <scheduler.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <warnings.h>\n+\n+#include <boost/thread/thread.hpp>\n+\n+namespace interface {\n+namespace {\n+\n+class NodeImpl : public Node\n+{\n+    void parseParameters(int argc, const char* const argv[]) override\n+    {\n+        gArgs.ParseParameters(argc, argv);\n+    }\n+    void readConfigFile(const std::string& conf_path) override { gArgs.ReadConfigFile(conf_path); }\n+    void selectParams(const std::string& network) override { SelectParams(network); }\n+    void initLogging() override { InitLogging(); }\n+    void initParameterInteraction() override { InitParameterInteraction(); }\n+    std::string getWarnings(const std::string& type) override { return GetWarnings(type); }\n+    bool baseInitialize() override\n+    {\n+        return AppInitBasicSetup() && AppInitParameterInteraction() && AppInitSanityChecks() &&\n+               AppInitLockDataDirectory();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174514197",
      "id" : 174514197,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDUxNDE5Nw==",
      "original_commit_id" : "fc7de6d6fb8a73347f7bc97d57634e4627c66c2e",
      "original_position" : 30,
      "path" : "src/interface/node.cpp",
      "position" : null,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174514197",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174515903"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174515903"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since this is inside a `try {} catch` it means exceptions can bubble up through the interface. Would that be useful to document in the interface header? Or should that be obvious?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T16:07:27Z",
      "diff_hunk" : "@@ -313,8 +292,7 @@ void BitcoinCore::shutdown()\n     try\n     {\n         qDebug() << __func__ << \": Running Shutdown in thread\";\n-        Interrupt();\n-        Shutdown();\n+        m_node.appShutdown();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174515903",
      "id" : 174515903,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDUxNTkwMw==",
      "original_commit_id" : "fc7de6d6fb8a73347f7bc97d57634e4627c66c2e",
      "original_position" : 106,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 114,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174515903",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174545814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174545814"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested that this still behaves, i.e. parameters override QT setting.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T17:31:49Z",
      "diff_hunk" : "@@ -108,27 +103,27 @@ void OptionsModel::Init(bool resetSettings)\n #ifdef ENABLE_WALLET\n     if (!settings.contains(\"bSpendZeroConfChange\"))\n         settings.setValue(\"bSpendZeroConfChange\", true);\n-    if (!gArgs.SoftSetBoolArg(\"-spendzeroconfchange\", settings.value(\"bSpendZeroConfChange\").toBool()))\n+    if (!m_node.softSetBoolArg(\"-spendzeroconfchange\", settings.value(\"bSpendZeroConfChange\").toBool()))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174545814",
      "id" : 174545814,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU0NTgxNA==",
      "original_commit_id" : "a98a9813678eb885ddf2cd128390e1f33e0d8f31",
      "original_position" : 50,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : 50,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174545814",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174548381"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174548381"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I didn't test, but refactor looks correct.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T17:39:27Z",
      "diff_hunk" : "@@ -315,12 +310,7 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             break;\n         case MapPortUPnP: // core option - can be changed on-the-fly\n             settings.setValue(\"fUseUPnP\", value.toBool());\n-            if (value.toBool()) {\n-                StartMapPort();\n-            } else {\n-                InterruptMapPort();\n-                StopMapPort();\n-            }\n+            m_node.mapPort(value.toBool());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174548381",
      "id" : 174548381,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU0ODM4MQ==",
      "original_commit_id" : "a98a9813678eb885ddf2cd128390e1f33e0d8f31",
      "original_position" : 105,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : 105,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174548381",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174555079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174555079"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested that `-version` and `--help` still work",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T17:59:03Z",
      "diff_hunk" : "@@ -588,7 +588,7 @@ int main(int argc, char *argv[])\n     // but before showing splash screen.\n     if (gArgs.IsArgSet(\"-?\") || gArgs.IsArgSet(\"-h\") || gArgs.IsArgSet(\"-help\") || gArgs.IsArgSet(\"-version\"))\n     {\n-        HelpMessageDialog help(nullptr, gArgs.IsArgSet(\"-version\"));\n+        HelpMessageDialog help(*node, nullptr, gArgs.IsArgSet(\"-version\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174555079",
      "id" : 174555079,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU1NTA3OQ==",
      "original_commit_id" : "2f54f5ae95c004848d66cb5c4683e12f28543d0f",
      "original_position" : 5,
      "path" : "src/qt/bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174555079",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174557154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174557154"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested that \"forgetting\" `#ifdef ENABLE_WALLET` around a `handleLoadWallet` call indeed makes the compiler fail, although it may have failed due to something else. The error isn't very clear:\r\n\r\n```\r\nUndefined symbols for architecture x86_64:\r\n  \"SplashScreen::ConnectWallet(std::__1::unique_ptr<interface::Wallet, std::__1::default_delete<interface::Wallet> >)\", referenced from:\r\n      std::__1::__function::__func<SplashScreen::subscribeToCoreSignals()::$_0, std::__1::allocator<SplashScreen::subscribeToCoreSignals()::$_0>, void (std::__1::unique_ptr<interface::Wallet, std::__1::default_delete<interface::Wallet> >)>::operator()(std::__1::unique_ptr<interface::Wallet, std::__1::default_delete<interface::Wallet> >&&) in libbitcoinqt.a(libbitcoinqt_a-splashscreen.o)\r\nld: symbol(s) not found for architecture x86_64\r\n```\r\n\r\n Also checked that QT still works with `--disable-wallet`.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T18:04:46Z",
      "diff_hunk" : "@@ -65,6 +77,15 @@ class NodeImpl : public Node\n     {\n         return MakeHandler(::uiInterface.ThreadSafeQuestion.connect(fn));\n     }\n+    std::unique_ptr<Handler> handleShowProgress(ShowProgressFn fn) override\n+    {\n+        return MakeHandler(::uiInterface.ShowProgress.connect(fn));\n+    }\n+    std::unique_ptr<Handler> handleLoadWallet(LoadWalletFn fn) override\n+    {\n+        CHECK_WALLET(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174557154",
      "id" : 174557154,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU1NzE1NA==",
      "original_commit_id" : "8dc1a54f19a0a040f81eeb0077e73a568add12c0",
      "original_position" : 38,
      "path" : "src/interface/node.cpp",
      "position" : 268,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174557154",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174562060"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174562060"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested that IDB progress indicators still work. ",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T18:19:58Z",
      "diff_hunk" : "@@ -65,6 +71,56 @@ class NodeImpl : public Node\n     }\n     std::string helpMessage(HelpMessageMode mode) override { return HelpMessage(mode); }\n     bool getProxy(Network net, proxyType& proxy_info) override { return GetProxy(net, proxy_info); }\n+    size_t getNodeCount(CConnman::NumConnections flags) override\n+    {\n+        return g_connman ? g_connman->GetNodeCount(flags) : 0;\n+    }\n+    int64_t getTotalBytesRecv() override { return g_connman ? g_connman->GetTotalBytesRecv() : 0; }\n+    int64_t getTotalBytesSent() override { return g_connman ? g_connman->GetTotalBytesSent() : 0; }\n+    size_t getMempoolSize() override { return ::mempool.size(); }\n+    size_t getMempoolDynamicUsage() override { return ::mempool.DynamicMemoryUsage(); }\n+    bool getHeaderTip(int& height, int64_t& block_time) override\n+    {\n+        LOCK(::cs_main);\n+        if (::pindexBestHeader) {\n+            height = ::pindexBestHeader->nHeight;\n+            block_time = ::pindexBestHeader->GetBlockTime();\n+            return true;\n+        }\n+        return false;\n+    }\n+    int getNumBlocks() override\n+    {\n+        LOCK(::cs_main);\n+        return ::chainActive.Height();\n+    }\n+    int64_t getLastBlockTime() override\n+    {\n+        LOCK(::cs_main);\n+        if (::chainActive.Tip()) {\n+            return ::chainActive.Tip()->GetBlockTime();\n+        }\n+        return Params().GenesisBlock().GetBlockTime(); // Genesis block's time of current network\n+    }\n+    double getVerificationProgress() override\n+    {\n+        const CBlockIndex* tip;\n+        {\n+            LOCK(::cs_main);\n+            tip = ::chainActive.Tip();\n+        }\n+        return GuessVerificationProgress(::Params().TxData(), tip);\n+    }\n+    bool isInitialBlockDownload() override { return IsInitialBlockDownload(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174562060",
      "id" : 174562060,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU2MjA2MA==",
      "original_commit_id" : "bd0f3916aa1f8df73765dd9fe2f0b6c942ea61e1",
      "original_position" : 73,
      "path" : "src/interface/node.cpp",
      "position" : null,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174562060",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174562642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174562642"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested that network connections count tooltip still works and that I can toggle the connection.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T18:21:47Z",
      "diff_hunk" : "@@ -732,7 +732,7 @@ void BitcoinGUI::updateNetworkState()\n \n     QString tooltip;\n \n-    if (clientModel->getNetworkActive()) {\n+    if (m_node.getNetworkActive()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174562642",
      "id" : 174562642,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU2MjY0Mg==",
      "original_commit_id" : "bd0f3916aa1f8df73765dd9fe2f0b6c942ea61e1",
      "original_position" : 14,
      "path" : "src/qt/bitcoingui.cpp",
      "position" : 55,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174562642",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174562926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174562926"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested that peers tab still shows bytes sent / received per peer.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T18:22:34Z",
      "diff_hunk" : "@@ -65,6 +71,56 @@ class NodeImpl : public Node\n     }\n     std::string helpMessage(HelpMessageMode mode) override { return HelpMessage(mode); }\n     bool getProxy(Network net, proxyType& proxy_info) override { return GetProxy(net, proxy_info); }\n+    size_t getNodeCount(CConnman::NumConnections flags) override\n+    {\n+        return g_connman ? g_connman->GetNodeCount(flags) : 0;\n+    }\n+    int64_t getTotalBytesRecv() override { return g_connman ? g_connman->GetTotalBytesRecv() : 0; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174562926",
      "id" : 174562926,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU2MjkyNg==",
      "original_commit_id" : "bd0f3916aa1f8df73765dd9fe2f0b6c942ea61e1",
      "original_position" : 37,
      "path" : "src/interface/node.cpp",
      "position" : null,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174562926",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174564923"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174564923"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested that I'm able to ban and unban peers in the UI (TIL about that feature).",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T18:29:03Z",
      "diff_hunk" : "@@ -101,6 +102,14 @@ class NodeImpl : public Node\n         }\n         return false;\n     }\n+    bool getBanned(banmap_t& banmap) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174564923",
      "id" : 174564923,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU2NDkyMw==",
      "original_commit_id" : "a82693c0bdda423c23aa607d9c696b9c9aeff7a2",
      "original_position" : 11,
      "path" : "src/interface/node.cpp",
      "position" : null,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174564923",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174566010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174566010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Did you mean to do this ban stuff in a82693c0bdda423c23aa607d9c696b9c9aeff7a2? Or is it here because banning from the RPC console interacts with the ban table UI?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T18:32:30Z",
      "diff_hunk" : "@@ -110,6 +112,29 @@ class NodeImpl : public Node\n         }\n         return false;\n     }\n+    bool ban(const CNetAddr& net_addr, BanReason reason, int64_t ban_time_offset) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174566010",
      "id" : 174566010,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU2NjAxMA==",
      "original_commit_id" : "9b73244060ae47d7dddee1c9e63c4d1f704685cd",
      "original_position" : 20,
      "path" : "src/interface/node.cpp",
      "position" : null,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174566010",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174566638"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174566638"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested that console autocomplete still works.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T18:34:28Z",
      "diff_hunk" : "@@ -665,7 +673,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n \n         //Setup autocomplete and attach it\n         QStringList wordList;\n-        std::vector<std::string> commandList = tableRPC.listCommands();\n+        std::vector<std::string> commandList = m_node.listRpcCommands();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174566638",
      "id" : 174566638,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU2NjYzOA==",
      "original_commit_id" : "9b73244060ae47d7dddee1c9e63c4d1f704685cd",
      "original_position" : 102,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : 125,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174566638",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174594589"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174594589"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Has anyone tested a rebased #11383 or #12610 with this?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T20:09:32Z",
      "diff_hunk" : "@@ -192,6 +194,18 @@ class NodeImpl : public Node\n     std::vector<std::string> listRpcCommands() override { return ::tableRPC.listCommands(); }\n     void rpcSetTimerInterfaceIfUnset(RPCTimerInterface* iface) override { RPCSetTimerInterfaceIfUnset(iface); }\n     void rpcUnsetTimerInterface(RPCTimerInterface* iface) override { RPCUnsetTimerInterface(iface); }\n+    std::vector<std::unique_ptr<Wallet>> getWallets() override\n+    {\n+#ifdef ENABLE_WALLET\n+        std::vector<std::unique_ptr<Wallet>> wallets;\n+        for (CWalletRef wallet : ::vpwallets) {\n+            wallets.emplace_back(MakeWallet(*wallet));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174594589",
      "id" : 174594589,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU5NDU4OQ==",
      "original_commit_id" : "16123b181840d93ff2107313546e6d0fa3971583",
      "original_position" : 43,
      "path" : "src/interface/node.cpp",
      "position" : 243,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174594589",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174600167"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174600167"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I tested encrypting a wallet and using it to send.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T20:30:24Z",
      "diff_hunk" : "@@ -15,15 +29,211 @@\n namespace interface {\n namespace {\n \n+class PendingWalletTxImpl : public PendingWalletTx\n+{\n+public:\n+    PendingWalletTxImpl(CWallet& wallet) : m_wallet(wallet), m_key(&wallet) {}\n+\n+    const CTransaction& get() override { return *m_tx; }\n+\n+    int64_t getVirtualSize() override { return GetVirtualTransactionSize(*m_tx); }\n+\n+    bool commit(WalletValueMap value_map,\n+        WalletOrderForm order_form,\n+        std::string from_account,\n+        std::string& reject_reason) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        CValidationState state;\n+        if (!m_wallet.CommitTransaction(m_tx, std::move(value_map), std::move(order_form), std::move(from_account), m_key, g_connman.get(), state)) {\n+            reject_reason = state.GetRejectReason();\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    CTransactionRef m_tx;\n+    CWallet& m_wallet;\n+    CReserveKey m_key;\n+};\n+\n class WalletImpl : public Wallet\n {\n public:\n     WalletImpl(CWallet& wallet) : m_wallet(wallet) {}\n \n+    bool encryptWallet(const SecureString& wallet_passphrase) override\n+    {\n+        return m_wallet.EncryptWallet(wallet_passphrase);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174600167",
      "id" : 174600167,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDYwMDE2Nw==",
      "original_commit_id" : "16123b181840d93ff2107313546e6d0fa3971583",
      "original_position" : 62,
      "path" : "src/interface/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174600167",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174600477"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174600477"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I tested bumping the fee.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T20:31:37Z",
      "diff_hunk" : "@@ -15,15 +29,211 @@\n namespace interface {\n namespace {\n \n+class PendingWalletTxImpl : public PendingWalletTx\n+{\n+public:\n+    PendingWalletTxImpl(CWallet& wallet) : m_wallet(wallet), m_key(&wallet) {}\n+\n+    const CTransaction& get() override { return *m_tx; }\n+\n+    int64_t getVirtualSize() override { return GetVirtualTransactionSize(*m_tx); }\n+\n+    bool commit(WalletValueMap value_map,\n+        WalletOrderForm order_form,\n+        std::string from_account,\n+        std::string& reject_reason) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        CValidationState state;\n+        if (!m_wallet.CommitTransaction(m_tx, std::move(value_map), std::move(order_form), std::move(from_account), m_key, g_connman.get(), state)) {\n+            reject_reason = state.GetRejectReason();\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    CTransactionRef m_tx;\n+    CWallet& m_wallet;\n+    CReserveKey m_key;\n+};\n+\n class WalletImpl : public Wallet\n {\n public:\n     WalletImpl(CWallet& wallet) : m_wallet(wallet) {}\n \n+    bool encryptWallet(const SecureString& wallet_passphrase) override\n+    {\n+        return m_wallet.EncryptWallet(wallet_passphrase);\n+    }\n+    bool isCrypted() override { return m_wallet.IsCrypted(); }\n+    bool lock() override { return m_wallet.Lock(); }\n+    bool unlock(const SecureString& wallet_passphrase) override { return m_wallet.Unlock(wallet_passphrase); }\n+    bool isLocked() override { return m_wallet.IsLocked(); }\n+    bool changeWalletPassphrase(const SecureString& old_wallet_passphrase,\n+        const SecureString& new_wallet_passphrase) override\n+    {\n+        return m_wallet.ChangeWalletPassphrase(old_wallet_passphrase, new_wallet_passphrase);\n+    }\n+    bool backupWallet(const std::string& filename) override { return m_wallet.BackupWallet(filename); }\n+    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet.GetPubKey(address, pub_key); }\n+    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet.GetKey(address, key); }\n+    bool isSpendable(const CTxDestination& dest) override { return IsMine(m_wallet, dest) & ISMINE_SPENDABLE; }\n+    bool haveWatchOnly() override { return m_wallet.HaveWatchOnly(); };\n+    bool setAddressBook(const CTxDestination& dest, const std::string& name, const std::string& purpose) override\n+    {\n+        return m_wallet.SetAddressBook(dest, name, purpose);\n+    }\n+    bool getAddress(const CTxDestination& dest, std::string* name, isminetype* is_mine) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        auto it = m_wallet.mapAddressBook.find(dest);\n+        if (it == m_wallet.mapAddressBook.end()) {\n+            return false;\n+        }\n+        if (name) {\n+            *name = it->second.name;\n+        }\n+        if (is_mine) {\n+            *is_mine = IsMine(m_wallet, dest);\n+        }\n+        return true;\n+    }\n+    bool addDestData(const CTxDestination& dest, const std::string& key, const std::string& value) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        return m_wallet.AddDestData(dest, key, value);\n+    }\n+    bool eraseDestData(const CTxDestination& dest, const std::string& key) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        return m_wallet.EraseDestData(dest, key);\n+    }\n+    std::vector<std::string> getDestValues(const std::string& prefix) override\n+    {\n+        return m_wallet.GetDestValues(prefix);\n+    }\n+    void lockCoin(const COutPoint& output) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        return m_wallet.LockCoin(output);\n+    }\n+    void unlockCoin(const COutPoint& output) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        return m_wallet.UnlockCoin(output);\n+    }\n+    bool isLockedCoin(const COutPoint& output) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        return m_wallet.IsLockedCoin(output.hash, output.n);\n+    }\n+    void listLockedCoins(std::vector<COutPoint>& outputs) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        return m_wallet.ListLockedCoins(outputs);\n+    }\n+    std::unique_ptr<PendingWalletTx> createTransaction(const std::vector<CRecipient>& recipients,\n+        const CCoinControl& coin_control,\n+        bool sign,\n+        int& change_pos,\n+        CAmount& fee,\n+        std::string& fail_reason) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        auto pending = MakeUnique<PendingWalletTxImpl>(m_wallet);\n+        if (!m_wallet.CreateTransaction(recipients, pending->m_tx, pending->m_key, fee, change_pos,\n+                fail_reason, coin_control, sign)) {\n+            return {};\n+        }\n+        return std::move(pending);\n+    }\n+    bool transactionCanBeAbandoned(const uint256& txid) override { return m_wallet.TransactionCanBeAbandoned(txid); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174600477",
      "id" : 174600477,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDYwMDQ3Nw==",
      "original_commit_id" : "16123b181840d93ff2107313546e6d0fa3971583",
      "original_position" : 146,
      "path" : "src/interface/wallet.cpp",
      "position" : 227,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174600477",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174601016"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174601016"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I tested abandoning a transaction (after bumping it)",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T20:33:49Z",
      "diff_hunk" : "@@ -15,15 +29,211 @@\n namespace interface {\n namespace {\n \n+class PendingWalletTxImpl : public PendingWalletTx\n+{\n+public:\n+    PendingWalletTxImpl(CWallet& wallet) : m_wallet(wallet), m_key(&wallet) {}\n+\n+    const CTransaction& get() override { return *m_tx; }\n+\n+    int64_t getVirtualSize() override { return GetVirtualTransactionSize(*m_tx); }\n+\n+    bool commit(WalletValueMap value_map,\n+        WalletOrderForm order_form,\n+        std::string from_account,\n+        std::string& reject_reason) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        CValidationState state;\n+        if (!m_wallet.CommitTransaction(m_tx, std::move(value_map), std::move(order_form), std::move(from_account), m_key, g_connman.get(), state)) {\n+            reject_reason = state.GetRejectReason();\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    CTransactionRef m_tx;\n+    CWallet& m_wallet;\n+    CReserveKey m_key;\n+};\n+\n class WalletImpl : public Wallet\n {\n public:\n     WalletImpl(CWallet& wallet) : m_wallet(wallet) {}\n \n+    bool encryptWallet(const SecureString& wallet_passphrase) override\n+    {\n+        return m_wallet.EncryptWallet(wallet_passphrase);\n+    }\n+    bool isCrypted() override { return m_wallet.IsCrypted(); }\n+    bool lock() override { return m_wallet.Lock(); }\n+    bool unlock(const SecureString& wallet_passphrase) override { return m_wallet.Unlock(wallet_passphrase); }\n+    bool isLocked() override { return m_wallet.IsLocked(); }\n+    bool changeWalletPassphrase(const SecureString& old_wallet_passphrase,\n+        const SecureString& new_wallet_passphrase) override\n+    {\n+        return m_wallet.ChangeWalletPassphrase(old_wallet_passphrase, new_wallet_passphrase);\n+    }\n+    bool backupWallet(const std::string& filename) override { return m_wallet.BackupWallet(filename); }\n+    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet.GetPubKey(address, pub_key); }\n+    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet.GetKey(address, key); }\n+    bool isSpendable(const CTxDestination& dest) override { return IsMine(m_wallet, dest) & ISMINE_SPENDABLE; }\n+    bool haveWatchOnly() override { return m_wallet.HaveWatchOnly(); };\n+    bool setAddressBook(const CTxDestination& dest, const std::string& name, const std::string& purpose) override\n+    {\n+        return m_wallet.SetAddressBook(dest, name, purpose);\n+    }\n+    bool getAddress(const CTxDestination& dest, std::string* name, isminetype* is_mine) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        auto it = m_wallet.mapAddressBook.find(dest);\n+        if (it == m_wallet.mapAddressBook.end()) {\n+            return false;\n+        }\n+        if (name) {\n+            *name = it->second.name;\n+        }\n+        if (is_mine) {\n+            *is_mine = IsMine(m_wallet, dest);\n+        }\n+        return true;\n+    }\n+    bool addDestData(const CTxDestination& dest, const std::string& key, const std::string& value) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        return m_wallet.AddDestData(dest, key, value);\n+    }\n+    bool eraseDestData(const CTxDestination& dest, const std::string& key) override\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        return m_wallet.EraseDestData(dest, key);\n+    }\n+    std::vector<std::string> getDestValues(const std::string& prefix) override\n+    {\n+        return m_wallet.GetDestValues(prefix);\n+    }\n+    void lockCoin(const COutPoint& output) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        return m_wallet.LockCoin(output);\n+    }\n+    void unlockCoin(const COutPoint& output) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        return m_wallet.UnlockCoin(output);\n+    }\n+    bool isLockedCoin(const COutPoint& output) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        return m_wallet.IsLockedCoin(output.hash, output.n);\n+    }\n+    void listLockedCoins(std::vector<COutPoint>& outputs) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        return m_wallet.ListLockedCoins(outputs);\n+    }\n+    std::unique_ptr<PendingWalletTx> createTransaction(const std::vector<CRecipient>& recipients,\n+        const CCoinControl& coin_control,\n+        bool sign,\n+        int& change_pos,\n+        CAmount& fee,\n+        std::string& fail_reason) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        auto pending = MakeUnique<PendingWalletTxImpl>(m_wallet);\n+        if (!m_wallet.CreateTransaction(recipients, pending->m_tx, pending->m_key, fee, change_pos,\n+                fail_reason, coin_control, sign)) {\n+            return {};\n+        }\n+        return std::move(pending);\n+    }\n+    bool transactionCanBeAbandoned(const uint256& txid) override { return m_wallet.TransactionCanBeAbandoned(txid); }\n+    bool abandonTransaction(const uint256& txid) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        return m_wallet.AbandonTransaction(txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174601016",
      "id" : 174601016,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDYwMTAxNg==",
      "original_commit_id" : "16123b181840d93ff2107313546e6d0fa3971583",
      "original_position" : 150,
      "path" : "src/interface/wallet.cpp",
      "position" : 231,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174601016",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174601760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174601760"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I didn't check any of the watch-only and isMine stuff.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T20:36:36Z",
      "diff_hunk" : "@@ -15,15 +29,211 @@\n namespace interface {\n namespace {\n \n+class PendingWalletTxImpl : public PendingWalletTx\n+{\n+public:\n+    PendingWalletTxImpl(CWallet& wallet) : m_wallet(wallet), m_key(&wallet) {}\n+\n+    const CTransaction& get() override { return *m_tx; }\n+\n+    int64_t getVirtualSize() override { return GetVirtualTransactionSize(*m_tx); }\n+\n+    bool commit(WalletValueMap value_map,\n+        WalletOrderForm order_form,\n+        std::string from_account,\n+        std::string& reject_reason) override\n+    {\n+        LOCK2(cs_main, m_wallet.cs_wallet);\n+        CValidationState state;\n+        if (!m_wallet.CommitTransaction(m_tx, std::move(value_map), std::move(order_form), std::move(from_account), m_key, g_connman.get(), state)) {\n+            reject_reason = state.GetRejectReason();\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    CTransactionRef m_tx;\n+    CWallet& m_wallet;\n+    CReserveKey m_key;\n+};\n+\n class WalletImpl : public Wallet\n {\n public:\n     WalletImpl(CWallet& wallet) : m_wallet(wallet) {}\n \n+    bool encryptWallet(const SecureString& wallet_passphrase) override\n+    {\n+        return m_wallet.EncryptWallet(wallet_passphrase);\n+    }\n+    bool isCrypted() override { return m_wallet.IsCrypted(); }\n+    bool lock() override { return m_wallet.Lock(); }\n+    bool unlock(const SecureString& wallet_passphrase) override { return m_wallet.Unlock(wallet_passphrase); }\n+    bool isLocked() override { return m_wallet.IsLocked(); }\n+    bool changeWalletPassphrase(const SecureString& old_wallet_passphrase,\n+        const SecureString& new_wallet_passphrase) override\n+    {\n+        return m_wallet.ChangeWalletPassphrase(old_wallet_passphrase, new_wallet_passphrase);\n+    }\n+    bool backupWallet(const std::string& filename) override { return m_wallet.BackupWallet(filename); }\n+    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet.GetPubKey(address, pub_key); }\n+    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet.GetKey(address, key); }\n+    bool isSpendable(const CTxDestination& dest) override { return IsMine(m_wallet, dest) & ISMINE_SPENDABLE; }\n+    bool haveWatchOnly() override { return m_wallet.HaveWatchOnly(); };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174601760",
      "id" : 174601760,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDYwMTc2MA==",
      "original_commit_id" : "16123b181840d93ff2107313546e6d0fa3971583",
      "original_position" : 77,
      "path" : "src/interface/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174601760",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174602673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174602673"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Are you sure this is correct? Not sure how `::nTxConfirmTarget` relates to `getDefaultConfirmTarget`",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T20:39:49Z",
      "diff_hunk" : "@@ -193,7 +195,7 @@ void SendCoinsDialog::setModel(WalletModel *_model)\n             settings.remove(\"nSmartFeeSliderPosition\");\n         }\n         if (settings.value(\"nConfTarget\").toInt() == 0)\n-            ui->confTargetSelector->setCurrentIndex(getIndexForConfTarget(model->getDefaultConfirmTarget()));\n+            ui->confTargetSelector->setCurrentIndex(getIndexForConfTarget(model->node().getTxConfirmTarget()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174602673",
      "id" : 174602673,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDYwMjY3Mw==",
      "original_commit_id" : "16123b181840d93ff2107313546e6d0fa3971583",
      "original_position" : 25,
      "path" : "src/qt/sendcoinsdialog.cpp",
      "position" : 38,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174602673",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174603633"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174603633"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is `_6` dropped here?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T20:43:13Z",
      "diff_hunk" : "@@ -502,21 +423,21 @@ static void NotifyWatchonlyChanged(WalletModel *walletmodel, bool fHaveWatchonly\n void WalletModel::subscribeToCoreSignals()\n {\n     // Connect signals to wallet\n-    wallet->NotifyStatusChanged.connect(boost::bind(&NotifyKeyStoreStatusChanged, this, _1));\n-    wallet->NotifyAddressBookChanged.connect(boost::bind(NotifyAddressBookChanged, this, _1, _2, _3, _4, _5, _6));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174603633",
      "id" : 174603633,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDYwMzYzMw==",
      "original_commit_id" : "16123b181840d93ff2107313546e6d0fa3971583",
      "original_position" : 340,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 370,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174603633",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174604661"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174604661"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested using and deleting entries from address book. ",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T20:47:08Z",
      "diff_hunk" : "@@ -95,6 +99,10 @@ class WalletImpl : public Wallet\n     {\n         return m_wallet.SetAddressBook(dest, name, purpose);\n     }\n+    bool delAddressBook(const CTxDestination& dest) override\n+    {\n+        return m_wallet.DelAddressBook(dest);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174604661",
      "id" : 174604661,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDYwNDY2MQ==",
      "original_commit_id" : "18104eb9b10000d6dc2eeb908d66b3ac0742cc42",
      "original_position" : 17,
      "path" : "src/interface/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174604661",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174605401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174605401"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Lightly tested BIP-21 URI.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-14T20:49:54Z",
      "diff_hunk" : "@@ -630,7 +630,7 @@ int main(int argc, char *argv[])\n     }\n #ifdef ENABLE_WALLET\n     // Parse URIs on command line -- this can affect Params()\n-    PaymentServer::ipcParseCommandLine(argc, argv);\n+    PaymentServer::ipcParseCommandLine(*node, argc, argv);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174605401",
      "id" : 174605401,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDYwNTQwMQ==",
      "original_commit_id" : "a728cf8dacdbaeaaf9528bdb599c7ae4580a9828",
      "original_position" : 16,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 273,
      "pull_request_review_id" : 103872908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174605401",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, on my to-do list to review",
      "created_at" : "2018-03-14T21:40:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-373184202",
      "id" : 373184202,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-03-14T21:40:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373184202",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174932709"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174932709"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174557154\r\n\r\nIn commit \"Remove direct bitcoin calls from qt/splashscreen.cpp\"\r\n\r\n> The error isn't very clear\r\n\r\nThat error isn't directly related to this code. If you disabled the same `#ifdef` on master while still including `wallet/wallet.h` you would see the error. The error is just saying that the code can't be linked because it is taking the address of a function (`SplashScreen::ConnectWallet`) that isn't defined.\r\n\r\nIf you want to test the runtime error in this method, you could try disabling the same `#ifdef` and passing a null function pointer in.\r\n\r\nNote that I would like to get rid of the checks for the `ENABLE_WALLET` macro both in this function and its caller. But the refactoring required to do this would make this PR bigger and require changes to both gui code and wallet code instead of just gui code, so I've opted towards a compromise for now that avoids any uses `ENABLE_WALLET` in the `Node` interface definition, but does fall back to them in a few places in the implementation.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-15T21:06:29Z",
      "diff_hunk" : "@@ -65,6 +77,15 @@ class NodeImpl : public Node\n     {\n         return MakeHandler(::uiInterface.ThreadSafeQuestion.connect(fn));\n     }\n+    std::unique_ptr<Handler> handleShowProgress(ShowProgressFn fn) override\n+    {\n+        return MakeHandler(::uiInterface.ShowProgress.connect(fn));\n+    }\n+    std::unique_ptr<Handler> handleLoadWallet(LoadWalletFn fn) override\n+    {\n+        CHECK_WALLET(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174932709",
      "id" : 174932709,
      "in_reply_to_id" : 174557154,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDkzMjcwOQ==",
      "original_commit_id" : "8dc1a54f19a0a040f81eeb0077e73a568add12c0",
      "original_position" : 38,
      "path" : "src/interface/node.cpp",
      "position" : 268,
      "pull_request_review_id" : 104380221,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174932709",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174932937"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174932937"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174566010\r\n\r\nIn commit \"Remove direct bitcoin calls from qt/rpcconsole.cpp\"\r\n\r\n> Did you mean to do this ban stuff in a82693c? Or is it here because banning from the RPC console interacts with the ban table UI?\r\n\r\nThe `ban()` function is only called from `rpcconsole.cpp`, not `bantablemodel.cpp`, and since the changes in this PR are grouped by file, it's in the `rpcconsole.cpp` commit 9b73244060ae47d7dddee1c9e63c4d1f704685cd rather than `bantablemodel.cpp` commit a82693c0bdda423c23aa607d9c696b9c9aeff7a2.\r\n",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-15T21:07:24Z",
      "diff_hunk" : "@@ -110,6 +112,29 @@ class NodeImpl : public Node\n         }\n         return false;\n     }\n+    bool ban(const CNetAddr& net_addr, BanReason reason, int64_t ban_time_offset) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174932937",
      "id" : 174932937,
      "in_reply_to_id" : 174566010,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDkzMjkzNw==",
      "original_commit_id" : "9b73244060ae47d7dddee1c9e63c4d1f704685cd",
      "original_position" : 20,
      "path" : "src/interface/node.cpp",
      "position" : null,
      "pull_request_review_id" : 104380221,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174932937",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174933029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174933029"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174594589\r\n\r\nIn commit \"Remove most direct bitcoin calls from qt/walletmodel.cpp\"\r\n\r\n> Has anyone tested a rebased #11383 or #12610 with this?\r\n\r\nI assume one of those PRs will be merged before this one, but this PR will work fine with either of them. This PR just replaces `CWallet` references in GUI code with `interface::Wallet` references, and tweaks calls to wallet methods and access to wallet globals like `::vpwallets` to go through the interface. This is pretty straightforward to do regardless of the multiwallet implementation.\r\n",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-15T21:07:43Z",
      "diff_hunk" : "@@ -192,6 +194,18 @@ class NodeImpl : public Node\n     std::vector<std::string> listRpcCommands() override { return ::tableRPC.listCommands(); }\n     void rpcSetTimerInterfaceIfUnset(RPCTimerInterface* iface) override { RPCSetTimerInterfaceIfUnset(iface); }\n     void rpcUnsetTimerInterface(RPCTimerInterface* iface) override { RPCUnsetTimerInterface(iface); }\n+    std::vector<std::unique_ptr<Wallet>> getWallets() override\n+    {\n+#ifdef ENABLE_WALLET\n+        std::vector<std::unique_ptr<Wallet>> wallets;\n+        for (CWalletRef wallet : ::vpwallets) {\n+            wallets.emplace_back(MakeWallet(*wallet));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174933029",
      "id" : 174933029,
      "in_reply_to_id" : 174594589,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDkzMzAyOQ==",
      "original_commit_id" : "16123b181840d93ff2107313546e6d0fa3971583",
      "original_position" : 43,
      "path" : "src/interface/node.cpp",
      "position" : 243,
      "pull_request_review_id" : 104380221,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174933029",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174933464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174933464"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174602673\r\n\r\nIn commit \"Remove most direct bitcoin calls from qt/walletmodel.cpp\"\r\n\r\n> Are you sure this is correct? Not sure how ::nTxConfirmTarget relates to getDefaultConfirmTarget\r\n\r\nYes, they are the same. Names aren't the same because I wanted the new method name to match the name of the existing global variable:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/6acd8700bc0ee1d10207a362c1e07372ba274041/src/qt/walletmodel.cpp#L742-L745\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/16123b181840d93ff2107313546e6d0fa3971583/src/interface/node.cpp#L184\r\n\r\nThe relevant commit is 16123b181840d93ff2107313546e6d0fa3971583 (you have to expand the `walletmodel.cpp` diff to see it in github).\r\n",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-15T21:09:18Z",
      "diff_hunk" : "@@ -193,7 +195,7 @@ void SendCoinsDialog::setModel(WalletModel *_model)\n             settings.remove(\"nSmartFeeSliderPosition\");\n         }\n         if (settings.value(\"nConfTarget\").toInt() == 0)\n-            ui->confTargetSelector->setCurrentIndex(getIndexForConfTarget(model->getDefaultConfirmTarget()));\n+            ui->confTargetSelector->setCurrentIndex(getIndexForConfTarget(model->node().getTxConfirmTarget()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174933464",
      "id" : 174933464,
      "in_reply_to_id" : 174602673,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDkzMzQ2NA==",
      "original_commit_id" : "16123b181840d93ff2107313546e6d0fa3971583",
      "original_position" : 25,
      "path" : "src/qt/sendcoinsdialog.cpp",
      "position" : 38,
      "pull_request_review_id" : 104380221,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174933464",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174934207"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174934207"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174512732\r\n\r\nIn commit \"Remove direct bitcoin calls from qt/bitcoin.cpp\"\r\n\r\n> Nit: this comment disappeared?\r\n\r\n `BitcoinCore::baseInitialize` is replaced by `Node::baseInitialize` and I don't think it's helpful to mention gui threads in comments outside of the gui code, so the comment is different there. I could add a comment at the call site in the gui code, but there's already a pretty good one there:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/fc7de6d6fb8a73347f7bc97d57634e4627c66c2e/src/qt/bitcoin.cpp#L686-L689\r\n\r\nAnyway, happy to make improvements if there is a suggestion.\r\n",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-15T21:12:14Z",
      "diff_hunk" : "@@ -178,11 +180,7 @@ class BitcoinCore: public QObject\n {\n     Q_OBJECT\n public:\n-    explicit BitcoinCore();\n-    /** Basic initialization, before starting initialization/shutdown thread.\n-     * Return true on success.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174934207",
      "id" : 174934207,
      "in_reply_to_id" : 174512732,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDkzNDIwNw==",
      "original_commit_id" : "fc7de6d6fb8a73347f7bc97d57634e4627c66c2e",
      "original_position" : 15,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 23,
      "pull_request_review_id" : 104380221,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174934207",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174934730"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174934730"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174603633\r\n\r\nIn commit \"Remove most direct bitcoin calls from qt/walletmodel.cpp\"\r\n\r\n> Why is _6 dropped here?\r\n\r\nThe signature of `NotifyAddressBookChanged` is changed above. Instead of receiving both `WalletModel` and `CWallet` pointers, it now only receives a `WalletModel` pointer, which wraps access to the underlying wallet:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1a54b215a94b0cd8f922eb2e062ea99aa0b25242/src/qt/walletmodel.cpp#L463-L465\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/16123b181840d93ff2107313546e6d0fa3971583/src/qt/walletmodel.cpp#L385-L387\r\n",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-15T21:14:08Z",
      "diff_hunk" : "@@ -502,21 +423,21 @@ static void NotifyWatchonlyChanged(WalletModel *walletmodel, bool fHaveWatchonly\n void WalletModel::subscribeToCoreSignals()\n {\n     // Connect signals to wallet\n-    wallet->NotifyStatusChanged.connect(boost::bind(&NotifyKeyStoreStatusChanged, this, _1));\n-    wallet->NotifyAddressBookChanged.connect(boost::bind(NotifyAddressBookChanged, this, _1, _2, _3, _4, _5, _6));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174934730",
      "id" : 174934730,
      "in_reply_to_id" : 174603633,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDkzNDczMA==",
      "original_commit_id" : "16123b181840d93ff2107313546e6d0fa3971583",
      "original_position" : 340,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 370,
      "pull_request_review_id" : 104380221,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174934730",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174935523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174935523"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174515903\r\n\r\nIn commit \"Remove direct bitcoin calls from qt/bitcoin.cpp\"\r\n\r\n> Since this is inside a try {} catch it means exceptions can bubble up through the interface. Would that be useful to document in the interface header? Or should that be obvious?\r\n\r\nI definitely think it's useful to document when functions may throw specific exceptions (or when they are guaranteed not to throw). I'm not sure how useful it is just to document the fact that functions can throw exceptions. I think this is just a basic assumption in c++ when you haven't disabled exceptions at compile time. Anyway, I'm happy to add a comment if you have a suggestion for one.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-15T21:17:14Z",
      "diff_hunk" : "@@ -313,8 +292,7 @@ void BitcoinCore::shutdown()\n     try\n     {\n         qDebug() << __func__ << \": Running Shutdown in thread\";\n-        Interrupt();\n-        Shutdown();\n+        m_node.appShutdown();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r174935523",
      "id" : 174935523,
      "in_reply_to_id" : 174515903,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDkzNTUyMw==",
      "original_commit_id" : "fc7de6d6fb8a73347f7bc97d57634e4627c66c2e",
      "original_position" : 106,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 114,
      "pull_request_review_id" : 104380221,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174935523",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Going to hold off on testing this one until it's rebased.",
      "created_at" : "2018-03-23T20:23:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-375787808",
      "id" : 375787808,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-03-23T20:23:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375787808",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Going to hold off on testing this one until it's rebased.\r\n\r\nRebased 84e80629d10cb48009b84e131ee61e0a8b9ad171 -> b39555ae6eeb205706922766463a80cfe09153be ([pr/ipc-local.59](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-local.59) -> [pr/ipc-local.60](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-local.60))\r\nRebased b39555ae6eeb205706922766463a80cfe09153be -> 19a268c1f500e0c8793da6714a9d093d57bfe8f7 ([pr/ipc-local.60](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-local.60) -> [pr/ipc-local.61](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-local.61))",
      "created_at" : "2018-03-23T21:48:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-375807433",
      "id" : 375807433,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-03-26T15:32:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375807433",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177186802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177186802"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested viewing peers and associated node stats via debug window.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-26T18:17:42Z",
      "diff_hunk" : "@@ -0,0 +1,304 @@\n+#include <interface/node.h>\n+\n+#include <addrdb.h>\n+#include <amount.h>\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <init.h>\n+#include <interface/handler.h>\n+#include <interface/wallet.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <policy/feerate.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <primitives/block.h>\n+#include <rpc/server.h>\n+#include <scheduler.h>\n+#include <sync.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <warnings.h>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+#ifdef ENABLE_WALLET\n+#include <wallet/fees.h>\n+#include <wallet/wallet.h>\n+#define CHECK_WALLET(x) x\n+#else\n+#define CHECK_WALLET(x) throw std::logic_error(\"Wallet function called in non-wallet build.\")\n+#endif\n+\n+#include <atomic>\n+#include <boost/thread/thread.hpp>\n+#include <univalue.h>\n+\n+namespace interface {\n+namespace {\n+\n+class NodeImpl : public Node\n+{\n+    void parseParameters(int argc, const char* const argv[]) override\n+    {\n+        gArgs.ParseParameters(argc, argv);\n+    }\n+    void readConfigFile(const std::string& conf_path) override { gArgs.ReadConfigFile(conf_path); }\n+    bool softSetArg(const std::string& arg, const std::string& value) override { return gArgs.SoftSetArg(arg, value); }\n+    bool softSetBoolArg(const std::string& arg, bool value) override { return gArgs.SoftSetBoolArg(arg, value); }\n+    void selectParams(const std::string& network) override { SelectParams(network); }\n+    std::string getNetwork() override { return Params().NetworkIDString(); }\n+    void initLogging() override { InitLogging(); }\n+    void initParameterInteraction() override { InitParameterInteraction(); }\n+    std::string getWarnings(const std::string& type) override { return GetWarnings(type); }\n+    uint32_t getLogCategories() override { return ::logCategories; }\n+    bool baseInitialize() override\n+    {\n+        return AppInitBasicSetup() && AppInitParameterInteraction() && AppInitSanityChecks() &&\n+               AppInitLockDataDirectory();\n+    }\n+    bool appInitMain() override { return AppInitMain(); }\n+    void appShutdown() override\n+    {\n+        Interrupt();\n+        Shutdown();\n+    }\n+    void startShutdown() override { StartShutdown(); }\n+    bool shutdownRequested() override { return ShutdownRequested(); }\n+    void mapPort(bool use_upnp) override\n+    {\n+        if (use_upnp) {\n+            StartMapPort();\n+        } else {\n+            InterruptMapPort();\n+            StopMapPort();\n+        }\n+    }\n+    std::string helpMessage(HelpMessageMode mode) override { return HelpMessage(mode); }\n+    bool getProxy(Network net, proxyType& proxy_info) override { return GetProxy(net, proxy_info); }\n+    size_t getNodeCount(CConnman::NumConnections flags) override\n+    {\n+        return g_connman ? g_connman->GetNodeCount(flags) : 0;\n+    }\n+    bool getNodesStats(NodesStats& stats) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177186802",
      "id" : 177186802,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzE4NjgwMg==",
      "original_commit_id" : "19a268c1f500e0c8793da6714a9d093d57bfe8f7",
      "original_position" : 88,
      "path" : "src/interface/node.cpp",
      "position" : 92,
      "pull_request_review_id" : 107016963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177186802",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177187217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177187217"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested banning a peer via Debug window -> Peers.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-26T18:19:05Z",
      "diff_hunk" : "@@ -0,0 +1,304 @@\n+#include <interface/node.h>\n+\n+#include <addrdb.h>\n+#include <amount.h>\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <init.h>\n+#include <interface/handler.h>\n+#include <interface/wallet.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <policy/feerate.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <primitives/block.h>\n+#include <rpc/server.h>\n+#include <scheduler.h>\n+#include <sync.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <warnings.h>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+#ifdef ENABLE_WALLET\n+#include <wallet/fees.h>\n+#include <wallet/wallet.h>\n+#define CHECK_WALLET(x) x\n+#else\n+#define CHECK_WALLET(x) throw std::logic_error(\"Wallet function called in non-wallet build.\")\n+#endif\n+\n+#include <atomic>\n+#include <boost/thread/thread.hpp>\n+#include <univalue.h>\n+\n+namespace interface {\n+namespace {\n+\n+class NodeImpl : public Node\n+{\n+    void parseParameters(int argc, const char* const argv[]) override\n+    {\n+        gArgs.ParseParameters(argc, argv);\n+    }\n+    void readConfigFile(const std::string& conf_path) override { gArgs.ReadConfigFile(conf_path); }\n+    bool softSetArg(const std::string& arg, const std::string& value) override { return gArgs.SoftSetArg(arg, value); }\n+    bool softSetBoolArg(const std::string& arg, bool value) override { return gArgs.SoftSetBoolArg(arg, value); }\n+    void selectParams(const std::string& network) override { SelectParams(network); }\n+    std::string getNetwork() override { return Params().NetworkIDString(); }\n+    void initLogging() override { InitLogging(); }\n+    void initParameterInteraction() override { InitParameterInteraction(); }\n+    std::string getWarnings(const std::string& type) override { return GetWarnings(type); }\n+    uint32_t getLogCategories() override { return ::logCategories; }\n+    bool baseInitialize() override\n+    {\n+        return AppInitBasicSetup() && AppInitParameterInteraction() && AppInitSanityChecks() &&\n+               AppInitLockDataDirectory();\n+    }\n+    bool appInitMain() override { return AppInitMain(); }\n+    void appShutdown() override\n+    {\n+        Interrupt();\n+        Shutdown();\n+    }\n+    void startShutdown() override { StartShutdown(); }\n+    bool shutdownRequested() override { return ShutdownRequested(); }\n+    void mapPort(bool use_upnp) override\n+    {\n+        if (use_upnp) {\n+            StartMapPort();\n+        } else {\n+            InterruptMapPort();\n+            StopMapPort();\n+        }\n+    }\n+    std::string helpMessage(HelpMessageMode mode) override { return HelpMessage(mode); }\n+    bool getProxy(Network net, proxyType& proxy_info) override { return GetProxy(net, proxy_info); }\n+    size_t getNodeCount(CConnman::NumConnections flags) override\n+    {\n+        return g_connman ? g_connman->GetNodeCount(flags) : 0;\n+    }\n+    bool getNodesStats(NodesStats& stats) override\n+    {\n+        stats.clear();\n+\n+        if (g_connman) {\n+            std::vector<CNodeStats> stats_temp;\n+            g_connman->GetNodeStats(stats_temp);\n+\n+            stats.reserve(stats_temp.size());\n+            for (auto& node_stats_temp : stats_temp) {\n+                stats.emplace_back(std::move(node_stats_temp), false, CNodeStateStats());\n+            }\n+\n+            // Try to retrieve the CNodeStateStats for each node.\n+            TRY_LOCK(::cs_main, lockMain);\n+            if (lockMain) {\n+                for (auto& node_stats : stats) {\n+                    std::get<1>(node_stats) =\n+                        GetNodeStateStats(std::get<0>(node_stats).nodeid, std::get<2>(node_stats));\n+                }\n+            }\n+            return true;\n+        }\n+        return false;\n+    }\n+    bool getBanned(banmap_t& banmap) override\n+    {\n+        if (g_connman) {\n+            g_connman->GetBanned(banmap);\n+            return true;\n+        }\n+        return false;\n+    }\n+    bool ban(const CNetAddr& net_addr, BanReason reason, int64_t ban_time_offset) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177187217",
      "id" : 177187217,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzE4NzIxNw==",
      "original_commit_id" : "19a268c1f500e0c8793da6714a9d093d57bfe8f7",
      "original_position" : 121,
      "path" : "src/interface/node.cpp",
      "position" : 125,
      "pull_request_review_id" : 107016963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177187217",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177187281"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177187281"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested unbanning a peer via Debug window -> Peers.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-26T18:19:15Z",
      "diff_hunk" : "@@ -0,0 +1,304 @@\n+#include <interface/node.h>\n+\n+#include <addrdb.h>\n+#include <amount.h>\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <init.h>\n+#include <interface/handler.h>\n+#include <interface/wallet.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <policy/feerate.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <primitives/block.h>\n+#include <rpc/server.h>\n+#include <scheduler.h>\n+#include <sync.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <warnings.h>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+#ifdef ENABLE_WALLET\n+#include <wallet/fees.h>\n+#include <wallet/wallet.h>\n+#define CHECK_WALLET(x) x\n+#else\n+#define CHECK_WALLET(x) throw std::logic_error(\"Wallet function called in non-wallet build.\")\n+#endif\n+\n+#include <atomic>\n+#include <boost/thread/thread.hpp>\n+#include <univalue.h>\n+\n+namespace interface {\n+namespace {\n+\n+class NodeImpl : public Node\n+{\n+    void parseParameters(int argc, const char* const argv[]) override\n+    {\n+        gArgs.ParseParameters(argc, argv);\n+    }\n+    void readConfigFile(const std::string& conf_path) override { gArgs.ReadConfigFile(conf_path); }\n+    bool softSetArg(const std::string& arg, const std::string& value) override { return gArgs.SoftSetArg(arg, value); }\n+    bool softSetBoolArg(const std::string& arg, bool value) override { return gArgs.SoftSetBoolArg(arg, value); }\n+    void selectParams(const std::string& network) override { SelectParams(network); }\n+    std::string getNetwork() override { return Params().NetworkIDString(); }\n+    void initLogging() override { InitLogging(); }\n+    void initParameterInteraction() override { InitParameterInteraction(); }\n+    std::string getWarnings(const std::string& type) override { return GetWarnings(type); }\n+    uint32_t getLogCategories() override { return ::logCategories; }\n+    bool baseInitialize() override\n+    {\n+        return AppInitBasicSetup() && AppInitParameterInteraction() && AppInitSanityChecks() &&\n+               AppInitLockDataDirectory();\n+    }\n+    bool appInitMain() override { return AppInitMain(); }\n+    void appShutdown() override\n+    {\n+        Interrupt();\n+        Shutdown();\n+    }\n+    void startShutdown() override { StartShutdown(); }\n+    bool shutdownRequested() override { return ShutdownRequested(); }\n+    void mapPort(bool use_upnp) override\n+    {\n+        if (use_upnp) {\n+            StartMapPort();\n+        } else {\n+            InterruptMapPort();\n+            StopMapPort();\n+        }\n+    }\n+    std::string helpMessage(HelpMessageMode mode) override { return HelpMessage(mode); }\n+    bool getProxy(Network net, proxyType& proxy_info) override { return GetProxy(net, proxy_info); }\n+    size_t getNodeCount(CConnman::NumConnections flags) override\n+    {\n+        return g_connman ? g_connman->GetNodeCount(flags) : 0;\n+    }\n+    bool getNodesStats(NodesStats& stats) override\n+    {\n+        stats.clear();\n+\n+        if (g_connman) {\n+            std::vector<CNodeStats> stats_temp;\n+            g_connman->GetNodeStats(stats_temp);\n+\n+            stats.reserve(stats_temp.size());\n+            for (auto& node_stats_temp : stats_temp) {\n+                stats.emplace_back(std::move(node_stats_temp), false, CNodeStateStats());\n+            }\n+\n+            // Try to retrieve the CNodeStateStats for each node.\n+            TRY_LOCK(::cs_main, lockMain);\n+            if (lockMain) {\n+                for (auto& node_stats : stats) {\n+                    std::get<1>(node_stats) =\n+                        GetNodeStateStats(std::get<0>(node_stats).nodeid, std::get<2>(node_stats));\n+                }\n+            }\n+            return true;\n+        }\n+        return false;\n+    }\n+    bool getBanned(banmap_t& banmap) override\n+    {\n+        if (g_connman) {\n+            g_connman->GetBanned(banmap);\n+            return true;\n+        }\n+        return false;\n+    }\n+    bool ban(const CNetAddr& net_addr, BanReason reason, int64_t ban_time_offset) override\n+    {\n+        if (g_connman) {\n+            g_connman->Ban(net_addr, reason, ban_time_offset);\n+            return true;\n+        }\n+        return false;\n+    }\n+    bool unban(const CSubNet& ip) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177187281",
      "id" : 177187281,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzE4NzI4MQ==",
      "original_commit_id" : "19a268c1f500e0c8793da6714a9d093d57bfe8f7",
      "original_position" : 129,
      "path" : "src/interface/node.cpp",
      "position" : 133,
      "pull_request_review_id" : 107016963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177187281",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177187405"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177187405"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested disconnecting a peer via Debug window -> Peers.",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-26T18:19:36Z",
      "diff_hunk" : "@@ -0,0 +1,304 @@\n+#include <interface/node.h>\n+\n+#include <addrdb.h>\n+#include <amount.h>\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <init.h>\n+#include <interface/handler.h>\n+#include <interface/wallet.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <policy/feerate.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <primitives/block.h>\n+#include <rpc/server.h>\n+#include <scheduler.h>\n+#include <sync.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <warnings.h>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+#ifdef ENABLE_WALLET\n+#include <wallet/fees.h>\n+#include <wallet/wallet.h>\n+#define CHECK_WALLET(x) x\n+#else\n+#define CHECK_WALLET(x) throw std::logic_error(\"Wallet function called in non-wallet build.\")\n+#endif\n+\n+#include <atomic>\n+#include <boost/thread/thread.hpp>\n+#include <univalue.h>\n+\n+namespace interface {\n+namespace {\n+\n+class NodeImpl : public Node\n+{\n+    void parseParameters(int argc, const char* const argv[]) override\n+    {\n+        gArgs.ParseParameters(argc, argv);\n+    }\n+    void readConfigFile(const std::string& conf_path) override { gArgs.ReadConfigFile(conf_path); }\n+    bool softSetArg(const std::string& arg, const std::string& value) override { return gArgs.SoftSetArg(arg, value); }\n+    bool softSetBoolArg(const std::string& arg, bool value) override { return gArgs.SoftSetBoolArg(arg, value); }\n+    void selectParams(const std::string& network) override { SelectParams(network); }\n+    std::string getNetwork() override { return Params().NetworkIDString(); }\n+    void initLogging() override { InitLogging(); }\n+    void initParameterInteraction() override { InitParameterInteraction(); }\n+    std::string getWarnings(const std::string& type) override { return GetWarnings(type); }\n+    uint32_t getLogCategories() override { return ::logCategories; }\n+    bool baseInitialize() override\n+    {\n+        return AppInitBasicSetup() && AppInitParameterInteraction() && AppInitSanityChecks() &&\n+               AppInitLockDataDirectory();\n+    }\n+    bool appInitMain() override { return AppInitMain(); }\n+    void appShutdown() override\n+    {\n+        Interrupt();\n+        Shutdown();\n+    }\n+    void startShutdown() override { StartShutdown(); }\n+    bool shutdownRequested() override { return ShutdownRequested(); }\n+    void mapPort(bool use_upnp) override\n+    {\n+        if (use_upnp) {\n+            StartMapPort();\n+        } else {\n+            InterruptMapPort();\n+            StopMapPort();\n+        }\n+    }\n+    std::string helpMessage(HelpMessageMode mode) override { return HelpMessage(mode); }\n+    bool getProxy(Network net, proxyType& proxy_info) override { return GetProxy(net, proxy_info); }\n+    size_t getNodeCount(CConnman::NumConnections flags) override\n+    {\n+        return g_connman ? g_connman->GetNodeCount(flags) : 0;\n+    }\n+    bool getNodesStats(NodesStats& stats) override\n+    {\n+        stats.clear();\n+\n+        if (g_connman) {\n+            std::vector<CNodeStats> stats_temp;\n+            g_connman->GetNodeStats(stats_temp);\n+\n+            stats.reserve(stats_temp.size());\n+            for (auto& node_stats_temp : stats_temp) {\n+                stats.emplace_back(std::move(node_stats_temp), false, CNodeStateStats());\n+            }\n+\n+            // Try to retrieve the CNodeStateStats for each node.\n+            TRY_LOCK(::cs_main, lockMain);\n+            if (lockMain) {\n+                for (auto& node_stats : stats) {\n+                    std::get<1>(node_stats) =\n+                        GetNodeStateStats(std::get<0>(node_stats).nodeid, std::get<2>(node_stats));\n+                }\n+            }\n+            return true;\n+        }\n+        return false;\n+    }\n+    bool getBanned(banmap_t& banmap) override\n+    {\n+        if (g_connman) {\n+            g_connman->GetBanned(banmap);\n+            return true;\n+        }\n+        return false;\n+    }\n+    bool ban(const CNetAddr& net_addr, BanReason reason, int64_t ban_time_offset) override\n+    {\n+        if (g_connman) {\n+            g_connman->Ban(net_addr, reason, ban_time_offset);\n+            return true;\n+        }\n+        return false;\n+    }\n+    bool unban(const CSubNet& ip) override\n+    {\n+        if (g_connman) {\n+            g_connman->Unban(ip);\n+            return true;\n+        }\n+        return false;\n+    }\n+    bool disconnect(NodeId id) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177187405",
      "id" : 177187405,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzE4NzQwNQ==",
      "original_commit_id" : "19a268c1f500e0c8793da6714a9d093d57bfe8f7",
      "original_position" : 137,
      "path" : "src/interface/node.cpp",
      "position" : 141,
      "pull_request_review_id" : 107016963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177187405",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177492485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177492485"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this comment is now invalid `Get required locks upfront...`",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-27T16:39:28Z",
      "diff_hunk" : "@@ -120,52 +80,30 @@ void WalletModel::pollBalanceChanged()\n     // Get required locks upfront. This avoids the GUI from getting stuck on",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177492485",
      "id" : 177492485,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzQ5MjQ4NQ==",
      "original_commit_id" : "19a268c1f500e0c8793da6714a9d093d57bfe8f7",
      "original_position" : 85,
      "path" : "src/qt/walletmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 107372769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177492485",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177496852"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177496852"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason to leave this code block in, now that `LOCK` has been removed? Also, can you just return `m_wallet->changeWalletPassphrase(oldPass, newPass)` rather than have in intermediary bool?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-27T16:53:30Z",
      "diff_hunk" : "@@ -429,39 +357,33 @@ bool WalletModel::setWalletLocked(bool locked, const SecureString &passPhrase)\n     if(locked)\n     {\n         // Lock\n-        return wallet->Lock();\n+        return m_wallet->lock();\n     }\n     else\n     {\n         // Unlock\n-        return wallet->Unlock(passPhrase);\n+        return m_wallet->unlock(passPhrase);\n     }\n }\n \n bool WalletModel::changePassphrase(const SecureString &oldPass, const SecureString &newPass)\n {\n     bool retval;\n     {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177496852",
      "id" : 177496852,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzQ5Njg1Mg==",
      "original_commit_id" : "19a268c1f500e0c8793da6714a9d093d57bfe8f7",
      "original_position" : 296,
      "path" : "src/qt/walletmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 107372769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177496852",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177500262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177500262"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You no longer need the following includes:\r\n\r\n- consensus/validation.h\r\n- chain.h\r\n- keystore.h\r\n- validation.h\r\n- net.h\r\n- policy/fees.h\r\n- policy/rbf.h\r\n- sync.h\r\n- ui_interface.h\r\n- util.h\r\n- wallet/wallet.h\r\n- wallet/feebumper.h\r\n- wallet/walletdb.h\r\n\r\nIn fact, there are many headers that no longer need to be included in lots of the qt files. Perhaps worth adding a commit at the end of this PR to remove them?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-27T17:04:53Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n #include <qt/transactiontablemodel.h>\n \n #include <chain.h>\n+#include <interface/handler.h>\n+#include <interface/node.h>\n #include <key_io.h>\n #include <keystore.h>\n #include <validation.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177500262",
      "id" : 177500262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzUwMDI2Mg==",
      "original_commit_id" : "19a268c1f500e0c8793da6714a9d093d57bfe8f7",
      "original_position" : 8,
      "path" : "src/qt/walletmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 107372769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177500262",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177504284"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177504284"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it make sense to update the `SetBalance()` functions to take a `WalletBalances` as their arguments?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-27T17:18:04Z",
      "diff_hunk" : "@@ -0,0 +1,348 @@\n+#ifndef BITCOIN_INTERFACE_INTERFACES_H\n+#define BITCOIN_INTERFACE_INTERFACES_H\n+\n+#include <amount.h>                    // For CAmount\n+#include <pubkey.h>                    // For CTxDestination (CKeyID and CScriptID)\n+#include <script/ismine.h>             // For isminefilter, isminetype\n+#include <script/standard.h>           // For CTxDestination\n+#include <support/allocators/secure.h> // For SecureString\n+#include <ui_interface.h>              // For ChangeType\n+\n+#include <functional>\n+#include <map>\n+#include <memory>\n+#include <stdint.h>\n+#include <string>\n+#include <tuple>\n+#include <utility>\n+#include <vector>\n+\n+class CCoinControl;\n+class CKey;\n+class CWallet;\n+enum class OutputType;\n+struct CRecipient;\n+\n+namespace interface {\n+\n+class Handler;\n+class PendingWalletTx;\n+struct WalletAddress;\n+struct WalletBalances;\n+struct WalletTx;\n+struct WalletTxOut;\n+struct WalletTxStatus;\n+\n+using WalletOrderForm = std::vector<std::pair<std::string, std::string>>;\n+using WalletValueMap = std::map<std::string, std::string>;\n+\n+//! Interface for accessing a wallet.\n+class Wallet\n+{\n+public:\n+    virtual ~Wallet() {}\n+\n+    //! Encrypt wallet.\n+    virtual bool encryptWallet(const SecureString& wallet_passphrase) = 0;\n+\n+    //! Return whether wallet is encrypted.\n+    virtual bool isCrypted() = 0;\n+\n+    //! Lock wallet.\n+    virtual bool lock() = 0;\n+\n+    //! Unlock wallet.\n+    virtual bool unlock(const SecureString& wallet_passphrase) = 0;\n+\n+    //! Return whether wallet is locked.\n+    virtual bool isLocked() = 0;\n+\n+    //! Change wallet passphrase.\n+    virtual bool changeWalletPassphrase(const SecureString& old_wallet_passphrase,\n+        const SecureString& new_wallet_passphrase) = 0;\n+\n+    //! Back up wallet.\n+    virtual bool backupWallet(const std::string& filename) = 0;\n+\n+    //! Get wallet name.\n+    virtual std::string getWalletName() = 0;\n+\n+    // Get key from pool.\n+    virtual bool getKeyFromPool(bool internal, CPubKey& pub_key) = 0;\n+\n+    //! Get public key.\n+    virtual bool getPubKey(const CKeyID& address, CPubKey& pub_key) = 0;\n+\n+    //! Get private key.\n+    virtual bool getPrivKey(const CKeyID& address, CKey& key) = 0;\n+\n+    //! Return whether wallet has private key.\n+    virtual bool isSpendable(const CTxDestination& dest) = 0;\n+\n+    //! Return whether wallet has watch only keys.\n+    virtual bool haveWatchOnly() = 0;\n+\n+    //! Add or update address.\n+    virtual bool setAddressBook(const CTxDestination& dest, const std::string& name, const std::string& purpose) = 0;\n+\n+    // Remove address.\n+    virtual bool delAddressBook(const CTxDestination& dest) = 0;\n+\n+    //! Look up address in wallet, return whether exists.\n+    virtual bool getAddress(const CTxDestination& dest,\n+        std::string* name = nullptr,\n+        isminetype* is_mine = nullptr) = 0;\n+\n+    //! Get wallet address list.\n+    virtual std::vector<WalletAddress> getAddresses() = 0;\n+\n+    //! Add scripts to key store so old so software versions opening the wallet\n+    //! database can detect payments to newer address types.\n+    virtual void learnRelatedScripts(const CPubKey& key, OutputType type) = 0;\n+\n+    //! Add dest data.\n+    virtual bool addDestData(const CTxDestination& dest, const std::string& key, const std::string& value) = 0;\n+\n+    //! Erase dest data.\n+    virtual bool eraseDestData(const CTxDestination& dest, const std::string& key) = 0;\n+\n+    //! Get dest values with prefix.\n+    virtual std::vector<std::string> getDestValues(const std::string& prefix) = 0;\n+\n+    //! Lock coin.\n+    virtual void lockCoin(const COutPoint& output) = 0;\n+\n+    //! Unlock coin.\n+    virtual void unlockCoin(const COutPoint& output) = 0;\n+\n+    //! Return whether coin is locked.\n+    virtual bool isLockedCoin(const COutPoint& output) = 0;\n+\n+    //! List locked coins.\n+    virtual void listLockedCoins(std::vector<COutPoint>& outputs) = 0;\n+\n+    //! Create transaction.\n+    virtual std::unique_ptr<PendingWalletTx> createTransaction(const std::vector<CRecipient>& recipients,\n+        const CCoinControl& coin_control,\n+        bool sign,\n+        int& change_pos,\n+        CAmount& fee,\n+        std::string& fail_reason) = 0;\n+\n+    //! Return whether transaction can be abandoned.\n+    virtual bool transactionCanBeAbandoned(const uint256& txid) = 0;\n+\n+    //! Abandon transaction.\n+    virtual bool abandonTransaction(const uint256& txid) = 0;\n+\n+    //! Return whether transaction can be bumped.\n+    virtual bool transactionCanBeBumped(const uint256& txid) = 0;\n+\n+    //! Create bump transaction.\n+    virtual bool createBumpTransaction(const uint256& txid,\n+        const CCoinControl& coin_control,\n+        CAmount total_fee,\n+        std::vector<std::string>& errors,\n+        CAmount& old_fee,\n+        CAmount& new_fee,\n+        CMutableTransaction& mtx) = 0;\n+\n+    //! Sign bump transaction.\n+    virtual bool signBumpTransaction(CMutableTransaction& mtx) = 0;\n+\n+    //! Commit bump transaction.\n+    virtual bool commitBumpTransaction(const uint256& txid,\n+        CMutableTransaction&& mtx,\n+        std::vector<std::string>& errors,\n+        uint256& bumped_txid) = 0;\n+\n+    //! Get a transaction.\n+    virtual CTransactionRef getTx(const uint256& txid) = 0;\n+\n+    //! Get transaction information.\n+    virtual WalletTx getWalletTx(const uint256& txid) = 0;\n+\n+    //! Get list of all wallet transactions.\n+    virtual std::vector<WalletTx> getWalletTxs() = 0;\n+\n+    //! Try to get updated status for a particular transaction, if possible without blocking.\n+    virtual bool tryGetTxStatus(const uint256& txid,\n+        WalletTxStatus& tx_status,\n+        int& num_blocks,\n+        int64_t& adjusted_time) = 0;\n+\n+    //! Get transaction details.\n+    virtual WalletTx getWalletTxDetails(const uint256& txid,\n+        WalletTxStatus& tx_status,\n+        WalletOrderForm& order_form,\n+        bool& in_mempool,\n+        int& num_blocks,\n+        int64_t& adjusted_time) = 0;\n+\n+    //! Get balances.\n+    virtual WalletBalances getBalances() = 0;\n+\n+    //! Get balances if possible without blocking.\n+    virtual bool tryGetBalances(WalletBalances& balances, int& num_blocks) = 0;\n+\n+    //! Get balance.\n+    virtual CAmount getBalance() = 0;\n+\n+    //! Get available balance.\n+    virtual CAmount getAvailableBalance(const CCoinControl& coin_control) = 0;\n+\n+    //! Return whether transaction input belongs to wallet.\n+    virtual isminetype txinIsMine(const CTxIn& txin) = 0;\n+\n+    //! Return whether transaction output belongs to wallet.\n+    virtual isminetype txoutIsMine(const CTxOut& txout) = 0;\n+\n+    //! Return debit amount if transaction input belongs to wallet.\n+    virtual CAmount getDebit(const CTxIn& txin, isminefilter filter) = 0;\n+\n+    //! Return credit amount if transaction input belongs to wallet.\n+    virtual CAmount getCredit(const CTxOut& txout, isminefilter filter) = 0;\n+\n+    //! Return AvailableCoins + LockedCoins grouped by wallet address.\n+    //! (put change in one group with wallet address)\n+    using CoinsList = std::map<CTxDestination, std::vector<std::tuple<COutPoint, WalletTxOut>>>;\n+    virtual CoinsList listCoins() = 0;\n+\n+    //! Return wallet transaction output information.\n+    virtual std::vector<WalletTxOut> getCoins(const std::vector<COutPoint>& outputs) = 0;\n+\n+    // Return whether HD enabled.\n+    virtual bool hdEnabled() = 0;\n+\n+    // Get default address type.\n+    virtual OutputType getDefaultAddressType() = 0;\n+\n+    // Get default change type.\n+    virtual OutputType getDefaultChangeType() = 0;\n+\n+    //! Register handler for show progress messages.\n+    using ShowProgressFn = std::function<void(const std::string& title, int progress)>;\n+    virtual std::unique_ptr<Handler> handleShowProgress(ShowProgressFn fn) = 0;\n+\n+    //! Register handler for status changed messages.\n+    using StatusChangedFn = std::function<void()>;\n+    virtual std::unique_ptr<Handler> handleStatusChanged(StatusChangedFn fn) = 0;\n+\n+    //! Register handler for address book changed messages.\n+    using AddressBookChangedFn = std::function<void(const CTxDestination& address,\n+        const std::string& label,\n+        bool is_mine,\n+        const std::string& purpose,\n+        ChangeType status)>;\n+    virtual std::unique_ptr<Handler> handleAddressBookChanged(AddressBookChangedFn fn) = 0;\n+\n+    //! Register handler for transaction changed messages.\n+    using TransactionChangedFn = std::function<void(const uint256& txid, ChangeType status)>;\n+    virtual std::unique_ptr<Handler> handleTransactionChanged(TransactionChangedFn fn) = 0;\n+\n+    //! Register handler for watchonly changed messages.\n+    using WatchOnlyChangedFn = std::function<void(bool have_watch_only)>;\n+    virtual std::unique_ptr<Handler> handleWatchOnlyChanged(WatchOnlyChangedFn fn) = 0;\n+};\n+\n+//! Tracking object returned by CreateTransaction and passed to CommitTransaction.\n+class PendingWalletTx\n+{\n+public:\n+    virtual ~PendingWalletTx() {}\n+\n+    //! Get transaction data.\n+    virtual const CTransaction& get() = 0;\n+\n+    //! Get virtual transaction size.\n+    virtual int64_t getVirtualSize() = 0;\n+\n+    //! Send pending transaction and commit to wallet.\n+    virtual bool commit(WalletValueMap value_map,\n+        WalletOrderForm order_form,\n+        std::string from_account,\n+        std::string& reject_reason) = 0;\n+};\n+\n+//! Information about one wallet address.\n+struct WalletAddress\n+{\n+    CTxDestination dest;\n+    isminetype is_mine;\n+    std::string name;\n+    std::string purpose;\n+\n+    WalletAddress(CTxDestination dest, isminetype is_mine, std::string name, std::string purpose)\n+        : dest(std::move(dest)), is_mine(is_mine), name(std::move(name)), purpose(std::move(purpose))\n+    {\n+    }\n+};\n+\n+//! Collection of wallet balances.\n+struct WalletBalances",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177504284",
      "id" : 177504284,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzUwNDI4NA==",
      "original_commit_id" : "19a268c1f500e0c8793da6714a9d093d57bfe8f7",
      "original_position" : 282,
      "path" : "src/interface/wallet.h",
      "position" : 286,
      "pull_request_review_id" : 107372769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177504284",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r178313816"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178313816"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177504284\r\n\r\n> Would it make sense to update the SetBalance() functions to take a WalletBalances as their arguments?\r\n\r\nDone in a415fa2845f843db2ceb6512537cbb2e63b5b474",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-30T15:38:53Z",
      "diff_hunk" : "@@ -0,0 +1,348 @@\n+#ifndef BITCOIN_INTERFACE_INTERFACES_H\n+#define BITCOIN_INTERFACE_INTERFACES_H\n+\n+#include <amount.h>                    // For CAmount\n+#include <pubkey.h>                    // For CTxDestination (CKeyID and CScriptID)\n+#include <script/ismine.h>             // For isminefilter, isminetype\n+#include <script/standard.h>           // For CTxDestination\n+#include <support/allocators/secure.h> // For SecureString\n+#include <ui_interface.h>              // For ChangeType\n+\n+#include <functional>\n+#include <map>\n+#include <memory>\n+#include <stdint.h>\n+#include <string>\n+#include <tuple>\n+#include <utility>\n+#include <vector>\n+\n+class CCoinControl;\n+class CKey;\n+class CWallet;\n+enum class OutputType;\n+struct CRecipient;\n+\n+namespace interface {\n+\n+class Handler;\n+class PendingWalletTx;\n+struct WalletAddress;\n+struct WalletBalances;\n+struct WalletTx;\n+struct WalletTxOut;\n+struct WalletTxStatus;\n+\n+using WalletOrderForm = std::vector<std::pair<std::string, std::string>>;\n+using WalletValueMap = std::map<std::string, std::string>;\n+\n+//! Interface for accessing a wallet.\n+class Wallet\n+{\n+public:\n+    virtual ~Wallet() {}\n+\n+    //! Encrypt wallet.\n+    virtual bool encryptWallet(const SecureString& wallet_passphrase) = 0;\n+\n+    //! Return whether wallet is encrypted.\n+    virtual bool isCrypted() = 0;\n+\n+    //! Lock wallet.\n+    virtual bool lock() = 0;\n+\n+    //! Unlock wallet.\n+    virtual bool unlock(const SecureString& wallet_passphrase) = 0;\n+\n+    //! Return whether wallet is locked.\n+    virtual bool isLocked() = 0;\n+\n+    //! Change wallet passphrase.\n+    virtual bool changeWalletPassphrase(const SecureString& old_wallet_passphrase,\n+        const SecureString& new_wallet_passphrase) = 0;\n+\n+    //! Back up wallet.\n+    virtual bool backupWallet(const std::string& filename) = 0;\n+\n+    //! Get wallet name.\n+    virtual std::string getWalletName() = 0;\n+\n+    // Get key from pool.\n+    virtual bool getKeyFromPool(bool internal, CPubKey& pub_key) = 0;\n+\n+    //! Get public key.\n+    virtual bool getPubKey(const CKeyID& address, CPubKey& pub_key) = 0;\n+\n+    //! Get private key.\n+    virtual bool getPrivKey(const CKeyID& address, CKey& key) = 0;\n+\n+    //! Return whether wallet has private key.\n+    virtual bool isSpendable(const CTxDestination& dest) = 0;\n+\n+    //! Return whether wallet has watch only keys.\n+    virtual bool haveWatchOnly() = 0;\n+\n+    //! Add or update address.\n+    virtual bool setAddressBook(const CTxDestination& dest, const std::string& name, const std::string& purpose) = 0;\n+\n+    // Remove address.\n+    virtual bool delAddressBook(const CTxDestination& dest) = 0;\n+\n+    //! Look up address in wallet, return whether exists.\n+    virtual bool getAddress(const CTxDestination& dest,\n+        std::string* name = nullptr,\n+        isminetype* is_mine = nullptr) = 0;\n+\n+    //! Get wallet address list.\n+    virtual std::vector<WalletAddress> getAddresses() = 0;\n+\n+    //! Add scripts to key store so old so software versions opening the wallet\n+    //! database can detect payments to newer address types.\n+    virtual void learnRelatedScripts(const CPubKey& key, OutputType type) = 0;\n+\n+    //! Add dest data.\n+    virtual bool addDestData(const CTxDestination& dest, const std::string& key, const std::string& value) = 0;\n+\n+    //! Erase dest data.\n+    virtual bool eraseDestData(const CTxDestination& dest, const std::string& key) = 0;\n+\n+    //! Get dest values with prefix.\n+    virtual std::vector<std::string> getDestValues(const std::string& prefix) = 0;\n+\n+    //! Lock coin.\n+    virtual void lockCoin(const COutPoint& output) = 0;\n+\n+    //! Unlock coin.\n+    virtual void unlockCoin(const COutPoint& output) = 0;\n+\n+    //! Return whether coin is locked.\n+    virtual bool isLockedCoin(const COutPoint& output) = 0;\n+\n+    //! List locked coins.\n+    virtual void listLockedCoins(std::vector<COutPoint>& outputs) = 0;\n+\n+    //! Create transaction.\n+    virtual std::unique_ptr<PendingWalletTx> createTransaction(const std::vector<CRecipient>& recipients,\n+        const CCoinControl& coin_control,\n+        bool sign,\n+        int& change_pos,\n+        CAmount& fee,\n+        std::string& fail_reason) = 0;\n+\n+    //! Return whether transaction can be abandoned.\n+    virtual bool transactionCanBeAbandoned(const uint256& txid) = 0;\n+\n+    //! Abandon transaction.\n+    virtual bool abandonTransaction(const uint256& txid) = 0;\n+\n+    //! Return whether transaction can be bumped.\n+    virtual bool transactionCanBeBumped(const uint256& txid) = 0;\n+\n+    //! Create bump transaction.\n+    virtual bool createBumpTransaction(const uint256& txid,\n+        const CCoinControl& coin_control,\n+        CAmount total_fee,\n+        std::vector<std::string>& errors,\n+        CAmount& old_fee,\n+        CAmount& new_fee,\n+        CMutableTransaction& mtx) = 0;\n+\n+    //! Sign bump transaction.\n+    virtual bool signBumpTransaction(CMutableTransaction& mtx) = 0;\n+\n+    //! Commit bump transaction.\n+    virtual bool commitBumpTransaction(const uint256& txid,\n+        CMutableTransaction&& mtx,\n+        std::vector<std::string>& errors,\n+        uint256& bumped_txid) = 0;\n+\n+    //! Get a transaction.\n+    virtual CTransactionRef getTx(const uint256& txid) = 0;\n+\n+    //! Get transaction information.\n+    virtual WalletTx getWalletTx(const uint256& txid) = 0;\n+\n+    //! Get list of all wallet transactions.\n+    virtual std::vector<WalletTx> getWalletTxs() = 0;\n+\n+    //! Try to get updated status for a particular transaction, if possible without blocking.\n+    virtual bool tryGetTxStatus(const uint256& txid,\n+        WalletTxStatus& tx_status,\n+        int& num_blocks,\n+        int64_t& adjusted_time) = 0;\n+\n+    //! Get transaction details.\n+    virtual WalletTx getWalletTxDetails(const uint256& txid,\n+        WalletTxStatus& tx_status,\n+        WalletOrderForm& order_form,\n+        bool& in_mempool,\n+        int& num_blocks,\n+        int64_t& adjusted_time) = 0;\n+\n+    //! Get balances.\n+    virtual WalletBalances getBalances() = 0;\n+\n+    //! Get balances if possible without blocking.\n+    virtual bool tryGetBalances(WalletBalances& balances, int& num_blocks) = 0;\n+\n+    //! Get balance.\n+    virtual CAmount getBalance() = 0;\n+\n+    //! Get available balance.\n+    virtual CAmount getAvailableBalance(const CCoinControl& coin_control) = 0;\n+\n+    //! Return whether transaction input belongs to wallet.\n+    virtual isminetype txinIsMine(const CTxIn& txin) = 0;\n+\n+    //! Return whether transaction output belongs to wallet.\n+    virtual isminetype txoutIsMine(const CTxOut& txout) = 0;\n+\n+    //! Return debit amount if transaction input belongs to wallet.\n+    virtual CAmount getDebit(const CTxIn& txin, isminefilter filter) = 0;\n+\n+    //! Return credit amount if transaction input belongs to wallet.\n+    virtual CAmount getCredit(const CTxOut& txout, isminefilter filter) = 0;\n+\n+    //! Return AvailableCoins + LockedCoins grouped by wallet address.\n+    //! (put change in one group with wallet address)\n+    using CoinsList = std::map<CTxDestination, std::vector<std::tuple<COutPoint, WalletTxOut>>>;\n+    virtual CoinsList listCoins() = 0;\n+\n+    //! Return wallet transaction output information.\n+    virtual std::vector<WalletTxOut> getCoins(const std::vector<COutPoint>& outputs) = 0;\n+\n+    // Return whether HD enabled.\n+    virtual bool hdEnabled() = 0;\n+\n+    // Get default address type.\n+    virtual OutputType getDefaultAddressType() = 0;\n+\n+    // Get default change type.\n+    virtual OutputType getDefaultChangeType() = 0;\n+\n+    //! Register handler for show progress messages.\n+    using ShowProgressFn = std::function<void(const std::string& title, int progress)>;\n+    virtual std::unique_ptr<Handler> handleShowProgress(ShowProgressFn fn) = 0;\n+\n+    //! Register handler for status changed messages.\n+    using StatusChangedFn = std::function<void()>;\n+    virtual std::unique_ptr<Handler> handleStatusChanged(StatusChangedFn fn) = 0;\n+\n+    //! Register handler for address book changed messages.\n+    using AddressBookChangedFn = std::function<void(const CTxDestination& address,\n+        const std::string& label,\n+        bool is_mine,\n+        const std::string& purpose,\n+        ChangeType status)>;\n+    virtual std::unique_ptr<Handler> handleAddressBookChanged(AddressBookChangedFn fn) = 0;\n+\n+    //! Register handler for transaction changed messages.\n+    using TransactionChangedFn = std::function<void(const uint256& txid, ChangeType status)>;\n+    virtual std::unique_ptr<Handler> handleTransactionChanged(TransactionChangedFn fn) = 0;\n+\n+    //! Register handler for watchonly changed messages.\n+    using WatchOnlyChangedFn = std::function<void(bool have_watch_only)>;\n+    virtual std::unique_ptr<Handler> handleWatchOnlyChanged(WatchOnlyChangedFn fn) = 0;\n+};\n+\n+//! Tracking object returned by CreateTransaction and passed to CommitTransaction.\n+class PendingWalletTx\n+{\n+public:\n+    virtual ~PendingWalletTx() {}\n+\n+    //! Get transaction data.\n+    virtual const CTransaction& get() = 0;\n+\n+    //! Get virtual transaction size.\n+    virtual int64_t getVirtualSize() = 0;\n+\n+    //! Send pending transaction and commit to wallet.\n+    virtual bool commit(WalletValueMap value_map,\n+        WalletOrderForm order_form,\n+        std::string from_account,\n+        std::string& reject_reason) = 0;\n+};\n+\n+//! Information about one wallet address.\n+struct WalletAddress\n+{\n+    CTxDestination dest;\n+    isminetype is_mine;\n+    std::string name;\n+    std::string purpose;\n+\n+    WalletAddress(CTxDestination dest, isminetype is_mine, std::string name, std::string purpose)\n+        : dest(std::move(dest)), is_mine(is_mine), name(std::move(name)), purpose(std::move(purpose))\n+    {\n+    }\n+};\n+\n+//! Collection of wallet balances.\n+struct WalletBalances",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r178313816",
      "id" : 178313816,
      "in_reply_to_id" : 177504284,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODMxMzgxNg==",
      "original_commit_id" : "19a268c1f500e0c8793da6714a9d093d57bfe8f7",
      "original_position" : 282,
      "path" : "src/interface/wallet.h",
      "position" : 286,
      "pull_request_review_id" : 108360236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178313816",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r178313918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178313918"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177500262\r\n\r\n> You no longer need the following includes:\r\n\r\nThanks, ran IWYU in 901ffe77d75e318458dc7544b822181515498265, which got rid of everything you listed except:\r\n\r\n```diff\r\n+#include <ui_interface.h>                 // for ChangeType, CClientUIInterface\r\n+#include <util.h>                         // for ArgsManager, gArgs\r\n+#include <wallet/wallet.h>                // for CRecipient, DEFAULT_DISABLE...\r\n```",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-30T15:39:29Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n #include <qt/transactiontablemodel.h>\n \n #include <chain.h>\n+#include <interface/handler.h>\n+#include <interface/node.h>\n #include <key_io.h>\n #include <keystore.h>\n #include <validation.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r178313918",
      "id" : 178313918,
      "in_reply_to_id" : 177500262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODMxMzkxOA==",
      "original_commit_id" : "19a268c1f500e0c8793da6714a9d093d57bfe8f7",
      "original_position" : 8,
      "path" : "src/qt/walletmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 108360236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178313918",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r178313950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178313950"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177492485\r\n\r\n> I think this comment is now invalid Get required locks upfront...\r\n\r\nThanks, updated comment in 21af27fce86a7332f61eaa848f1322fd895186e3.\r\n\r\n",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-30T15:39:37Z",
      "diff_hunk" : "@@ -120,52 +80,30 @@ void WalletModel::pollBalanceChanged()\n     // Get required locks upfront. This avoids the GUI from getting stuck on",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r178313950",
      "id" : 178313950,
      "in_reply_to_id" : 177492485,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODMxMzk1MA==",
      "original_commit_id" : "19a268c1f500e0c8793da6714a9d093d57bfe8f7",
      "original_position" : 85,
      "path" : "src/qt/walletmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 108360236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178313950",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r178313980"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178313980"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r177496852\r\n\r\n> Any reason to leave this code block in\r\n\r\nCleaned up in b567137579942826a3dd80d0af21b651728f379e",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-03-30T15:39:44Z",
      "diff_hunk" : "@@ -429,39 +357,33 @@ bool WalletModel::setWalletLocked(bool locked, const SecureString &passPhrase)\n     if(locked)\n     {\n         // Lock\n-        return wallet->Lock();\n+        return m_wallet->lock();\n     }\n     else\n     {\n         // Unlock\n-        return wallet->Unlock(passPhrase);\n+        return m_wallet->unlock(passPhrase);\n     }\n }\n \n bool WalletModel::changePassphrase(const SecureString &oldPass, const SecureString &newPass)\n {\n     bool retval;\n     {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r178313980",
      "id" : 178313980,
      "in_reply_to_id" : 177496852,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODMxMzk4MA==",
      "original_commit_id" : "19a268c1f500e0c8793da6714a9d093d57bfe8f7",
      "original_position" : 296,
      "path" : "src/qt/walletmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 108360236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178313980",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs rebase to fix unrelated travis failure",
      "created_at" : "2018-04-02T19:54:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-378025592",
      "id" : 378025592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-04-02T19:54:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378025592",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Needs rebase to fix unrelated travis failure\r\n\r\nRebased 4bf295201d0f1059d9670329cb412fd074910319 -> e73a9f589f6ddeb0e350d887cd1f98fc55aac632 ([pr/ipc-local.66](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-local.66) -> [pr/ipc-local.67](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-local.67)). Looks like failure in mempool_persist test: https://travis-ci.org/bitcoin/bitcoin/jobs/361243719#L2810\r\n",
      "created_at" : "2018-04-02T20:32:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-378035305",
      "id" : 378035305,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-04-02T20:32:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378035305",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Looks like failure in mempool_persist test\r\n\r\nAh. The new linter lint-include-guards was also failing, which is what required a rebase.\r\n\r\nI think mempool_persist was broken by https://github.com/bitcoin/bitcoin/commit/cb1e319fe9e198c9c5cf5236fe9af5a3d748b9e8. Will open an issue.",
      "created_at" : "2018-04-02T20:45:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-378038612",
      "id" : 378038612,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-04-02T20:45:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378038612",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased e73a9f589f6ddeb0e350d887cd1f98fc55aac632 -> 4678ff464f03c09feb0e237343f2af329293343a ([pr/ipc-local.67](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-local.67) -> [pr/ipc-local.68](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-local.68)) due to conflict with #12846.\r\n",
      "created_at" : "2018-04-03T18:43:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-378355104",
      "id" : 378355104,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-04-03T18:43:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378355104",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj or @jonasschnelli I wonder if it may be a good time to merge this given recent testing and discussion (https://botbot.me/freenode/bitcoin-core-dev/msg/98388625/). Review status:\r\n\r\nTested ACKs\r\n\r\n- jnewbery https://github.com/bitcoin/bitcoin/pull/10244#pullrequestreview-107372769, partial code review\r\n- jamesob https://github.com/bitcoin/bitcoin/pull/10244#pullrequestreview-107016963\r\n- Sjors https://github.com/bitcoin/bitcoin/pull/10244#pullrequestreview-103872908\r\n\r\nConcept ACKs\r\n\r\n- MeshCollider https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-373184202\r\n- sipa https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-371883024\r\n- jonasschnelli https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-308738280\r\n- laanwj https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-308731640\r\n\r\nAll the changes in this PR are limited to the GUI code and only affect bitcoin-qt (not bitcoind).",
      "created_at" : "2018-04-03T18:52:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-378357905",
      "id" : 378357905,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-04-03T18:52:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378357905",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Tested ACK https://github.com/bitcoin/bitcoin/pull/10244/commits/4678ff464f03c09feb0e237343f2af329293343a\r\n\r\nRan through the same test plan I posted above earlier.",
      "created_at" : "2018-04-03T19:27:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-378367728",
      "id" : 378367728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-04-03T19:27:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378367728",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Some linter unhappiness: <img width=\"973\" alt=\"schermafbeelding 2018-04-04 om 15 11 55\" src=\"https://user-images.githubusercontent.com/10217/38309519-8e2f08b2-381a-11e8-9119-f6d0ae63db5f.png\">",
      "created_at" : "2018-04-04T13:13:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-378594816",
      "id" : 378594816,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-04-04T13:13:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378594816",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Some linter unhappiness\r\n\r\n~Rebasing on master will resolve this.~\r\n\r\nEdit: oops, not true.",
      "created_at" : "2018-04-04T13:23:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-378597999",
      "id" : 378597999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-04-04T14:15:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378597999",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r179152418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179152418"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"wrong\" include guard. Also might want to add the usual (c) header?",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2018-04-04T14:07:16Z",
      "diff_hunk" : "@@ -0,0 +1,348 @@\n+#ifndef BITCOIN_INTERFACE_INTERFACES_H\n+#define BITCOIN_INTERFACE_INTERFACES_H",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r179152418",
      "id" : 179152418,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTE1MjQxOA==",
      "original_commit_id" : "4678ff464f03c09feb0e237343f2af329293343a",
      "original_position" : 2,
      "path" : "src/interface/wallet.h",
      "position" : null,
      "pull_request_review_id" : 109341594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2018-04-04T21:05:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179152418",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated 4678ff464f03c09feb0e237343f2af329293343a -> 996013769711bd507cdcd6dde88cbd59fcd4fbad ([pr/ipc-local.68](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-local.68) -> [pr/ipc-local.69](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-local.69)) from https://github.com/jnewbery/bitcoin/commits/pr10244_fix_guards_copyright (thanks @jnewbery!). Only change is fixing the bad include guard and adding copyrights.",
      "created_at" : "2018-04-04T21:07:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-378745529",
      "id" : 378745529,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-04-04T21:08:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378745529",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Congrats. Ã°ÂÂÂ ",
      "created_at" : "2018-04-06T02:19:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-379130038",
      "id" : 379130038,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-04-06T02:19:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379130038",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/87?v=4",
         "events_url" : "https://api.github.com/users/tmornini/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tmornini/followers",
         "following_url" : "https://api.github.com/users/tmornini/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tmornini/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tmornini",
         "id" : 87,
         "login" : "tmornini",
         "organizations_url" : "https://api.github.com/users/tmornini/orgs",
         "received_events_url" : "https://api.github.com/users/tmornini/received_events",
         "repos_url" : "https://api.github.com/users/tmornini/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tmornini/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tmornini/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tmornini"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This PR broke the gitian build on windows\r\nhttps://bitcoin.jonasschnelli.ch/builds/559/build_win.log",
      "created_at" : "2018-04-07T05:54:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-379434756",
      "id" : 379434756,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-04-07T05:54:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379434756",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> This PR broke the gitian build on windows\r\n\r\nError is:\r\n\r\n```c++\r\nqt/guiutil.cpp:235:24: error: Ã¢ÂÂNodeÃ¢ÂÂ in namespace Ã¢ÂÂ::Ã¢ÂÂ does not name a type\r\n bool isDust(interface::Node& node, const QString& address, const CAmount& amount)\r\n                        ^\r\nqt/guiutil.cpp: In function Ã¢ÂÂbool GUIUtil::isDust(int&, const QString&, const CAmount&)Ã¢ÂÂ:\r\nqt/guiutil.cpp:240:31: error: request for member Ã¢ÂÂgetDustRelayFeeÃ¢ÂÂ in Ã¢ÂÂnodeÃ¢ÂÂ, which is of non-class type Ã¢ÂÂintÃ¢ÂÂ\r\n     return IsDust(txOut, node.getDustRelayFee());\r\n```\r\n\r\nIt seems like this is happening because microsoft has some headers that do `#define interface struct`: https://stackoverflow.com/questions/25234203/what-is-the-interface-keyword-in-msvc\r\n\r\nI think I'll open a followup PR to rename `interface` directory & namespace to `interfaces` to avoid this problem.",
      "created_at" : "2018-04-07T07:26:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-379442647",
      "id" : 379442647,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
      "updated_at" : "2018-04-07T07:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379442647",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r378452145"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378452145"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Remove most direct bitcoin calls from qt/walletmodel.cpp\" (a0704a8996bb950ae3c4d5b5a30e9dfe34cde1d3)\r\n\r\nBug here: `m_node.getNumBlocks()` should have been just `numBlocks`, see #18123",
      "commit_id" : "996013769711bd507cdcd6dde88cbd59fcd4fbad",
      "created_at" : "2020-02-12T19:04:19Z",
      "diff_hunk" : "@@ -117,55 +77,34 @@ void WalletModel::updateStatus()\n \n void WalletModel::pollBalanceChanged()\n {\n-    // Get required locks upfront. This avoids the GUI from getting stuck on\n-    // periodical polls if the core is holding the locks for a longer time -\n-    // for example, during a wallet rescan.\n-    TRY_LOCK(cs_main, lockMain);\n-    if(!lockMain)\n-        return;\n-    TRY_LOCK(wallet->cs_wallet, lockWallet);\n-    if(!lockWallet)\n+    // Try to get balances and return early if locks can't be acquired. This\n+    // avoids the GUI from getting stuck on periodical polls if the core is\n+    // holding the locks for a longer time - for example, during a wallet\n+    // rescan.\n+    interface::WalletBalances new_balances;\n+    int numBlocks = -1;\n+    if (!m_wallet->tryGetBalances(new_balances, numBlocks)) {\n         return;\n+    }\n \n-    if(fForceCheckBalanceChanged || chainActive.Height() != cachedNumBlocks)\n+    if(fForceCheckBalanceChanged || m_node.getNumBlocks() != cachedNumBlocks)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10244#discussion_r378452145",
      "id" : 378452145,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1MjE0NQ==",
      "original_commit_id" : "a0704a8996bb950ae3c4d5b5a30e9dfe34cde1d3",
      "original_position" : 107,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 130,
      "pull_request_review_id" : 357709982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
      "updated_at" : "2020-02-12T19:04:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378452145",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
