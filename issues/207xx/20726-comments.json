[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25156](https://github.com/bitcoin/bitcoin/pull/25156) (refactor: Introduce PeerManagerImpl::RejectIncomingTxs by MarcoFalke)\n* [#24970](https://github.com/bitcoin/bitcoin/pull/24970) (net processing: Move cleanSubVer, fPreferredDownload and nLocalHostNonce to Peer by jnewbery)\n* [#24128](https://github.com/bitcoin/bitcoin/pull/24128) (wallet: BIP 326 sequence based anti-fee-snipe for taproot inputs by MarcoFalke)\n* [#23443](https://github.com/bitcoin/bitcoin/pull/23443) (p2p: Erlay support signaling by naumenkogs)\n* [#22778](https://github.com/bitcoin/bitcoin/pull/22778) (net processing: Reduce resource usage for inbound block-relay-only connections by jnewbery)\n* [#21515](https://github.com/bitcoin/bitcoin/pull/21515) (Erlay: bandwidth-efficient transaction relay protocol by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-12-20T00:26:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748544179",
      "id" : 748544179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODU0NDE3OQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748544179/reactions"
      },
      "updated_at" : "2022-05-19T08:12:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748544179",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r546324067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546324067"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We do relay transactions with manual peers, right?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-20T05:21:50Z",
      "diff_hunk" : "@@ -2566,6 +2572,33 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send blockrelay message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.\n+            pfrom.fDisconnect = true;\n+        }\n+        if (pfrom.IsInboundConn()) {\n+            pfrom.UpdateConnectionType(ConnectionType::INBOUND_BLOCK_RELAY);\n+        }\n+        // If an outbound peer (manual or block-relay-only) sends us this\n+        // message, we just ignore it. We won't relay transactions with such",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r546324067",
      "id" : 546324067,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMyNDA2Nw==",
      "original_commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "original_line" : 2597,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 555987112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546324067",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-12-20T08:27:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748578410",
      "id" : 748578410,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODU3ODQxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-05T22:20:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748578410",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-12-20T12:02:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748598786",
      "id" : 748598786,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODU5ODc4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-20T12:02:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748598786",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK to having a way to not send `addr` messages to inbound block-relay-only peers.\r\n\r\nDid you consider doing this implicitly, i.e. only consider a peer an addr-relay peer if:\r\n\r\n1. it's an outbound peer that isn't block-relay-peer; or\r\n2. it's an inbound peer and we've received an `addr`, `addrv2` or `getaddr` from the peer.\r\n\r\nFor inbound peers we would defer initializing the addr-relay data structures and considering the peer an addr-relay peer until we receive the first address traffic from it.\r\n\r\nI think this would achieve the goals you want (reduce bandwidth, avoid relaying addresses to black holes, potentially reduce memory usage in future) without the need for a protocol change.",
      "created_at" : "2020-12-20T12:32:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748601961",
      "id" : 748601961,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODYwMTk2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-20T13:34:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748601961",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa Thanks for taking a look!\r\n\r\n> If I understand it correctly, the BIP idea doesn't concern itself with this being outbound->inbound or not, but the implementation only ever announces it in the outbound direction, and will disconnect if it's received from a (full) outbound peer. Is that worth pointing out (e.g. \"Peers MAY decide to not serve peers that announce this flag\").\r\n\r\nYes good observation.  When I was working on this, I realized that there was no protocol need to restrict this as being a message from inbound->outbound peer, so while I didn't have an immediate use case for outbound peers sending this message to inbound ones, I also thought there seemed to be little downside to permitting it in the future.\r\n\r\nThe only case where I thought it could be problematic is if we connect out to a peer that we expect to be a full-relay peer, and it turns out the peer tells us we won't get any transactions from them -- in this case I think we ought to disconnect.  (Arguably it's a bug that today we don't do this when we get fRelay=false from such a peer in their version message.)\r\n\r\nI'll update the BIP to reflect that peers should feel free to use this information in deciding who to stay connected to.\r\n\r\n> Should interaction with tx-relay specific other messages like mempool, filterload, filteradd, filterclear, feefilter be specified (e.g. these messages are disabled/forbidden/ignored on block only connections)?\r\n\r\nYes, I should both specify that those messages are not permitted, and I think disconnect peers who send them to us after negotiating BLOCKRELAY. I think this will require an extra piece of state for outbound peers who might send us a BLOCKRELAY message, but that seems no big deal.\r\n \r\n> Maybe it's worth pointing out that blocktxn/getblocktxn still function?\r\n\r\nI'll update the BIP to explicitly reflect this as well.\r\n",
      "created_at" : "2020-12-20T16:52:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748632153",
      "id" : 748632153,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODYzMjE1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-20T16:52:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748632153",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r546402275"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546402275"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I should update the comment to be clearer. What I meant to describe was that we only disconnect an outbound peer who sends us the BLOCKRELAY message if we expect them to be a tx-relay or addr-relay peer.  If we are connecting to them as a MANUAL connection, then we'll stay connected and just not relay transactions on that link.\r\n\r\nIn addition to fixing the comment, I could improve the code to ensure we don't advertise addrs to such peers either -- I think that will be easy to do at the same time that I ensure that a BLOCKRELAY peer doesn't send us other disallowed messages (mempool, filterload/add/clear, etc).",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-20T16:56:53Z",
      "diff_hunk" : "@@ -2566,6 +2572,33 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send blockrelay message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.\n+            pfrom.fDisconnect = true;\n+        }\n+        if (pfrom.IsInboundConn()) {\n+            pfrom.UpdateConnectionType(ConnectionType::INBOUND_BLOCK_RELAY);\n+        }\n+        // If an outbound peer (manual or block-relay-only) sends us this\n+        // message, we just ignore it. We won't relay transactions with such",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r546402275",
      "id" : 546402275,
      "in_reply_to_id" : 546324067,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMjI3NQ==",
      "original_commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "original_line" : 2597,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 556034286,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546402275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : " > Did you consider doing this implicitly, i.e. only consider a peer an addr-relay peer if:\r\n\r\n@jnewbery I think we could improve addr-relay by making guesses about our peers, but it seems to me that the logic is much clearer if we just explicitly add support for peers telling each other what they're trying to do.  Updating the protocol with a new message type is not particularly difficult or costly; having implementations guess at what a peer is doing based on observed behavior seems much more error-prone and increases the maintenance burden on the project with additional code complexity.\r\n\r\nI'd go further and suggest that in the future, we consider adding some kind of p2p message to explicitly negotiate addr-relay behavior (perhaps by indicating for which networks a peer is interested in gossiping addresses).\r\n\r\n> 1. it's an outbound peer that isn't block-relay-peer; or\r\n> 2. it's an inbound peer and we've received an `addr`, `addrv2` or `getaddr` from the peer.\r\n> \r\n> For inbound peers we would defer initializing the addr-relay data structures and considering the peer an addr-relay peer until we receive the first address traffic from it.\r\n> \r\n> I think this would achieve the goals you want (reduce bandwidth, avoid relaying addresses to black holes, potentially reduce memory usage in future) without the need for a protocol change.\r\n\r\nI don't think this would achieve a nice way to eliminate the `m_tx_relay` pointer that we keep per-peer, because the existing protocol doesn't have a good way to communicate that transaction relay will never be enabled on the link.  At any rate, finding a workaround to try to infer the desired behavior seems unnecessarily complex -- better to document it in a BIP and add a simple way to understand what is happening.",
      "created_at" : "2020-12-21T03:55:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748742978",
      "id" : 748742978,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODc0Mjk3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-21T03:55:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748742978",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm not suggesting that we make guesses or have workarounds. The proposal is that peers opt in to address relay by relaying addresses. That's the most reliable heuristic we have, and it works reliably for all peers on the network, not just those that have upgraded to version 70018. This would work today with clients that connect to us and that are addr relay black holes.\r\n\r\n> ... increases the maintenance burden on the project with additional code complexity.\r\n\r\nI've implemented my suggestion here: https://github.com/bitcoin/bitcoin/compare/master...jnewbery:2020-12-implicit-addr-relay?expand=1. It's a 20 line change, and doesn't seem too complex.\r\n\r\n> I don't think this would achieve a nice way to eliminate the m_tx_relay pointer that we keep per-peer, because the existing protocol doesn't have a good way to communicate that transaction relay will never be enabled on the link.\r\n\r\nI didn't implement this on my branch, but it'd be easy to do. Just defer initializing the m_tx_relay pointer until the peer has implicitly opted in to tx relay (but that seems to be a different issue from what you're trying to accomplish in this PR).\r\n\r\nOne problem with a new `blockrelay` message is that it's peculiarly specific to the Bitcoin Core implementation at this point in time. It's the first feature negotiation message that opts _out_ of certain features (`tx`, `inv`, `getdata(tx)`) but remains silent on other features or potential future features (are cfilters supported on inbound-block-relay peers? What about Erlay/`sendrecon`/etc?)",
      "created_at" : "2020-12-21T09:39:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748876374",
      "id" : 748876374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODg3NjM3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-21T09:39:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748876374",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I've implemented my suggestion here: https://github.com/bitcoin/bitcoin/compare/master...jnewbery:2020-12-implicit-addr-relay?expand=1. It's a 20 line change, and doesn't seem too complex.\r\n\r\nThe downside to an approach like this (for both `m_addr_known` and `m_tx_relay`) is that we don't get the benefit of limiting and bounding the resources that will be used on the peer at the time of connection.  Adding a p2p message that is sent at the start of a connection (such as the one proposed here) allows us to do that.  Once we have a way to bound the resources of a peer that is connecting to us with this intent, I plan to propose that we increase the number of inbound connection slots that we can service, and reserve some of those for BLOCKRELAY peers.  From there, I think we could then start to increase the number of outbound block-relay-only connections we make without concern that we are taking over too many inbound connection slots on the network or using up too many node resources.\r\n\r\nFor some additional context, please see https://github.com/bitcoin/bitcoin/pull/15759#issuecomment-480400958 and https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688918364.  Note also the ambiguity of our current approach to guessing that a peer is an inbound-block-relay-only peer, such as was done in #19670.",
      "created_at" : "2020-12-21T17:25:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-749097571",
      "id" : 749097571,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0OTA5NzU3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-21T17:25:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749097571",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar Thanks for the additional context. This makes much more sense to me now that I understand the longer term plan. The change in #19670 to favour inbound-block-relay-only peers also makes much more sense when we're limiting the memory usage of inbound-block-relay-only peers.\r\n\r\nConcept ACK.",
      "created_at" : "2020-12-22T13:34:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-749542537",
      "id" : 749542537,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0OTU0MjUzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-22T13:34:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749542537",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Limpisey168 If you're going to review, please leave meaningful comments.",
      "created_at" : "2020-12-23T19:00:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-750431457",
      "id" : 750431457,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MDQzMTQ1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-23T19:00:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/750431457",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548346466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548346466"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Does it make sense to have `m_conn_type` be `std::atomic` (rather than protected by a mutex) if updating it is going to also invalidate other members?\r\n\r\nIt's not clear to me that having `m_conn_type` be modified is actually the right approach -- we don't change the connection type when a peer wants us to send compact block announcements or not, eg. It might make more sense to have the connection type stay as \"inbound\" but have an extra flag for \"want blocks-only behaviour\" -- that flag could just be `m_tx_relay == nullptr` at which point you don't need to have locking to keep `m_tx_relay` and `m_conn_type` in sync. You still need something to ensure you don't free `m_tx_relay` while someone else might be using it, but that could be just changing it to a `shared_ptr`?\r\n\r\nActually, perhaps `m_tx_relay` simply shouldn't be allocated until you've received their VERACK, rather than contemplating deallocating it?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-24T01:51:17Z",
      "diff_hunk" : "@@ -558,6 +560,15 @@ Network CNode::ConnectedThroughNetwork() const\n     return IsInboundConn() && m_inbound_onion ? NET_ONION : addr.GetNetClass();\n }\n \n+void CNode::UpdateConnectionType(ConnectionType new_conn_type)\n+{\n+    assert(m_conn_type == ConnectionType::INBOUND);\n+    assert(new_conn_type == ConnectionType::INBOUND_BLOCK_RELAY);\n+    m_conn_type = new_conn_type;\n+    // We can now drop some unnecessary data structures.\n+    // TODO: deallocate m_tx_relay and m_addr_known.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548346466",
      "id" : 548346466,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM0NjQ2Ng==",
      "original_commit_id" : "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
      "original_line" : 569,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 558299565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548346466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548352366"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548352366"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Wouldn't \"BLKRELAYONLY\" be a better name for this concept, or even separating it out into its components as \"TXRELAY false\" and \"ADDRRELAY false\" ? Seems surprising that a \"BLOCKRELAY\" message would change tx and addr relay behaviour, but not change block relay behaviour...",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-24T02:20:00Z",
      "diff_hunk" : "@@ -2566,6 +2572,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548352366",
      "id" : 548352366,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM1MjM2Ng==",
      "original_commit_id" : "2668c8e239fa4d57e531cda2d9f572c0367bac3d",
      "original_line" : 2575,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 558299565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548352366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548359957"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548359957"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I thiiink this could be problematic if the peer sends two `BLOCKRELAY` messages in a row?\r\n\r\n- initially `ConnectionType::INBOUND` \r\n- they send first `BLOCKRELAY` message, we hit this code & update to `ConnectionType::INBOUND_BLOCK_RELAY`\r\n- they send another `BLOCKRELAY` message, we hit this code again because `IsInboundConn()` would be true \r\n- `UpdateConnectionType` is invoked, which asserts the connection type is `ConnectionType::INBOUND`. ",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-24T02:57:16Z",
      "diff_hunk" : "@@ -2566,6 +2572,33 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send blockrelay message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.\n+            pfrom.fDisconnect = true;\n+        }\n+        if (pfrom.IsInboundConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548359957",
      "id" : 548359957,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM1OTk1Nw==",
      "original_commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "original_line" : 2593,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 558313151,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548359957",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548774535"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548774535"
         }
      },
      "author_association" : "MEMBER",
      "body" : "why does this protocol version number get bumped by 2? ",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-25T01:33:43Z",
      "diff_hunk" : "@@ -9,7 +9,7 @@\n  * network protocol versioning\n  */\n \n-static const int PROTOCOL_VERSION = 70016;\n+static const int PROTOCOL_VERSION = 70018;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548774535",
      "id" : 548774535,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc3NDUzNQ==",
      "original_commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "original_line" : 12,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/version.h",
      "position" : null,
      "pull_request_review_id" : 558732015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548774535",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549180568"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549180568"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice found!\r\n\r\nIf the code purpose of the sequence of assert was to validate the `ConnectionType` state transition before to operate it, another approach could be to resort to a switch statement, far less harmful and easier to reason on ?\r\n\r\n```\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 8027723b5..086fbf227 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -562,11 +562,17 @@ Network CNode::ConnectedThroughNetwork() const\r\n \r\n void CNode::UpdateConnectionType(ConnectionType new_conn_type)\r\n {\r\n-    assert(m_conn_type == ConnectionType::INBOUND);\r\n-    assert(new_conn_type == ConnectionType::INBOUND_BLOCK_RELAY);\r\n-    m_conn_type = new_conn_type;\r\n-    // We can now drop some unnecessary data structures.\r\n-    // TODO: deallocate m_tx_relay and m_addr_known.\r\n+    switch (m_conn_type) {\r\n+        case ConnectionType::INBOUND:\r\n+            if (new_conn_type == ConnectionType::INBOUND_BLOCK_RELAY) m_conn_type = new_conn_type;\r\n+        case ConnectionType::INBOUND_BLOCK_RELAY:\r\n+        case ConnectionType::MANUAL:\r\n+        case ConnectionType::OUTBOUND_FULL_RELAY:\r\n+        case ConnectionType::BLOCK_RELAY:\r\n+        case ConnectionType::FEELER:\r\n+        case ConnectionType::ADDR_FETCH:\r\n+            break;\r\n+    }\r\n }\r\n \r\n #undef X\r\n```",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-28T00:24:03Z",
      "diff_hunk" : "@@ -2566,6 +2572,33 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send blockrelay message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.\n+            pfrom.fDisconnect = true;\n+        }\n+        if (pfrom.IsInboundConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549180568",
      "id" : 549180568,
      "in_reply_to_id" : 548359957,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE4MDU2OA==",
      "original_commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "original_line" : 2593,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 558966671,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549180568",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549181974"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549181974"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IIUC, after this commit, outbound block-relay-only peers are excluded from requesting addrs. Was this intended ? Further, the new connection type should already be excluded as `IsInboundConn` is extended in same commit.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-28T00:40:34Z",
      "diff_hunk" : "@@ -3522,7 +3522,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!pfrom.IsInboundConn() || !pfrom.RelayAddrsWithConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549181974",
      "id" : 549181974,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE4MTk3NA==",
      "original_commit_id" : "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
      "original_line" : 3525,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 558966671,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549181974",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549183959"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549183959"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wonder if the rational shouldn't be different. AFAICT, BLOCKRELAY aims to inform the connected node about the initiator expectations on traffic relayed on this link. So a connected node inverting the logic and announcing its link expectations will break the effect and force the initiator to adapt its peer resource allocation.\r\n\r\nI would say the restriction here is motivated only by the outboundness of the connection, the traffic class (tx, addr, block-relay) shouldn't matter. \r\n\r\nI think this PR and BIP introduce a \"one-way\" negotiation privilege for the initiator, which makes sense, but should this be documented in the BIP or stay an implicit assumption of our peer management policy ?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-28T01:01:50Z",
      "diff_hunk" : "@@ -2579,8 +2579,23 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             pfrom.fDisconnect = true;\n             return;\n         }\n-        // ignore this for now - later we can downgrade the resources allocated\n-        // to this peer.\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549183959",
      "id" : 549183959,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE4Mzk1OQ==",
      "original_commit_id" : "d99991704c17eff0a10fa9145b8dcce72f88bf87",
      "original_line" : 2583,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 558966671,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549183959",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549185589"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549185589"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is where I don't understand BIP following excerpt :\r\n\r\n> this is because the transaction relay field in the version message is not a permanent setting for the lifetime of the connection. Consequently, a node receiving an inbound connection with transaction relay disabled cannot distinguish between a peer that will never enable transaction relay and one that will.\r\n\r\nWhy do you mean exactly by \"is not a permanent setting\" ? Version message can only be received once (L2270). Further a peer which turns off tx-relay but then starts to relay tx would break its connection negotiation commitment and as such should be disconnected ? I don't think we do this for now. \r\n\r\nAnd even further when we pick up a peer as a block-relay-only one, we have no word to say in its choice of turning off tx-relay field or not ?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-28T01:17:27Z",
      "diff_hunk" : "@@ -2579,8 +2579,23 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             pfrom.fDisconnect = true;\n             return;\n         }\n-        // ignore this for now - later we can downgrade the resources allocated\n-        // to this peer.\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549185589",
      "id" : 549185589,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE4NTU4OQ==",
      "original_commit_id" : "d99991704c17eff0a10fa9145b8dcce72f88bf87",
      "original_line" : 2821,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 558966671,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549185589",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549434277"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549434277"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@ariard If I am reading this correctly, outbound-block-relay peers would not get a response to `getaddr` even prior to this commit.\r\n\r\nI am not sure I understand how the new connection type should already be excluded as:\r\n```\r\n!pfrom.IsInboundConn() => ( !INBOUND && !INBOUND_BLOCK_RELAY )\r\n( !pfrom.IsInboundConn() || !pfrom.RelayAddrsWithConn() ) => ( !INBOUND || BLOCK_RELAY || INBOUND_BLOCK_RELAY )\r\n```",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-28T18:00:47Z",
      "diff_hunk" : "@@ -3522,7 +3522,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!pfrom.IsInboundConn() || !pfrom.RelayAddrsWithConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549434277",
      "id" : 549434277,
      "in_reply_to_id" : 549181974,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQzNDI3Nw==",
      "original_commit_id" : "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
      "original_line" : 3525,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 559244397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549434277",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549437514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549437514"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I am confused by what constitutes a new connection type v/s a negotiated feature of a connection. Other negotiated features that do not seem to change the connection type include `WTXIDRELAY`,`SENDADDRV2`, `SENDCMPCT`, etc.\r\n\r\nAs a starting point, I'd suggest that connection types imply (1) a different level of trust in the peer (eg. `INBOUND` vs `OUTBOUND`) or (2) connection limits(eg. 2 for `OUTBOUND_BLOCK_RELAY`, 1 for `FEELER`) and all other features are attributes of a connection.  This also opens up future possibilities for peers that want other combinations like block and addr relay, but no tx relay, etc.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-28T18:12:25Z",
      "diff_hunk" : "@@ -558,6 +560,15 @@ Network CNode::ConnectedThroughNetwork() const\n     return IsInboundConn() && m_inbound_onion ? NET_ONION : addr.GetNetClass();\n }\n \n+void CNode::UpdateConnectionType(ConnectionType new_conn_type)\n+{\n+    assert(m_conn_type == ConnectionType::INBOUND);\n+    assert(new_conn_type == ConnectionType::INBOUND_BLOCK_RELAY);\n+    m_conn_type = new_conn_type;\n+    // We can now drop some unnecessary data structures.\n+    // TODO: deallocate m_tx_relay and m_addr_known.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549437514",
      "id" : 549437514,
      "in_reply_to_id" : 548346466,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQzNzUxNA==",
      "original_commit_id" : "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
      "original_line" : 569,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 559244397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549437514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549439194"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549439194"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Out of curiosity, why must `BLOCKRELAY` be negotiated between `VERSION` and `VERACK`? The only reason I can think of is to avoid allocating (`m_tx_relay`, `m_addr_known`) altogether instead of allocating, then de-allocating. Is that correct?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-28T18:18:35Z",
      "diff_hunk" : "@@ -2566,6 +2572,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549439194",
      "id" : 549439194,
      "line" : 2859,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQzOTE5NA==",
      "original_commit_id" : "2668c8e239fa4d57e531cda2d9f572c0367bac3d",
      "original_line" : 2853,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 559244397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549439194",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549441869"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549441869"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would some users be using `-addnode` to start with a trusted peer that can then also provide addrs? If so, when we receive `BLOCKRELAY` from a `MANUAL` connection, and if addrman is empty, is it worth alerting the user by logging?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-28T18:22:10Z",
      "diff_hunk" : "@@ -2566,6 +2572,33 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send blockrelay message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.\n+            pfrom.fDisconnect = true;\n+        }\n+        if (pfrom.IsInboundConn()) {\n+            pfrom.UpdateConnectionType(ConnectionType::INBOUND_BLOCK_RELAY);\n+        }\n+        // If an outbound peer (manual or block-relay-only) sends us this\n+        // message, we just ignore it. We won't relay transactions with such",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549441869",
      "id" : 549441869,
      "in_reply_to_id" : 546324067,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ0MTg2OQ==",
      "original_commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "original_line" : 2597,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 559244397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549441869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549460093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460093"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wondered whether the better approach would be to add a new bool to indicate whether tx-relay is disabled (like we have for compact blocks, or sendheaders, etc), or to update the connection type like I've done here. \r\n\r\nMy hesitation to add a new bool was that it seemed counter to the recent work to refactor `net` to use connection types as an alternative to the bucket-of-bool's approach for deciding how to interact with a peer.  If we have a set of semantics that we understand go together for a given peer, it's nice for code readability to encode that as simply as possible.\r\n\r\nOn the other hand, my intention with the BIP was to allow future flexibility for what semantics might be possible (eg my intention is to allow for addr-relay to happen in the future if we add an explicit way to negotiate addr relay, as an example), so from that perspective, having a connection type perhaps implies too much of an understanding of what the peer may be doing.  And for inbound peers in particular, we never really know what they're doing, so perhaps having more than just \"inbound\" as a connection type may be misleading to future code readers as well.\r\n\r\nI like the idea of moving initialization of `m_tx_relay` to VERACK, but not sure if I'll end up tackling that here or deferring for the current refactoring work in progress to make more headway (I think we need to add a lock that guards access to the `m_tx_relay` pointer itself?)",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-28T19:23:07Z",
      "diff_hunk" : "@@ -558,6 +560,15 @@ Network CNode::ConnectedThroughNetwork() const\n     return IsInboundConn() && m_inbound_onion ? NET_ONION : addr.GetNetClass();\n }\n \n+void CNode::UpdateConnectionType(ConnectionType new_conn_type)\n+{\n+    assert(m_conn_type == ConnectionType::INBOUND);\n+    assert(new_conn_type == ConnectionType::INBOUND_BLOCK_RELAY);\n+    m_conn_type = new_conn_type;\n+    // We can now drop some unnecessary data structures.\n+    // TODO: deallocate m_tx_relay and m_addr_known.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549460093",
      "id" : 549460093,
      "in_reply_to_id" : 548346466,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2MDA5Mw==",
      "original_commit_id" : "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
      "original_line" : 569,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 559272325,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549460285"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460285"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How about `disabletx`?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-28T19:23:48Z",
      "diff_hunk" : "@@ -2566,6 +2572,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549460285",
      "id" : 549460285,
      "in_reply_to_id" : 548352366,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2MDI4NQ==",
      "original_commit_id" : "2668c8e239fa4d57e531cda2d9f572c0367bac3d",
      "original_line" : 2575,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 559272536,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460285",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549460466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460466"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I thought Erlay might be using one!",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-28T19:24:31Z",
      "diff_hunk" : "@@ -9,7 +9,7 @@\n  * network protocol versioning\n  */\n \n-static const int PROTOCOL_VERSION = 70016;\n+static const int PROTOCOL_VERSION = 70018;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549460466",
      "id" : 549460466,
      "in_reply_to_id" : 548774535,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2MDQ2Ng==",
      "original_commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "original_line" : 12,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/version.h",
      "position" : null,
      "pull_request_review_id" : 559272768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549876463"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549876463"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You're right that's an OR! Maybe we can rename `RelayAddrsWithConn()` to `IsFullConn` to reduce confusion, like other predicates on connection types. We're stretching slowly from the #19316 original goal of simplifying handling of connection types...",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-29T22:39:40Z",
      "diff_hunk" : "@@ -3522,7 +3522,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!pfrom.IsInboundConn() || !pfrom.RelayAddrsWithConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549876463",
      "id" : 549876463,
      "in_reply_to_id" : 549181974,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg3NjQ2Mw==",
      "original_commit_id" : "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
      "original_line" : 3525,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 559728666,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549876463",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549878735"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549878735"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@ariard Agreed; this is the motivation for #20729. Feel free to suggest naming improvements to the scripted diff there.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-29T22:50:25Z",
      "diff_hunk" : "@@ -3522,7 +3522,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!pfrom.IsInboundConn() || !pfrom.RelayAddrsWithConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549878735",
      "id" : 549878735,
      "in_reply_to_id" : 549181974,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg3ODczNQ==",
      "original_commit_id" : "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
      "original_line" : 3525,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 559730838,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549878735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549933501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549933501"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think we've got a few different ways in which nodes differ:\r\n\r\n 1. which random features they support (wtxid relay, compact blocks, addrv2; erlay, pkg relay, p2p encryption in the future) that might make things more efficient (and which we might prefer our connections to support) but don't really change anything\r\n 2. how much we trust them (manually privileged/selected, we chose them as an outbound, they chose us as an inbound)\r\n 3. why we've got the connection (manual setup for some higher level purpose, tx relay, block relay, feeler, addrfetch)\r\n 4. which limits we apply to them (8 outbounds, 2 outbound block relay, 115 (?) inbounds)\r\n\r\nWe should use bools instead of conn_type for random features (otherwise we either get an exponential explosion of types or have to sequence features), and I don't think trust/\"why\" really affects inbounds that only wants blocks or not, but it could make sense to have a new limit imply a new connection-type? Given the limits overlap a little (extra outbounds vs feelers), and what to do when you have extra peers requires looking at other data anyway, I'm not sure that's very convincing though.\r\n\r\nHmm, how much we \"trust\" a connection might change over the course of a connection in future if we allow random inbound peers to authenticate themselves to us... So I guess that leaves me thinking that we should have `const m_conn_type` representing our purpose in having the connection? (Different purposes meaning substantial changes in the protocol state machine -- eg, blocks only we deliberately opt out of tx and addr relay even if we otherwise support both, feelers we disconnect after verack, addrfetch we disconnect after getting addresses, inbounds we have different delays for and send VERSION later)\r\n\r\n> (I think we need to add a lock that guards access to the m_tx_relay pointer itself?)\r\n\r\nMaybe? I think there are already way more per-peer mutexes than are really useful...",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-30T04:42:53Z",
      "diff_hunk" : "@@ -558,6 +560,15 @@ Network CNode::ConnectedThroughNetwork() const\n     return IsInboundConn() && m_inbound_onion ? NET_ONION : addr.GetNetClass();\n }\n \n+void CNode::UpdateConnectionType(ConnectionType new_conn_type)\n+{\n+    assert(m_conn_type == ConnectionType::INBOUND);\n+    assert(new_conn_type == ConnectionType::INBOUND_BLOCK_RELAY);\n+    m_conn_type = new_conn_type;\n+    // We can now drop some unnecessary data structures.\n+    // TODO: deallocate m_tx_relay and m_addr_known.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549933501",
      "id" : 549933501,
      "in_reply_to_id" : 548346466,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkzMzUwMQ==",
      "original_commit_id" : "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
      "original_line" : 569,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 559778155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549933501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549933987"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549933987"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Sure, `disabletx` or `txrelay false` sound about the same to me; though opting-out vs opting-in still maybe seems odd?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2020-12-30T04:46:16Z",
      "diff_hunk" : "@@ -2566,6 +2572,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549933987",
      "id" : 549933987,
      "in_reply_to_id" : 548352366,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkzMzk4Nw==",
      "original_commit_id" : "2668c8e239fa4d57e531cda2d9f572c0367bac3d",
      "original_line" : 2575,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 559778579,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549933987",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">a block-relay-only connection today, our peer doesn't know that we don't want addr relay on the link\r\n\r\nThese seem like they're conceptually different topics, and treating them as the same seems like an implementation-specific thing...\r\n\r\n> only want blocks/compactblocks/headers to be sent on the link, and not transaction-relay traffic\r\n\r\nWhat is the purpose of compactblocks without transaction-relay traffic?\r\n\r\n>In the future, we can also save a bit of memory by not allocating (or deallocating) the peer data structures we maintain for transaction and address relay.\r\n\r\nCan't we do that today, just by not allocating it until we know the peer wants it?\r\n",
      "created_at" : "2021-01-03T01:02:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-753551432",
      "id" : 753551432,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzU1MTQzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T01:02:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753551432",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I agree with some of the other comments here that it seems too implementation-specific to encode \"relay blocks, don't relay txs, don't relay addrs\" in a single P2P message.\r\n\r\nI think a more general approach would be to introduce three new P2P messages for relay negotiation:\r\n\r\n- `sendblocks` to opt in to block relay (can be followed by `sendheaders` and `sendcmpct` for those features)\r\n- `sendtxs` to opt in to tx relay (can be followed by `wtxidrelay` for that feature)\r\n- `sendaddrs` to opt in to addr relay (can be followed by `sendaddrv2` for that feature)\r\n\r\n(we could argue about whether those new `send*` messages should include message bodies that communicate which sub-features to opt into, but that detail isn't important for this discussion)\r\n\r\nIf the peer's version is >= 70017, the peer must send those messages during the negotiation phase to opt in to those inventory relays.\r\n\r\nThat approach seems much more general and is closer to the existing feature negotiation mechanism we use (where all features are opt-in). It also avoids any confusion about how this mechanism interacts with possible future features.",
      "created_at" : "2021-01-03T10:56:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-753599400",
      "id" : 753599400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzU5OTQwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T10:56:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753599400",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r551944543"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551944543"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well my thinking is that the default on the network is that everything gets relayed, so the natural thing to add is an opt-out.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-01-05T13:53:15Z",
      "diff_hunk" : "@@ -2566,6 +2572,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r551944543",
      "id" : 551944543,
      "in_reply_to_id" : 548352366,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0NDU0Mw==",
      "original_commit_id" : "2668c8e239fa4d57e531cda2d9f572c0367bac3d",
      "original_line" : 2575,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 561803650,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551944543",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks all for the comments so far.  I've renamed the p2p message to \"disabletx\" to more clearly communicate what the effect of processing this message is.  Current draft is here: https://github.com/sdaftuar/bips/blob/2020-09-negotiate-block-relay/bip-disable-tx.mediawiki\r\n\r\nSome highlights, besides the message being renamed:\r\n * I've made it more explicit that the BIP37-related messages are disallowed\r\n * I've clarified that addr messages should be avoided for now, but could be sent/received if in the future we deploy a way to negotiate addr relay explicitly.  This accommodates existing software behavior without preventing us from cleanly separating these two ideas in the future.\r\n\r\nI don't think it makes sense to add a \"sendblocks\" p2p message, because there is no use case I'm aware of for connections on the p2p network to not want blocks (really, headers or block hashes, because unrequested blocks are themselves not widely supported on the network).  If there were such a use case, someone should feel free to propose this.  For now, I think it's sufficient for this use case -- of negotiating block-relay-only connections -- to disable transaction relay, and listening nodes can use the disabling of transaction relay as proposed here as a proxy for \"block-relay-only\" connections, to facilitate increased connection limits in the future.\r\n\r\nI do think that adding a way to opt-in to addr relay is desirable, however I think more research is required to figure out what that should look like.  Naively, I'd think it makes sense to opt-in to addr-relay on a per-network-type basis (as described in BIP 155), but how exactly that should work is intertwined with what relay strategies might make sense, and I would not feel comfortable proposing anything at this time (for instance, I'd say that we should clarify what the goals of address relay are, analyze what kinds of relay strategies optimize for that goal along with any DoS tradeoffs that might be introduced, and then determine what our own implementation might look like, before we finalize a specification).  If someone wants to work on such a proposal, I would encourage it.  However the current BIP was drafted with the goal of being compatible with any future work in this area so I don't think this should be a blocker.\r\n\r\nI'll wait a bit for more comments here, but my plan is to share this with the bitcoin-dev list soon and then return to the implementation questions that have come up so far.",
      "created_at" : "2021-01-05T15:04:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-754691586",
      "id" : 754691586,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NDY5MTU4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-05T15:05:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/754691586",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@amitiuttarwar Hopefully I addressed most of your comments/questions on the BIP and future direction I have in mind.  Just wanted to answer this:\r\n \r\n> * #19670 introduced a workaround to deduce inbound block-relay-only peers and protect them from eviction. After this PR, do you think we could revisit to make it more direct?\r\n\r\nI think we would wait until this has been deployed for a while and then (potentially) change the eviction logic.  Two things occur to me on this point:\r\n- Older software will continue to use the old way of (not) communicating their intentions, via the fRelayTxes flag. So to accommodate older software we may not want to switch to keying off this p2p message for a little while at least.\r\n- It seems most of the feedback has been to shy away from encoding overly broad semantics into a single p2p message; while I think that is fine it also means that from our peer's point of view, they will have to infer the connection \"type\" from the properties of the peer, rather than from the peer declaring its full intentions in a single message.  I think for now we can treat \"will never relay txes\" as essentially synonymous with these block-relay connections, but perhaps in the future there will be some distinction, and all a peer can do is rely on some set of flags that it might use to preference some peers over others -- which might put us exactly back to where we are today, with us just keying off of whether fRelayTxes is false, anyway.\r\n",
      "created_at" : "2021-01-05T18:04:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-754802089",
      "id" : 754802089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NDgwMjA4OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-05T18:04:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/754802089",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > a block-relay-only connection today, our peer doesn't know that we don't want addr relay on the link\r\n> \r\n> These seem like they're conceptually different topics, and treating them as the same seems like an implementation-specific thing...\r\n> \r\n\r\n> I agree with some of the other comments here that it seems too implementation-specific to encode \"relay blocks, don't relay txs, don't relay addrs\" in a single P2P message.\r\n\r\n@jnewbery @luke-jr I'm a bit confused about both of your critiques of this as too \"implementation-specific\".  The goal of the this BIP process is to standardize/formalize these block-relay-only connections in a useful way -- in my view, this behavior has been a good thing to introduce and we want to make more of these connections and so it is worth standardizing.  \r\n\r\nSo I think the question is what is the best way to include this in the protocol.  I think there are some good reasons to make this narrowly tailored to the exact thing we need -- disabling of transaction relay -- but we should be mindful that comes with some cost to how these connections can be understood by the recipient (now and going forward as the p2p protocol evolves), and therefore code complexity in the implementation.  At any rate, I think I'm happy with the latest draft that spells out clearly that transaction relay must be disabled, and address relay is discouraged in the absence of any explicit negotiation for it (leaving the door open for a future addr relay protocol to govern addr behavior).\r\n\r\n> What is the purpose of compactblocks without transaction-relay traffic?\r\n\r\n@luke-jr You asked this question back when block-relay-only connections were introduced (https://github.com/bitcoin/bitcoin/pull/15759#issuecomment-484634796), and I answered this question back then as well (https://github.com/bitcoin/bitcoin/pull/15759#issuecomment-484666402).  Nodes using these connections are welcome to also have full-relay connections to other peers, and therefore we might expect compact block relay to work just fine over block-relay-only links.  I would recommend looking at the logs of your own node(s) to see how well compact block relay works on the existing block-relay-only peers that we have; in my experience it works quite well with some block-relay-only peers being selected as HB peers (and vice versa).\r\n\r\nFrom the point of view of the BIP, software would be free to implement this proposal and not BIP 152, and just rely on `getdata` messages to request blocks.  Acceptance of this proposed BIP does not require acceptance/implementation of BIP 152.\r\n\r\n> > In the future, we can also save a bit of memory by not allocating (or deallocating) the peer data structures we maintain for transaction and address relay.\r\n> Can't we do that today, just by not allocating it until we know the peer wants it?\r\n\r\nAs I mention above, the goal is to be able to bound a peer's resource utilization at the time the connection is completed.  It would be unfortunate if a peer enabled tx relay later in a connection's lifetime and suddenly got disconnected just because we attempted to move it from one accounting bucket to another.\r\n\r\n\r\n\r\n\r\n",
      "created_at" : "2021-01-05T18:28:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-754816629",
      "id" : 754816629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NDgxNjYyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-05T18:28:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/754816629",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2021-01-10T19:06:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-757526893",
      "id" : 757526893,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NzUyNjg5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-10T19:06:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757526893",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r555788869"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555788869"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sending a FILTERCLEAR (at least, to a node with NODE_BLOOM set) will enable transaction relay; see BIP37.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-01-12T13:59:34Z",
      "diff_hunk" : "@@ -2579,8 +2579,23 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             pfrom.fDisconnect = true;\n             return;\n         }\n-        // ignore this for now - later we can downgrade the resources allocated\n-        // to this peer.\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r555788869",
      "id" : 555788869,
      "in_reply_to_id" : 549185589,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTc4ODg2OQ==",
      "original_commit_id" : "d99991704c17eff0a10fa9145b8dcce72f88bf87",
      "original_line" : 2821,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 566292381,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555788869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> it also means that from our peer's point of view, they will have to infer the connection \"type\" from the properties of the peer, rather than from the peer declaring its full intentions in a single message.  I think for now we can treat \"will never relay txes\" as essentially synonymous with these block-relay connections, but perhaps in the future there will be some distinction, and all a peer can do is rely on some set of flags that it might use to preference some peers over others -- which might put us exactly back to where we are today, with us just keying off of whether fRelayTxes is false, anyway.\r\n\r\nAs an update, I added the user-facing connection type implementation in the GUI and CLI -netinfo, and we currently have to do the inferring @sdaftuar describes in order to distinguish between inbound full and block relay connections rather than being able to depend on `m_conn_type` alone. It's a minor point, but from that perspective, having standard `{inbound, outbound}-{full, block}-relay` types, including `INBOUND_BLOCK_RELAY`, might be useful.\r\n\r\nEdit: I see this proposal is now smaller and has been changed; will review. Concept ACK on the BIP draft with the recommendation to not relay addrs.",
      "created_at" : "2021-01-12T16:06:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-758760165",
      "id" : 758760165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1ODc2MDE2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-12T16:06:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/758760165",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571284399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571284399"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could update the `RelayAddress` Doxygen documentation.\r\n```diff\r\n  * @param[in] connman Connection manager to choose nodes to relay to.\r\n+ * @param[in] peerman ...\r\n  */\r\n```\r\n",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-05T22:26:45Z",
      "diff_hunk" : "@@ -1630,7 +1645,8 @@ void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman&\n static void RelayAddress(const CNode& originator,\n                          const CAddress& addr,\n                          bool fReachable,\n-                         const CConnman& connman)\n+                         const CConnman& connman,\n+                         PeerManagerImpl* peerman)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571284399",
      "id" : 571284399,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTI4NDM5OQ==",
      "original_commit_id" : "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
      "original_line" : 1650,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 584750373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571284399",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571285093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571285093"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Some doc suggestions following recent updates on master to the wtxidrelay and addrv2 documentation immediately above\r\n```diff\r\n+    // BIPXXX defines feature negotiation of disabletx, which must happen\r\n+    // between VERSION and VERACK.\r\n     if (msg_type == NetMsgType::DISABLETX) {\r\n         if (pfrom.fSuccessfullyConnected) {\r\n-            // Disconnect peers that send this message after VERACK; this\r\n-            // must be negotiated between VERSION and VERACK.\r\n+            // Disconnect peers that send a disabletx message after VERACK.\r\n             pfrom.fDisconnect = true;\r\n             return;\r\n         }\r\n         if (pfrom.IsFullOutboundConn()) {\r\n-            // If we picked an outbound for tx-relay and it sends us a\r\n+            // If we picked an outbound for transaction relay and it sends us a\r\n             // disabletx, we want to find another peer.\r\n             pfrom.fDisconnect = true;\r\n             return;\r\n         }\r\n         if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\r\n-            // Can't send a DISABLETX message if they didn't turn off tx-relay\r\n-            // in the version message.\r\n+            // Can't send a disabletx message if they didn't turn off\r\n+            // transaction relay in the version message.\r\n             pfrom.fDisconnect = true;\r\n```\r\n",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-05T22:28:20Z",
      "diff_hunk" : "@@ -2781,6 +2803,30 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send this message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {\n+            // If we picked an outbound for tx-relay and it sends us a\n+            // disabletx, we want to find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a DISABLETX message if they didn't turn off tx-relay\n+            // in the version message.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571285093",
      "id" : 571285093,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTI4NTA5Mw==",
      "original_commit_id" : "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
      "original_line" : 2821,
      "original_position" : 89,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 584750373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571285093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571285535"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571285535"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    const PeerRef peer = GetPeerRef(pnode.GetId());\r\n```",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-05T22:29:30Z",
      "diff_hunk" : "@@ -891,6 +897,15 @@ void PeerManagerImpl::PushNodeVersion(CNode& pnode, int64_t nTime)\n     }\n }\n \n+bool PeerManagerImpl::IsAddrRelayPeer(const CNode& pnode)\n+{\n+    PeerRef peer = GetPeerRef(pnode.GetId());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571285535",
      "id" : 571285535,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTI4NTUzNQ==",
      "original_commit_id" : "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
      "original_line" : 902,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 584750373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571285535",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571286112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571286112"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\nstatic constexpr int PROTOCOL_VERSION = 70017;\r\n```",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-05T22:30:51Z",
      "diff_hunk" : "@@ -9,7 +9,7 @@\n  * network protocol versioning\n  */\n \n-static const int PROTOCOL_VERSION = 70016;\n+static const int PROTOCOL_VERSION = 70017;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571286112",
      "id" : 571286112,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTI4NjExMg==",
      "original_commit_id" : "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
      "original_line" : 12,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/version.h",
      "position" : null,
      "pull_request_review_id" : 584750373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571286112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571286206"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571286206"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\nstatic constexpr int DISABLE_TX_VERSION = 70017;\r\n```",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-05T22:31:05Z",
      "diff_hunk" : "@@ -38,6 +38,9 @@ static const int INVALID_CB_NO_BAN_VERSION = 70015;\n //! \"wtxidrelay\" command for wtxid-based relay starts with this version\n static const int WTXID_RELAY_VERSION = 70016;\n \n+//! \"disabletx\" message (eg used for block-relay-only connections) starts with this version\n+static const int DISABLE_TX_VERSION = 70017;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571286206",
      "id" : 571286206,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTI4NjIwNg==",
      "original_commit_id" : "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
      "original_line" : 42,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/version.h",
      "position" : null,
      "pull_request_review_id" : 584750373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571286206",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs rebase:\r\n\r\n```\r\nfuzz: test/fuzz/process_message.cpp:57: auto initialize_process_message()::(anonymous class)::operator()() const:\r\nAssertion `\"GetNumMsgTypes() == getAllNetMessageTypes().size()\" && check' failed.",
      "created_at" : "2021-02-11T10:47:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-777356958",
      "id" : 777356958,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NzM1Njk1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-11T10:47:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777356958",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649216"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-11T16:36:11Z",
      "diff_hunk" : "@@ -9,7 +9,7 @@\n  * network protocol versioning\n  */\n \n-static const int PROTOCOL_VERSION = 70016;\n+static const int PROTOCOL_VERSION = 70017;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649216",
      "id" : 574649216,
      "in_reply_to_id" : 571286112,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY0OTIxNg==",
      "original_commit_id" : "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
      "original_line" : 12,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/version.h",
      "position" : null,
      "pull_request_review_id" : 588755608,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649216",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649313"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-11T16:36:18Z",
      "diff_hunk" : "@@ -38,6 +38,9 @@ static const int INVALID_CB_NO_BAN_VERSION = 70015;\n //! \"wtxidrelay\" command for wtxid-based relay starts with this version\n static const int WTXID_RELAY_VERSION = 70016;\n \n+//! \"disabletx\" message (eg used for block-relay-only connections) starts with this version\n+static const int DISABLE_TX_VERSION = 70017;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649313",
      "id" : 574649313,
      "in_reply_to_id" : 571286206,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY0OTMxMw==",
      "original_commit_id" : "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
      "original_line" : 42,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/version.h",
      "position" : null,
      "pull_request_review_id" : 588755748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649313",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649434"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649434"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-11T16:36:28Z",
      "diff_hunk" : "@@ -891,6 +897,15 @@ void PeerManagerImpl::PushNodeVersion(CNode& pnode, int64_t nTime)\n     }\n }\n \n+bool PeerManagerImpl::IsAddrRelayPeer(const CNode& pnode)\n+{\n+    PeerRef peer = GetPeerRef(pnode.GetId());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649434",
      "id" : 574649434,
      "in_reply_to_id" : 571285535,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY0OTQzNA==",
      "original_commit_id" : "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
      "original_line" : 902,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 588755926,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649434",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649844"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-11T16:37:02Z",
      "diff_hunk" : "@@ -2781,6 +2803,30 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send this message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {\n+            // If we picked an outbound for tx-relay and it sends us a\n+            // disabletx, we want to find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a DISABLETX message if they didn't turn off tx-relay\n+            // in the version message.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649844",
      "id" : 574649844,
      "in_reply_to_id" : 571285093,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY0OTg0NA==",
      "original_commit_id" : "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
      "original_line" : 2821,
      "original_position" : 89,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 588756498,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649844",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649943"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-11T16:37:10Z",
      "diff_hunk" : "@@ -1630,7 +1645,8 @@ void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman&\n static void RelayAddress(const CNode& originator,\n                          const CAddress& addr,\n                          bool fReachable,\n-                         const CConnman& connman)\n+                         const CConnman& connman,\n+                         PeerManagerImpl* peerman)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649943",
      "id" : 574649943,
      "in_reply_to_id" : 571284399,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY0OTk0Mw==",
      "original_commit_id" : "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
      "original_line" : 1650,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 588756633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonatack Thanks for the review, I included your commit that adds the addrv2 test as well.",
      "created_at" : "2021-02-11T16:37:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-777626740",
      "id" : 777626740,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NzYyNjc0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-11T16:37:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777626740",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sdaftuar We seem to have a number of p2p commands now that are effectively just telling the peer which commands we want to/support receiving.  Maybe it's time for a command that just lists which commands we want/support?",
      "created_at" : "2021-02-11T19:29:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-777733904",
      "id" : 777733904,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NzczMzkwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-11T19:29:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777733904",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=4",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "node_id" : "MDQ6VXNlcjYyMDYxMQ==",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@pstratem I'm not opposed to that idea, but it seems to me that a change to the way feature negotiation works generally that incorporates existing p2p message negotiation could happen independently of this proposal, so I'd prefer not to gate this work on it.  If a proposal like that is ready for deployment before this, I'd be happy to change the implementation here.",
      "created_at" : "2021-02-11T19:33:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-777737035",
      "id" : 777737035,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NzczNzAzNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-11T19:33:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777737035",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575086380"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575086380"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in the first commit:\r\n\r\nThe other negotiation message types have a NET-debug log statement preceding this disconnect. Is there any reason to not log to NET-debug as well here?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-12T09:23:16Z",
      "diff_hunk" : "@@ -2784,6 +2790,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send this message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575086380",
      "id" : 575086380,
      "line" : 2874,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTA4NjM4MA==",
      "original_commit_id" : "e142e81c5145c61a0ba1e49d0b463e2825f6f418",
      "original_line" : 2868,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 47,
      "pull_request_review_id" : 589288483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575086380",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575125883"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575125883"
         }
      },
      "author_association" : "MEMBER",
      "body" : "unrelated style nit in the second commit: instead of passing connman and peerman, this could be made a member function of peerman. The following diff on top of this commit compiles for me. Though, this can also be done in a separate pull.\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex e9584ddac1..84ac462099 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -258,6 +258,9 @@ public:\r\n \r\n     /** Whether to relay addresses with a peer. */\r\n     bool IsAddrRelayPeer(const CNode& pnode);\r\n+    void RelayAddress(const CNode& originator,\r\n+                      const CAddress& addr,\r\n+                      bool fReachable);\r\n \r\n private:\r\n     /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\r\n@@ -1640,14 +1643,10 @@ void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman&\r\n  * @param[in] addr Address to relay.\r\n  * @param[in] fReachable Whether the address' network is reachable. We relay unreachable\r\n  * addresses less.\r\n- * @param[in] connman Connection manager to choose nodes to relay to.\r\n- * @param[in] peerman PeerManager implementation being used\r\n  */\r\n-static void RelayAddress(const CNode& originator,\r\n-                         const CAddress& addr,\r\n-                         bool fReachable,\r\n-                         const CConnman& connman,\r\n-                         PeerManagerImpl* peerman)\r\n+void PeerManagerImpl::RelayAddress(const CNode& originator,\r\n+                                   const CAddress& addr,\r\n+                                   bool fReachable)\r\n {\r\n     if (!fReachable && !addr.IsRelayable()) return;\r\n \r\n@@ -1655,7 +1654,7 @@ static void RelayAddress(const CNode& originator,\r\n     // Use deterministic randomness to send to the same nodes for 24 hours\r\n     // at a time so the m_addr_knowns of the chosen nodes prevent repeats\r\n     uint64_t hashAddr = addr.GetHash();\r\n-    const CSipHasher hasher = connman.GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY).Write(hashAddr << 32).Write((GetTime() + hashAddr) / (24 * 60 * 60));\r\n+    const CSipHasher hasher = m_connman.GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY).Write(hashAddr << 32).Write((GetTime() + hashAddr) / (24 * 60 * 60));\r\n     FastRandomContext insecure_rand;\r\n \r\n     // Relay reachable addresses to 2 peers. Unreachable addresses are relayed randomly to 1 or 2 peers.\r\n@@ -1664,7 +1663,7 @@ static void RelayAddress(const CNode& originator,\r\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\r\n     assert(nRelayNodes <= best.size());\r\n \r\n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, &peerman](CNode* pnode) {\r\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\r\n         if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {\r\n             uint64_t hashKey = CSipHasher(hasher).Write(pnode->GetId()).Finalize();\r\n             for (unsigned int i = 0; i < nRelayNodes; i++) {\r\n@@ -1683,7 +1682,7 @@ static void RelayAddress(const CNode& originator,\r\n         }\r\n     };\r\n \r\n-    connman.ForEachNodeThen(std::move(sortfunc), std::move(pushfunc));\r\n+    m_connman.ForEachNodeThen(std::move(sortfunc), std::move(pushfunc));\r\n }\r\n \r\n void static ProcessGetBlockData(CNode& pfrom, Peer& peer, const CChainParams& chainparams, const CInv& inv, CConnman& connman)\r\n@@ -2885,7 +2884,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\r\n             if (addr.nTime > nSince && !pfrom.fGetAddr && vAddr.size() <= 10 && addr.IsRoutable())\r\n             {\r\n                 // Relay to a limited number of other nodes\r\n-                RelayAddress(pfrom, addr, fReachable, m_connman, this);\r\n+                RelayAddress(pfrom, addr, fReachable);\r\n             }\r\n             // Do not store addresses outside our network\r\n             if (fReachable)\r\n",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-12T10:29:53Z",
      "diff_hunk" : "@@ -1626,11 +1641,13 @@ void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman&\n  * @param[in] fReachable Whether the address' network is reachable. We relay unreachable\n  * addresses less.\n  * @param[in] connman Connection manager to choose nodes to relay to.\n+ * @param[in] peerman PeerManager implementation being used\n  */\n static void RelayAddress(const CNode& originator,\n                          const CAddress& addr,\n                          bool fReachable,\n-                         const CConnman& connman)\n+                         const CConnman& connman,\n+                         PeerManagerImpl* peerman)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575125883",
      "id" : 575125883,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTEyNTg4Mw==",
      "original_commit_id" : "aa09a205ca8f05143250b97cfdd3f8ada809530c",
      "original_line" : 1650,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 589288483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575125883",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I am wondering why it is allowed to send a `disabletx` message and then follow up with a `tx` message. See also https://github.com/bitcoin/bips/pull/1052/files#r575130294 which raises the same question in the bip. Even if the bip stays as is, we might want to disallow `tx` messages as well, or is there some downside I am missing?\r\n\r\n<details><summary>The \"test\" I wrote</summary>\r\n\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_filter.py b/test/functional/p2p_filter.py\r\nindex 458e5235b6..d8c6b256ef 100755\r\n--- a/test/functional/p2p_filter.py\r\n+++ b/test/functional/p2p_filter.py\r\n@@ -18,6 +18,8 @@ from test_framework.messages import (\r\n     msg_getdata,\r\n     msg_mempool,\r\n     msg_version,\r\n+    msg_disabletx,\r\n+    msg_tx,\r\n )\r\n from test_framework.p2p import P2PInterface, p2p_lock\r\n from test_framework.script import MAX_SCRIPT_ELEMENT_SIZE\r\n@@ -205,14 +207,6 @@ class FilterTest(BitcoinTestFramework):\r\n         self.nodes[0].disconnect_p2ps()\r\n \r\n     def run_test(self):\r\n-        filter_peer = self.nodes[0].add_p2p_connection(P2PBloomFilter())\r\n-        self.log.info('Test filter size limits')\r\n-        self.test_size_limits(filter_peer)\r\n-\r\n-        self.log.info('Test BIP 37 for a node with fRelay = True (default)')\r\n-        self.test_filter(filter_peer)\r\n-        self.nodes[0].disconnect_p2ps()\r\n-\r\n         self.log.info('Test BIP 37 for a node with fRelay = False')\r\n         # Add peer but do not send version yet\r\n         filter_peer_without_nrelay = self.nodes[0].add_p2p_connection(P2PBloomFilter(), send_version=False, wait_for_verack=False)\r\n@@ -220,8 +214,14 @@ class FilterTest(BitcoinTestFramework):\r\n         version_without_fRelay = msg_version()\r\n         version_without_fRelay.nRelay = 0\r\n         filter_peer_without_nrelay.send_message(version_without_fRelay)\r\n+        filter_peer_without_nrelay.send_message(msg_disabletx())\r\n         filter_peer_without_nrelay.wait_for_verack()\r\n         assert not self.nodes[0].getpeerinfo()[0]['relaytxes']\r\n+        assert self.nodes[0].getpeerinfo()[0]['bytesrecv_per_msg']['disabletx'] == 24\r\n+        filter_peer_without_nrelay.send_message(msg_tx())\r\n+        assert self.nodes[0].getpeerinfo()[0]['bytesrecv_per_msg']['tx'] == 34\r\n+        filter_peer_without_nrelay.send_message(msg_filterclear())\r\n+        assert self.nodes[0].getpeerinfo()[0]['bytesrecv_per_msg']['tx'] == 34\r\n         self.test_frelay_false(filter_peer_without_nrelay)\r\n         self.test_filter(filter_peer_without_nrelay)\r\n \r\n```\r\n\r\n</details>",
      "created_at" : "2021-02-12T11:07:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-778130639",
      "id" : 778130639,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3ODEzMDYzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-12T11:07:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778130639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I am wondering why it is allowed to send a `disabletx` message and then follow up with a `tx` message. See also https://github.com/bitcoin/bips/pull/1052/files#r575130294 which raises the same question in the bip. Even if the bip stays as is, we might want to disallow `tx` messages as well, or is there some downside I am missing?\r\n\r\n@MarcoFalke The intent is to disallow sending a tx on such a link -- already it's the case that if we receive a transaction from a block-relay-only outbound peer that we'll disconnect them.  Once we no longer instantiate the `m_tx_relay` structure for inbound peers sending us `disabletx`, the existing code would already disconnect such a peer that sends an unrequested tx as well; but I will go ahead and implement that behavior in this PR as well because that is indeed an oversight. Thanks for noticing this!",
      "created_at" : "2021-02-12T13:24:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-778193492",
      "id" : 778193492,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3ODE5MzQ5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-12T13:24:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778193492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575254816"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575254816"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-12T14:15:40Z",
      "diff_hunk" : "@@ -2784,6 +2790,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send this message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575254816",
      "id" : 575254816,
      "in_reply_to_id" : 575086380,
      "line" : 2862,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTI1NDgxNg==",
      "original_commit_id" : "e142e81c5145c61a0ba1e49d0b463e2825f6f418",
      "original_line" : 2856,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 47,
      "pull_request_review_id" : 589502538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575254816",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575256006"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575256006"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-12T14:17:31Z",
      "diff_hunk" : "@@ -1626,11 +1641,13 @@ void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman&\n  * @param[in] fReachable Whether the address' network is reachable. We relay unreachable\n  * addresses less.\n  * @param[in] connman Connection manager to choose nodes to relay to.\n+ * @param[in] peerman PeerManager implementation being used\n  */\n static void RelayAddress(const CNode& originator,\n                          const CAddress& addr,\n                          bool fReachable,\n-                         const CConnman& connman)\n+                         const CConnman& connman,\n+                         PeerManagerImpl* peerman)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575256006",
      "id" : 575256006,
      "in_reply_to_id" : 575125883,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTI1NjAwNg==",
      "original_commit_id" : "aa09a205ca8f05143250b97cfdd3f8ada809530c",
      "original_line" : 1650,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 589504079,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575256006",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575271596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575271596"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is it possible to avoid this extreme coupling between the net and net_processing layers? Here, net_processing is constructing a callback (`sortfunc`) which it hands to net via `ForEachNodeThen()`. In that callback, net calls into a net_processing function (`IsAddRelayPeer()`), which in turn calls into a function in the net layer (`RelayAddrsWithConn()`). This net_processing -> net -> net_processing -> net layering makes it very difficult to construct a mental model of which component is responsible for what functions, and makes future work to rationalize the interface much more difficult.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-12T14:40:26Z",
      "diff_hunk" : "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575271596",
      "id" : 575271596,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTI3MTU5Ng==",
      "original_commit_id" : "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
      "original_line" : 1667,
      "original_position" : 71,
      "original_start_line" : 1666,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 589524845,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575271596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575306552"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575306552"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Haven't looked at the details, but I'd presume that `RelayAddrsWithConn` will be (can be) removed once the addr filter is moved to net processing and initialized only when needed.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-12T15:30:46Z",
      "diff_hunk" : "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575306552",
      "id" : 575306552,
      "in_reply_to_id" : 575271596,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTMwNjU1Mg==",
      "original_commit_id" : "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
      "original_line" : 1667,
      "original_position" : 71,
      "original_start_line" : 1666,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 589572150,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575306552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575323550"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575323550"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah I think this will get better once we finish moving things from `net` to `net_processing`.  In this case, I've added a new variable and member function to `net_processing` (which is where I think it should live in the long run) but until the rest of it moves, we're going to have to look in both places for some logic.  (I'm assuming we all agree that the logic around which addresses get relayed to which peers should live in `net_processing`, not `net`.)",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-12T15:55:34Z",
      "diff_hunk" : "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575323550",
      "id" : 575323550,
      "in_reply_to_id" : 575271596,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTMyMzU1MA==",
      "original_commit_id" : "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
      "original_line" : 1667,
      "original_position" : 71,
      "original_start_line" : 1666,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 589594902,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575323550",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575781212"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575781212"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't agree with this line of logic. I think it'd be far better to remove complexity first and then implement this cleanly, rather than add on more complexity and hoping to remove it later. Also note that this change is a pessimization: it locks and releases `m_peer_mutex` for every peer (up to 125 times). My understanding is that the `ForEachNode()` helpers exist in part to avoid this kind of repeated locking/unlocking.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-14T09:35:20Z",
      "diff_hunk" : "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575781212",
      "id" : 575781212,
      "in_reply_to_id" : 575271596,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTc4MTIxMg==",
      "original_commit_id" : "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
      "original_line" : 1667,
      "original_position" : 71,
      "original_start_line" : 1666,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 590030077,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575781212",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575788555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575788555"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@jnewbery You've been doing the most work on moving things out of `net` -- can you be more specific about what you want to see in this implementation?  I was trying to follow a guideline of \"don't add new things to `net` if they should end up in `net_processing`\", in the hopes of not making that work any harder.  Are you suggesting that I add this to `net` to make this implementation cleaner, or wait for more of your refactoring work to land, or something else?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-14T10:39:04Z",
      "diff_hunk" : "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575788555",
      "id" : 575788555,
      "in_reply_to_id" : 575271596,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTc4ODU1NQ==",
      "original_commit_id" : "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
      "original_line" : 1667,
      "original_position" : 71,
      "original_start_line" : 1666,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 590034534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575788555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575794641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575794641"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Are you suggesting that I add this to net to make this implementation cleaner, or wait for more of your refactoring work to land, or something else?\r\n\r\nYes, certainly rebasing this on the https://github.com/jnewbery/bitcoin/tree/2020-06-cs-main-split branch from https://github.com/bitcoin/bitcoin/issues/19398 would remove this tight net-net_processing coupling. We all agree that we want addr relay logic to live entirely in net_processing. My point here is that changes we make now should be done in a way that moves in that direction, not in a way that makes it more difficult.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-14T11:32:01Z",
      "diff_hunk" : "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575794641",
      "id" : 575794641,
      "in_reply_to_id" : 575271596,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTc5NDY0MQ==",
      "original_commit_id" : "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
      "original_line" : 1667,
      "original_position" : 71,
      "original_start_line" : 1666,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 590038497,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575794641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575797614"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575797614"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for being clear about your preference here.  I don't think it's worth gating this work on all those commits landing in master, but if other reviewers prefer to see that work land first, then of course I'll rebase after your commits are merged.\r\n\r\nFor now I've gone ahead and simplified this PR by just putting `m_disable_tx` in `CNode`, which makes things no worse than they are today as far as the separation between `net` and `net_processing` (and indeed it simplifies this PR by not adding the complexity you pointed out here in `RelayAddress`).",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-14T11:56:21Z",
      "diff_hunk" : "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575797614",
      "id" : 575797614,
      "in_reply_to_id" : 575271596,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTc5NzYxNA==",
      "original_commit_id" : "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
      "original_line" : 1667,
      "original_position" : 71,
      "original_start_line" : 1666,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 590040410,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575797614",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575797896"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575797896"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Could mention the BIP number, now that one was assigned?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-14T11:58:05Z",
      "diff_hunk" : "@@ -260,6 +260,13 @@ extern const char* CFCHECKPT;\n  * @since protocol version 70016 as described by BIP 339.\n  */\n extern const char* WTXIDRELAY;\n+/**\n+ * Indicates that a node will not relay transactions, and (for now) also\n+ * not relay addresses. This can be used by nodes implementing\n+ * block-relay-only connections.\n+ * @since protocol version 70017.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575797896",
      "id" : 575797896,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTc5Nzg5Ng==",
      "original_commit_id" : "ea3c2e22b480eb946988f276a85a65f0bef50502",
      "original_line" : 267,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : null,
      "pull_request_review_id" : 590040565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575797896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r577048063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577048063"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-16T18:34:00Z",
      "diff_hunk" : "@@ -260,6 +260,13 @@ extern const char* CFCHECKPT;\n  * @since protocol version 70016 as described by BIP 339.\n  */\n extern const char* WTXIDRELAY;\n+/**\n+ * Indicates that a node will not relay transactions, and (for now) also\n+ * not relay addresses. This can be used by nodes implementing\n+ * block-relay-only connections.\n+ * @since protocol version 70017.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r577048063",
      "id" : 577048063,
      "in_reply_to_id" : 575797896,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzA0ODA2Mw==",
      "original_commit_id" : "ea3c2e22b480eb946988f276a85a65f0bef50502",
      "original_line" : 267,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : null,
      "pull_request_review_id" : 591513987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577048063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-02-17T08:59:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-780407612",
      "id" : 780407612,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MDQwNzYxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-17T08:59:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780407612",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r578088724"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578088724"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Moving `RelayAddrsWithConn` to net_processing and making it:\r\n\r\n```c++\r\nstatic inline bool RelayAddrsWithConn(const Node& node, const Peer& peer) {\r\n    return !node.IsBlockOnlyConn() && !peer.m_disable_tx;\r\n}\r\n```\r\n\r\nwould preserve the net/net_processing separation better, I think?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-18T02:44:50Z",
      "diff_hunk" : "@@ -506,7 +506,12 @@ class CNode\n         // Don't relay addr messages to peers that we connect to as block-relay-only\n         // peers (to prevent adversaries from inferring these links from addr\n         // traffic).\n-        return m_conn_type != ConnectionType::BLOCK_RELAY;\n+        if (m_conn_type == ConnectionType::BLOCK_RELAY) return false;\n+\n+        // Don't relay addr messages to peers that have sent disabletx, as they are\n+        // likely to be inbound block-relay-only peers.\n+        if (m_disable_tx) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r578088724",
      "id" : 578088724,
      "line" : 513,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODA4ODcyNA==",
      "original_commit_id" : "f03e93202d0f395152c0e4d35bed782d5459daca",
      "original_line" : 513,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 9,
      "pull_request_review_id" : 592805594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578088724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r578440578"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578440578"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think that without a bigger refactoring, John's observation that we call into `ForEachNode` but access data in `net_processing` would still remain.  Given that we have a major refactoring effort underway (and I think #21186 will address this directly, from a quick glance), I'd rather leave efforts to refactor out of this PR -- if the refactors get merged first, I'll update the approach here.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-18T14:02:33Z",
      "diff_hunk" : "@@ -506,7 +506,12 @@ class CNode\n         // Don't relay addr messages to peers that we connect to as block-relay-only\n         // peers (to prevent adversaries from inferring these links from addr\n         // traffic).\n-        return m_conn_type != ConnectionType::BLOCK_RELAY;\n+        if (m_conn_type == ConnectionType::BLOCK_RELAY) return false;\n+\n+        // Don't relay addr messages to peers that have sent disabletx, as they are\n+        // likely to be inbound block-relay-only peers.\n+        if (m_disable_tx) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r578440578",
      "id" : 578440578,
      "in_reply_to_id" : 578088724,
      "line" : 513,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODQ0MDU3OA==",
      "original_commit_id" : "f03e93202d0f395152c0e4d35bed782d5459daca",
      "original_line" : 513,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 9,
      "pull_request_review_id" : 593243250,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578440578",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r578495634"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578495634"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Suhas is right. I think until we move addr data into net_processing there are only bad and less bad approaches here. Leaving this in net to avoid having to make net_processing function calls in ForEachNode() seems like the less bad option to me (see https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575271596).",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-18T15:08:57Z",
      "diff_hunk" : "@@ -506,7 +506,12 @@ class CNode\n         // Don't relay addr messages to peers that we connect to as block-relay-only\n         // peers (to prevent adversaries from inferring these links from addr\n         // traffic).\n-        return m_conn_type != ConnectionType::BLOCK_RELAY;\n+        if (m_conn_type == ConnectionType::BLOCK_RELAY) return false;\n+\n+        // Don't relay addr messages to peers that have sent disabletx, as they are\n+        // likely to be inbound block-relay-only peers.\n+        if (m_disable_tx) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r578495634",
      "id" : 578495634,
      "in_reply_to_id" : 578088724,
      "line" : 513,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODQ5NTYzNA==",
      "original_commit_id" : "f03e93202d0f395152c0e4d35bed782d5459daca",
      "original_line" : 513,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 9,
      "pull_request_review_id" : 593316787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578495634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581045679"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581045679"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should we also severe connections for block-relay-only peers sending us inv(tx) to be consistent with transaction message reception ?\r\n\r\nCurrently the BIP mentions that the following messages shouldn't be relayed between block-relay-only peers : {inv(tx), getdata(tx), getdata(merkleblock), filter*, mempool, tx}. This PR implements disconnections for filter*, mempool, tx but not for the remaining ones. Any rational for such disconnection selection ?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-23T13:45:18Z",
      "diff_hunk" : "@@ -3199,7 +3230,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // Stop processing the transaction early if\n         // 1) We are in blocks only mode and peer has no relay permission\n         // 2) This peer is a block-relay-only peer\n-        if ((m_ignore_incoming_txs && !pfrom.HasPermission(PF_RELAY)) || (pfrom.m_tx_relay == nullptr))\n+        if ((m_ignore_incoming_txs && !pfrom.HasPermission(PF_RELAY)) || (pfrom.m_tx_relay == nullptr) || pfrom.m_disable_tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581045679",
      "id" : 581045679,
      "line" : 3239,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTA0NTY3OQ==",
      "original_commit_id" : "9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "original_line" : 3233,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 74,
      "pull_request_review_id" : 596346100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581045679",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581055978"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581055978"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should this check also includes `IsAddrFetchConn()` ?\r\n\r\nA peer implementing the recommendation around disabling addr-relay won't provide us any addrs, devoiding such connection type on our side from its purpose.\r\n\r\nNote, I don't think it's an issue if you have two peers of this software talking as `m_disable_tx` is only set by the DISABLETX receiver. Our node won't send a DISABLETX for such non-`IsBlockOnlyConn`, such not disable-tx on this link. Extending this check is more a measure encompassing other clients strictly implementing the BIP.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-23T13:58:50Z",
      "diff_hunk" : "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581055978",
      "id" : 581055978,
      "line" : 2865,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTA1NTk3OA==",
      "original_commit_id" : "9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "original_line" : 2859,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 38,
      "pull_request_review_id" : 596346100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581055978",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581090222"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581090222"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this interaction with BIP37 is described in the new BIP. The following case \"If a node sets the transaction relay field in the version message to a peer to true it MUST NOT send a disabletx message\" isn't covered ?\r\n\r\nOr do you consider our software to be more severe than the BIP and another implementation can decide to override BIP 37 tx-relay in version message ? It's maybe what you meaned with \"This proposal is compatible with, but independent of, BIP 37. \"",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-23T14:38:53Z",
      "diff_hunk" : "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {\n+            // If we picked an outbound for transaction relay and it sends us a\n+            // disabletx, we want to find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a disabletx message if they didn't turn off\n+            // transaction relay in the version message.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581090222",
      "id" : 581090222,
      "line" : 2873,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTA5MDIyMg==",
      "original_commit_id" : "9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "original_line" : 2867,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 46,
      "pull_request_review_id" : 596346100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581090222",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581095051"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581095051"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should the BIP recommendation around addr-relay updated to scope `GETADDR` ? Behavior should already be compliant on sender-side, we don't send getaddr to block-relay peers.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-02-23T14:44:30Z",
      "diff_hunk" : "@@ -506,7 +506,12 @@ class CNode\n         // Don't relay addr messages to peers that we connect to as block-relay-only\n         // peers (to prevent adversaries from inferring these links from addr\n         // traffic).\n-        return m_conn_type != ConnectionType::BLOCK_RELAY;\n+        if (m_conn_type == ConnectionType::BLOCK_RELAY) return false;\n+\n+        // Don't relay addr messages to peers that have sent disabletx, as they are",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581095051",
      "id" : 581095051,
      "line" : 511,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTA5NTA1MQ==",
      "original_commit_id" : "9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "original_line" : 511,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 7,
      "pull_request_review_id" : 596346100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581095051",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r586758008"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586758008"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is unnecessary for now, for two reasons:\r\n- it will be unusual to get a disabletx from an outbound peer. So given that, it's not clear what their behavior is if they send us a disabletx, and maybe they will respond to a getaddr anyway (which is permitted by the BIP).\r\n\r\n- I think the better behavior is for us to disconnect an addr fetch peer after some timeout if no addr message is received (seems like a bug that we don't do that right now). Once we fix that, then disconnecting early doesn't provide much benefit and just adds unnecessary complexity.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-03-03T20:32:38Z",
      "diff_hunk" : "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r586758008",
      "id" : 586758008,
      "in_reply_to_id" : 581055978,
      "line" : 2865,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Njc1ODAwOA==",
      "original_commit_id" : "9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "original_line" : 2859,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 38,
      "pull_request_review_id" : 603319647,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:35:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586758008",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r586760583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586760583"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, I didn't realize this was confusing, but yes I can make this clearer in the BIP.  The language currently says \r\n\r\n> If a node sets the transaction relay field in the version message to a peer to false, then the disabletx message MAY also be sent in response to a version message from that peer if the peer's protocol version is >= 70017. If sent, the disabletx message MUST be sent prior to sending a verack.\r\n\r\n\r\nMy intention was that if you didn't specify fRelay, or if you set it to true, then you MUST NOT send a disabletx message.\r\n\r\nYes my thinking was that if node software implements BIP 37, then I didn't want this to conflict with BIP37-related logic, so I tried for compatibility.  At the same time, it seemed to me that fRelay may be required by some implementations (BIP60 tried to make it so, though I don't know what other software has implemented) so I figured the simplest thing was just to require software implementing this BIP to also be sending fRelay, and therefore the value being sent should be false.\r\n\r\nIt would also be possible to completely disentangle this from BIP 37 and either ignore the fRelay field or only require it to be false if it's sent at all, but I don't know how much difference that makes.  I think the way I've done it is clear and consistent (well once I fix the language in the BIP to remove the ambiguity you point out!) but other ways would be fine too.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-03-03T20:36:52Z",
      "diff_hunk" : "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {\n+            // If we picked an outbound for transaction relay and it sends us a\n+            // disabletx, we want to find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a disabletx message if they didn't turn off\n+            // transaction relay in the version message.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r586760583",
      "id" : 586760583,
      "in_reply_to_id" : 581090222,
      "line" : 2873,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Njc2MDU4Mw==",
      "original_commit_id" : "9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "original_line" : 2867,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 46,
      "pull_request_review_id" : 603319647,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:35:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586760583",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r590624904"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590624904"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't know that it's worth disconnecting for getdata(merkleblock); it already seems to be the case that by default we permit any peer to send us a getdata(merkleblock) and we ignore it.  As getdata(block) is always permitted, it seems like this is harmless to allow and ignore.\r\n\r\nI'll update the PR to disconnect for inv(tx) and getdata(tx).",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-03-09T18:40:28Z",
      "diff_hunk" : "@@ -3199,7 +3230,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // Stop processing the transaction early if\n         // 1) We are in blocks only mode and peer has no relay permission\n         // 2) This peer is a block-relay-only peer\n-        if ((m_ignore_incoming_txs && !pfrom.HasPermission(PF_RELAY)) || (pfrom.m_tx_relay == nullptr))\n+        if ((m_ignore_incoming_txs && !pfrom.HasPermission(PF_RELAY)) || (pfrom.m_tx_relay == nullptr) || pfrom.m_disable_tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r590624904",
      "id" : 590624904,
      "in_reply_to_id" : 581045679,
      "line" : 3239,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDYyNDkwNA==",
      "original_commit_id" : "9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "original_line" : 3233,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 74,
      "pull_request_review_id" : 603319647,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:35:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590624904",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r590627874"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590627874"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If the BIP were centered around block-relay-only behavior (as I had originally proposed), then I would think it would make sense to fully specify addr-related behavior, including getaddr.\r\n\r\nHowever as the BIP is scoped more narrowly to just define disabletx, I think it's better to leave out getaddr.  If a peer sends us a disabletx and a getaddr, I think we ought to just respond to it and assume the peer knows what it's doing.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-03-09T18:44:54Z",
      "diff_hunk" : "@@ -506,7 +506,12 @@ class CNode\n         // Don't relay addr messages to peers that we connect to as block-relay-only\n         // peers (to prevent adversaries from inferring these links from addr\n         // traffic).\n-        return m_conn_type != ConnectionType::BLOCK_RELAY;\n+        if (m_conn_type == ConnectionType::BLOCK_RELAY) return false;\n+\n+        // Don't relay addr messages to peers that have sent disabletx, as they are",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r590627874",
      "id" : 590627874,
      "in_reply_to_id" : 581095051,
      "line" : 511,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDYyNzg3NA==",
      "original_commit_id" : "9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "original_line" : 511,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 7,
      "pull_request_review_id" : 603319647,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:35:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590627874",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r590628816"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590628816"
         }
      },
      "author_association" : "MEMBER",
      "body" : "My goal is for software to know at the time of connection what kind of peer it's got, so that we can do inbound peer accounting (and reserve spots for lightweight peers) more easily.  \r\n\r\nWe wait for VERACK before we start communicating with a peer, so we should negotiate this behavior before that VERACK is sent.",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-03-09T18:46:12Z",
      "diff_hunk" : "@@ -2566,6 +2572,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r590628816",
      "id" : 590628816,
      "in_reply_to_id" : 549439194,
      "line" : 2859,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDYyODgxNg==",
      "original_commit_id" : "2668c8e239fa4d57e531cda2d9f572c0367bac3d",
      "original_line" : 2853,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 603319647,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-09T19:35:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590628816",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Seems like weâre going in circles discussing this at length, with no consensus on how to move forward.  I am happy for someone to implement this another way, if that is the preference â but I think this approach is superior to the alternate suggestions being made about reusing fRelay.\r\n\r\nIâm closing this PR for now; please feel free to consider this up for grabs if anyone else is interested.",
      "created_at" : "2021-03-10T01:23:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-794702092",
      "id" : 794702092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NDcwMjA5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-10T01:23:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/794702092",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r594399480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594399480"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Receiver-side, we can enforce a _consistency_ requirement between `fRelay` and DISABLETX to detect buggy upgraded peers signaling differing relay type preferences.\r\n\r\nSender-side, if we're connected to a non-upgraded peer (`nVersion` < 70017), we should send a `fRelay`, otherwise they can't discover our relay preferences. If we're connected to an upgraded peer, we can ignore setting `fRelay` in our version message and just send a DISABLETX.\r\n\r\nI don't think we have specific considerations to avoid disruption BIP37-related logic, in the sense of upgrading the connection type to full-relay if they signal `fRelay=false`. Doing so would break the purpose of our block-relay-only strategy. Actually, that's what we already do, at VERSION message reception, we ignore `fRelay` if peer doesn't have a `m_tx_relay` struct.\r\n\r\nNetwork-wise,, it'll be safe to deprecate BIP37-related logic on our side (i.e don't bother sending `fRelay` even to non-upgraded peers) only once BIP338 is widely deployed. Otherwise, legacy peers will be automatically disconnected when they're picked up as block-relay-only, thus impoverishing their connection graph (only able to connect as full-relay inbound slots).\r\n\r\nNote, I think the BIP change should waiwe about the omission case, otherwise it make a requirement to implement BIP60 only for the sake of sending a `fRelay=false`, and thus create an interdependency\r\nbetween both standards ?",
      "commit_id" : "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "created_at" : "2021-03-15T14:45:42Z",
      "diff_hunk" : "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {\n+            // If we picked an outbound for transaction relay and it sends us a\n+            // disabletx, we want to find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a disabletx message if they didn't turn off\n+            // transaction relay in the version message.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r594399480",
      "id" : 594399480,
      "in_reply_to_id" : 581090222,
      "line" : 2873,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDM5OTQ4MA==",
      "original_commit_id" : "9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "original_line" : 2867,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 46,
      "pull_request_review_id" : 612277821,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T14:45:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594399480",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar, fixups sounds good to me. FWIW, see my [comment](https://github.com/bitcoin/bitcoin/pull/20726#discussion_r594399480) on your proposed bip338 changes. I agree this approach is superior to the alternate suggestions. I hope some of the bip content around defining well the set of messages excluded in case of tx-relay disabling could be incorporated in some bip37/60 extension.\r\n\r\nI don't plan to take this forward but I'll review it again if it gets back on track.",
      "created_at" : "2021-03-15T14:51:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-799482200",
      "id" : 799482200,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5OTQ4MjIwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-15T14:51:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/799482200",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Somewhat sad to see this closed. I think it made a lot of sense.",
      "created_at" : "2021-03-16T14:00:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-800281829",
      "id" : 800281829,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMDI4MTgyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-16T14:00:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800281829",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Mark up for grabs?",
      "created_at" : "2021-06-21T03:10:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-864691152",
      "id" : 864691152,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NDY5MTE1Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-21T03:10:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864691152",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r778244529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/778244529"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```\r\ntest/functional/p2p_disabletx.py:31:1: F401 'test_framework.p2p.P2P_SUBVERSION' imported but unused\r\n```\r\n\r\n```\r\nï¿½[1mWARNING!ï¿½[0m The following scripts are not being run: ['p2p_disabletx.py']. Check the test lists in test_runner.py.",
      "commit_id" : "715ff15342d2a702b24825f078ff7ea2c63cd32a",
      "created_at" : "2022-01-04T17:03:52Z",
      "diff_hunk" : "@@ -0,0 +1,174 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests disabletx message.\n+\n+Test that bitcoind will disconnect us if we deviate from BIP338, and\n+send disallowed messages or invalid message combinations involving\n+disabletx.\"\"\"\n+\n+from test_framework.messages import (\n+    CInv,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxOut,\n+    MSG_TX,\n+    MSG_WTX,\n+    MSG_WITNESS_FLAG,\n+    msg_disabletx,\n+    msg_filteradd,\n+    msg_filterclear,\n+    msg_filterload,\n+    msg_getdata,\n+    msg_inv,\n+    msg_mempool,\n+    msg_notfound,\n+    msg_tx,\n+    msg_version,\n+)\n+from test_framework.p2p import (\n+    P2P_VERSION,\n+    P2P_SUBVERSION,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r778244529",
      "id" : 778244529,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uYxGx",
      "original_commit_id" : "0e9bbd8b6bad6bc7c2b3feb05f72c0ea4ccaeaa8",
      "original_line" : 33,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "test/functional/p2p_disabletx.py",
      "position" : null,
      "pull_request_review_id" : 843800342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/778244529/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-04T17:03:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/778244529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r778479193"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/778479193"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Sender-side, if we're connected to a non-upgraded peer (nVersion < 70017), we should send a fRelay, otherwise they can't discover our relay preferences. If we're connected to an upgraded peer, we can ignore setting fRelay in our version message and just send a DISABLETX.\r\n\r\nI think we still want to send fRelay=false, because we don't know that an upgraded peer has implemented the BIP -- the p2p version bump is just to signify which p2p messages are considered valid.  (For instance, some other new p2p message may be introduced for some other reason, which might cause someone to bump the p2p version they are advertising -- even if they haven't added support for BIP 338.)\r\n\r\nSo I think given that, we might as well treat fRelay as a required part of the spec for software that is implementing `disabletx`.",
      "commit_id" : "4792aac0641b3d013b02aade8d4b25c784d54c7e",
      "created_at" : "2022-01-05T00:49:22Z",
      "diff_hunk" : "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {\n+            // If we picked an outbound for transaction relay and it sends us a\n+            // disabletx, we want to find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a disabletx message if they didn't turn off\n+            // transaction relay in the version message.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r778479193",
      "id" : 778479193,
      "in_reply_to_id" : 581090222,
      "line" : 2894,
      "node_id" : "PRRC_kwDOABII584uZqZZ",
      "original_commit_id" : "9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "original_line" : 2894,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 68,
      "pull_request_review_id" : 844129027,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/778479193/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-05T00:49:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/778479193",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reopened this PR as it still seems relevant.  I've simplified the code some (now that addr relay was separately handled in #21528), and I believe I've addressed all of the review comments left before, particularly from @ariard's review.  I've also added a test that should cover just about all the logic introduced in this PR.\r\n\r\nI believe the BIP draft at https://github.com/sdaftuar/bips/blob/2021-02-bip338-fixups/bip-0338.mediawiki\r\nis still current for the changes in this PR (so please point out any discrepancies!).\r\n",
      "created_at" : "2022-01-05T00:51:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1005289200",
      "id" : 1005289200,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII5847637w",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1005289200/reactions"
      },
      "updated_at" : "2022-01-05T00:51:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1005289200",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Given the addr relay policy changes from #21528, do you think it's still useful to include the \"disabletx -> don't relay addr\" suggestion (currently rule 6) in the BIP?\r\n\r\nI ask because I think the assumption underlying 21528 is that we can effectively perfectly guess which clients care about addr relay already, so it feels less needed to make that interact with BIP338.",
      "created_at" : "2022-01-05T18:33:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1005978497",
      "id" : 1005978497,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII58479gOB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1005978497/reactions"
      },
      "updated_at" : "2022-01-05T18:40:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1005978497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Given the addr relay policy changes from #21528, do you think it's still useful to include the \"disabletx -> don't relay addr\" suggestion (currently rule 6) in the BIP?\r\n> \r\n> I ask because I think the assumption underlying 21528 is that we can effectively perfectly guess which clients care about addr relay already, so it feels less needed to make that interact with BIP338.\r\n\r\nWell, the behavior we introduced in #21528 is not documented in any BIP or (I assume) standardized across other implementations; so I think on balance it still makes sense to include that recommendation for other software that may not have implemented that sort of logic.  I guess the way I'm looking at this is #21528 is just a different (and broader) way for our software to comply with the recommendation in this BIP, which eliminates the need for this PR to do anything differently to comply with that recommendation.\r\n\r\nDown the road, I'd still hope for addr relay policies to be standardized in a BIP and supersede the recommendation in this one.",
      "created_at" : "2022-01-05T19:14:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1006005523",
      "id" : 1006005523,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII58479m0T",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1006005523/reactions"
      },
      "updated_at" : "2022-01-05T19:14:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1006005523",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r780840671"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780840671"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: \"This is peer a block-relay-only peer/disable_tx peer\"",
      "commit_id" : "4792aac0641b3d013b02aade8d4b25c784d54c7e",
      "created_at" : "2022-01-09T22:36:54Z",
      "diff_hunk" : "@@ -3262,7 +3288,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // Stop processing the transaction early if\n         // 1) We are in blocks only mode and peer has no relay permission\n         // 2) This peer is a block-relay-only peer",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r780840671",
      "id" : 780840671,
      "line" : 3290,
      "node_id" : "PRRC_kwDOABII584uiq7f",
      "original_commit_id" : "6c13af6ccc2e36c8ecbf36007f9bf24491a2f69f",
      "original_line" : 3290,
      "original_position" : 79,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 79,
      "pull_request_review_id" : 847313493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780840671/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-09T23:32:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780840671",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r780841095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780841095"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Since the wording of the BIP is symmetric with respect to sender/receiver (\"A node that has sent or received a disabletx message to/from a peer MUST NOT send any of these messages to the peer\") - would it make sense to also set `m_disable_tx` after sending out a disabletx message to a peer, so that the disconnect logic is also symmetrical?\r\n\r\nWhile there would be no difference for some messages (TX, tx-INV) on which we'd already disconnect, that would mean we'd be more disconnect-happy when dealing with others (e.g. tx-GETDATA, NOTFOUND) which are currently ignored.\r\nI realize that we can't be certain that our peer has implemented BIP338 even if they use version  >= 70017, but I wonder if they'd have any good reason sending us either of these messages even if they didn't?",
      "commit_id" : "28df701eb147cd6fbac19f83a00be97940a753fa",
      "created_at" : "2022-01-09T22:40:49Z",
      "diff_hunk" : "@@ -284,6 +284,9 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    /** Whether a peer has sent us a disabletx message */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r780841095",
      "id" : 780841095,
      "line" : 287,
      "node_id" : "PRRC_kwDOABII584uirCH",
      "original_commit_id" : "6c13af6ccc2e36c8ecbf36007f9bf24491a2f69f",
      "original_line" : 287,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 4,
      "pull_request_review_id" : 847313873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780841095/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-12T20:38:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780841095",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r780842134"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780842134"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the implementation is currently exhaustive in the reject of transaction relay messages.\r\n\r\nThe BIP could be preemptively updated to scope rejection of BIP330 messages, as those ones are transaction relay related. Though as #23443 is only implementing the Erlay connection-setting message (SENDRECON), I don't think we have interdependency in the PRs.",
      "commit_id" : "4792aac0641b3d013b02aade8d4b25c784d54c7e",
      "created_at" : "2022-01-09T22:50:34Z",
      "diff_hunk" : "@@ -284,6 +284,9 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    /** Whether a peer has sent us a disabletx message */\n+    std::atomic<bool> m_disable_tx{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r780842134",
      "id" : 780842134,
      "line" : 288,
      "node_id" : "PRRC_kwDOABII584uirSW",
      "original_commit_id" : "6c13af6ccc2e36c8ecbf36007f9bf24491a2f69f",
      "original_line" : 288,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 847313493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780842134/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-09T23:32:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780842134",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r780842491"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780842491"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The `doc/bips.md` can be also updated to mention BIP 338.",
      "commit_id" : "4792aac0641b3d013b02aade8d4b25c784d54c7e",
      "created_at" : "2022-01-09T22:54:10Z",
      "diff_hunk" : "@@ -266,7 +266,7 @@ extern const char* WTXIDRELAY;\n  * Indicates that a node will not relay transactions, and (for now) also\n  * not relay addresses. This can be used by nodes implementing\n  * block-relay-only connections.\n- * @since protocol version 70017.\n+ * @since protocol version 70017 as described by BIP 338.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r780842491",
      "id" : 780842491,
      "line" : 269,
      "node_id" : "PRRC_kwDOABII584uirX7",
      "original_commit_id" : "f58b7ac73730f69870686f5ae1629b7fab26dc96",
      "original_line" : 269,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 5,
      "pull_request_review_id" : 847313493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780842491/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-09T23:32:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780842491",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r780845149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780845149"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks to recall that p2p version advertising doesn't imply support of the well-known associated set of messages with that version number.\r\n\r\nIf so, I agree that if we're connected to an upgraded peer, we should send `fRelay=false` as an alternative mechanism to disable transaction relay messages on the connection. However, if we want to deprecate `fRelay` in the future once BIP338 is deployed, I think we should not treat `fRelay` as a required part of the spec.\r\n\r\nTo the best of my understanding, the proposed BIP338 draft is ambiguous as it sounds to make a requirement of a `disabletx` receiving peer to support first BIP37 (\"(provided that BIP 37 or BIP 60 has been implemented\") though at the same time explicitly says those standards are independent (\"This proposal is compatible with, but independent of, BIP 37. \").\r\n\r\nI would favor to make the BIP37 deprecation option more explicit in BIP338 (i.e remove \"provided that BIP37...\") and that dual-support is an implementation choice, not a spec requirement.\r\n\r\nThat said, this comment is not a substantial blocker to me to advance this work forward.",
      "commit_id" : "4792aac0641b3d013b02aade8d4b25c784d54c7e",
      "created_at" : "2022-01-09T23:19:58Z",
      "diff_hunk" : "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {\n+            // If we picked an outbound for transaction relay and it sends us a\n+            // disabletx, we want to find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a disabletx message if they didn't turn off\n+            // transaction relay in the version message.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r780845149",
      "id" : 780845149,
      "in_reply_to_id" : 581090222,
      "line" : 2894,
      "node_id" : "PRRC_kwDOABII584uisBd",
      "original_commit_id" : "9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "original_line" : 2894,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 68,
      "pull_request_review_id" : 847313493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780845149/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-09T23:32:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780845149",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r781394128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/781394128"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Addressed in latest fixup commit.",
      "commit_id" : "28df701eb147cd6fbac19f83a00be97940a753fa",
      "created_at" : "2022-01-10T17:20:52Z",
      "diff_hunk" : "@@ -3262,7 +3288,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // Stop processing the transaction early if\n         // 1) We are in blocks only mode and peer has no relay permission\n         // 2) This peer is a block-relay-only peer",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r781394128",
      "id" : 781394128,
      "in_reply_to_id" : 780840671,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ukyDQ",
      "original_commit_id" : "6c13af6ccc2e36c8ecbf36007f9bf24491a2f69f",
      "original_line" : 3290,
      "original_position" : 79,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 848119566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/781394128/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-10T17:20:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/781394128",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r781396592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/781396592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think I'm inclined to hold off on that until Erlay is further along -- if they both go in for the next release, then I'll update the BIP to incorporate mention of it.  But if Erlay or other future p2p extensions get merged down the road, I think it'll make more sense to specify in the BIPs for those features exactly how they interact with disabletx.",
      "commit_id" : "28df701eb147cd6fbac19f83a00be97940a753fa",
      "created_at" : "2022-01-10T17:24:12Z",
      "diff_hunk" : "@@ -284,6 +284,9 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    /** Whether a peer has sent us a disabletx message */\n+    std::atomic<bool> m_disable_tx{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r781396592",
      "id" : 781396592,
      "in_reply_to_id" : 780842134,
      "line" : 288,
      "node_id" : "PRRC_kwDOABII584ukypw",
      "original_commit_id" : "6c13af6ccc2e36c8ecbf36007f9bf24491a2f69f",
      "original_line" : 288,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 848123311,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/781396592/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-10T17:24:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/781396592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r781396724"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/781396724"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "28df701eb147cd6fbac19f83a00be97940a753fa",
      "created_at" : "2022-01-10T17:24:20Z",
      "diff_hunk" : "@@ -266,7 +266,7 @@ extern const char* WTXIDRELAY;\n  * Indicates that a node will not relay transactions, and (for now) also\n  * not relay addresses. This can be used by nodes implementing\n  * block-relay-only connections.\n- * @since protocol version 70017.\n+ * @since protocol version 70017 as described by BIP 338.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r781396724",
      "id" : 781396724,
      "in_reply_to_id" : 780842491,
      "line" : 269,
      "node_id" : "PRRC_kwDOABII584ukyr0",
      "original_commit_id" : "f58b7ac73730f69870686f5ae1629b7fab26dc96",
      "original_line" : 269,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 8,
      "pull_request_review_id" : 848123473,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/781396724/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-10T17:24:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/781396724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> If so, I agree that if we're connected to an upgraded peer, we should send fRelay=false as an alternative mechanism to disable transaction relay messages on the connection. However, if we want to deprecate fRelay in the future once BIP338 is deployed, I think we should not treat fRelay as a required part of the spec.\r\n\r\n@ariard Deprecating `fRelay` doesn't seem very likely to me as something we will try to do, just because it seems like it potentially breaks any software that may have implemented BIP 60 for basically no benefit.  Maybe no such software exists, but it just doesn't seem worth the effort to try to determine whether that is true, particularly if getting it wrong would be hard to know and would have unfortunate consequences on the network graph (while getting it right has no real benefit).\r\n\r\nSo while I could change the BIP to be more agnostic, and just require `fRelay=false` if `fRelay` is sent at all, that seems less useful than just requiring `fRelay` to be sent instead.  Note that no other parts of BIP 37 are required, so effectively this BIP would be just building off of BIP 60 -- which I think is the safest assumption about what will be compatible with other software on the network.",
      "created_at" : "2022-01-10T18:33:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1009221781",
      "id" : 1009221781,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII5848J4CV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1009221781/reactions"
      },
      "updated_at" : "2022-01-10T18:43:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1009221781",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-01-12T17:36:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1011291455",
      "id" : 1011291455,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII5848RxU_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011291455/reactions"
      },
      "updated_at" : "2022-01-12T17:36:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011291455",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r784984167"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784984167"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The way I look at this issue is that we have two competing goals:\r\na) Have well-defined behavior on the p2p network, to limit the range of behavior and make interactions easier to reason about in the future. This tends towards being strict around deploying new specifications, both to simplify our software logic and so that when people write their own implementations, they might notice if they break something during testing.\r\n\r\nb) Avoid disconnecting peers unless it's important/we have a good reason, because otherwise, over time, the network graph will become more fragile and less partition-resistant: older software that is silently failing to stay connected to newer software will have fewer honest peers to connect to and become easier to sybil.  (As an aside: to the extent that we do sometimes disconnect peers for imperfect behavior, it can be less risky to the network if we differentiate between inbound and outbound peers, and be more tolerant of inbound peers -- this would allow slightly broken software to still find honest peers and not be partitioned off the network over time.)\r\n\r\nSo with that in mind, I'm reluctant to add new disconnection semantics for behavior that is harmless; in this case, I think it is supposed to be harmless to not have implemented BIP 338, as this is meant to be a purely optional specification.  The question to me then becomes: since we already disconnect peers for some messages if we have sent `fRelay=0`, should we add to the set of disallowed messages to such peers based on how we understand our own software to behave?\r\n\r\nI think it's a good point that those messages (tx-getdata, tx-notfound) should never come through to us if we've sent a `disabletx`, because presuming that our software isn't itself broken, we would never announce or send transactions to the peer.  However, if there is some other software on the network that is slightly broken around transaction relay and occasionally sends us a tx-getdata or tx-notfound when not appropriate, is that a big deal?  I'm not sure...\r\n\r\nFirst, changing our behavior in this way wouldn't prevent malicious peers from wasting our bandwidth (as they can do that without triggering disconnection, even without using these messages).  So instead, it would be to catch/handle broken peers and prevent them from taking up a connection slot or wasting our bandwidth.\r\n\r\nIf there is broken software out there that we know has a bug like this which causes these `fRelay=0` connections to be high bandwidth when they shouldn't be, by sending these specific p2p messages that you're suggestion we disconnect for, then I think that would be sufficient reason to do exactly what you suggest.  However, I'm not sure that we're aware of any such software.  In the absence of knowing such broken software exists, I think two other options are reasonable: a) do nothing until we notice it, or b) write smarter logic that catches the thing that I think we actually care about for these connections, which is bandwidth waste (ie seeing high traffic of bogus messages as a percentage of total traffic), and manages our connections using that metric as a factor.\r\n\r\nSo I'd say right now I'm reluctant, but not strongly opposed, to adding more disconnection criteria like you're suggesting in this PR.  However if someone proposed adding more disconnection criteria as part of a bigger resource management strategy, I think that could be totally reasonable.\r\n",
      "commit_id" : "28df701eb147cd6fbac19f83a00be97940a753fa",
      "created_at" : "2022-01-14T16:28:52Z",
      "diff_hunk" : "@@ -284,6 +284,9 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    /** Whether a peer has sent us a disabletx message */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r784984167",
      "id" : 784984167,
      "in_reply_to_id" : 780841095,
      "line" : 287,
      "node_id" : "PRRC_kwDOABII584uyehn",
      "original_commit_id" : "6c13af6ccc2e36c8ecbf36007f9bf24491a2f69f",
      "original_line" : 287,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 4,
      "pull_request_review_id" : 853118505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784984167/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-14T16:28:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784984167",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-01-23T11:54:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1019468847",
      "id" : 1019468847,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII5848w9wv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1019468847/reactions"
      },
      "updated_at" : "2022-01-23T11:54:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1019468847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11212268?v=4",
         "events_url" : "https://api.github.com/users/gruve-p/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gruve-p/followers",
         "following_url" : "https://api.github.com/users/gruve-p/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gruve-p/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gruve-p",
         "id" : 11212268,
         "login" : "gruve-p",
         "node_id" : "MDQ6VXNlcjExMjEyMjY4",
         "organizations_url" : "https://api.github.com/users/gruve-p/orgs",
         "received_events_url" : "https://api.github.com/users/gruve-p/received_events",
         "repos_url" : "https://api.github.com/users/gruve-p/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gruve-p/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gruve-p/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gruve-p"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r793153713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/793153713"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note, I wonder if we can send back a notfound(MSG_TX | MSG_WITNESS_FLAG) as those messages are replied to getdatas.",
      "commit_id" : "28df701eb147cd6fbac19f83a00be97940a753fa",
      "created_at" : "2022-01-27T00:12:25Z",
      "diff_hunk" : "@@ -0,0 +1,175 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests disabletx message.\n+\n+Test that bitcoind will disconnect us if we deviate from BIP338, and\n+send disallowed messages or invalid message combinations involving\n+disabletx.\"\"\"\n+\n+from test_framework.messages import (\n+    CInv,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxOut,\n+    MSG_FILTERED_BLOCK,\n+    MSG_TX,\n+    MSG_WTX,\n+    MSG_WITNESS_FLAG,\n+    msg_disabletx,\n+    msg_filteradd,\n+    msg_filterclear,\n+    msg_filterload,\n+    msg_getdata,\n+    msg_inv,\n+    msg_mempool,\n+    msg_notfound,\n+    msg_tx,\n+    msg_version,\n+)\n+from test_framework.p2p import (\n+    P2P_SERVICES,\n+    P2P_SUBVERSION,\n+    P2P_VERSION,\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class DisableTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [['-peerbloomfilters=1']]\n+\n+    def expect_disabletx_for_outbound_block_relay_test(self):\n+        self.log.info('Check that bitcoind will send disabletx when making block-relay-only connections')\n+        peer = self.nodes[0].add_outbound_p2p_connection(P2PInterface(disabletx=True), p2p_idx=0, connection_type='block-relay-only')\n+\n+        def test_function():\n+            return \"disabletx\" in peer.last_message\n+\n+        peer.wait_until(test_function, timeout=60)\n+        peer.peer_disconnect()\n+        peer.wait_for_disconnect()\n+\n+    def disabletx_after_verack_test(self):\n+        self.log.info('Check for disconnection when sending disabletx after verack')\n+        peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        peer.sync_with_ping()\n+\n+        peer.send_message(msg_disabletx())\n+        peer.wait_for_disconnect()\n+\n+    def disabletx_without_frelay_test(self):\n+        self.log.info('Check for disconnection when sending disabletx without fRelay=0')\n+        peer = self.nodes[0].add_p2p_connection(P2PInterface(disabletx=True), send_version=False, wait_for_verack=False)\n+        version = msg_version()\n+        version.nVersion = P2P_VERSION\n+        version.strSubVer = P2P_SUBVERSION\n+        version.relay = 1\n+        version.nServices = P2P_SERVICES\n+        version.addrTo.ip = peer.dstaddr\n+        version.addrTo.port = peer.dstport\n+        version.addrFrom.ip = \"0.0.0.0\"\n+        version.addrFrom.port = 0\n+        peer.send_message(version)\n+\n+        peer.wait_for_disconnect()\n+\n+    def disabletx_as_outbound_peer_test(self):\n+        self.log.info('Check for disconnection if we connect outbound to a disabletx peer')\n+        peer = self.nodes[0].add_outbound_p2p_connection(P2PInterface(disabletx=True), p2p_idx=0, connection_type='outbound-full-relay', expect_disconnect=True)\n+        peer.wait_for_disconnect()\n+\n+    def getdata_after_disabletx_test(self):\n+        self.log.info('Check for disconnection when sending getdata(tx) or getdata(merkleblock) after disabletx')\n+        for inv_type in (MSG_TX, MSG_TX | MSG_WITNESS_FLAG, MSG_WTX, MSG_FILTERED_BLOCK):\n+            wtxidrelay = False\n+            if inv_type == MSG_WTX:\n+                wtxidrelay = True\n+            peer = self.nodes[0].add_p2p_connection(P2PInterface(wtxidrelay=wtxidrelay, disabletx=True))\n+            peer.sync_with_ping()\n+\n+            peer.send_message(msg_getdata(inv=[CInv(t=inv_type, h=self.tip_hash)]))\n+            peer.wait_for_disconnect()\n+\n+    def inv_after_disabletx_test(self):\n+        self.log.info('Check for disconnection when sending inv(tx) after disabletx')\n+        for inv_type in (MSG_TX, MSG_WTX):\n+            wtxidrelay = False\n+            if inv_type == MSG_WTX:\n+                wtxidrelay = True\n+            peer = self.nodes[0].add_p2p_connection(P2PInterface(wtxidrelay=wtxidrelay, disabletx=True))\n+            peer.sync_with_ping()\n+\n+            peer.send_message(msg_inv(inv=[CInv(t=inv_type, h=0xdeadbeef)]))\n+            peer.wait_for_disconnect()\n+\n+    def tx_after_disabletx_test(self):\n+        self.log.info('Check for disconnection when sending a tx after disabletx')\n+\n+        peer = self.nodes[0].add_p2p_connection(P2PInterface(disabletx=True))\n+        peer.sync_with_ping()\n+\n+        # Construct a dummy transaction. Inputs will be missing so no\n+        # validation will occur (this is easier than constructing a valid\n+        # transaction, which should be unnecessary for this test).\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(outpoint=COutPoint(0xdeadbeef, 0))]\n+        tx.vout = [CTxOut()]\n+\n+        peer.send_message(msg_tx(tx))\n+        peer.wait_for_disconnect()\n+\n+    def bloom_filter_after_disabletx_test(self):\n+        self.log.info('Check for disconnection when sending a bip37 filter* message after disabletx')\n+\n+        for msg in (msg_filterload(), msg_filterclear(), msg_filteradd(data=b'00')):\n+            peer = self.nodes[0].add_p2p_connection(P2PInterface(disabletx=True))\n+            peer.sync_with_ping()\n+\n+            peer.send_message(msg)\n+            peer.wait_for_disconnect()\n+\n+    def mempool_after_disabletx_test(self):\n+        self.log.info('Check for disconnection when sending a mempool message after disabletx')\n+\n+        peer = self.nodes[0].add_p2p_connection(P2PInterface(disabletx=True))\n+        peer.sync_with_ping()\n+\n+        peer.send_message(msg_mempool())\n+        peer.wait_for_disconnect()\n+\n+    def notfound_after_disabletx_test(self):\n+        self.log.info('Check for disconnection when sending a notfound(tx) message after disabletx')\n+\n+        for inv_type in (MSG_TX, MSG_WTX):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r793153713",
      "id" : 793153713,
      "line" : 149,
      "node_id" : "PRRC_kwDOABII584vRpCx",
      "original_commit_id" : "4792aac0641b3d013b02aade8d4b25c784d54c7e",
      "original_line" : 149,
      "original_position" : 149,
      "original_start_line" : null,
      "path" : "test/functional/p2p_disabletx.py",
      "position" : 149,
      "pull_request_review_id" : 864247278,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/793153713/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-27T00:22:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/793153713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @ariard; I've squashed that fixup commit and pushed the cleaned up branch.",
      "created_at" : "2022-01-27T16:35:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1023417483",
      "id" : 1023417483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII5849AByL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1023417483/reactions"
      },
      "updated_at" : "2022-01-27T16:35:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1023417483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 625b9ae\r\n\r\nChanges since last ACK, fixup commit squash.",
      "created_at" : "2022-02-09T01:12:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1033226864",
      "id" : 1033226864,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII5849lcpw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1033226864/reactions"
      },
      "updated_at" : "2022-02-09T01:12:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1033226864",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-02-10T15:35:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1035063813",
      "id" : 1035063813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII5849sdIF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035063813/reactions"
      },
      "updated_at" : "2022-02-10T15:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035063813",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r819292886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/819292886"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"to the extent that we do sometimes disconnect peers for imperfect behavior, it can be less risky to the network if we differentiate between inbound and outbound peers, and be more tolerant of inbound peers\" -- I like that idea, it means that if a connection gets closed for not being strictly conformant enough, it's the software that attempted the connection in the first place that closes the connection, and can reasonably include a debug log entry to indicate what's going on, without becoming intolerably spammy.",
      "commit_id" : "625b9aee2469aea7c4912718175ade213add08ac",
      "created_at" : "2022-03-04T06:15:13Z",
      "diff_hunk" : "@@ -284,6 +284,9 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    /** Whether a peer has sent us a disabletx message */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r819292886",
      "id" : 819292886,
      "in_reply_to_id" : 780841095,
      "line" : 287,
      "node_id" : "PRRC_kwDOABII584w1WrW",
      "original_commit_id" : "6c13af6ccc2e36c8ecbf36007f9bf24491a2f69f",
      "original_line" : 287,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 4,
      "pull_request_review_id" : 899841081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/819292886/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-04T06:15:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/819292886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r821339065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821339065"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "There isn't a NET-debug comment for disconnecting peers when they're full-outbound or didn't set fRelay=false but nevertheless sent DISABLETX. I figured from this comment there would be...",
      "commit_id" : "625b9aee2469aea7c4912718175ade213add08ac",
      "created_at" : "2022-03-08T05:43:12Z",
      "diff_hunk" : "@@ -2784,6 +2790,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send this message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r821339065",
      "id" : 821339065,
      "in_reply_to_id" : 575086380,
      "line" : 2895,
      "node_id" : "PRRC_kwDOABII584w9KO5",
      "original_commit_id" : "e142e81c5145c61a0ba1e49d0b463e2825f6f418",
      "original_line" : 2895,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 69,
      "pull_request_review_id" : 902567603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821339065/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-08T07:01:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821339065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r821340713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821340713"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should this be testing `pfrom.IsFullOutboundConn() && !IgnoresIncomingTxs()` -- if you've set `-blocksonly=1` there's less need to reject outbounds that set DISABLETX?",
      "commit_id" : "625b9aee2469aea7c4912718175ade213add08ac",
      "created_at" : "2022-03-08T05:47:04Z",
      "diff_hunk" : "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r821340713",
      "id" : 821340713,
      "in_reply_to_id" : 581055978,
      "line" : 2886,
      "node_id" : "PRRC_kwDOABII584w9Kop",
      "original_commit_id" : "9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "original_line" : 2886,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 60,
      "pull_request_review_id" : 902567603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821340713/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-08T07:01:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821340713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> In that case, if an inbound blocks only node sends you a disabletx message, you can avoid allocating the TxRelay structure for that node saving memory, and also save bandwidth by avoiding sending INVs etc to that node; but if that inbound node is running in -blocksonly=1 mode, it can still send the occasional tx to you which you can relay on to the rest of the network.\r\n\r\nI'm not sure I understand your idea:\r\nDoes this mean you are suggesting that DISABLETX should be sent on all non-whitelisted outgoing connections if a node is in `-blocksonly` mode? That would probably mean that the address relay recommendation would need be dropped, because `-blocksonly` nodes want to participate in it.\r\n\r\n> Letting -blocksonly=1 nodes free up resources seems worth the slight extra complexity to me, but ymmv I guess.\r\n\r\nIt would help the peers of `-blocksonly=1` nodes free up resources (by not having to initialize `m_tx_relay` for this peer), but not the `-blocksonly=1` nodes themselves?\r\n",
      "created_at" : "2022-03-08T15:56:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1061931962",
      "id" : 1061931962,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII584_S8u6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061931962/reactions"
      },
      "updated_at" : "2022-03-08T15:56:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061931962",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r821969885"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821969885"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Such a node would still need `addr` messages, so I think it's safest to just disconnect for now if it's unexpected, and if we want to open it up later we can always come up with some policy for how many disabletx peers we're willing to tolerate in our spots reserved for full outbound peers.\r\n\r\nEdit: I realized after I posted that the recent behavior changes we made around addr messages may eliminate the concern I raised -- but at any rate, I don't really want to add additional complexity that is gated on `-blocksonly=1` mode, it just seems like such a special case and I don't think we get much benefit in this situation (where I don't expect anyone will be using disabletx on inbound connections for the time being).",
      "commit_id" : "41e82573f77e9814929818b703fa1b5cc4f95f0a",
      "created_at" : "2022-03-08T18:51:57Z",
      "diff_hunk" : "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r821969885",
      "id" : 821969885,
      "in_reply_to_id" : 581055978,
      "line" : 2963,
      "node_id" : "PRRC_kwDOABII584w_kPd",
      "original_commit_id" : "9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "original_line" : 2963,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 68,
      "pull_request_review_id" : 903443573,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821969885/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-08T19:00:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821969885",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns I don't think that `-blocksonly=1` peers should try to use `disabletx`, because part of the reason that `disabletx` connections are low-bandwidth is that compact blocks still work on these links -- each node should just be getting transactions from elsewhere.  If you're really running in `-blocksonly=1` mode, and in the future when I hope we account for disabletx peers separately, then I think it's better to use up a full connection slot for your peer to reflect the higher expected bandwidth.\r\n\r\nI also don't like the idea of adding ambiguity about whether transactions might relay over a `disabletx` connection.  We're not making `-blocksonly=1` peers any worse off with this change, and I don't see a need to try to special case those semantics in new behavior that is essentially unrelated -- the goal is to make an allowance for lightweight block-relay-only peers, where we know the behavior is that only blocks and headers should propagate.\r\n\r\nThe updated BIP draft is here: https://github.com/bitcoin/bips/pull/1287\r\n\r\nI've fixed the typo in the commit message you mentioned, added additional logging, and also changed the bips.md update to reference 24.0 (and not 23.0) as the first release to include this code (hoping that's a good assumption!).",
      "created_at" : "2022-03-08T19:28:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1062125998",
      "id" : 1062125998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII584_TsGu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1062125998/reactions"
      },
      "updated_at" : "2022-03-08T19:28:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1062125998",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\r\nHmm, I think m_disable_tx should be exposed via `GetNodeStateStats`/`getpeerinfo`?\r\n\r\n> I don't think that `-blocksonly=1` peers should try to use `disabletx`, because part of the reason that `disabletx` connections are low-bandwidth is that compact blocks still work on these links -- each node should just be getting transactions from elsewhere. If you're really running in `-blocksonly=1` mode, and in the future when I hope we account for disabletx peers separately, then I think it's better to use up a full connection slot for your peer to reflect the higher expected bandwidth.\r\n\r\nIn that case, should `-blocksonly=1` nodes not send DISABLETX for their 2 additional blocks-only connections? Currently, those connections will use up as much of their peers' bandwidth as their full outbound connections (except for addr messages). (I think it still makes sense to have the blocks-only connections, both for the short-lived scans to check the network hasn't been partitioned, and for the long-lived pair of blocks-only connections that don't relay addr messages so are hard for malicious third parties to discover) If we bump the defaults up to 4 or 6 blocks-only connections, that would mean 20% of `-blocksonly=1` traffic going via blocks-only connections would become 33% or 43%.\r\n\r\nShould DISABLETX also forbid BLOCK/GETDATA(block) messages in that case?\r\n\r\nBut... I'm still not sure you couldn't reasonably consider `-blocksonly=1` connections to be low-bandwidth in the first place? They don't need any of the tx INV traffic, and the block traffic at least could be distributed amongst all their peers; so if you can go from 10 outbound peers to 14 outbound peers that's reducing per-peer block traffic from 200MB/week to 144MB/week (at 2MB/block). I don't know; I was thinking the motivation was mostly about avoiding having to allocate large data structures like the bloom filter or avoiding complex work like dealing with erlay reconciliation sets.\r\n\r\n(And in particular, I guess I'd like to avoid allocating the bloom filter/doing reconciliation sets for all the `-blocksonly=1` connections in addition to blocks-only connections)\r\n\r\n(When we have some slots reserved for low-bandwidth blocksonly connections, perhaps we should also set NODE_NETWORK_LIMITED to prevent them from being used for IBD)",
      "created_at" : "2022-03-09T09:01:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1062698356",
      "id" : 1062698356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII584_V310",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1062698356/reactions"
      },
      "updated_at" : "2022-03-09T09:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1062698356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> But... I'm still not sure you couldn't reasonably consider -blocksonly=1 connections to be low-bandwidth in the first place? They don't need any of the tx INV traffic, and the block traffic at least could be distributed amongst all their peers; so if you can go from 10 outbound peers to 14 outbound peers that's reducing per-peer block traffic from 200MB/week to 144MB/week (at 2MB/block). I don't know; I was thinking the motivation was mostly about avoiding having to allocate large data structures like the bloom filter or avoiding complex work like dealing with erlay reconciliation sets.\r\n\r\nI guess I'm not really sure how best to think about this case.  I do think that bandwidth is perhaps the least important network resource to worry about (memory seems very important, as does CPU).  I think the goal is to make it so that in non-adversarial situations, the additional resources used by adding additional DISABLETX connection slots is something that node operators wouldn't really notice -- so that there's no issue with adding additional block-relay-only connections to the network graph.\r\n\r\nI think `-blocksonly=1` peers are somewhere in between; they should allow for less memory but also more bandwidth if they are sometimes relaying full blocks and addrs.  Maybe that's fine as long as the CPU usage is still low?\r\n\r\nAt any rate, I assume `-blocksonly=1` is a relatively uncommon mode, so I'm not sure how important this is to optimize for.  If we changed the semantics to not relay transactions at all (or offered a mode where that was the case) then it's probably fine to start using DISABLETX on all the connections for such a peer.  With the current behavior, I also think it's fine for `-blocksonly=1` peers to have their regular connections be treated the same as (say) a node with an infinite minrelayfee/feefilter setting.  \r\n\r\n> Should DISABLETX also forbid BLOCK/GETDATA(block) messages in that case?\r\n\r\nI do think it's important not to ban GETDATA(block) traffic on block-relay-only links, because the whole point is to serve as an emergency fallback to keep the network in sync if there's some kind of attack happening.  The way I think about this is that we want the normal, non-adversarial case to be very low total network overhead for having these connections (memory, bandwidth, cpu, etc) but in the adversarial case, it's fine if node resource usage might go up a bit because then we're also getting an important benefit (and you'd figure that having defenses against such attacks makes it unappealing to try).",
      "created_at" : "2022-03-10T01:22:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1063557771",
      "id" : 1063557771,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII584_ZJqL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1063557771/reactions"
      },
      "updated_at" : "2022-03-10T01:22:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1063557771",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> At any rate, I assume `-blocksonly=1` is a relatively uncommon mode,\r\n\r\nYeah, I think that might be the key point. Probably `-blocksonly=1` isn't that attractive in general: if you want to be quick to get blocks, you want to get txs and do compact blocks; if you want to not use much resources, you probably want headers only, or to tunnel info directly rather than be on the open p2p network; if you want to just minimise requirements for a full p2p node, you probably just want a smaller but non-zero mempool... Provided `-blocksonly=1` nodes are only a very small proportion of the network, it doesn't seem super worthwhile optimising for the resources they use on other nodes. And if we did want to optimise for them, we could have them only have a couple of connections for relaying their own txs, and have all the rest of them be no-txs-ever connections which would let them use DISABLETX.\r\n\r\n",
      "created_at" : "2022-03-10T03:35:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1063617826",
      "id" : 1063617826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII584_ZYUi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1063617826/reactions"
      },
      "updated_at" : "2022-03-10T03:35:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1063617826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated the OP as @ajtowns suggested, and added a commit to expose `Peer::m_disable_tx` via getpeerinfo() (and updated the test to cover the new code).",
      "created_at" : "2022-03-10T22:25:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1064567306",
      "id" : 1064567306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII584_dAIK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064567306/reactions"
      },
      "updated_at" : "2022-03-10T22:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064567306",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Running a couple of nodes on signet with this patch, seems to work.\r\n\r\nI guess for now, if you do `getpeerinfo`, then all the nodes that say `\"disabletx_received\": true` and have been connected for more than a few minutes have all chosen you as a blocks-only anchor. Don't think you can really do much with that info, though (and you could've gotten it previously by working out if they'd set relaytxes=false and not started addr relay I think).",
      "created_at" : "2022-03-16T20:02:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1069562675",
      "id" : 1069562675,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII584_wDsz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069562675/reactions"
      },
      "updated_at" : "2022-03-16T20:02:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069562675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-03-25T17:17:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1079237032",
      "id" : 1079237032,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585AU9mo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1079237032/reactions"
      },
      "updated_at" : "2022-03-25T17:17:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1079237032",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r838286286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838286286"
         }
      },
      "author_association" : "MEMBER",
      "body" : "BIP 338 doesn't specify that a peer that sends a notfound(tx|wtx|witness_tx) after sending disable_tx should be disconnected. Should the BIP be updated to specify that (or the behaviour here be changed to just drop the message)?",
      "commit_id" : "41e82573f77e9814929818b703fa1b5cc4f95f0a",
      "created_at" : "2022-03-30T08:48:01Z",
      "diff_hunk" : "@@ -4118,6 +4171,11 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             LOCK(::cs_main);\n             for (CInv &inv : vInv) {\n                 if (inv.IsGenTxMsg()) {\n+                    if (peer->m_disable_tx) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r838286286",
      "id" : 838286286,
      "line" : 4174,
      "node_id" : "PRRC_kwDOABII584x9zvO",
      "original_commit_id" : "41e82573f77e9814929818b703fa1b5cc4f95f0a",
      "original_line" : 4174,
      "original_position" : 155,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 155,
      "pull_request_review_id" : 925759463,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838286286/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-30T09:06:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838286286",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r838342452"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838342452"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bips/pull/1287",
      "commit_id" : "41e82573f77e9814929818b703fa1b5cc4f95f0a",
      "created_at" : "2022-03-30T09:43:35Z",
      "diff_hunk" : "@@ -4118,6 +4171,11 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             LOCK(::cs_main);\n             for (CInv &inv : vInv) {\n                 if (inv.IsGenTxMsg()) {\n+                    if (peer->m_disable_tx) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r838342452",
      "id" : 838342452,
      "in_reply_to_id" : 838286286,
      "line" : 4174,
      "node_id" : "PRRC_kwDOABII584x-Bc0",
      "original_commit_id" : "41e82573f77e9814929818b703fa1b5cc4f95f0a",
      "original_line" : 4174,
      "original_position" : 155,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 155,
      "pull_request_review_id" : 925837025,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838342452/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-30T09:43:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838342452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> With this implementation we'll continue to accept `feefilter` messages from, and send `feefilter` messages to, peers which have send us `disabletx`. Is that desired/intended? Should the behaviour be specified in the BIP?\r\n\r\nThis seems to be an oversight -- will update the BIP/code to restrict these messages too.\r\n",
      "created_at" : "2022-04-01T12:23:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1085831692",
      "id" : 1085831692,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585AuHoM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1085831692/reactions"
      },
      "updated_at" : "2022-04-01T12:23:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1085831692",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated this PR to [restrict feefilter messages](url) from disabletx peers.  See also https://github.com/bitcoin/bips/pull/1287.\r\n\r\n@jnewbery I didn't explicitly remove the sending of FEEFILTER messages to peers that have sent us a DISABLETX -- that behavior will automatically change, based on the current logic, once we stop instantiating a `m_tx_relay` object for the peer, so I think an additional restriction will be redundant (and isn't strictly required by the BIP).  (Note that we won't send FEEFILTER messages to peers to whom we have sent a DISABLETX message.)",
      "created_at" : "2022-04-05T13:21:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1088697185",
      "id" : 1088697185,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585A5DNh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1088697185/reactions"
      },
      "updated_at" : "2022-04-05T13:21:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1088697185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r847632163"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847632163"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you have to retouch the code, you can increase the clarity of the logs by precising which protocol violation has been hit, in the occurrence a forbidden sending after a \"disable tx received\" (as some logs are actually precising). Nice for the node operator.",
      "commit_id" : "791048b712b41d2855250829f5d25be6a152f20a",
      "created_at" : "2022-04-11T18:44:45Z",
      "diff_hunk" : "@@ -4085,6 +4138,11 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n     }\n \n     if (msg_type == NetMsgType::FEEFILTER) {\n+        if (peer->m_disable_tx) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r847632163",
      "id" : 847632163,
      "line" : 4141,
      "node_id" : "PRRC_kwDOABII584yhdcj",
      "original_commit_id" : "791048b712b41d2855250829f5d25be6a152f20a",
      "original_line" : 4141,
      "original_position" : 155,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 155,
      "pull_request_review_id" : 938444866,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847632163/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-11T18:45:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/847632163",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > I didn't explicitly remove the sending of FEEFILTER messages to peers that have sent us a DISABLETX -- that behavior will automatically change, based on the current logic, once we stop instantiating a m_tx_relay object for the peer\r\n> \r\n> I'm confused. That is the case for the local node selecting the peer as an outbound block-relay-only. The `Peer`'s `m_tx_relay` is set to false in `InitializeNode` and no `TxRelay` object is instantiated. However, on the other side of the connection, the local node is seen as is `IsInboundConn()` and a `TxRelay` object allocated, allowing the send of `FEEFILTER` in `MaybeSendFeefilter`. So an outbound block-relay-only might send `FEEFILTER` messages provoking a disconnection with current code ? Or are you referencing another behavor or am I missing an interference with `fRelay` ?\r\n\r\nI think the idea is just that after `disabletx` is supported, we'll change the code so that `TxRelay`/`m_tx_relay` is only allocated for inbound connections after `verack` completes without `disabletx` having been received.",
      "created_at" : "2022-04-11T23:42:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1095699240",
      "id" : 1095699240,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585BTwso",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1095699240/reactions"
      },
      "updated_at" : "2022-04-11T23:42:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1095699240",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> that behavior will automatically change, based on the current logic, once we stop instantiating a m_tx_relay object for the peer\r\n\r\nI was looking at this in the context of #22778. It seems to me that `m_fee_filter_sent` and `m_next_send_feefilter` should probably be moved out of the `TxRelay` data structure. All of the other members of `TxRelay` are related to sending transactions _to_ the peer, whereas `m_fee_filter_sent` and `m_next_send_feefilter` are both related to receiving transactions _from_ the peer. A node's tx relay behaviour is not always symmetrical (eg a blocksonly node will ignore incoming transactions, but may still send out its own transactions), so I don't think we should be grouping that behaviour together in a single structure. What do you think?",
      "created_at" : "2022-04-12T17:25:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1096996374",
      "id" : 1096996374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585BYtYW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1096996374/reactions"
      },
      "updated_at" : "2022-04-12T17:25:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1096996374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I was looking at this in the context of #22778. It seems to me that `m_fee_filter_sent` and `m_next_send_feefilter` should probably be moved out of the `TxRelay` data structure. All of the other members of `TxRelay` are related to sending transactions _to_ the peer, whereas `m_fee_filter_sent` and `m_next_send_feefilter` are both related to receiving transactions _from_ the peer. A node's tx relay behaviour is not always symmetrical (eg a blocksonly node will ignore incoming transactions, but may still send out its own transactions), so I don't think we should be grouping that behaviour together in a single structure. What do you think?\r\n\r\n`disabletx` is defined as being always symmetrical, and if the only time we drop TxRelay is when we send/receive `disabletx` and thus won't send/receive feefilter messages, it doesn't make a difference. See the conversation around https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1063557771 ; my conclusion at least was that we don't want to consider -blocksonly=1 peers low bandwidth (because unlike block_relay_only peers they won't already have the txs to do compact block reconstruction), so do want to keep limiting them, so the extra memory usage from the `TxRelay` struct isn't a problem.\r\n\r\nOtherwise, I think renaming the `TxRelay` struct to be `TxSending` and dropping those because they're only relevent to receiving txs would make sense, but then it would be another structure to make optional for disabletx peers, which seems like make-work.",
      "created_at" : "2022-04-12T17:56:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1097024857",
      "id" : 1097024857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585BY0VZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1097024857/reactions"
      },
      "updated_at" : "2022-04-12T17:56:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1097024857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think the idea is just that after disabletx is supported, we'll change the code so that TxRelay/m_tx_relay is only allocated for inbound connections after verack completes without disabletx having been received.\r\n\r\nYes, I'm aligned on the direction to remove `TxRelay` for inbound connections devoid of tx-relay traffic. I'm just pointing that with current code I understand that a disabletx-upgraded node should disconnect outbound block-relay-only peers as those ones can still send `FEEFILTER`, am I incorrect ?",
      "created_at" : "2022-04-13T16:37:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1098261809",
      "id" : 1098261809,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585BdiUx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098261809/reactions"
      },
      "updated_at" : "2022-04-13T16:37:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098261809",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > I didn't explicitly remove the sending of FEEFILTER messages to peers that have sent us a DISABLETX -- that behavior will automatically change, based on the current logic, once we stop instantiating a m_tx_relay object for the peer\r\n> \r\n> I'm confused. That is the case for the local node selecting the peer as an outbound block-relay-only. The `Peer`'s `m_tx_relay` is set to false in `InitializeNode` and no `TxRelay` object is instantiated. However, on the other side of the connection, the local node is seen as is `IsInboundConn()` and a `TxRelay` object allocated, allowing the send of `FEEFILTER` in `MaybeSendFeefilter`. So an outbound block-relay-only might send `FEEFILTER` messages provoking a disconnection with current code ? Or are you referencing another behavor or am I missing an interference with `fRelay` ?\r\n\r\nHere's how I think it works:\r\n1. Suppose node A sends `disabletx` to node B.\r\n  -> Now if nodeA sends a `feefilter` message to node B, B will disconnect A; this requirement that A must not send `feefilter` messages is now specified in the BIP.\r\n2. Node B can still (optionally) send `feefilter` messages to node A, as the BIP does not prohibit this.\r\n-> If node A disconnected node B for sending `feefilter`, then that would effectively make node A incompatible with software that didn't implement BIP 338, which was not the intent of the BIP.\r\n3. In this PR, nodes will only send `disabletx` to outbound block-relay-only peers, and we do not instantiate `m_tx_relay` for those block-relay-only peers.\r\n-> This is sufficient for node A to not send `feefilter` messages to node B, and hence node A should never be disconnected from node B due to the requirement that nodes sending `disabletx` not send `feefilter` messages.\r\n",
      "created_at" : "2022-04-13T18:35:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1098362467",
      "id" : 1098362467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585Bd65j",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098362467/reactions"
      },
      "updated_at" : "2022-04-13T18:35:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098362467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, having the behaviour be \"must not send message X if you receive the DISABLETX flag\" seems a bit incompatible with upgrades?\r\n\r\nSuppose protocol version 70020 comes along with erlay support, and you (a non-bitcoin-core implemention) implement that, but don't bother with disabletx. Then a block_relay_only connection comes in, and says \"oh, high version number, I'll send the DISABLETX msg\", which you then ignore. You don't send txs to them because they specified `fRelay=false`, but you do send a FEEFILTER message to them, and they then disconnect you.\r\n\r\nWouldn't it be better to treat feature support and enablement separately; ie send \"disabletx false\" normally, and \"disabletx true\" for block-relay-only outbounds, with the logic being \"if both side support disabletx, and either side enables it, then don't send tx related messages and disconnect if they're received; otherwise no-op\" ?",
      "created_at" : "2022-04-13T22:39:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1098547882",
      "id" : 1098547882,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585BeoKq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098547882/reactions"
      },
      "updated_at" : "2022-04-13T22:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098547882",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Wouldn't it be better to treat feature support and enablement separately; ie send \"disabletx false\" normally, and \"disabletx true\" for block-relay-only outbounds, with the logic being \"if both side support disabletx, and either side enables it, then don't send tx related messages and disconnect if they're received; otherwise no-op\" ?\r\n\r\n@ajtowns I don't think the code suffers from the problem that you describe, because this BIP and implementation do not enforce any restrictions on recipients of a `disabletx` message that don't exist today for recipients of an `fRelay=false` message, but nevertheless I think your idea of having both parties that understand/implement BIP 338 to indicate as much by both sending a message to the other makes a lot of sense.\r\n\r\nI'll rework the BIP and this code to implement that, thank you!",
      "created_at" : "2022-04-14T15:33:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1099307400",
      "id" : 1099307400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585BhhmI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1099307400/reactions"
      },
      "updated_at" : "2022-04-14T15:33:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1099307400",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> In this PR, nodes will only send disabletx to outbound block-relay-only peers, and we do not instantiate m_tx_relay for those block-relay-only peers.\r\n-> This is sufficient for node A to not send feefilter messages to node B, and hence node A should never be disconnected from node B due to the requirement that nodes sending disabletx not send feefilter messages.\r\n\r\nThanks, I understand my confusion. The `feefilter` prohibition is enforced by the `disabletx` receiver, in that case the outbound block-relay-only peer.",
      "created_at" : "2022-04-15T16:23:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1100209650",
      "id" : 1100209650,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585Bk93y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100209650/reactions"
      },
      "updated_at" : "2022-04-15T16:23:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100209650",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated bip text is here: https://github.com/sdaftuar/bips/commit/ecf86e1e21706176b8e0b06e7b0a5f5e993bb720.  Will update this branch next.",
      "created_at" : "2022-05-13T13:33:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1126062836",
      "id" : 1126062836,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585DHlr0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1126062836/reactions"
      },
      "updated_at" : "2022-05-13T13:33:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1126062836",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-05-19T10:21:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1131513130",
      "id" : 1131513130,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585DcYUq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1131513130/reactions"
      },
      "updated_at" : "2022-05-19T10:21:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1131513130",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing now that #22778 has been merged.",
      "created_at" : "2022-05-19T12:47:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-1131642988",
      "id" : 1131642988,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "IC_kwDOABII585Dc4Bs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1131642988/reactions"
      },
      "updated_at" : "2022-05-19T12:47:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1131642988",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
