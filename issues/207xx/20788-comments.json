[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The following two PRs would benefit from this:\r\n\r\n* https://github.com/bitcoin/bitcoin/pull/19203 would only need to add the fuzzing test and the mocked/fuzzed `Sock` implementation (last commit from that PR).\r\n* https://github.com/bitcoin/bitcoin/pull/20685 would become smaller. `Sock` originated there and that PR contains a copy of it. So if this PR gets merged, then the size of #20685 will be reduced.",
      "created_at" : "2020-12-28T16:18:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-751770419",
      "id" : 751770419,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MTc3MDQxOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-28T16:18:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/751770419",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r549406398"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549406398"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n#include <netbase.h> // For CloseSocket\r\n```\r\n\r\nIt seems this is the only Bitcoin Core related dependency. Are the other includes needed at all? If not, it would be good to move this module to `util`, which is the place for general utility stuff (not bitcoin related).",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2020-12-28T16:26:39Z",
      "diff_hunk" : "@@ -0,0 +1,134 @@\n+// Copyright (c) 2012-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat.h>\n+#include <netaddress.h>\n+#include <netbase.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r549406398",
      "id" : 549406398,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwNjM5OA==",
      "original_commit_id" : "99b8e88a15cb12483f28079d0f91fe8cf361da56",
      "original_line" : 7,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/sock.cpp",
      "position" : null,
      "pull_request_review_id" : 559212963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549406398",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21015 (Make all of net_processing (and some of net) use std::chrono types by dhruv)\n* #20685 (Add I2P support using I2P SAM by vasild)\n* #19415 (net: Make DNS lookup mockable, add fuzzing harness by practicalswift)\n* #19203 (net: Add regression fuzz harness for CVE-2017-18350. Add FuzzedSocket. Add thin SOCKET wrapper. by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-12-28T17:07:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-751790123",
      "id" : 751790123,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MTc5MDEyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-06T20:43:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/751790123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r549461016"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549461016"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Q: would it make sense to have this method as part of the `Sock`? (Something similar to `Sock::recv` but with a timeout parameter)",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2020-12-28T19:26:26Z",
      "diff_hunk" : "@@ -347,15 +349,15 @@ enum class IntrRecvError {\n  *      Sockets can be made non-blocking with SetSocketNonBlocking(const\n  *      SOCKET&, bool).\n  */\n-static IntrRecvError InterruptibleRecv(uint8_t* data, size_t len, int timeout, const SOCKET& hSocket)\n+static IntrRecvError InterruptibleRecv(uint8_t* data, size_t len, int timeout, const Sock& sock)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r549461016",
      "id" : 549461016,
      "line" : 345,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2MTAxNg==",
      "original_commit_id" : "99b8e88a15cb12483f28079d0f91fe8cf361da56",
      "original_line" : 345,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : 48,
      "pull_request_review_id" : 559273398,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549461016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127973?v=4",
         "events_url" : "https://api.github.com/users/lontivero/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lontivero/followers",
         "following_url" : "https://api.github.com/users/lontivero/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lontivero/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lontivero",
         "id" : 127973,
         "login" : "lontivero",
         "node_id" : "MDQ6VXNlcjEyNzk3Mw==",
         "organizations_url" : "https://api.github.com/users/lontivero/orgs",
         "received_events_url" : "https://api.github.com/users/lontivero/received_events",
         "repos_url" : "https://api.github.com/users/lontivero/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lontivero/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lontivero/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lontivero"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Strong concept ACK\r\n\r\nThis abstraction would be extremely useful to have when fuzzing low-level networking code.",
      "created_at" : "2020-12-28T20:57:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-751861963",
      "id" : 751861963,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MTg2MTk2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-28T20:57:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/751861963",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r549718454"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549718454"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, indeed. That would be convenient together with a `send` method that retries upon temporary failures (see below).\r\n\r\nI did not include such methods in this PR because it is self-sufficient as it is and achieves the initial purpose to introduce a mockable socket that can be used for fuzzing in https://github.com/bitcoin/bitcoin/pull/19203.\r\n\r\nPossible future improvements (which I resisted adding in this PR):\r\n* Add robust receiving method, like `InterruptibleRecv()` (or change that function to a method of the `Sock` class)\r\n* Add robust sending method, like [`SendComplete()`](https://github.com/bitcoin/bitcoin/blob/2ae504c4b96013c87cc97909bdb00866fc4ab8a0/src/netbase.cpp#L1085) from https://github.com/bitcoin/bitcoin/pull/20685\r\n* Use `Sock` in more places instead of the bare `SOCKET` - chase all places where `Sock::Release()` or `Sock::Get()` is called and see if the consumer can be changed to use `Sock` instead. E.g. in `CNode` constructor.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2020-12-29T14:10:40Z",
      "diff_hunk" : "@@ -347,15 +349,15 @@ enum class IntrRecvError {\n  *      Sockets can be made non-blocking with SetSocketNonBlocking(const\n  *      SOCKET&, bool).\n  */\n-static IntrRecvError InterruptibleRecv(uint8_t* data, size_t len, int timeout, const SOCKET& hSocket)\n+static IntrRecvError InterruptibleRecv(uint8_t* data, size_t len, int timeout, const Sock& sock)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r549718454",
      "id" : 549718454,
      "in_reply_to_id" : 549461016,
      "line" : 345,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxODQ1NA==",
      "original_commit_id" : "99b8e88a15cb12483f28079d0f91fe8cf361da56",
      "original_line" : 345,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : 48,
      "pull_request_review_id" : 559548844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549718454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r549799438"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549799438"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No, the other includes are not needed (and I removed them). However there is a circular dependency now:\r\n\r\n* netbase -> sock (`netbase.cpp` uses the `Sock` class, of course)\r\n* sock -> netbase (`sock.cpp` uses `MillisToTimeval()` and `CloseSocket()` which are defined in `netbase.cpp`)\r\n\r\nOne way to resolve that is to put the `Sock` class in `netbase.{h,cpp}` and ditch `sock.{h,cpp}`.\r\n\r\nAnother one would be to move `MillisToTimeval()` and `CloseSocket()` outside of `netbase.cpp`, somewhere in `src/util/` and use them from both `netbase.cpp` and from `sock.cpp`.\r\n\r\nHmm...",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2020-12-29T18:09:50Z",
      "diff_hunk" : "@@ -0,0 +1,134 @@\n+// Copyright (c) 2012-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat.h>\n+#include <netaddress.h>\n+#include <netbase.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r549799438",
      "id" : 549799438,
      "in_reply_to_id" : 549406398,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc5OTQzOA==",
      "original_commit_id" : "99b8e88a15cb12483f28079d0f91fe8cf361da56",
      "original_line" : 7,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/sock.cpp",
      "position" : null,
      "pull_request_review_id" : 559645147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549799438",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "99b8e88a1...408a9473b: moved the `Sock` class inside `netbase.cpp` to resolve a [circular dependency](https://github.com/bitcoin/bitcoin/pull/20788#discussion_r549799438).\r\n\r\nAnother option would be to keep the `Sock` class in its own file `src/sock.cpp` or `src/util/sock.cpp`. Since it uses `MillisToTimeval()` and `CloseSocket()` they would have to be moved out of `netbase.cpp`.",
      "created_at" : "2020-12-30T11:37:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-752448197",
      "id" : 752448197,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MjQ0ODE5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-30T11:37:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752448197",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550164602"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550164602"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> One way to resolve that is to put the `Sock` class in `netbase.{h,cpp}`...\r\n\r\nDid that.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2020-12-30T11:38:39Z",
      "diff_hunk" : "@@ -0,0 +1,134 @@\n+// Copyright (c) 2012-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat.h>\n+#include <netaddress.h>\n+#include <netbase.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550164602",
      "id" : 550164602,
      "in_reply_to_id" : 549406398,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE2NDYwMg==",
      "original_commit_id" : "99b8e88a15cb12483f28079d0f91fe8cf361da56",
      "original_line" : 7,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/sock.cpp",
      "position" : null,
      "pull_request_review_id" : 560013690,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550164602",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550243581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550243581"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit here and L120, s/overriden/overridden/",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2020-12-30T16:02:50Z",
      "diff_hunk" : "@@ -51,9 +54,130 @@ bool Lookup(const std::string& name, CService& addr, int portDefault, bool fAllo\n bool Lookup(const std::string& name, std::vector<CService>& vAddr, int portDefault, bool fAllowLookup, unsigned int nMaxSolutions);\n CService LookupNumeric(const std::string& name, int portDefault = 0);\n bool LookupSubNet(const std::string& strSubnet, CSubNet& subnet);\n-SOCKET CreateSocket(const CService &addrConnect);\n+\n+/**\n+ * RAII helper class that manages a socket. Mimics `std::unique_ptr`, but instead of a pointer it\n+ * contains a socket and closes it automatically when it goes out of scope.\n+ */\n+class Sock\n+{\n+public:\n+    /**\n+     * Default constructor, creates an empty object that does nothing when destroyed.\n+     */\n+    Sock();\n+\n+    /**\n+     * Take ownership of an existent socket.\n+     */\n+    explicit Sock(SOCKET s);\n+\n+    /**\n+     * Copy constructor, disabled because closing the same socket twice is undesirable.\n+     */\n+    Sock(const Sock&) = delete;\n+\n+    /**\n+     * Move constructor, grab the socket from another object and close ours (if set).\n+     */\n+    Sock(Sock&& other);\n+\n+    /**\n+     * Destructor, close the socket or do nothing if empty.\n+     */\n+    virtual ~Sock();\n+\n+    /**\n+     * Copy assignment operator, disabled because closing the same socket twice is undesirable.\n+     */\n+    Sock& operator=(const Sock&) = delete;\n+\n+    /**\n+     * Move assignment operator, grab the socket from another object and close ours (if set).\n+     */\n+    virtual Sock& operator=(Sock&& other);\n+\n+    /**\n+     * Get the value of the contained socket.\n+     * @return socket or INVALID_SOCKET if empty\n+     */\n+    virtual SOCKET Get() const;\n+\n+    /**\n+     * Get the value of the contained socket and drop ownership. It will not be closed by the\n+     * destructor after this call.\n+     * @return socket or INVALID_SOCKET if empty\n+     */\n+    virtual SOCKET Release();\n+\n+    /**\n+     * Close if non-empty.\n+     */\n+    virtual void Reset();\n+\n+    /**\n+     * send(2) wrapper. Equivalent to `send(this->Get(), data, len, flags);`. Code that uses this\n+     * wrapper can be unit-tested if this method is overriden by a mock Sock implementation.\n+     */\n+    virtual ssize_t Send(const void* data, size_t len, int flags) const;\n+\n+    /**\n+     * recv(2) wrapper. Equivalent to `recv(this->Get(), buf, len, flags);`. Code that uses this\n+     * wrapper can be unit-tested if this method is overriden by a mock Sock implementation.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550243581",
      "id" : 550243581,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI0MzU4MQ==",
      "original_commit_id" : "408a9473bed6b3be82b124c171435247100b9d34",
      "original_line" : 126,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/netbase.h",
      "position" : null,
      "pull_request_review_id" : 560106469,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550243581",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550248416"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550248416"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: i would like to suggest rename `Sock::Release` as `Sock::GetAndRelease`. IMO it makes it just a tiny bit  more readable. Feel free to ignore this comment.\r\n```c++\r\n    CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), sock->GetAndRelease(), addrConnect,\r\n                             CalculateKeyedNetGroup(addrConnect), nonce, addr_bind,\r\n                             pszDest ? pszDest : \"\", conn_type);\r\n```",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2020-12-30T16:17:47Z",
      "diff_hunk" : "@@ -437,51 +437,55 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n \n     // Connect\n     bool connected = false;\n-    SOCKET hSocket = INVALID_SOCKET;\n+    std::unique_ptr<Sock> sock;\n     proxyType proxy;\n     if (addrConnect.IsValid()) {\n         bool proxyConnectionFailed = false;\n \n         if (GetProxy(addrConnect.GetNetwork(), proxy)) {\n-            hSocket = CreateSocket(proxy.proxy);\n-            if (hSocket == INVALID_SOCKET) {\n+            sock = CreateSock(proxy.proxy);\n+            if (!sock) {\n                 return nullptr;\n             }\n-            connected = ConnectThroughProxy(proxy, addrConnect.ToStringIP(), addrConnect.GetPort(), hSocket, nConnectTimeout, proxyConnectionFailed);\n+            connected = ConnectThroughProxy(proxy, addrConnect.ToStringIP(), addrConnect.GetPort(),\n+                                            *sock, nConnectTimeout, proxyConnectionFailed);\n         } else {\n             // no proxy needed (none set for target network)\n-            hSocket = CreateSocket(addrConnect);\n-            if (hSocket == INVALID_SOCKET) {\n+            sock = CreateSock(addrConnect);\n+            if (!sock) {\n                 return nullptr;\n             }\n-            connected = ConnectSocketDirectly(addrConnect, hSocket, nConnectTimeout, conn_type == ConnectionType::MANUAL);\n+            connected = ConnectSocketDirectly(addrConnect, sock->Get(), nConnectTimeout,\n+                                              conn_type == ConnectionType::MANUAL);\n         }\n         if (!proxyConnectionFailed) {\n             // If a connection to the node was attempted, and failure (if any) is not caused by a problem connecting to\n             // the proxy, mark this as an attempt.\n             addrman.Attempt(addrConnect, fCountFailure);\n         }\n     } else if (pszDest && GetNameProxy(proxy)) {\n-        hSocket = CreateSocket(proxy.proxy);\n-        if (hSocket == INVALID_SOCKET) {\n+        sock = CreateSock(proxy.proxy);\n+        if (!sock) {\n             return nullptr;\n         }\n         std::string host;\n         int port = default_port;\n         SplitHostPort(std::string(pszDest), port, host);\n         bool proxyConnectionFailed;\n-        connected = ConnectThroughProxy(proxy, host, port, hSocket, nConnectTimeout, proxyConnectionFailed);\n+        connected =\n+            ConnectThroughProxy(proxy, host, port, *sock, nConnectTimeout, proxyConnectionFailed);\n     }\n     if (!connected) {\n-        CloseSocket(hSocket);\n         return nullptr;\n     }\n \n     // Add node\n     NodeId id = GetNewNodeId();\n     uint64_t nonce = GetDeterministicRandomizer(RANDOMIZER_ID_LOCALHOSTNONCE).Write(id).Finalize();\n-    CAddress addr_bind = GetBindAddress(hSocket);\n-    CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), hSocket, addrConnect, CalculateKeyedNetGroup(addrConnect), nonce, addr_bind, pszDest ? pszDest : \"\", conn_type);\n+    CAddress addr_bind = GetBindAddress(sock->Get());\n+    CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), sock->Release(), addrConnect,\n+                             CalculateKeyedNetGroup(addrConnect), nonce, addr_bind,\n+                             pszDest ? pszDest : \"\", conn_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550248416",
      "id" : 550248416,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI0ODQxNg==",
      "original_commit_id" : "408a9473bed6b3be82b124c171435247100b9d34",
      "original_line" : 479,
      "original_position" : 65,
      "original_start_line" : 486,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 560112136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550248416",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127973?v=4",
         "events_url" : "https://api.github.com/users/lontivero/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lontivero/followers",
         "following_url" : "https://api.github.com/users/lontivero/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lontivero/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lontivero",
         "id" : 127973,
         "login" : "lontivero",
         "node_id" : "MDQ6VXNlcjEyNzk3Mw==",
         "organizations_url" : "https://api.github.com/users/lontivero/orgs",
         "received_events_url" : "https://api.github.com/users/lontivero/received_events",
         "repos_url" : "https://api.github.com/users/lontivero/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lontivero/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lontivero/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lontivero"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550250637"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550250637"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The `returned` parameter is never used by any caller. It seems this is something that was added for future usage maybe. Does it make sense to have it at this point in time, I mean, if tomorrow it is needed then it could be added in a future PR. ",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2020-12-30T16:24:06Z",
      "diff_hunk" : "@@ -541,58 +530,170 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n     uint8_t pchRet3[256];\n     switch (pchRet2[3])\n     {\n-        case SOCKS5Atyp::IPV4: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, hSocket); break;\n-        case SOCKS5Atyp::IPV6: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, hSocket); break;\n+        case SOCKS5Atyp::IPV4: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, sock); break;\n+        case SOCKS5Atyp::IPV6: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, sock); break;\n         case SOCKS5Atyp::DOMAINNAME:\n         {\n-            recvr = InterruptibleRecv(pchRet3, 1, SOCKS5_RECV_TIMEOUT, hSocket);\n+            recvr = InterruptibleRecv(pchRet3, 1, SOCKS5_RECV_TIMEOUT, sock);\n             if (recvr != IntrRecvError::OK) {\n                 return error(\"Error reading from proxy\");\n             }\n             int nRecv = pchRet3[0];\n-            recvr = InterruptibleRecv(pchRet3, nRecv, SOCKS5_RECV_TIMEOUT, hSocket);\n+            recvr = InterruptibleRecv(pchRet3, nRecv, SOCKS5_RECV_TIMEOUT, sock);\n             break;\n         }\n         default: return error(\"Error: malformed proxy response\");\n     }\n     if (recvr != IntrRecvError::OK) {\n         return error(\"Error reading from proxy\");\n     }\n-    if ((recvr = InterruptibleRecv(pchRet3, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n+    if ((recvr = InterruptibleRecv(pchRet3, 2, SOCKS5_RECV_TIMEOUT, sock)) != IntrRecvError::OK) {\n         return error(\"Error reading from proxy\");\n     }\n     LogPrint(BCLog::NET, \"SOCKS5 connected %s\\n\", strDest);\n     return true;\n }\n \n-/**\n- * Try to create a socket file descriptor with specific properties in the\n- * communications domain (address family) of the specified service.\n- *\n- * For details on the desired properties, see the inline comments in the source\n- * code.\n- */\n-SOCKET CreateSocket(const CService &addrConnect)\n+Sock::Sock() : m_socket(INVALID_SOCKET) {}\n+\n+Sock::Sock(SOCKET s) : m_socket(s) {}\n+\n+Sock::Sock(Sock&& other)\n+{\n+    Reset();\n+    m_socket = other.m_socket;\n+    other.m_socket = INVALID_SOCKET;\n+}\n+\n+Sock::~Sock() { Reset(); }\n+\n+Sock& Sock::operator=(Sock&& other)\n+{\n+    Reset();\n+    m_socket = other.m_socket;\n+    other.m_socket = INVALID_SOCKET;\n+    return *this;\n+}\n+\n+SOCKET Sock::Get() const { return m_socket; }\n+\n+SOCKET Sock::Release()\n+{\n+    const SOCKET s = m_socket;\n+    m_socket = INVALID_SOCKET;\n+    return s;\n+}\n+\n+void Sock::Reset() { CloseSocket(m_socket); }\n+\n+ssize_t Sock::Send(const void* data, size_t len, int flags) const\n+{\n+    return send(m_socket, static_cast<const char*>(data), len, flags);\n+}\n+\n+ssize_t Sock::Recv(void* buf, size_t len, int flags) const\n+{\n+    return recv(m_socket, static_cast<char*>(buf), len, flags);\n+}\n+\n+bool Sock::Wait(const std::chrono::milliseconds& timeout, Event requested, Event* returned) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550250637",
      "id" : 550250637,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI1MDYzNw==",
      "original_commit_id" : "408a9473bed6b3be82b124c171435247100b9d34",
      "original_line" : 599,
      "original_position" : 215,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_review_id" : 560112136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550250637",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127973?v=4",
         "events_url" : "https://api.github.com/users/lontivero/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lontivero/followers",
         "following_url" : "https://api.github.com/users/lontivero/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lontivero/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lontivero",
         "id" : 127973,
         "login" : "lontivero",
         "node_id" : "MDQ6VXNlcjEyNzk3Mw==",
         "organizations_url" : "https://api.github.com/users/lontivero/orgs",
         "received_events_url" : "https://api.github.com/users/lontivero/received_events",
         "repos_url" : "https://api.github.com/users/lontivero/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lontivero/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lontivero/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lontivero"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550487660"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550487660"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree `GetAndRelease()` is more descriptive, but I am trying to mimic `std::unique_ptr` and its [method which is called release()](https://en.cppreference.com/w/cpp/memory/unique_ptr/release).",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2020-12-31T13:53:08Z",
      "diff_hunk" : "@@ -437,51 +437,55 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n \n     // Connect\n     bool connected = false;\n-    SOCKET hSocket = INVALID_SOCKET;\n+    std::unique_ptr<Sock> sock;\n     proxyType proxy;\n     if (addrConnect.IsValid()) {\n         bool proxyConnectionFailed = false;\n \n         if (GetProxy(addrConnect.GetNetwork(), proxy)) {\n-            hSocket = CreateSocket(proxy.proxy);\n-            if (hSocket == INVALID_SOCKET) {\n+            sock = CreateSock(proxy.proxy);\n+            if (!sock) {\n                 return nullptr;\n             }\n-            connected = ConnectThroughProxy(proxy, addrConnect.ToStringIP(), addrConnect.GetPort(), hSocket, nConnectTimeout, proxyConnectionFailed);\n+            connected = ConnectThroughProxy(proxy, addrConnect.ToStringIP(), addrConnect.GetPort(),\n+                                            *sock, nConnectTimeout, proxyConnectionFailed);\n         } else {\n             // no proxy needed (none set for target network)\n-            hSocket = CreateSocket(addrConnect);\n-            if (hSocket == INVALID_SOCKET) {\n+            sock = CreateSock(addrConnect);\n+            if (!sock) {\n                 return nullptr;\n             }\n-            connected = ConnectSocketDirectly(addrConnect, hSocket, nConnectTimeout, conn_type == ConnectionType::MANUAL);\n+            connected = ConnectSocketDirectly(addrConnect, sock->Get(), nConnectTimeout,\n+                                              conn_type == ConnectionType::MANUAL);\n         }\n         if (!proxyConnectionFailed) {\n             // If a connection to the node was attempted, and failure (if any) is not caused by a problem connecting to\n             // the proxy, mark this as an attempt.\n             addrman.Attempt(addrConnect, fCountFailure);\n         }\n     } else if (pszDest && GetNameProxy(proxy)) {\n-        hSocket = CreateSocket(proxy.proxy);\n-        if (hSocket == INVALID_SOCKET) {\n+        sock = CreateSock(proxy.proxy);\n+        if (!sock) {\n             return nullptr;\n         }\n         std::string host;\n         int port = default_port;\n         SplitHostPort(std::string(pszDest), port, host);\n         bool proxyConnectionFailed;\n-        connected = ConnectThroughProxy(proxy, host, port, hSocket, nConnectTimeout, proxyConnectionFailed);\n+        connected =\n+            ConnectThroughProxy(proxy, host, port, *sock, nConnectTimeout, proxyConnectionFailed);\n     }\n     if (!connected) {\n-        CloseSocket(hSocket);\n         return nullptr;\n     }\n \n     // Add node\n     NodeId id = GetNewNodeId();\n     uint64_t nonce = GetDeterministicRandomizer(RANDOMIZER_ID_LOCALHOSTNONCE).Write(id).Finalize();\n-    CAddress addr_bind = GetBindAddress(hSocket);\n-    CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), hSocket, addrConnect, CalculateKeyedNetGroup(addrConnect), nonce, addr_bind, pszDest ? pszDest : \"\", conn_type);\n+    CAddress addr_bind = GetBindAddress(sock->Get());\n+    CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), sock->Release(), addrConnect,\n+                             CalculateKeyedNetGroup(addrConnect), nonce, addr_bind,\n+                             pszDest ? pszDest : \"\", conn_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550487660",
      "id" : 550487660,
      "in_reply_to_id" : 550248416,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NzY2MA==",
      "original_commit_id" : "408a9473bed6b3be82b124c171435247100b9d34",
      "original_line" : 479,
      "original_position" : 65,
      "original_start_line" : 486,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 560354806,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550487660",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Is there any reason not to use the `Sock` object in `CNode`?",
      "created_at" : "2020-12-31T14:08:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-752967726",
      "id" : 752967726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1Mjk2NzcyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-31T14:08:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752967726",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "408a9473b...8fc63e344: fixed a typo and removed unused parameter",
      "created_at" : "2020-12-31T14:14:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-752969218",
      "id" : 752969218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1Mjk2OTIxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-31T14:14:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752969218",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550491541"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550491541"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2020-12-31T14:14:51Z",
      "diff_hunk" : "@@ -51,9 +54,130 @@ bool Lookup(const std::string& name, CService& addr, int portDefault, bool fAllo\n bool Lookup(const std::string& name, std::vector<CService>& vAddr, int portDefault, bool fAllowLookup, unsigned int nMaxSolutions);\n CService LookupNumeric(const std::string& name, int portDefault = 0);\n bool LookupSubNet(const std::string& strSubnet, CSubNet& subnet);\n-SOCKET CreateSocket(const CService &addrConnect);\n+\n+/**\n+ * RAII helper class that manages a socket. Mimics `std::unique_ptr`, but instead of a pointer it\n+ * contains a socket and closes it automatically when it goes out of scope.\n+ */\n+class Sock\n+{\n+public:\n+    /**\n+     * Default constructor, creates an empty object that does nothing when destroyed.\n+     */\n+    Sock();\n+\n+    /**\n+     * Take ownership of an existent socket.\n+     */\n+    explicit Sock(SOCKET s);\n+\n+    /**\n+     * Copy constructor, disabled because closing the same socket twice is undesirable.\n+     */\n+    Sock(const Sock&) = delete;\n+\n+    /**\n+     * Move constructor, grab the socket from another object and close ours (if set).\n+     */\n+    Sock(Sock&& other);\n+\n+    /**\n+     * Destructor, close the socket or do nothing if empty.\n+     */\n+    virtual ~Sock();\n+\n+    /**\n+     * Copy assignment operator, disabled because closing the same socket twice is undesirable.\n+     */\n+    Sock& operator=(const Sock&) = delete;\n+\n+    /**\n+     * Move assignment operator, grab the socket from another object and close ours (if set).\n+     */\n+    virtual Sock& operator=(Sock&& other);\n+\n+    /**\n+     * Get the value of the contained socket.\n+     * @return socket or INVALID_SOCKET if empty\n+     */\n+    virtual SOCKET Get() const;\n+\n+    /**\n+     * Get the value of the contained socket and drop ownership. It will not be closed by the\n+     * destructor after this call.\n+     * @return socket or INVALID_SOCKET if empty\n+     */\n+    virtual SOCKET Release();\n+\n+    /**\n+     * Close if non-empty.\n+     */\n+    virtual void Reset();\n+\n+    /**\n+     * send(2) wrapper. Equivalent to `send(this->Get(), data, len, flags);`. Code that uses this\n+     * wrapper can be unit-tested if this method is overriden by a mock Sock implementation.\n+     */\n+    virtual ssize_t Send(const void* data, size_t len, int flags) const;\n+\n+    /**\n+     * recv(2) wrapper. Equivalent to `recv(this->Get(), buf, len, flags);`. Code that uses this\n+     * wrapper can be unit-tested if this method is overriden by a mock Sock implementation.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550491541",
      "id" : 550491541,
      "in_reply_to_id" : 550243581,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5MTU0MQ==",
      "original_commit_id" : "408a9473bed6b3be82b124c171435247100b9d34",
      "original_line" : 126,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/netbase.h",
      "position" : null,
      "pull_request_review_id" : 560358779,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550491541",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550491623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550491623"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Removed, the less code - the better.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2020-12-31T14:15:16Z",
      "diff_hunk" : "@@ -541,58 +530,170 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n     uint8_t pchRet3[256];\n     switch (pchRet2[3])\n     {\n-        case SOCKS5Atyp::IPV4: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, hSocket); break;\n-        case SOCKS5Atyp::IPV6: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, hSocket); break;\n+        case SOCKS5Atyp::IPV4: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, sock); break;\n+        case SOCKS5Atyp::IPV6: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, sock); break;\n         case SOCKS5Atyp::DOMAINNAME:\n         {\n-            recvr = InterruptibleRecv(pchRet3, 1, SOCKS5_RECV_TIMEOUT, hSocket);\n+            recvr = InterruptibleRecv(pchRet3, 1, SOCKS5_RECV_TIMEOUT, sock);\n             if (recvr != IntrRecvError::OK) {\n                 return error(\"Error reading from proxy\");\n             }\n             int nRecv = pchRet3[0];\n-            recvr = InterruptibleRecv(pchRet3, nRecv, SOCKS5_RECV_TIMEOUT, hSocket);\n+            recvr = InterruptibleRecv(pchRet3, nRecv, SOCKS5_RECV_TIMEOUT, sock);\n             break;\n         }\n         default: return error(\"Error: malformed proxy response\");\n     }\n     if (recvr != IntrRecvError::OK) {\n         return error(\"Error reading from proxy\");\n     }\n-    if ((recvr = InterruptibleRecv(pchRet3, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n+    if ((recvr = InterruptibleRecv(pchRet3, 2, SOCKS5_RECV_TIMEOUT, sock)) != IntrRecvError::OK) {\n         return error(\"Error reading from proxy\");\n     }\n     LogPrint(BCLog::NET, \"SOCKS5 connected %s\\n\", strDest);\n     return true;\n }\n \n-/**\n- * Try to create a socket file descriptor with specific properties in the\n- * communications domain (address family) of the specified service.\n- *\n- * For details on the desired properties, see the inline comments in the source\n- * code.\n- */\n-SOCKET CreateSocket(const CService &addrConnect)\n+Sock::Sock() : m_socket(INVALID_SOCKET) {}\n+\n+Sock::Sock(SOCKET s) : m_socket(s) {}\n+\n+Sock::Sock(Sock&& other)\n+{\n+    Reset();\n+    m_socket = other.m_socket;\n+    other.m_socket = INVALID_SOCKET;\n+}\n+\n+Sock::~Sock() { Reset(); }\n+\n+Sock& Sock::operator=(Sock&& other)\n+{\n+    Reset();\n+    m_socket = other.m_socket;\n+    other.m_socket = INVALID_SOCKET;\n+    return *this;\n+}\n+\n+SOCKET Sock::Get() const { return m_socket; }\n+\n+SOCKET Sock::Release()\n+{\n+    const SOCKET s = m_socket;\n+    m_socket = INVALID_SOCKET;\n+    return s;\n+}\n+\n+void Sock::Reset() { CloseSocket(m_socket); }\n+\n+ssize_t Sock::Send(const void* data, size_t len, int flags) const\n+{\n+    return send(m_socket, static_cast<const char*>(data), len, flags);\n+}\n+\n+ssize_t Sock::Recv(void* buf, size_t len, int flags) const\n+{\n+    return recv(m_socket, static_cast<char*>(buf), len, flags);\n+}\n+\n+bool Sock::Wait(const std::chrono::milliseconds& timeout, Event requested, Event* returned) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550491623",
      "id" : 550491623,
      "in_reply_to_id" : 550250637,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5MTYyMw==",
      "original_commit_id" : "408a9473bed6b3be82b124c171435247100b9d34",
      "original_line" : 599,
      "original_position" : 215,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_review_id" : 560358852,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550491623",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonatack \r\n\r\n> moving the Sock class to its own file and the common deps to a utility seems appealing\r\n\r\nI will try this. Opinions, anybody? That would mean:\r\n* Move `Sock` from `netbase.cpp` to `util/sock.cpp`\r\n* Move `MillisToTimeval()` from `netbase.cpp` to `util/where?`\r\n* Move `CloseSocket()` from `netbase.cpp` to `util/where?` (it uses `LogPrintf()`)\r\n\r\n> do you plan to add unit tests for the Sock class?\r\n\r\nI did not but any ideas are welcome. I think it may be required to create a TCP server and client and do some communication between them to check that `send()` is indeed being called by the `Send()` method. May be an overkill, given that the `Send()` method is 1 line.\r\n\r\nI don't know how to reliably check if the socket was closed by the destructor, given that the same file descriptor number could be assigned to a newly created socket (or opened file) after we close it.\r\n\r\n@jnewbery \r\n\r\n> Is there any reason not to use the `Sock` object in `CNode`?\r\n\r\nNo, other than minimizing the size of this PR. See also https://github.com/bitcoin/bitcoin/pull/20788#discussion_r549718454 :-)",
      "created_at" : "2020-12-31T14:35:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-752975368",
      "id" : 752975368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1Mjk3NTM2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-31T14:35:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752975368",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree with moving it to its own file and with adding UTs for it. I am not sure a real socket is necessary for testing this abstraction, could it be enough to simply mock `send`, `recv` and `select`? Something it could be useful is to make sure the ownership of the `SOCKET` is always correct (`copy ctor`, `Release`, `operator =`)\r\n\r\nbtw, utACK 8fc63e344660f52a35bd97c1f881afdb1643b52a",
      "created_at" : "2020-12-31T16:23:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-752998925",
      "id" : 752998925,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1Mjk5ODkyNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-31T16:23:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752998925",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/127973?v=4",
         "events_url" : "https://api.github.com/users/lontivero/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lontivero/followers",
         "following_url" : "https://api.github.com/users/lontivero/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lontivero/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lontivero",
         "id" : 127973,
         "login" : "lontivero",
         "node_id" : "MDQ6VXNlcjEyNzk3Mw==",
         "organizations_url" : "https://api.github.com/users/lontivero/orgs",
         "received_events_url" : "https://api.github.com/users/lontivero/received_events",
         "repos_url" : "https://api.github.com/users/lontivero/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lontivero/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lontivero/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lontivero"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "8fc63e3...3fa2a11:\r\n* rebased due to conflicts\r\n* moved `Sock` to its dedicated `src/util/sock.{cpp,h}`\r\n* added unit tests",
      "created_at" : "2021-01-08T13:24:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-756754017",
      "id" : 756754017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1Njc1NDAxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-08T13:24:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/756754017",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555073220"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555073220"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Q: Why are these tests disabled for Windows?",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-01-11T14:12:45Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+// Copyright (c) 2021-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef WIN32",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555073220",
      "id" : 555073220,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA3MzIyMA==",
      "original_commit_id" : "3fa2a11f6e8998819e4ecabaafc6897a4be9ccd8",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/sock_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 565388599,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555073220",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127973?v=4",
         "events_url" : "https://api.github.com/users/lontivero/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lontivero/followers",
         "following_url" : "https://api.github.com/users/lontivero/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lontivero/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lontivero",
         "id" : 127973,
         "login" : "lontivero",
         "node_id" : "MDQ6VXNlcjEyNzk3Mw==",
         "organizations_url" : "https://api.github.com/users/lontivero/orgs",
         "received_events_url" : "https://api.github.com/users/lontivero/received_events",
         "repos_url" : "https://api.github.com/users/lontivero/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lontivero/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lontivero/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lontivero"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555075396"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555075396"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Q: Why not `CloseSocket` here? ",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-01-11T14:15:54Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+// Copyright (c) 2021-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef WIN32\n+\n+#include <test/util/setup_common.h>\n+#include <util/sock.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <sys/socket.h>\n+#include <sys/types.h>\n+#include <thread>\n+\n+using namespace std::chrono_literals;\n+\n+BOOST_FIXTURE_TEST_SUITE(sock_tests, BasicTestingSetup)\n+\n+static bool SocketIsClosed(const SOCKET& s)\n+{\n+    // Notice that if another thread is running and creates its own socket after `s` has been\n+    // closed, it may get assigned the same file descriptor number. In this case our test will\n+    // wronly pretend that the socket is not closed.\n+    int type;\n+    socklen_t len = sizeof(type);\n+    return getsockopt(s, SOL_SOCKET, SO_TYPE, &type, &len) == -1 &&\n+           (errno == EBADF || errno == ENOTSOCK);\n+}\n+\n+static SOCKET CreateSocket()\n+{\n+    const int s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n+    BOOST_REQUIRE(s != -1);\n+    return static_cast<SOCKET>(s);\n+}\n+\n+static void CreateSocketPair(int s[2])\n+{\n+    BOOST_REQUIRE_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, s), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(constructor_and_destructor)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock = new Sock(s);\n+    BOOST_CHECK_EQUAL(sock->Get(), s);\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    delete sock;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(move_constructor)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock1 = new Sock(s);\n+    Sock* sock2 = new Sock(std::move(*sock1));\n+    delete sock1;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_CHECK_EQUAL(sock2->Get(), s);\n+    delete sock2;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(move_assignment)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock1 = new Sock(s);\n+    Sock* sock2 = new Sock();\n+    *sock2 = std::move(*sock1);\n+    delete sock1;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_CHECK_EQUAL(sock2->Get(), s);\n+    delete sock2;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(release)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock = new Sock(s);\n+    BOOST_CHECK_EQUAL(sock->Release(), s);\n+    delete sock;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_REQUIRE_EQUAL(close(s), 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555075396",
      "id" : 555075396,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA3NTM5Ng==",
      "original_commit_id" : "3fa2a11f6e8998819e4ecabaafc6897a4be9ccd8",
      "original_line" : 85,
      "original_position" : 85,
      "original_start_line" : null,
      "path" : "src/test/sock_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 565388599,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555075396",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127973?v=4",
         "events_url" : "https://api.github.com/users/lontivero/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lontivero/followers",
         "following_url" : "https://api.github.com/users/lontivero/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lontivero/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lontivero",
         "id" : 127973,
         "login" : "lontivero",
         "node_id" : "MDQ6VXNlcjEyNzk3Mw==",
         "organizations_url" : "https://api.github.com/users/lontivero/orgs",
         "received_events_url" : "https://api.github.com/users/lontivero/received_events",
         "repos_url" : "https://api.github.com/users/lontivero/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lontivero/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lontivero/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lontivero"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555083671"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555083671"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Does `24h` means 24 hours? If that's the case it looks too much to me, even for a UT.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-01-11T14:28:12Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+// Copyright (c) 2021-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef WIN32\n+\n+#include <test/util/setup_common.h>\n+#include <util/sock.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <sys/socket.h>\n+#include <sys/types.h>\n+#include <thread>\n+\n+using namespace std::chrono_literals;\n+\n+BOOST_FIXTURE_TEST_SUITE(sock_tests, BasicTestingSetup)\n+\n+static bool SocketIsClosed(const SOCKET& s)\n+{\n+    // Notice that if another thread is running and creates its own socket after `s` has been\n+    // closed, it may get assigned the same file descriptor number. In this case our test will\n+    // wronly pretend that the socket is not closed.\n+    int type;\n+    socklen_t len = sizeof(type);\n+    return getsockopt(s, SOL_SOCKET, SO_TYPE, &type, &len) == -1 &&\n+           (errno == EBADF || errno == ENOTSOCK);\n+}\n+\n+static SOCKET CreateSocket()\n+{\n+    const int s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n+    BOOST_REQUIRE(s != -1);\n+    return static_cast<SOCKET>(s);\n+}\n+\n+static void CreateSocketPair(int s[2])\n+{\n+    BOOST_REQUIRE_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, s), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(constructor_and_destructor)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock = new Sock(s);\n+    BOOST_CHECK_EQUAL(sock->Get(), s);\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    delete sock;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(move_constructor)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock1 = new Sock(s);\n+    Sock* sock2 = new Sock(std::move(*sock1));\n+    delete sock1;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_CHECK_EQUAL(sock2->Get(), s);\n+    delete sock2;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(move_assignment)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock1 = new Sock(s);\n+    Sock* sock2 = new Sock();\n+    *sock2 = std::move(*sock1);\n+    delete sock1;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_CHECK_EQUAL(sock2->Get(), s);\n+    delete sock2;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(release)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock = new Sock(s);\n+    BOOST_CHECK_EQUAL(sock->Release(), s);\n+    delete sock;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_REQUIRE_EQUAL(close(s), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(reset)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock sock(s);\n+    sock.Reset();\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+static void SendAndRecvMessage(const Sock& sender, const Sock& receiver)\n+{\n+    const char* msg = \"abcd\";\n+    constexpr size_t msg_len = 4;\n+    char recv_buf[10];\n+\n+    BOOST_CHECK_EQUAL(sender.Send(msg, msg_len, 0), msg_len);\n+    BOOST_CHECK_EQUAL(receiver.Recv(recv_buf, sizeof(recv_buf), 0), msg_len);\n+    BOOST_CHECK_EQUAL(strncmp(msg, recv_buf, msg_len), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(send_and_receive)\n+{\n+    int s[2];\n+    CreateSocketPair(s);\n+\n+    Sock* sock0 = new Sock(s[0]);\n+    Sock* sock1 = new Sock(s[1]);\n+\n+    SendAndRecvMessage(*sock0, *sock1);\n+\n+    Sock* sock0moved = new Sock(std::move(*sock0));\n+    Sock* sock1moved = new Sock();\n+    *sock1moved = std::move(*sock1);\n+\n+    delete sock0;\n+    delete sock1;\n+\n+    SendAndRecvMessage(*sock1moved, *sock0moved);\n+\n+    delete sock0moved;\n+    delete sock1moved;\n+\n+    BOOST_CHECK(SocketIsClosed(s[0]));\n+    BOOST_CHECK(SocketIsClosed(s[1]));\n+}\n+\n+BOOST_AUTO_TEST_CASE(wait)\n+{\n+    int s[2];\n+    CreateSocketPair(s);\n+\n+    Sock sock0(s[0]);\n+    Sock sock1(s[1]);\n+\n+    std::thread waiter([&sock0]() { sock0.Wait(24h, Sock::RECV); });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555083671",
      "id" : 555083671,
      "line" : 140,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA4MzY3MQ==",
      "original_commit_id" : "3fa2a11f6e8998819e4ecabaafc6897a4be9ccd8",
      "original_line" : 140,
      "original_position" : 141,
      "original_start_line" : null,
      "path" : "src/test/sock_tests.cpp",
      "position" : 140,
      "pull_request_review_id" : 565388599,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555083671",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127973?v=4",
         "events_url" : "https://api.github.com/users/lontivero/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lontivero/followers",
         "following_url" : "https://api.github.com/users/lontivero/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lontivero/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lontivero",
         "id" : 127973,
         "login" : "lontivero",
         "node_id" : "MDQ6VXNlcjEyNzk3Mw==",
         "organizations_url" : "https://api.github.com/users/lontivero/orgs",
         "received_events_url" : "https://api.github.com/users/lontivero/received_events",
         "repos_url" : "https://api.github.com/users/lontivero/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lontivero/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lontivero/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lontivero"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555089125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555089125"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It could make sense to use `SOCKET_ERROR` here.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-01-11T14:35:50Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+// Copyright (c) 2021-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef WIN32\n+\n+#include <test/util/setup_common.h>\n+#include <util/sock.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <sys/socket.h>\n+#include <sys/types.h>\n+#include <thread>\n+\n+using namespace std::chrono_literals;\n+\n+BOOST_FIXTURE_TEST_SUITE(sock_tests, BasicTestingSetup)\n+\n+static bool SocketIsClosed(const SOCKET& s)\n+{\n+    // Notice that if another thread is running and creates its own socket after `s` has been\n+    // closed, it may get assigned the same file descriptor number. In this case our test will\n+    // wronly pretend that the socket is not closed.\n+    int type;\n+    socklen_t len = sizeof(type);\n+    return getsockopt(s, SOL_SOCKET, SO_TYPE, &type, &len) == -1 &&\n+           (errno == EBADF || errno == ENOTSOCK);\n+}\n+\n+static SOCKET CreateSocket()\n+{\n+    const int s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n+    BOOST_REQUIRE(s != -1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555089125",
      "id" : 555089125,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA4OTEyNQ==",
      "original_commit_id" : "3fa2a11f6e8998819e4ecabaafc6897a4be9ccd8",
      "original_line" : 34,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/test/sock_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 565388599,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555089125",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127973?v=4",
         "events_url" : "https://api.github.com/users/lontivero/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lontivero/followers",
         "following_url" : "https://api.github.com/users/lontivero/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lontivero/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lontivero",
         "id" : 127973,
         "login" : "lontivero",
         "node_id" : "MDQ6VXNlcjEyNzk3Mw==",
         "organizations_url" : "https://api.github.com/users/lontivero/orgs",
         "received_events_url" : "https://api.github.com/users/lontivero/received_events",
         "repos_url" : "https://api.github.com/users/lontivero/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lontivero/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lontivero/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lontivero"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555191243"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555191243"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "They were because Windows does not have `socketpair()`, but since not all tests use this function I have now enabled the tests that don't.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-01-11T16:49:37Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+// Copyright (c) 2021-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef WIN32",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555191243",
      "id" : 555191243,
      "in_reply_to_id" : 555073220,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5MTI0Mw==",
      "original_commit_id" : "3fa2a11f6e8998819e4ecabaafc6897a4be9ccd8",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/sock_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 565547452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555191243",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555192873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555192873"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right, changed to `CloseSocket()`.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-01-11T16:51:55Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+// Copyright (c) 2021-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef WIN32\n+\n+#include <test/util/setup_common.h>\n+#include <util/sock.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <sys/socket.h>\n+#include <sys/types.h>\n+#include <thread>\n+\n+using namespace std::chrono_literals;\n+\n+BOOST_FIXTURE_TEST_SUITE(sock_tests, BasicTestingSetup)\n+\n+static bool SocketIsClosed(const SOCKET& s)\n+{\n+    // Notice that if another thread is running and creates its own socket after `s` has been\n+    // closed, it may get assigned the same file descriptor number. In this case our test will\n+    // wronly pretend that the socket is not closed.\n+    int type;\n+    socklen_t len = sizeof(type);\n+    return getsockopt(s, SOL_SOCKET, SO_TYPE, &type, &len) == -1 &&\n+           (errno == EBADF || errno == ENOTSOCK);\n+}\n+\n+static SOCKET CreateSocket()\n+{\n+    const int s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n+    BOOST_REQUIRE(s != -1);\n+    return static_cast<SOCKET>(s);\n+}\n+\n+static void CreateSocketPair(int s[2])\n+{\n+    BOOST_REQUIRE_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, s), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(constructor_and_destructor)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock = new Sock(s);\n+    BOOST_CHECK_EQUAL(sock->Get(), s);\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    delete sock;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(move_constructor)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock1 = new Sock(s);\n+    Sock* sock2 = new Sock(std::move(*sock1));\n+    delete sock1;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_CHECK_EQUAL(sock2->Get(), s);\n+    delete sock2;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(move_assignment)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock1 = new Sock(s);\n+    Sock* sock2 = new Sock();\n+    *sock2 = std::move(*sock1);\n+    delete sock1;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_CHECK_EQUAL(sock2->Get(), s);\n+    delete sock2;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(release)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock = new Sock(s);\n+    BOOST_CHECK_EQUAL(sock->Release(), s);\n+    delete sock;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_REQUIRE_EQUAL(close(s), 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555192873",
      "id" : 555192873,
      "in_reply_to_id" : 555075396,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5Mjg3Mw==",
      "original_commit_id" : "3fa2a11f6e8998819e4ecabaafc6897a4be9ccd8",
      "original_line" : 85,
      "original_position" : 85,
      "original_start_line" : null,
      "path" : "src/test/sock_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 565549527,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555192873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555195148"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555195148"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done, thanks!",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-01-11T16:55:14Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+// Copyright (c) 2021-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef WIN32\n+\n+#include <test/util/setup_common.h>\n+#include <util/sock.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <sys/socket.h>\n+#include <sys/types.h>\n+#include <thread>\n+\n+using namespace std::chrono_literals;\n+\n+BOOST_FIXTURE_TEST_SUITE(sock_tests, BasicTestingSetup)\n+\n+static bool SocketIsClosed(const SOCKET& s)\n+{\n+    // Notice that if another thread is running and creates its own socket after `s` has been\n+    // closed, it may get assigned the same file descriptor number. In this case our test will\n+    // wronly pretend that the socket is not closed.\n+    int type;\n+    socklen_t len = sizeof(type);\n+    return getsockopt(s, SOL_SOCKET, SO_TYPE, &type, &len) == -1 &&\n+           (errno == EBADF || errno == ENOTSOCK);\n+}\n+\n+static SOCKET CreateSocket()\n+{\n+    const int s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n+    BOOST_REQUIRE(s != -1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555195148",
      "id" : 555195148,
      "in_reply_to_id" : 555089125,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5NTE0OA==",
      "original_commit_id" : "3fa2a11f6e8998819e4ecabaafc6897a4be9ccd8",
      "original_line" : 34,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/test/sock_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 565552561,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555195148",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555200385"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555200385"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, 24 hours. I wanted to use `1y` (1 year), but `y` is not supported.\r\n\r\nIf this test detects a failure, it would result in a \"test timeout in CI\" which waits for 2 hours.\r\n\r\nI don't know how else to check if `Wait()` works as expected. Notice - it does not signal to the caller whether a timeout occurred or the socket is ready for the event. It was possible before, but [we simplified](https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550250637) it because nobody of the callers used that information. I think it is not worth restoring it for the sake of this test, what's your take?\r\n\r\nIf that functionality is provided then the test could do: \"wait 1ms; ensure it caused timeout, send some data to the socket, wait 1ms; ensure it did not timeout, but signaled that the socket is ready\".",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-01-11T17:02:47Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+// Copyright (c) 2021-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef WIN32\n+\n+#include <test/util/setup_common.h>\n+#include <util/sock.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <sys/socket.h>\n+#include <sys/types.h>\n+#include <thread>\n+\n+using namespace std::chrono_literals;\n+\n+BOOST_FIXTURE_TEST_SUITE(sock_tests, BasicTestingSetup)\n+\n+static bool SocketIsClosed(const SOCKET& s)\n+{\n+    // Notice that if another thread is running and creates its own socket after `s` has been\n+    // closed, it may get assigned the same file descriptor number. In this case our test will\n+    // wronly pretend that the socket is not closed.\n+    int type;\n+    socklen_t len = sizeof(type);\n+    return getsockopt(s, SOL_SOCKET, SO_TYPE, &type, &len) == -1 &&\n+           (errno == EBADF || errno == ENOTSOCK);\n+}\n+\n+static SOCKET CreateSocket()\n+{\n+    const int s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n+    BOOST_REQUIRE(s != -1);\n+    return static_cast<SOCKET>(s);\n+}\n+\n+static void CreateSocketPair(int s[2])\n+{\n+    BOOST_REQUIRE_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, s), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(constructor_and_destructor)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock = new Sock(s);\n+    BOOST_CHECK_EQUAL(sock->Get(), s);\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    delete sock;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(move_constructor)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock1 = new Sock(s);\n+    Sock* sock2 = new Sock(std::move(*sock1));\n+    delete sock1;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_CHECK_EQUAL(sock2->Get(), s);\n+    delete sock2;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(move_assignment)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock1 = new Sock(s);\n+    Sock* sock2 = new Sock();\n+    *sock2 = std::move(*sock1);\n+    delete sock1;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_CHECK_EQUAL(sock2->Get(), s);\n+    delete sock2;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(release)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock = new Sock(s);\n+    BOOST_CHECK_EQUAL(sock->Release(), s);\n+    delete sock;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_REQUIRE_EQUAL(close(s), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(reset)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock sock(s);\n+    sock.Reset();\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+static void SendAndRecvMessage(const Sock& sender, const Sock& receiver)\n+{\n+    const char* msg = \"abcd\";\n+    constexpr size_t msg_len = 4;\n+    char recv_buf[10];\n+\n+    BOOST_CHECK_EQUAL(sender.Send(msg, msg_len, 0), msg_len);\n+    BOOST_CHECK_EQUAL(receiver.Recv(recv_buf, sizeof(recv_buf), 0), msg_len);\n+    BOOST_CHECK_EQUAL(strncmp(msg, recv_buf, msg_len), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(send_and_receive)\n+{\n+    int s[2];\n+    CreateSocketPair(s);\n+\n+    Sock* sock0 = new Sock(s[0]);\n+    Sock* sock1 = new Sock(s[1]);\n+\n+    SendAndRecvMessage(*sock0, *sock1);\n+\n+    Sock* sock0moved = new Sock(std::move(*sock0));\n+    Sock* sock1moved = new Sock();\n+    *sock1moved = std::move(*sock1);\n+\n+    delete sock0;\n+    delete sock1;\n+\n+    SendAndRecvMessage(*sock1moved, *sock0moved);\n+\n+    delete sock0moved;\n+    delete sock1moved;\n+\n+    BOOST_CHECK(SocketIsClosed(s[0]));\n+    BOOST_CHECK(SocketIsClosed(s[1]));\n+}\n+\n+BOOST_AUTO_TEST_CASE(wait)\n+{\n+    int s[2];\n+    CreateSocketPair(s);\n+\n+    Sock sock0(s[0]);\n+    Sock sock1(s[1]);\n+\n+    std::thread waiter([&sock0]() { sock0.Wait(24h, Sock::RECV); });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555200385",
      "id" : 555200385,
      "in_reply_to_id" : 555083671,
      "line" : 140,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwMDM4NQ==",
      "original_commit_id" : "3fa2a11f6e8998819e4ecabaafc6897a4be9ccd8",
      "original_line" : 140,
      "original_position" : 141,
      "original_start_line" : null,
      "path" : "src/test/sock_tests.cpp",
      "position" : 140,
      "pull_request_review_id" : 565559510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555200385",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "3fa2a11f6...ed69709c8: hopefully fix CI and address some suggestions",
      "created_at" : "2021-01-11T17:03:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-758089514",
      "id" : 758089514,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1ODA4OTUxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-11T17:03:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/758089514",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555232584"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555232584"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think it is not worth restoring it for the sake of this test, what's your take?\r\n\r\nI agree with you. I don't think it is a good idea to have code the sake of one test only.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-01-11T17:51:57Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+// Copyright (c) 2021-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef WIN32\n+\n+#include <test/util/setup_common.h>\n+#include <util/sock.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <sys/socket.h>\n+#include <sys/types.h>\n+#include <thread>\n+\n+using namespace std::chrono_literals;\n+\n+BOOST_FIXTURE_TEST_SUITE(sock_tests, BasicTestingSetup)\n+\n+static bool SocketIsClosed(const SOCKET& s)\n+{\n+    // Notice that if another thread is running and creates its own socket after `s` has been\n+    // closed, it may get assigned the same file descriptor number. In this case our test will\n+    // wronly pretend that the socket is not closed.\n+    int type;\n+    socklen_t len = sizeof(type);\n+    return getsockopt(s, SOL_SOCKET, SO_TYPE, &type, &len) == -1 &&\n+           (errno == EBADF || errno == ENOTSOCK);\n+}\n+\n+static SOCKET CreateSocket()\n+{\n+    const int s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n+    BOOST_REQUIRE(s != -1);\n+    return static_cast<SOCKET>(s);\n+}\n+\n+static void CreateSocketPair(int s[2])\n+{\n+    BOOST_REQUIRE_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, s), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(constructor_and_destructor)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock = new Sock(s);\n+    BOOST_CHECK_EQUAL(sock->Get(), s);\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    delete sock;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(move_constructor)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock1 = new Sock(s);\n+    Sock* sock2 = new Sock(std::move(*sock1));\n+    delete sock1;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_CHECK_EQUAL(sock2->Get(), s);\n+    delete sock2;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(move_assignment)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock1 = new Sock(s);\n+    Sock* sock2 = new Sock();\n+    *sock2 = std::move(*sock1);\n+    delete sock1;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_CHECK_EQUAL(sock2->Get(), s);\n+    delete sock2;\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(release)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock* sock = new Sock(s);\n+    BOOST_CHECK_EQUAL(sock->Release(), s);\n+    delete sock;\n+    BOOST_CHECK(!SocketIsClosed(s));\n+    BOOST_REQUIRE_EQUAL(close(s), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(reset)\n+{\n+    const SOCKET s = CreateSocket();\n+    Sock sock(s);\n+    sock.Reset();\n+    BOOST_CHECK(SocketIsClosed(s));\n+}\n+\n+static void SendAndRecvMessage(const Sock& sender, const Sock& receiver)\n+{\n+    const char* msg = \"abcd\";\n+    constexpr size_t msg_len = 4;\n+    char recv_buf[10];\n+\n+    BOOST_CHECK_EQUAL(sender.Send(msg, msg_len, 0), msg_len);\n+    BOOST_CHECK_EQUAL(receiver.Recv(recv_buf, sizeof(recv_buf), 0), msg_len);\n+    BOOST_CHECK_EQUAL(strncmp(msg, recv_buf, msg_len), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(send_and_receive)\n+{\n+    int s[2];\n+    CreateSocketPair(s);\n+\n+    Sock* sock0 = new Sock(s[0]);\n+    Sock* sock1 = new Sock(s[1]);\n+\n+    SendAndRecvMessage(*sock0, *sock1);\n+\n+    Sock* sock0moved = new Sock(std::move(*sock0));\n+    Sock* sock1moved = new Sock();\n+    *sock1moved = std::move(*sock1);\n+\n+    delete sock0;\n+    delete sock1;\n+\n+    SendAndRecvMessage(*sock1moved, *sock0moved);\n+\n+    delete sock0moved;\n+    delete sock1moved;\n+\n+    BOOST_CHECK(SocketIsClosed(s[0]));\n+    BOOST_CHECK(SocketIsClosed(s[1]));\n+}\n+\n+BOOST_AUTO_TEST_CASE(wait)\n+{\n+    int s[2];\n+    CreateSocketPair(s);\n+\n+    Sock sock0(s[0]);\n+    Sock sock1(s[1]);\n+\n+    std::thread waiter([&sock0]() { sock0.Wait(24h, Sock::RECV); });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r555232584",
      "id" : 555232584,
      "in_reply_to_id" : 555083671,
      "line" : 140,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIzMjU4NA==",
      "original_commit_id" : "3fa2a11f6e8998819e4ecabaafc6897a4be9ccd8",
      "original_line" : 140,
      "original_position" : 141,
      "original_start_line" : null,
      "path" : "src/test/sock_tests.cpp",
      "position" : 140,
      "pull_request_review_id" : 565600420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555232584",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127973?v=4",
         "events_url" : "https://api.github.com/users/lontivero/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lontivero/followers",
         "following_url" : "https://api.github.com/users/lontivero/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lontivero/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lontivero",
         "id" : 127973,
         "login" : "lontivero",
         "node_id" : "MDQ6VXNlcjEyNzk3Mw==",
         "organizations_url" : "https://api.github.com/users/lontivero/orgs",
         "received_events_url" : "https://api.github.com/users/lontivero/received_events",
         "repos_url" : "https://api.github.com/users/lontivero/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lontivero/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lontivero/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lontivero"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK ed69709c8c86970f21b2a987a366737a01bc1c79",
      "created_at" : "2021-01-11T20:13:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-758195672",
      "id" : 758195672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1ODE5NTY3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-11T20:13:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/758195672",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/127973?v=4",
         "events_url" : "https://api.github.com/users/lontivero/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lontivero/followers",
         "following_url" : "https://api.github.com/users/lontivero/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lontivero/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lontivero",
         "id" : 127973,
         "login" : "lontivero",
         "node_id" : "MDQ6VXNlcjEyNzk3Mw==",
         "organizations_url" : "https://api.github.com/users/lontivero/orgs",
         "received_events_url" : "https://api.github.com/users/lontivero/received_events",
         "repos_url" : "https://api.github.com/users/lontivero/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lontivero/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lontivero/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lontivero"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-01-13T09:11:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-759313051",
      "id" : 759313051,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1OTMxMzA1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-13T09:11:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/759313051",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ed69709c8...cc109a474: rebase due to conflicts",
      "created_at" : "2021-01-14T12:11:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-760157837",
      "id" : 760157837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2MDE1NzgzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-14T12:11:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/760157837",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "created_at" : "2021-01-14T13:22:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-760193702",
      "id" : 760193702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2MDE5MzcwMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-14T13:22:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/760193702",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/127973?v=4",
         "events_url" : "https://api.github.com/users/lontivero/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lontivero/followers",
         "following_url" : "https://api.github.com/users/lontivero/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lontivero/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lontivero",
         "id" : 127973,
         "login" : "lontivero",
         "node_id" : "MDQ6VXNlcjEyNzk3Mw==",
         "organizations_url" : "https://api.github.com/users/lontivero/orgs",
         "received_events_url" : "https://api.github.com/users/lontivero/received_events",
         "repos_url" : "https://api.github.com/users/lontivero/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lontivero/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lontivero/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lontivero"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r562606180"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/562606180"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This was finally [changed](https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-756754017) to:\r\n\r\n> move MillisToTimeval() and CloseSocket() outside of netbase.cpp, somewhere in src/util/ and use them from both netbase.cpp and from sock.cpp\r\n\r\nit looks much better now.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-01-22T12:44:07Z",
      "diff_hunk" : "@@ -0,0 +1,134 @@\n+// Copyright (c) 2012-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat.h>\n+#include <netaddress.h>\n+#include <netbase.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r562606180",
      "id" : 562606180,
      "in_reply_to_id" : 549406398,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjYwNjE4MA==",
      "original_commit_id" : "99b8e88a15cb12483f28079d0f91fe8cf361da56",
      "original_line" : 7,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/sock.cpp",
      "position" : null,
      "pull_request_review_id" : 574225825,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/562606180",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r563382158"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563382158"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please create new general utilities like this in `src/compat`, `src/support` or `src/util`, not in the source root.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-01-24T21:58:07Z",
      "diff_hunk" : "@@ -238,6 +238,7 @@ BITCOIN_CORE_H = \\\n   util/rbf.h \\\n   util/ref.h \\\n   util/settings.h \\\n+  util/sock.h \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r563382158",
      "id" : 563382158,
      "line" : 241,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzM4MjE1OA==",
      "original_commit_id" : "cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "original_line" : 241,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/Makefile.am",
      "position" : 4,
      "pull_request_review_id" : 574994783,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563382158",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2021-01-24T22:01:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-766439884",
      "id" : 766439884,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2NjQzOTg4NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-24T22:01:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/766439884",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r563592536"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563592536"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, the newly added `sock.h` is in `src/util`, so that's already the case, no?",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-01-25T09:56:22Z",
      "diff_hunk" : "@@ -238,6 +238,7 @@ BITCOIN_CORE_H = \\\n   util/rbf.h \\\n   util/ref.h \\\n   util/settings.h \\\n+  util/sock.h \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r563592536",
      "id" : 563592536,
      "in_reply_to_id" : 563382158,
      "line" : 241,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzU5MjUzNg==",
      "original_commit_id" : "cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "original_line" : 241,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/Makefile.am",
      "position" : 4,
      "pull_request_review_id" : 575230042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563592536",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r563604808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563604808"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Huh. Oops. I misread this. Seems good then :+1:.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-01-25T10:14:08Z",
      "diff_hunk" : "@@ -238,6 +238,7 @@ BITCOIN_CORE_H = \\\n   util/rbf.h \\\n   util/ref.h \\\n   util/settings.h \\\n+  util/sock.h \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r563604808",
      "id" : 563604808,
      "in_reply_to_id" : 563382158,
      "line" : 241,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzYwNDgwOA==",
      "original_commit_id" : "cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "original_line" : 241,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/Makefile.am",
      "position" : 4,
      "pull_request_review_id" : 575245555,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563604808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r569566888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569566888"
         }
      },
      "author_association" : "MEMBER",
      "body" : "acc89632 this commit isn't move-only because `hSocket` was renamed, making it more error-prone and difficult to verify that the code isn't changed, suggest clarifying the commit message with the renaming or, better yet, making this change move-only",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-03T16:40:50Z",
      "diff_hunk" : "@@ -1351,3 +1351,54 @@ std::pair<int, char**> WinCmdLineArgs::get()\n }\n #endif\n } // namespace util\n+\n+#ifdef WIN32\n+std::string NetworkErrorString(int err)\n+{\n+    wchar_t buf[256];\n+    buf[0] = 0;\n+    if(FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS | FORMAT_MESSAGE_MAX_WIDTH_MASK,\n+            nullptr, err, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n+            buf, ARRAYSIZE(buf), nullptr))\n+    {\n+        return strprintf(\"%s (%d)\", std::wstring_convert<std::codecvt_utf8_utf16<wchar_t>,wchar_t>().to_bytes(buf), err);\n+    }\n+    else\n+    {\n+        return strprintf(\"Unknown error (%d)\", err);\n+    }\n+}\n+#else\n+std::string NetworkErrorString(int err)\n+{\n+    char buf[256];\n+    buf[0] = 0;\n+    /* Too bad there are two incompatible implementations of the\n+     * thread-safe strerror. */\n+    const char *s;\n+#ifdef STRERROR_R_CHAR_P /* GNU variant can return a pointer outside the passed buffer */\n+    s = strerror_r(err, buf, sizeof(buf));\n+#else /* POSIX variant always returns message in buffer */\n+    s = buf;\n+    if (strerror_r(err, buf, sizeof(buf)))\n+        buf[0] = 0;\n+#endif\n+    return strprintf(\"%s (%d)\", s, err);\n+}\n+#endif\n+\n+bool CloseSocket(SOCKET& socket)\n+{\n+    if (socket == INVALID_SOCKET)\n+        return false;\n+#ifdef WIN32\n+    int ret = closesocket(socket);\n+#else\n+    int ret = close(socket);\n+#endif\n+    if (ret) {\n+        LogPrintf(\"Socket close failed: %d. Error: %s\\n\", socket, NetworkErrorString(WSAGetLastError()));\n+    }\n+    socket = INVALID_SOCKET;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r569566888",
      "id" : 569566888,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTU2Njg4OA==",
      "original_commit_id" : "cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "original_line" : 1402,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 582567172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569566888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r569572507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569572507"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1dcf817 here and in the definition and in `Sock::Wait()`\r\n```suggestion\r\nstruct timeval MillisToTimeval(std::chrono::milliseconds ms);\r\n```",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-03T16:48:02Z",
      "diff_hunk" : "@@ -57,4 +60,14 @@ std::string FormatISO8601DateTime(int64_t nTime);\n std::string FormatISO8601Date(int64_t nTime);\n int64_t ParseISO8601DateTime(const std::string& str);\n \n+/**\n+ * Convert milliseconds to a struct timeval for e.g. select.\n+ */\n+struct timeval MillisToTimeval(int64_t nTimeout);\n+\n+/**\n+ * Convert milliseconds to a struct timeval for e.g. select.\n+ */\n+struct timeval MillisToTimeval(const std::chrono::milliseconds& ms);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r569572507",
      "id" : 569572507,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTU3MjUwNw==",
      "original_commit_id" : "cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "original_line" : 71,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/util/time.h",
      "position" : null,
      "pull_request_review_id" : 582567172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569572507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r569575610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569575610"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1dcf817\r\n```suggestion\r\n#include <chrono>\r\n```",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-03T16:51:59Z",
      "diff_hunk" : "@@ -0,0 +1,111 @@\n+// Copyright (c) 2020-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_SOCK_H\n+#define BITCOIN_UTIL_SOCK_H\n+\n+#include <compat.h> // SOCKET\n+\n+#include <chrono> // std::chrono::milliseconds",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r569575610",
      "id" : 569575610,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTU3NTYxMA==",
      "original_commit_id" : "cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "original_line" : 10,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/util/sock.h",
      "position" : null,
      "pull_request_review_id" : 582567172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569575610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r569582374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569582374"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The diff could be smaller, faster, easier and safer to review without unneeded renamings mixed with the coding changes. For existing code it's not required to update the variable naming to current coding style and it would be good to be able to focus on the significant changes. Maybe open a separate pull for the renamings.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-03T17:00:20Z",
      "diff_hunk" : "@@ -541,58 +523,52 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n     uint8_t pchRet3[256];\n     switch (pchRet2[3])\n     {\n-        case SOCKS5Atyp::IPV4: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, hSocket); break;\n-        case SOCKS5Atyp::IPV6: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, hSocket); break;\n+        case SOCKS5Atyp::IPV4: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, sock); break;\n+        case SOCKS5Atyp::IPV6: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, sock); break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r569582374",
      "id" : 569582374,
      "line" : 525,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTU4MjM3NA==",
      "original_commit_id" : "cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "original_line" : 525,
      "original_position" : 158,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : 159,
      "pull_request_review_id" : 582567172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569582374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r569583586"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569583586"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The diff could be smaller, faster, easier and safer to review without the unnecessary formatting churn in the diff. There are a few functions doing this here. Maybe open a separate pull for the formatting changes.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-03T17:01:58Z",
      "diff_hunk" : "@@ -428,51 +428,55 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n \n     // Connect\n     bool connected = false;\n-    SOCKET hSocket = INVALID_SOCKET;\n+    std::unique_ptr<Sock> sock;\n     proxyType proxy;\n     if (addrConnect.IsValid()) {\n         bool proxyConnectionFailed = false;\n \n         if (GetProxy(addrConnect.GetNetwork(), proxy)) {\n-            hSocket = CreateSocket(proxy.proxy);\n-            if (hSocket == INVALID_SOCKET) {\n+            sock = CreateSock(proxy.proxy);\n+            if (!sock) {\n                 return nullptr;\n             }\n-            connected = ConnectThroughProxy(proxy, addrConnect.ToStringIP(), addrConnect.GetPort(), hSocket, nConnectTimeout, proxyConnectionFailed);\n+            connected = ConnectThroughProxy(proxy, addrConnect.ToStringIP(), addrConnect.GetPort(),\n+                                            *sock, nConnectTimeout, proxyConnectionFailed);\n         } else {\n             // no proxy needed (none set for target network)\n-            hSocket = CreateSocket(addrConnect);\n-            if (hSocket == INVALID_SOCKET) {\n+            sock = CreateSock(addrConnect);\n+            if (!sock) {\n                 return nullptr;\n             }\n-            connected = ConnectSocketDirectly(addrConnect, hSocket, nConnectTimeout, conn_type == ConnectionType::MANUAL);\n+            connected = ConnectSocketDirectly(addrConnect, sock->Get(), nConnectTimeout,\n+                                              conn_type == ConnectionType::MANUAL);\n         }\n         if (!proxyConnectionFailed) {\n             // If a connection to the node was attempted, and failure (if any) is not caused by a problem connecting to\n             // the proxy, mark this as an attempt.\n             addrman.Attempt(addrConnect, fCountFailure);\n         }\n     } else if (pszDest && GetNameProxy(proxy)) {\n-        hSocket = CreateSocket(proxy.proxy);\n-        if (hSocket == INVALID_SOCKET) {\n+        sock = CreateSock(proxy.proxy);\n+        if (!sock) {\n             return nullptr;\n         }\n         std::string host;\n         int port = default_port;\n         SplitHostPort(std::string(pszDest), port, host);\n         bool proxyConnectionFailed;\n-        connected = ConnectThroughProxy(proxy, host, port, hSocket, nConnectTimeout, proxyConnectionFailed);\n+        connected =\n+            ConnectThroughProxy(proxy, host, port, *sock, nConnectTimeout, proxyConnectionFailed);\n     }\n     if (!connected) {\n-        CloseSocket(hSocket);\n         return nullptr;\n     }\n \n     // Add node\n     NodeId id = GetNewNodeId();\n     uint64_t nonce = GetDeterministicRandomizer(RANDOMIZER_ID_LOCALHOSTNONCE).Write(id).Finalize();\n-    CAddress addr_bind = GetBindAddress(hSocket);\n-    CNode* pnode = new CNode(id, nLocalServices, hSocket, addrConnect, CalculateKeyedNetGroup(addrConnect), nonce, addr_bind, pszDest ? pszDest : \"\", conn_type);\n+    CAddress addr_bind = GetBindAddress(sock->Get());\n+    CNode* pnode = new CNode(id, nLocalServices, sock->Release(), addrConnect,\n+                             CalculateKeyedNetGroup(addrConnect), nonce, addr_bind,\n+                             pszDest ? pszDest : \"\", conn_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r569583586",
      "id" : 569583586,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTU4MzU4Ng==",
      "original_commit_id" : "cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "original_line" : 479,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 582567172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569583586",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r570404619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570404619"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed the commit to be move-only and left the variable name as `hSocket`.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-04T17:21:54Z",
      "diff_hunk" : "@@ -1351,3 +1351,54 @@ std::pair<int, char**> WinCmdLineArgs::get()\n }\n #endif\n } // namespace util\n+\n+#ifdef WIN32\n+std::string NetworkErrorString(int err)\n+{\n+    wchar_t buf[256];\n+    buf[0] = 0;\n+    if(FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS | FORMAT_MESSAGE_MAX_WIDTH_MASK,\n+            nullptr, err, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n+            buf, ARRAYSIZE(buf), nullptr))\n+    {\n+        return strprintf(\"%s (%d)\", std::wstring_convert<std::codecvt_utf8_utf16<wchar_t>,wchar_t>().to_bytes(buf), err);\n+    }\n+    else\n+    {\n+        return strprintf(\"Unknown error (%d)\", err);\n+    }\n+}\n+#else\n+std::string NetworkErrorString(int err)\n+{\n+    char buf[256];\n+    buf[0] = 0;\n+    /* Too bad there are two incompatible implementations of the\n+     * thread-safe strerror. */\n+    const char *s;\n+#ifdef STRERROR_R_CHAR_P /* GNU variant can return a pointer outside the passed buffer */\n+    s = strerror_r(err, buf, sizeof(buf));\n+#else /* POSIX variant always returns message in buffer */\n+    s = buf;\n+    if (strerror_r(err, buf, sizeof(buf)))\n+        buf[0] = 0;\n+#endif\n+    return strprintf(\"%s (%d)\", s, err);\n+}\n+#endif\n+\n+bool CloseSocket(SOCKET& socket)\n+{\n+    if (socket == INVALID_SOCKET)\n+        return false;\n+#ifdef WIN32\n+    int ret = closesocket(socket);\n+#else\n+    int ret = close(socket);\n+#endif\n+    if (ret) {\n+        LogPrintf(\"Socket close failed: %d. Error: %s\\n\", socket, NetworkErrorString(WSAGetLastError()));\n+    }\n+    socket = INVALID_SOCKET;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r570404619",
      "id" : 570404619,
      "in_reply_to_id" : 569566888,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDQwNDYxOQ==",
      "original_commit_id" : "cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "original_line" : 1402,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 583633870,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570404619",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r570404856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570404856"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-04T17:22:17Z",
      "diff_hunk" : "@@ -57,4 +60,14 @@ std::string FormatISO8601DateTime(int64_t nTime);\n std::string FormatISO8601Date(int64_t nTime);\n int64_t ParseISO8601DateTime(const std::string& str);\n \n+/**\n+ * Convert milliseconds to a struct timeval for e.g. select.\n+ */\n+struct timeval MillisToTimeval(int64_t nTimeout);\n+\n+/**\n+ * Convert milliseconds to a struct timeval for e.g. select.\n+ */\n+struct timeval MillisToTimeval(const std::chrono::milliseconds& ms);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r570404856",
      "id" : 570404856,
      "in_reply_to_id" : 569572507,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDQwNDg1Ng==",
      "original_commit_id" : "cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "original_line" : 71,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/util/time.h",
      "position" : null,
      "pull_request_review_id" : 583634201,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570404856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r570405855"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570405855"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Those comments are useful, if they are present, during refactoring when moving code around. Unfortunately they are not widely used, so I do not insist on their presence. Removed.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-04T17:23:44Z",
      "diff_hunk" : "@@ -0,0 +1,111 @@\n+// Copyright (c) 2020-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_SOCK_H\n+#define BITCOIN_UTIL_SOCK_H\n+\n+#include <compat.h> // SOCKET\n+\n+#include <chrono> // std::chrono::milliseconds",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r570405855",
      "id" : 570405855,
      "in_reply_to_id" : 569575610,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDQwNTg1NQ==",
      "original_commit_id" : "cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "original_line" : 10,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/util/sock.h",
      "position" : null,
      "pull_request_review_id" : 583635575,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570405855",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r570407463"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570407463"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I split this commit in two: variable type change from `SOCKET` to `Sock` + variable rename from `hSocket` to `sock`.\r\n\r\nIt is good to have the implied convention of naming `SOCKET` variables `hSocket` (old code) or `socket` (new code) and `Sock` variables `sock`.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-04T17:25:59Z",
      "diff_hunk" : "@@ -541,58 +523,52 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n     uint8_t pchRet3[256];\n     switch (pchRet2[3])\n     {\n-        case SOCKS5Atyp::IPV4: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, hSocket); break;\n-        case SOCKS5Atyp::IPV6: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, hSocket); break;\n+        case SOCKS5Atyp::IPV4: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, sock); break;\n+        case SOCKS5Atyp::IPV6: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, sock); break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r570407463",
      "id" : 570407463,
      "in_reply_to_id" : 569582374,
      "line" : 525,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDQwNzQ2Mw==",
      "original_commit_id" : "cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "original_line" : 525,
      "original_position" : 158,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : 159,
      "pull_request_review_id" : 583637677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570407463",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r570407726"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570407726"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Joined this back to one long line.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-04T17:26:20Z",
      "diff_hunk" : "@@ -428,51 +428,55 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n \n     // Connect\n     bool connected = false;\n-    SOCKET hSocket = INVALID_SOCKET;\n+    std::unique_ptr<Sock> sock;\n     proxyType proxy;\n     if (addrConnect.IsValid()) {\n         bool proxyConnectionFailed = false;\n \n         if (GetProxy(addrConnect.GetNetwork(), proxy)) {\n-            hSocket = CreateSocket(proxy.proxy);\n-            if (hSocket == INVALID_SOCKET) {\n+            sock = CreateSock(proxy.proxy);\n+            if (!sock) {\n                 return nullptr;\n             }\n-            connected = ConnectThroughProxy(proxy, addrConnect.ToStringIP(), addrConnect.GetPort(), hSocket, nConnectTimeout, proxyConnectionFailed);\n+            connected = ConnectThroughProxy(proxy, addrConnect.ToStringIP(), addrConnect.GetPort(),\n+                                            *sock, nConnectTimeout, proxyConnectionFailed);\n         } else {\n             // no proxy needed (none set for target network)\n-            hSocket = CreateSocket(addrConnect);\n-            if (hSocket == INVALID_SOCKET) {\n+            sock = CreateSock(addrConnect);\n+            if (!sock) {\n                 return nullptr;\n             }\n-            connected = ConnectSocketDirectly(addrConnect, hSocket, nConnectTimeout, conn_type == ConnectionType::MANUAL);\n+            connected = ConnectSocketDirectly(addrConnect, sock->Get(), nConnectTimeout,\n+                                              conn_type == ConnectionType::MANUAL);\n         }\n         if (!proxyConnectionFailed) {\n             // If a connection to the node was attempted, and failure (if any) is not caused by a problem connecting to\n             // the proxy, mark this as an attempt.\n             addrman.Attempt(addrConnect, fCountFailure);\n         }\n     } else if (pszDest && GetNameProxy(proxy)) {\n-        hSocket = CreateSocket(proxy.proxy);\n-        if (hSocket == INVALID_SOCKET) {\n+        sock = CreateSock(proxy.proxy);\n+        if (!sock) {\n             return nullptr;\n         }\n         std::string host;\n         int port = default_port;\n         SplitHostPort(std::string(pszDest), port, host);\n         bool proxyConnectionFailed;\n-        connected = ConnectThroughProxy(proxy, host, port, hSocket, nConnectTimeout, proxyConnectionFailed);\n+        connected =\n+            ConnectThroughProxy(proxy, host, port, *sock, nConnectTimeout, proxyConnectionFailed);\n     }\n     if (!connected) {\n-        CloseSocket(hSocket);\n         return nullptr;\n     }\n \n     // Add node\n     NodeId id = GetNewNodeId();\n     uint64_t nonce = GetDeterministicRandomizer(RANDOMIZER_ID_LOCALHOSTNONCE).Write(id).Finalize();\n-    CAddress addr_bind = GetBindAddress(hSocket);\n-    CNode* pnode = new CNode(id, nLocalServices, hSocket, addrConnect, CalculateKeyedNetGroup(addrConnect), nonce, addr_bind, pszDest ? pszDest : \"\", conn_type);\n+    CAddress addr_bind = GetBindAddress(sock->Get());\n+    CNode* pnode = new CNode(id, nLocalServices, sock->Release(), addrConnect,\n+                             CalculateKeyedNetGroup(addrConnect), nonce, addr_bind,\n+                             pszDest ? pszDest : \"\", conn_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r570407726",
      "id" : 570407726,
      "in_reply_to_id" : 569583586,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDQwNzcyNg==",
      "original_commit_id" : "cc109a47481263e1a7fb9b74f1aea57ea0129f8e",
      "original_line" : 479,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 583638005,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570407726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "cc109a474...bb5231615: stylistic changes to address suggestions by @jonatack, thanks!",
      "created_at" : "2021-02-04T17:26:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-773477173",
      "id" : 773477173,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MzQ3NzE3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-04T17:26:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/773477173",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @vasild. I didn't see your latest notifications as I have been adjusting to the new `ghwatch.py` script, will re-review.",
      "created_at" : "2021-02-09T13:45:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-775947271",
      "id" : 775947271,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NTk0NzI3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-09T13:45:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/775947271",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It seems more logical to me to move the `CloseSocket` and `NetworkErrorString` functions to `sock.h`, not `system.h`? ~~Also do we still need an explicit `CloseSocket` instead of `Sock::Reset`?~~ (oh those are separate types, I see)\r\n\r\nCursory code review ACK otherwise.",
      "created_at" : "2021-02-09T19:42:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-776193697",
      "id" : 776193697,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NjE5MzY5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-09T19:54:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/776193697",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "bb5231615...7b6e4ee30: move `CloseSocket()` and `NetworkErrorString()` to `util/sock.{h,cpp}` instead of to `util/system.{h,cpp}`.\r\n\r\n@laanwj,\r\n\r\n> It seems more logical to me to move the `CloseSocket` and `NetworkErrorString` functions to `sock.h`, not `system.h`?\r\n\r\nDone.\r\n\r\n> ~Also do we still need an explicit `CloseSocket` instead of `Sock::Reset`?~\r\n\r\nActually this question makes sense - we can remove `CloseSocket()` altogether once its callers have switched to using the newly introduced `Sock` from this PR. There are about 10 places where `CloseSocket()` is called - should be possible (not in this PR).",
      "created_at" : "2021-02-10T11:18:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-776638169",
      "id" : 776638169,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NjYzODE2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-10T11:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/776638169",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "7b6e4ee30...e8e372a43: fix Vindows build",
      "created_at" : "2021-02-10T12:37:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-776678051",
      "id" : 776678051,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NjY3ODA1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-10T12:37:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/776678051",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@vasild Thanks! Yes, agree with not getting rid of `CloseSocket` in this PR, but glad to hear there's a path to removing the loose function.\r\n\r\nCode review and light testing (outbound connections over Tor still work) ACK e8e372a43122366fab7d6c7a45e05d4ad18d6da7",
      "created_at" : "2021-02-10T19:24:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-776956778",
      "id" : 776956778,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3Njk1Njc3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-10T19:45:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/776956778",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r574052336"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574052336"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    // wrongly pretend that the socket is not closed.\r\n```\r\nor \"incorrectly\"",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-10T20:25:52Z",
      "diff_hunk" : "@@ -0,0 +1,149 @@\n+// Copyright (c) 2021-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat.h>\n+#include <test/util/setup_common.h>\n+#include <util/sock.h>\n+#include <util/system.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <thread>\n+\n+using namespace std::chrono_literals;\n+\n+BOOST_FIXTURE_TEST_SUITE(sock_tests, BasicTestingSetup)\n+\n+static bool SocketIsClosed(const SOCKET& s)\n+{\n+    // Notice that if another thread is running and creates its own socket after `s` has been\n+    // closed, it may get assigned the same file descriptor number. In this case our test will\n+    // wronly pretend that the socket is not closed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r574052336",
      "id" : 574052336,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDA1MjMzNg==",
      "original_commit_id" : "e8e372a43122366fab7d6c7a45e05d4ad18d6da7",
      "original_line" : 22,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/test/sock_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 588022575,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574052336",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r574052725"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574052725"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    // closed, it may be assigned the same file descriptor number. In this case, our test will\r\n```",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-10T20:26:36Z",
      "diff_hunk" : "@@ -0,0 +1,149 @@\n+// Copyright (c) 2021-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat.h>\n+#include <test/util/setup_common.h>\n+#include <util/sock.h>\n+#include <util/system.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <thread>\n+\n+using namespace std::chrono_literals;\n+\n+BOOST_FIXTURE_TEST_SUITE(sock_tests, BasicTestingSetup)\n+\n+static bool SocketIsClosed(const SOCKET& s)\n+{\n+    // Notice that if another thread is running and creates its own socket after `s` has been\n+    // closed, it may get assigned the same file descriptor number. In this case our test will",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r574052725",
      "id" : 574052725,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDA1MjcyNQ==",
      "original_commit_id" : "e8e372a43122366fab7d6c7a45e05d4ad18d6da7",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/test/sock_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 588022575,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574052725",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think this is ready for merge, but would be nice to fix @jonatack's comment typos.",
      "created_at" : "2021-02-11T08:56:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-777289382",
      "id" : 777289382,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NzI4OTM4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-11T08:56:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777289382",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r574364605"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574364605"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, that was wron. Fixed.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-11T09:46:14Z",
      "diff_hunk" : "@@ -0,0 +1,149 @@\n+// Copyright (c) 2021-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat.h>\n+#include <test/util/setup_common.h>\n+#include <util/sock.h>\n+#include <util/system.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <thread>\n+\n+using namespace std::chrono_literals;\n+\n+BOOST_FIXTURE_TEST_SUITE(sock_tests, BasicTestingSetup)\n+\n+static bool SocketIsClosed(const SOCKET& s)\n+{\n+    // Notice that if another thread is running and creates its own socket after `s` has been\n+    // closed, it may get assigned the same file descriptor number. In this case our test will\n+    // wronly pretend that the socket is not closed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r574364605",
      "id" : 574364605,
      "in_reply_to_id" : 574052336,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDM2NDYwNQ==",
      "original_commit_id" : "e8e372a43122366fab7d6c7a45e05d4ad18d6da7",
      "original_line" : 22,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/test/sock_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 588381101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:46:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574364605",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r574364819"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574364819"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed.",
      "commit_id" : "615ba0eb96cf131364c1ceca9d3dedf006fa1e1c",
      "created_at" : "2021-02-11T09:46:37Z",
      "diff_hunk" : "@@ -0,0 +1,149 @@\n+// Copyright (c) 2021-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat.h>\n+#include <test/util/setup_common.h>\n+#include <util/sock.h>\n+#include <util/system.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <thread>\n+\n+using namespace std::chrono_literals;\n+\n+BOOST_FIXTURE_TEST_SUITE(sock_tests, BasicTestingSetup)\n+\n+static bool SocketIsClosed(const SOCKET& s)\n+{\n+    // Notice that if another thread is running and creates its own socket after `s` has been\n+    // closed, it may get assigned the same file descriptor number. In this case our test will",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#discussion_r574364819",
      "id" : 574364819,
      "in_reply_to_id" : 574052725,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDM2NDgxOQ==",
      "original_commit_id" : "e8e372a43122366fab7d6c7a45e05d4ad18d6da7",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/test/sock_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 588381380,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20788",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T09:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574364819",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "e8e372a43...615ba0eb9: fix typos in a comment",
      "created_at" : "2021-02-11T09:47:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-777320031",
      "id" : 777320031,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NzMyMDAzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-11T09:47:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777320031",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @vasild, back to my computer in a half hour to re-ACK.",
      "created_at" : "2021-02-11T12:23:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-777415526",
      "id" : 777415526,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NzQxNTUyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-11T12:23:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777415526",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Re-ACK 615ba0eb96cf131364c1ceca9d3dedf006fa1e1c\r\nChecked that only change is the comment.",
      "created_at" : "2021-02-11T12:23:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-777415663",
      "id" : 777415663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NzQxNTY2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-11T12:23:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777415663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(Review and comment made from gh pr as an experiment.)\r\n\r\nEdit: learned to never write `gh pr` in a comment from github cli, as it converts it to the general help.",
      "created_at" : "2021-02-11T12:59:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-777438277",
      "id" : 777438277,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NzQzODI3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-11T13:19:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777438277",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@vasild Thanks for making our socket handling mockable. This will be extremely useful when fuzzing!\r\n\r\nSimilar to what you've done for TCP connections it would be really useful to be able to globally mock out DNS lookup to be able to have the responses be generated by a `FuzzedDataProvider` driven class instead of the ordinary lookup facility provided by the OS.\r\n\r\nIf you want to address this mocking need too you can find some inspiration in #19415 :)",
      "created_at" : "2021-02-12T09:36:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-778085839",
      "id" : 778085839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3ODA4NTgzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-12T09:36:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778085839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Just for reference: previous incarnations of this PR had the `Sock::Wait()` method report to the caller whether one of the requested events happened or a timeout occurred. This was [removed](https://github.com/bitcoin/bitcoin/pull/20788#discussion_r550250637) because none of the callers needed it.\r\n\r\nHowever this is needed in #20685, so that PR contains a tiny [commit](https://github.com/bitcoin/bitcoin/pull/20685/commits/8bc35b9cb1b38386c7234f251959fdb2f121ac07) to re-introduce that functionality.",
      "created_at" : "2021-02-13T13:11:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20788#issuecomment-778617207",
      "id" : 778617207,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20788",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3ODYxNzIwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-13T13:11:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778617207",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
