[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, light code review ACK e0025e6c21d0429e66d33b0520b71b5180ffc0cc\r\n\r\n-----------\r\n\r\nI think it would save us some time in the future if you duplicate the descriptions from the PR post in commit messages.",
      "created_at" : "2022-09-01T07:12:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25968#issuecomment-1233845645",
      "id" : 1233845645,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25968",
      "node_id" : "IC_kwDOABII585Jiv2N",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1233845645/reactions"
      },
      "updated_at" : "2022-09-01T07:12:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1233845645",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs Fair point, done.",
      "created_at" : "2022-09-01T12:30:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25968#issuecomment-1234214515",
      "id" : 1234214515,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25968",
      "node_id" : "IC_kwDOABII585JkJ5z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1234214515/reactions"
      },
      "updated_at" : "2022-09-01T12:30:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1234214515",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r962870412"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962870412"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit\r\n```suggestion\r\n    if (headers.empty()) return true;\r\n```",
      "commit_id" : "746a829489b5707dc92f14471979611783719d3b",
      "created_at" : "2022-09-05T12:45:12Z",
      "diff_hunk" : "@@ -138,13 +136,11 @@ HeadersSyncState::ProcessingResult HeadersSyncState::ProcessNextHeaders(const\n \n bool HeadersSyncState::ValidateAndStoreHeadersCommitments(const std::vector<CBlockHeader>& headers)\n {\n-    // The caller should not give us an empty set of headers.\n-    Assume(headers.size() > 0);\n-    if (headers.size() == 0) return true;\n-\n     Assume(m_download_state == State::PRESYNC);\n     if (m_download_state != State::PRESYNC) return false;\n \n+    if (headers.size() == 0) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r962870412",
      "id" : 962870412,
      "line" : 142,
      "node_id" : "PRRC_kwDOABII5845ZDyM",
      "original_commit_id" : "746a829489b5707dc92f14471979611783719d3b",
      "original_line" : 142,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/headerssync.cpp",
      "position" : 59,
      "pull_request_review_id" : 1096400728,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962870412/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2022-09-05T13:20:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962870412",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r962896407"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962896407"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(nit) i believe in most cases std::accumulate is faster than a for loop\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex d029b883c..648139b1f 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3440,9 +3440,8 @@ bool HasValidProofOfWork(Span<const CBlockHeader> headers, const Consensus::Para\r\n \r\n arith_uint256 CalculateHeadersWork(Span<const CBlockHeader> headers)\r\n {\r\n-    arith_uint256 total_work{0};\r\n-    for (const CBlockHeader& header : headers) total_work += GetBlockProof(header);\r\n-    return total_work;\r\n+    return std::accumulate(headers.begin(), headers.end(), arith_uint256{0},\r\n+            [](arith_uint256 total_work, const CBlockHeader& header) { return total_work + GetBlockProof(header);});\r\n }\r\n```",
      "commit_id" : "746a829489b5707dc92f14471979611783719d3b",
      "created_at" : "2022-09-05T13:13:50Z",
      "diff_hunk" : "@@ -3432,19 +3432,16 @@ std::vector<unsigned char> ChainstateManager::GenerateCoinbaseCommitment(CBlock&\n     return commitment;\n }\n \n-bool HasValidProofOfWork(const std::vector<CBlockHeader>& headers, const Consensus::Params& consensusParams)\n+bool HasValidProofOfWork(Span<const CBlockHeader> headers, const Consensus::Params& consensusParams)\n {\n-    return std::all_of(headers.cbegin(), headers.cend(),\n+    return std::all_of(headers.begin(), headers.end(),\n             [&](const auto& header) { return CheckProofOfWork(header.GetHash(), header.nBits, consensusParams);});\n }\n \n-arith_uint256 CalculateHeadersWork(const std::vector<CBlockHeader>& headers)\n+arith_uint256 CalculateHeadersWork(Span<const CBlockHeader> headers)\n {\n     arith_uint256 total_work{0};\n-    for (const CBlockHeader& header : headers) {\n-        CBlockIndex dummy(header);\n-        total_work += GetBlockProof(dummy);\n-    }\n+    for (const CBlockHeader& header : headers) total_work += GetBlockProof(header);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r962896407",
      "id" : 962896407,
      "line" : 3444,
      "node_id" : "PRRC_kwDOABII5845ZKIX",
      "original_commit_id" : "746a829489b5707dc92f14471979611783719d3b",
      "original_line" : 3444,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 20,
      "pull_request_review_id" : 1096400728,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962896407/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2022-09-05T13:20:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962896407",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963093759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963093759"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can be moved just before usage L2774 to save a `size()` invocation.",
      "commit_id" : "746a829489b5707dc92f14471979611783719d3b",
      "created_at" : "2022-09-05T19:00:22Z",
      "diff_hunk" : "@@ -2726,20 +2726,6 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n {\n     size_t nCount = headers.size();\n ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963093759",
      "id" : 963093759,
      "line" : 2728,
      "node_id" : "PRRC_kwDOABII5845Z6T_",
      "original_commit_id" : "ab52fb4e95aa2732d1a1391331ea01362e035984",
      "original_line" : 2728,
      "original_position" : 3,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 16,
      "pull_request_review_id" : 1096725703,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963093759/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2022-09-05T19:23:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963093759",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963093968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963093968"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note to reviewers the state is finalized L133 in `ProcessNextHeaders()`.",
      "commit_id" : "746a829489b5707dc92f14471979611783719d3b",
      "created_at" : "2022-09-05T19:01:12Z",
      "diff_hunk" : "@@ -2726,20 +2726,6 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n {\n     size_t nCount = headers.size();\n \n-    if (nCount == 0) {\n-        // Nothing interesting. Stop asking this peers for more headers.\n-        // If we were in the middle of headers sync, receiving an empty headers\n-        // message suggests that the peer suddenly has nothing to give us\n-        // (perhaps it reorged to our chain). Clear download state for this peer.\n-        LOCK(peer.m_headers_sync_mutex);\n-        if (peer.m_headers_sync) {\n-            peer.m_headers_sync.reset(nullptr);\n-            LOCK(m_headers_presync_mutex);\n-            m_headers_presync_stats.erase(pfrom.GetId());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963093968",
      "id" : 963093968,
      "line" : 2744,
      "node_id" : "PRRC_kwDOABII5845Z6XQ",
      "original_commit_id" : "ab52fb4e95aa2732d1a1391331ea01362e035984",
      "original_line" : 2738,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 26,
      "pull_request_review_id" : 1096725703,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963093968/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2022-09-05T19:23:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963093968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963096587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963096587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not assigning directly the result of `TryLowWOrkHeadersSync()` to `have_headers_sync` here? For some code clarity?",
      "commit_id" : "746a829489b5707dc92f14471979611783719d3b",
      "created_at" : "2022-09-05T19:10:35Z",
      "diff_hunk" : "@@ -2807,14 +2807,14 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     // At this point, the headers connect to something in our block index.\n     // Do anti-DoS checks to determine if we should process or store for later\n     // processing.\n-    if (!already_validated_work && TryLowWorkHeadersSync(peer, pfrom,\n-                chain_start_header, headers)) {\n-        // If we successfully started a low-work headers sync, then there\n-        // should be no headers to process any further.\n-        Assume(headers.empty());\n-        return;\n+    if (!already_validated_work) {\n+        already_validated_work = TryLowWorkHeadersSync(peer, pfrom, chain_start_header, headers);\n+        have_headers_sync = already_validated_work;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963096587",
      "id" : 963096587,
      "line" : 2812,
      "node_id" : "PRRC_kwDOABII5845Z7AL",
      "original_commit_id" : "7f1cf440ca1a9c86085716745ca64d3ac26957c0",
      "original_line" : 2812,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 74,
      "pull_request_review_id" : 1096725703,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963096587/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2022-09-05T19:23:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963096587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963618705"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963618705"
         }
      },
      "author_association" : "MEMBER",
      "body" : "unrelated 25717 cleanup, in this file: No need to pass members into member functions:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 74700580ad..8e80bd7aef 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -604,7 +604,7 @@ private:\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_headers_presync_mutex);\r\n     /** Various helpers for headers processing, invoked by ProcessHeadersMessage() */\r\n     /** Return true if headers are continuous and have valid proof-of-work (DoS points assigned on failure) */\r\n-    bool CheckHeadersPoW(const std::vector<CBlockHeader>& headers, const Consensus::Params& consensusParams, Peer& peer);\r\n+    bool CheckHeadersPoW(const std::vector<CBlockHeader>& headers, Peer& peer);\r\n     /** Calculate an anti-DoS work threshold for headers chains */\r\n     arith_uint256 GetAntiDoSWorkThreshold();\r\n     /** Deal with state tracking and headers sync for peers that send the\r\n@@ -2360,10 +2360,10 @@ void PeerManagerImpl::SendBlockTransactions(CNode& pfrom, Peer& peer, const CBlo\r\n     m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCKTXN, resp));\r\n }\r\n \r\n-bool PeerManagerImpl::CheckHeadersPoW(const std::vector<CBlockHeader>& headers, const Consensus::Params& consensusParams, Peer& peer)\r\n+bool PeerManagerImpl::CheckHeadersPoW(const std::vector<CBlockHeader>& headers, Peer& peer)\r\n {\r\n     // Do these headers have proof-of-work matching what's claimed?\r\n-    if (!HasValidProofOfWork(headers, consensusParams)) {\r\n+    if (!HasValidProofOfWork(headers, m_chainparams.GetConsensus())) {\r\n         Misbehaving(peer, 100, \"header with invalid proof of work\");\r\n         return false;\r\n     }\r\n@@ -2750,7 +2750,7 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\r\n     // We'll rely on headers having valid proof-of-work further down, as an\r\n     // anti-DoS criteria (note: this check is required before passing any\r\n     // headers into HeadersSyncState).\r\n-    if (!CheckHeadersPoW(headers, m_chainparams.GetConsensus(), peer)) {\r\n+    if (!CheckHeadersPoW(headers, peer)) {\r\n         // Misbehaving() calls are handled within CheckHeadersPoW(), so we can\r\n         // just return. (Note that even if a header is announced via compact\r\n         // block, the header itself should be valid, so this type of error can\r\n",
      "commit_id" : "746a829489b5707dc92f14471979611783719d3b",
      "created_at" : "2022-09-06T12:04:41Z",
      "diff_hunk" : "@@ -2514,12 +2514,6 @@ bool PeerManagerImpl::IsContinuationOfLowWorkHeadersSync(Peer& peer, CNode& pfro\n             }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963618705",
      "id" : 963618705,
      "line" : 2514,
      "node_id" : "PRRC_kwDOABII5845b6eR",
      "original_commit_id" : "746a829489b5707dc92f14471979611783719d3b",
      "original_line" : 2514,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 1,
      "pull_request_review_id" : 1097457648,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963618705/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2022-09-09T09:58:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963618705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963634928"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963634928"
         }
      },
      "author_association" : "MEMBER",
      "body" : "unrelated, but in this line: A raw pointer that is never null is better passed as a reference.\r\n\r\n```diff\r\ndiff --git a/src/headerssync.cpp b/src/headerssync.cpp\r\nindex 757b942cd9..18ffe65161 100644\r\n--- a/src/headerssync.cpp\r\n+++ b/src/headerssync.cpp\r\n@@ -23,14 +23,14 @@ constexpr size_t REDOWNLOAD_BUFFER_SIZE{13959}; // 13959/584 = ~23.9 commitments\r\n static_assert(sizeof(CompressedHeader) == 48);\r\n \r\n HeadersSyncState::HeadersSyncState(NodeId id, const Consensus::Params& consensus_params,\r\n-        const CBlockIndex* chain_start, const arith_uint256& minimum_required_work) :\r\n+        const CBlockIndex& chain_start, const arith_uint256& minimum_required_work) :\r\n     m_id(id), m_consensus_params(consensus_params),\r\n     m_chain_start(chain_start),\r\n     m_minimum_required_work(minimum_required_work),\r\n-    m_current_chain_work(chain_start->nChainWork),\r\n+    m_current_chain_work{chain_start.nChainWork},\r\n     m_commit_offset(GetRand<unsigned>(HEADER_COMMITMENT_PERIOD)),\r\n-    m_last_header_received(m_chain_start->GetBlockHeader()),\r\n-    m_current_height(chain_start->nHeight)\r\n+    m_last_header_received{chain_start.GetBlockHeader()},\r\n+    m_current_height{chain_start.nHeight}\r\n {\r\n     // Estimate the number of blocks that could possibly exist on the peer's\r\n     // chain *right now* using 6 blocks/second (fastest blockrate given the MTP\r\n@@ -40,7 +40,7 @@ HeadersSyncState::HeadersSyncState(NodeId id, const Consensus::Params& consensus\r\n     // exceeds this bound, because it's not possible for a consensus-valid\r\n     // chain to be longer than this (at the current time -- in the future we\r\n     // could try again, if necessary, to sync a longer chain).\r\n-    m_max_commitments = 6*(Ticks<std::chrono::seconds>(GetAdjustedTime() - NodeSeconds{std::chrono::seconds{chain_start->GetMedianTimePast()}}) + MAX_FUTURE_BLOCK_TIME) / HEADER_COMMITMENT_PERIOD;\r\n+    m_max_commitments = 6*(Ticks<std::chrono::seconds>(GetAdjustedTime() - NodeSeconds{std::chrono::seconds{chain_start.GetMedianTimePast()}}) + MAX_FUTURE_BLOCK_TIME) / HEADER_COMMITMENT_PERIOD;\r\n \r\n     LogPrint(BCLog::NET, \"Initial headers sync started with peer=%d: height=%i, max_commitments=%i, min_work=%s\\n\", m_id, m_current_height, m_max_commitments, m_minimum_required_work.ToString());\r\n }\r\n@@ -164,10 +164,10 @@ bool HeadersSyncState::ValidateAndStoreHeadersCommitments(const std::vector<CBlo\r\n \r\n     if (m_current_chain_work >= m_minimum_required_work) {\r\n         m_redownloaded_headers.clear();\r\n-        m_redownload_buffer_last_height = m_chain_start->nHeight;\r\n-        m_redownload_buffer_first_prev_hash = m_chain_start->GetBlockHash();\r\n-        m_redownload_buffer_last_hash = m_chain_start->GetBlockHash();\r\n-        m_redownload_chain_work = m_chain_start->nChainWork;\r\n+        m_redownload_buffer_last_height = m_chain_start.nHeight;\r\n+        m_redownload_buffer_first_prev_hash = m_chain_start.GetBlockHash();\r\n+        m_redownload_buffer_last_hash = m_chain_start.GetBlockHash();\r\n+        m_redownload_chain_work = m_chain_start.nChainWork;\r\n         m_download_state = State::REDOWNLOAD;\r\n         LogPrint(BCLog::NET, \"Initial headers sync transition with peer=%d: reached sufficient work at height=%i, redownloading from height=%i\\n\", m_id, m_current_height, m_redownload_buffer_last_height);\r\n     }\r\n@@ -231,7 +231,7 @@ bool HeadersSyncState::ValidateAndStoreRedownloadedHeader(const CBlockHeader& he\r\n     if (!m_redownloaded_headers.empty()) {\r\n         previous_nBits = m_redownloaded_headers.back().nBits;\r\n     } else {\r\n-        previous_nBits = m_chain_start->nBits;\r\n+        previous_nBits = m_chain_start.nBits;\r\n     }\r\n \r\n     if (!PermittedDifficultyTransition(m_consensus_params, next_height,\r\n@@ -298,7 +298,7 @@ CBlockLocator HeadersSyncState::NextHeadersRequestLocator() const\r\n     Assume(m_download_state != State::FINAL);\r\n     if (m_download_state == State::FINAL) return {};\r\n \r\n-    auto chain_start_locator = LocatorEntries(m_chain_start);\r\n+    auto chain_start_locator = LocatorEntries(&m_chain_start);\r\n     std::vector<uint256> locator;\r\n \r\n     if (m_download_state == State::PRESYNC) {\r\ndiff --git a/src/headerssync.h b/src/headerssync.h\r\nindex 16da964246..6455b7dae6 100644\r\n--- a/src/headerssync.h\r\n+++ b/src/headerssync.h\r\n@@ -136,7 +136,7 @@ public:\r\n      * minimum_required_work: amount of chain work required to accept the chain\r\n      */\r\n     HeadersSyncState(NodeId id, const Consensus::Params& consensus_params,\r\n-            const CBlockIndex* chain_start, const arith_uint256& minimum_required_work);\r\n+            const CBlockIndex& chain_start, const arith_uint256& minimum_required_work);\r\n \r\n     /** Result data structure for ProcessNextHeaders. */\r\n     struct ProcessingResult {\r\n@@ -208,7 +208,7 @@ private:\r\n     const Consensus::Params& m_consensus_params;\r\n \r\n     /** Store the last block in our block index that the peer's chain builds from */\r\n-    const CBlockIndex* m_chain_start{nullptr};\r\n+    const CBlockIndex& m_chain_start;\r\n \r\n     /** Minimum work that we're looking for on this chain. */\r\n     const arith_uint256 m_minimum_required_work;\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 8e80bd7aef..2dbac5f6cb 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -647,7 +647,7 @@ private:\r\n      *              otherwise.\r\n      */\r\n     bool TryLowWorkHeadersSync(Peer& peer, CNode& pfrom,\r\n-                                  const CBlockIndex* chain_start_header,\r\n+                                  const CBlockIndex& chain_start_header,\r\n                                   std::vector<CBlockHeader>& headers)\r\n         EXCLUSIVE_LOCKS_REQUIRED(!peer.m_headers_sync_mutex, !m_peer_mutex, !m_headers_presync_mutex);\r\n \r\n@@ -2528,10 +2528,10 @@ bool PeerManagerImpl::IsContinuationOfLowWorkHeadersSync(Peer& peer, CNode& pfro\r\n     return false;\r\n }\r\n \r\n-bool PeerManagerImpl::TryLowWorkHeadersSync(Peer& peer, CNode& pfrom, const CBlockIndex* chain_start_header, std::vector<CBlockHeader>& headers)\r\n+bool PeerManagerImpl::TryLowWorkHeadersSync(Peer& peer, CNode& pfrom, const CBlockIndex& chain_start_header, std::vector<CBlockHeader>& headers)\r\n {\r\n     // Calculate the total work on this chain.\r\n-    arith_uint256 total_work = chain_start_header->nChainWork + CalculateHeadersWork(headers);\r\n+    arith_uint256 total_work = chain_start_header.nChainWork + CalculateHeadersWork(headers);\r\n \r\n     // Our dynamic anti-DoS threshold (minimum work required on a headers chain\r\n     // before we'll store it)\r\n@@ -2561,7 +2561,7 @@ bool PeerManagerImpl::TryLowWorkHeadersSync(Peer& peer, CNode& pfrom, const CBlo\r\n             // process the headers using it as normal.\r\n             return IsContinuationOfLowWorkHeadersSync(peer, pfrom, headers);\r\n         } else {\r\n-            LogPrint(BCLog::NET, \"Ignoring low-work chain (height=%u) from peer=%d\\n\", chain_start_header->nHeight + headers.size(), pfrom.GetId());\r\n+            LogPrint(BCLog::NET, \"Ignoring low-work chain (height=%u) from peer=%d\\n\", chain_start_header.nHeight + headers.size(), pfrom.GetId());\r\n             // Since this is a low-work headers chain, no further processing is required.\r\n             headers = {};\r\n             return true;\r\n@@ -2831,7 +2831,7 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\r\n     // Do anti-DoS checks to determine if we should process or store for later\r\n     // processing.\r\n     if (!already_validated_work && TryLowWorkHeadersSync(peer, pfrom,\r\n-                chain_start_header, headers)) {\r\n+                *chain_start_header, headers)) {\r\n         // If we successfully started a low-work headers sync, then there\r\n         // should be no headers to process any further.\r\n         Assume(headers.empty());\r\ndiff --git a/src/test/headers_sync_chainwork_tests.cpp b/src/test/headers_sync_chainwork_tests.cpp\r\nindex 41241ebee2..f7be84a356 100644\r\n--- a/src/test/headers_sync_chainwork_tests.cpp\r\n+++ b/src/test/headers_sync_chainwork_tests.cpp\r\n@@ -85,7 +85,7 @@ BOOST_AUTO_TEST_CASE(headers_sync_state)\r\n             Params().GenesisBlock().nVersion, Params().GenesisBlock().nTime,\r\n             ArithToUint256(1), Params().GenesisBlock().nBits);\r\n \r\n-    const CBlockIndex* chain_start = WITH_LOCK(::cs_main, return m_node.chainman->m_blockman.LookupBlockIndex(Params().GenesisBlock().GetHash()));\r\n+    const CBlockIndex& chain_start { *Assert(WITH_LOCK(::cs_main, return m_node.chainman->m_blockman.LookupBlockIndex(Params().GenesisBlock().GetHash())))};\r\n     std::vector<CBlockHeader> headers_batch;\r\n \r\n     // Feed the first chain to HeadersSyncState, by delivering 1 header\r\n",
      "commit_id" : "746a829489b5707dc92f14471979611783719d3b",
      "created_at" : "2022-09-06T12:20:13Z",
      "diff_hunk" : "@@ -2830,14 +2807,14 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     // At this point, the headers connect to something in our block index.\n     // Do anti-DoS checks to determine if we should process or store for later\n     // processing.\n-    if (!already_validated_work && TryLowWorkHeadersSync(peer, pfrom,\n-                chain_start_header, headers)) {\n-        // If we successfully started a low-work headers sync, then there\n-        // should be no headers to process any further.\n-        Assume(headers.empty());\n-        return;\n+    if (!already_validated_work) {\n+        already_validated_work = TryLowWorkHeadersSync(peer, pfrom, chain_start_header, headers);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963634928",
      "id" : 963634928,
      "line" : 2811,
      "node_id" : "PRRC_kwDOABII5845b-bw",
      "original_commit_id" : "746a829489b5707dc92f14471979611783719d3b",
      "original_line" : 2811,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 73,
      "pull_request_review_id" : 1097457648,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963634928/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2022-09-09T09:58:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963634928",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [naumenkogs](https://github.com/bitcoin/bitcoin/pull/25968#issuecomment-1233845645) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2022-09-13T13:50:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25968#issuecomment-1245443307",
      "id" : 1245443307,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25968",
      "node_id" : "IC_kwDOABII585KO_Tr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245443307/reactions"
      },
      "updated_at" : "2023-02-17T15:00:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245443307",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa are you inteterested in addressing the review feedback here?",
      "created_at" : "2023-02-17T15:00:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25968#issuecomment-1434766905",
      "id" : 1434766905,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25968",
      "node_id" : "IC_kwDOABII585VhM45",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1434766905/reactions"
      },
      "updated_at" : "2023-02-17T15:00:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1434766905",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r1110031910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1110031910"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How could it be faster? `std::accumulate` is just a function that runs the provided lambda in a loop.\r\n\r\nThe reason you'd want to use `std::accumulate` is because it's more readable. I'm not sure that's the case here.",
      "commit_id" : "746a829489b5707dc92f14471979611783719d3b",
      "created_at" : "2023-02-17T16:15:56Z",
      "diff_hunk" : "@@ -3432,19 +3432,16 @@ std::vector<unsigned char> ChainstateManager::GenerateCoinbaseCommitment(CBlock&\n     return commitment;\n }\n \n-bool HasValidProofOfWork(const std::vector<CBlockHeader>& headers, const Consensus::Params& consensusParams)\n+bool HasValidProofOfWork(Span<const CBlockHeader> headers, const Consensus::Params& consensusParams)\n {\n-    return std::all_of(headers.cbegin(), headers.cend(),\n+    return std::all_of(headers.begin(), headers.end(),\n             [&](const auto& header) { return CheckProofOfWork(header.GetHash(), header.nBits, consensusParams);});\n }\n \n-arith_uint256 CalculateHeadersWork(const std::vector<CBlockHeader>& headers)\n+arith_uint256 CalculateHeadersWork(Span<const CBlockHeader> headers)\n {\n     arith_uint256 total_work{0};\n-    for (const CBlockHeader& header : headers) {\n-        CBlockIndex dummy(header);\n-        total_work += GetBlockProof(dummy);\n-    }\n+    for (const CBlockHeader& header : headers) total_work += GetBlockProof(header);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r1110031910",
      "id" : 1110031910,
      "in_reply_to_id" : 962896407,
      "line" : 3444,
      "node_id" : "PRRC_kwDOABII585CKb4m",
      "original_commit_id" : "746a829489b5707dc92f14471979611783719d3b",
      "original_line" : 3444,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 20,
      "pull_request_review_id" : 1303737355,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1110031910/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-02-17T17:53:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1110031910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing as up for grabs.",
      "created_at" : "2023-04-25T15:04:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25968#issuecomment-1521954195",
      "id" : 1521954195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25968",
      "node_id" : "IC_kwDOABII585aty2T",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1521954195/reactions"
      },
      "updated_at" : "2023-04-25T15:04:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1521954195",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
