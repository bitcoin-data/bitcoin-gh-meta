{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "## Description\r\n\r\nThis PR is another take of using BIP 157 block filters (enabled by `-blockfilterindex=1`) for faster wallet rescans and is a modern revival of #15845. For reviewers new to this topic I can highly recommend to read the corresponding PR review club (https://bitcoincore.reviews/15845). \r\n\r\nThe basic idea is to skip blocks for deeper inspection (i.e. looking at every single tx for matches) if our block filter doesn't match any of the block's spent or created UTXOs are relevant for our wallet. Note that there can be false-positives (see https://bitcoincore.reviews/15845#l-199 for a PR review club discussion about false-positive rates), but no false-negatives, i.e. it is safe to skip blocks if the filter doesn't match; if the filter *does* match even though there are no wallet-relevant txs in the block, no harm is done, only a little more time is spent extra.\r\n\r\nIn contrast to #15845, this solution only supports descriptor wallets, which are way more widespread now than back in the time >3 years ago. With that approach, we don't have to ever derive the relevant scriptPubKeys ourselves from keys before populating the filter, and can instead shift the full reposibility to that to the `DescriptorScriptPubKeyMan` which already takes care of that automatically. Compared to legacy wallets, the `IsMine` logic for descriptor wallets is as trivial as checking if a scriptPubKey is included in the ScriptPubKeyMan's set of scriptPubKeys (`m_map_script_pub_keys`): https://github.com/bitcoin/bitcoin/blob/e191fac4f3c37820f0618f72f0a8e8b524531ab8/src/wallet/scriptpubkeyman.cpp#L1703-L1710\r\n\r\nOne of the unaddressed issues of #15845 was that [the filter was only created once outside the loop](https://github.com/bitcoin/bitcoin/pull/15845#discussion_r343265997) and as such didn't take into account possible top-ups that have happened. This is solved here by keeping a state of active `DescriptorScriptPubKeyMan`'s descriptor end ranges and check at each iteration whether that range has increased since last time. If yes, we update the filter with all scriptPubKeys that have been added since the last filter update with a range index equal or higher than the last end range. Note that finding new scriptPubKeys could be made more efficient than linearly iterating through the whole `m_script_pub_keys` map (e.g. by introducing a bidirectional map), but this would mean introducing additional complexity and state and it's probably not worth it at this time, considering that the performance gain is already significant.\r\n\r\nOutput scripts from inactive `DescriptorScriptPubKeyMan`s (i.e. ones with a fixed set of output scripts that is never extended) are added only once when the filter is created first.\r\n\r\n## Benchmark results\r\n\r\nObviously, the speed-up indirectly correlates with the wallet tx frequency in the scanned range: the more blocks contain wallet-related transactions, the less blocks can be skipped due to block filter detection.\r\n\r\nIn a [simple benchmark](https://github.com/theStack/bitcoin/blob/fast_rescan_functional_test_benchmark/test/functional/pr25957_benchmark.py), a regtest chain with 1008 blocks (corresponding to 1 week) is mined with 20000 scriptPubKeys contained (25 txs * 800 outputs) each. The blocks each have a weight of ~2500000 WUs and hence are about 62.5% full. A global constant `WALLET_TX_BLOCK_FREQUENCY` defines how often wallet-related txs are included in a block. The created descriptor wallet (default setting of `keypool=1000`, we have 8*1000 = 8000 scriptPubKeys at the start) is backuped via the `backupwallet` RPC before the mining starts and imported via `restorewallet` RPC after. The measured time for taking this import process (which involves a rescan) once with block filters (`-blockfilterindex=1`) and once without block filters (`-blockfilterindex=0`) yield the relevant result numbers for the benchmark.\r\n\r\nThe following table lists the results, sorted from worst-case (all blocks contain wallte-relevant txs, 0% can be skipped) to best-case (no blocks contain walltet-relevant txs, 100% can be skipped) where the frequencies have been picked arbitrarily:\r\n\r\nwallet-related tx frequency; 1 tx per...    | ratio of irrelevant blocks  | w/o filters | with filters | speed gain\r\n--------------------------------------------|-----------------------------|-------------|--------------|-------------\r\n~ 10 minutes (every block)                  |              0%             |   56.806s   |   63.554s    |  ~0.9x\r\n~ 20 minutes (every 2nd block)              |           50% (1/2)         |   58.896s   |   36.076s    |  ~1.6x\r\n~ 30 minutes (every 3rd block)              |          66.67% (2/3)       |   56.781s   |   25.430s    |  ~2.2x\r\n~ 1 hour (every 6th block)                  |          83.33% (5/6)       |   58.193s   |   15.786s    |  ~3.7x\r\n~ 6 hours (every 36th block)                |          97.22% (35/36)     |   57.500s   |    6.935s    |  ~8.3x\r\n~ 1 day (every 144th block)                 |         99.31% (143/144)    |   68.881s   |    6.107s    | ~11.3x\r\n  (no txs)                                  |              100%           |   58.529s   |    5.630s    | ~10.4x\r\n\r\n\r\nSince even the (rather unrealistic) worst-case scenario of having wallet-related txs in _every_ block of the rescan range obviously doesn't take significantly longer, I'd argue it's reasonable to always take advantage of block filters if they are available and there's no need to provide an option for the user.\r\n\r\nFeedback about the general approach (but also about details like naming, where I struggled a lot) would be greatly appreciated. Thanks fly out to furszy for discussing this subject and patiently answering basic question about descriptor wallets!",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25957/comments",
   "created_at" : "2022-08-29T22:04:41Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25957/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/25957",
   "id" : 1354921936,
   "labels" : [
      {
         "color" : "08a781",
         "default" : false,
         "description" : null,
         "id" : 149424,
         "name" : "Wallet",
         "node_id" : "MDU6TGFiZWwxNDk0MjQ=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25957/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII584-AN5m",
   "number" : 25957,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/25957.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25957",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/25957.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25957"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25957/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25957/timeline",
   "title" : "wallet: fast rescan with BIP157 block filters for descriptor wallets",
   "updated_at" : "2022-08-29T23:11:25Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25957",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
      "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
      "followers_url" : "https://api.github.com/users/theStack/followers",
      "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/theStack",
      "id" : 91535,
      "login" : "theStack",
      "node_id" : "MDQ6VXNlcjkxNTM1",
      "organizations_url" : "https://api.github.com/users/theStack/orgs",
      "received_events_url" : "https://api.github.com/users/theStack/received_events",
      "repos_url" : "https://api.github.com/users/theStack/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/theStack"
   }
}
