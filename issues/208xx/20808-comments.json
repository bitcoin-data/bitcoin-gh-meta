[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Not a huge deal @stackman27 but we ACK the commit hash of the HEAD commit. In this case it is 4e8803e22f0cd8a71f7f81f67ed0137a667b63ce\r\n\r\n> When giving an ACK, specify the commits reviewed by appending the commit hash of the HEAD commit.\r\n\r\nFor more details on the review process see this @jonatack doc: https://jonatack.github.io/articles/how-to-review-pull-requests-in-bitcoin-core",
      "created_at" : "2021-01-03T20:39:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-753672969",
      "id" : 753672969,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20808",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzY3Mjk2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T20:39:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753672969",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Not a huge deal @stackman27 but we ACK the commit hash of the HEAD commit. In this case it is [4e8803e](https://github.com/bitcoin/bitcoin/commit/4e8803e22f0cd8a71f7f81f67ed0137a667b63ce)\r\n> \r\n> > When giving an ACK, specify the commits reviewed by appending the commit hash of the HEAD commit.\r\n> \r\n> For more details on the review process see this @jonatack doc: https://jonatack.github.io/articles/how-to-review-pull-requests-in-bitcoin-core\r\n\r\noooh i see. Thank you! ",
      "created_at" : "2021-01-03T22:06:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-753682758",
      "id" : 753682758,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20808",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzY4Mjc1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T22:06:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753682758",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/26356227?v=4",
         "events_url" : "https://api.github.com/users/stackman27/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stackman27/followers",
         "following_url" : "https://api.github.com/users/stackman27/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stackman27/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stackman27",
         "id" : 26356227,
         "login" : "stackman27",
         "node_id" : "MDQ6VXNlcjI2MzU2MjI3",
         "organizations_url" : "https://api.github.com/users/stackman27/orgs",
         "received_events_url" : "https://api.github.com/users/stackman27/received_events",
         "repos_url" : "https://api.github.com/users/stackman27/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stackman27/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stackman27"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551475077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551475077"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Any reason you bumped up the blocks generated from 110 to 200?",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-04T17:59:32Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551475077",
      "id" : 551475077,
      "line" : 57,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ3NTA3Nw==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 57,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 40,
      "pull_request_review_id" : 561226088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551475077",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551511734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551511734"
         }
      },
      "author_association" : "NONE",
      "body" : "I bumped it from 110 blocks because I was getting premature spend when using 110 blocks. I think its because the utxos are sorted by value so their confirmations are somewhat arbitrary in the self._utxos. 200 seemed to be a quick and dirty fix.",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-04T19:11:50Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551511734",
      "id" : 551511734,
      "in_reply_to_id" : 551475077,
      "line" : 57,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxMTczNA==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 57,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 40,
      "pull_request_review_id" : 561272517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551511734",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551576038"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551576038"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It doesn't seem totally related to what's being tested here, but one thing I noticed while reviewing:\r\n\r\nDo you know why, in the original code, `rpc_generateblock.py` sometimes does  `sendrawtransaction` and other times does not, before `generateblock`?\r\n\r\nie here `signed_raw2` was never submitted to the `node` with `sendrawtransaction`, while `txid1` was. \r\n\r\n",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-04T21:22:13Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(200)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)\n \n         self.log.info('Fail to generate block with out of order txs')\n-        raw1 = node.createrawtransaction([{'txid':txid, 'vout':0}],[{address:0.9999}])\n-        signed_raw1 = node.signrawtransactionwithwallet(raw1)['hex']\n-        txid1 = node.sendrawtransaction(signed_raw1)\n-        raw2 = node.createrawtransaction([{'txid':txid1, 'vout':0}],[{address:0.999}])\n-        signed_raw2 = node.signrawtransactionwithwallet(raw2)['hex']\n-        assert_raises_rpc_error(-25, 'TestBlockValidity failed: bad-txns-inputs-missingorspent', node.generateblock, address, [signed_raw2, txid1])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551576038",
      "id" : 551576038,
      "line" : 84,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU3NjAzOA==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 84,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 76,
      "pull_request_review_id" : 561354148,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551576038",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551578672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551578672"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, you're right that it's bc the utxos are sorted by value in `MiniWallet` and a lot of them will be immature coin bases. I think what you have is good. But what I've usually done, and seen done before, is generating the utxos you need to spend with `mini_wallet.generate()`, and then generating 100 block with node, `node.generate(100)` so that all the utxos in `MiniWallet` are mature and good to go",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-04T21:27:39Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551578672",
      "id" : 551578672,
      "in_reply_to_id" : 551475077,
      "line" : 57,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU3ODY3Mg==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 57,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 40,
      "pull_request_review_id" : 561357345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551578672",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551605654"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551605654"
         }
      },
      "author_association" : "NONE",
      "body" : "I am not entirely sure, but my assumption while reading through the code was that it was to save a line of code.",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-04T22:25:40Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(200)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)\n \n         self.log.info('Fail to generate block with out of order txs')\n-        raw1 = node.createrawtransaction([{'txid':txid, 'vout':0}],[{address:0.9999}])\n-        signed_raw1 = node.signrawtransactionwithwallet(raw1)['hex']\n-        txid1 = node.sendrawtransaction(signed_raw1)\n-        raw2 = node.createrawtransaction([{'txid':txid1, 'vout':0}],[{address:0.999}])\n-        signed_raw2 = node.signrawtransactionwithwallet(raw2)['hex']\n-        assert_raises_rpc_error(-25, 'TestBlockValidity failed: bad-txns-inputs-missingorspent', node.generateblock, address, [signed_raw2, txid1])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551605654",
      "id" : 551605654,
      "in_reply_to_id" : 551576038,
      "line" : 84,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYwNTY1NA==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 84,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 76,
      "pull_request_review_id" : 561391326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551605654",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551607299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551607299"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I pretty much approached with a similar style as described by @mjdietzx in `mempool_limit.py` as well to prevent premature spend error ",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-04T22:29:16Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551607299",
      "id" : 551607299,
      "in_reply_to_id" : 551475077,
      "line" : 57,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYwNzI5OQ==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 57,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 40,
      "pull_request_review_id" : 561393240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551607299",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/26356227?v=4",
         "events_url" : "https://api.github.com/users/stackman27/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stackman27/followers",
         "following_url" : "https://api.github.com/users/stackman27/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stackman27/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stackman27",
         "id" : 26356227,
         "login" : "stackman27",
         "node_id" : "MDQ6VXNlcjI2MzU2MjI3",
         "organizations_url" : "https://api.github.com/users/stackman27/orgs",
         "received_events_url" : "https://api.github.com/users/stackman27/received_events",
         "repos_url" : "https://api.github.com/users/stackman27/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stackman27/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stackman27"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551609818"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551609818"
         }
      },
      "author_association" : "NONE",
      "body" : "ya that certainly seems like a more coherent approach",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-04T22:35:35Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551609818",
      "id" : 551609818,
      "in_reply_to_id" : 551475077,
      "line" : 57,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYwOTgxOA==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 57,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 40,
      "pull_request_review_id" : 561396213,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551609818",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551828175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551828175"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This will add the tx to the mempool, which is not wanted. the raw tx should only be passed to the miner",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-05T09:56:48Z",
      "diff_hunk" : "@@ -51,37 +51,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551828175",
      "id" : 551828175,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgyODE3NQ==",
      "original_commit_id" : "1816feeddde9d56f31219d9c832dab710c34af9e",
      "original_line" : 70,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 561654162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551828175",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551828527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551828527"
         }
      },
      "author_association" : "MEMBER",
      "body" : "would be nice to use named arguments",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-05T09:57:24Z",
      "diff_hunk" : "@@ -51,37 +51,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551828527",
      "id" : 551828527,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgyODUyNw==",
      "original_commit_id" : "1816feeddde9d56f31219d9c832dab710c34af9e",
      "original_line" : 76,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 561654611,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551828527",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552044318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552044318"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "By \"not wanted\" you mean unnecessary @MarcoFalke? I only ask for my own understanding as the test passes in its current form.",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-05T16:29:19Z",
      "diff_hunk" : "@@ -51,37 +51,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552044318",
      "id" : 552044318,
      "in_reply_to_id" : 551828175,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA0NDMxOA==",
      "original_commit_id" : "1816feeddde9d56f31219d9c832dab710c34af9e",
      "original_line" : 70,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 561939374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552044318",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552254246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552254246"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`sendrawtransaction` submits the tx to mempool, while `createrawtransaction` + `signrawtransaction` merely creates the raw tx objects. Here, in the original test, tx1 is submitted and tx2 is not. It's calling `generateblock()` with the whole raw tx for tx2 and just the txid for tx1.\r\n\r\nSo, actually, your implementation doesn't really match what was there before. Be careful - [`generateblock`](https://github.com/bitcoin/bitcoin/blob/417f95fa453d97087a33d4176523ab278bef21a1/src/rpc/mining.cpp#L295) accepts hexstrings that can represent either txids (when the tx is already in mempool) or raw transactions.",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-05T23:13:11Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(200)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)\n \n         self.log.info('Fail to generate block with out of order txs')\n-        raw1 = node.createrawtransaction([{'txid':txid, 'vout':0}],[{address:0.9999}])\n-        signed_raw1 = node.signrawtransactionwithwallet(raw1)['hex']\n-        txid1 = node.sendrawtransaction(signed_raw1)\n-        raw2 = node.createrawtransaction([{'txid':txid1, 'vout':0}],[{address:0.999}])\n-        signed_raw2 = node.signrawtransactionwithwallet(raw2)['hex']\n-        assert_raises_rpc_error(-25, 'TestBlockValidity failed: bad-txns-inputs-missingorspent', node.generateblock, address, [signed_raw2, txid1])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552254246",
      "id" : 552254246,
      "in_reply_to_id" : 551576038,
      "line" : 84,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1NDI0Ng==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 84,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 76,
      "pull_request_review_id" : 562204408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552254246",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552254730"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552254730"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You can keep this as just 10. It'll fix your premature spend error; 10 outputs is enough for this test.\r\n```\r\nminiwallet.generate(10)\r\n```\r\n\r\n(oops, I put the suggestion on the wrong line - I mean only generate 10 on the miniwallet)",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-05T23:14:34Z",
      "diff_hunk" : "@@ -51,37 +69,43 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552254730",
      "id" : 552254730,
      "line" : 59,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1NDczMA==",
      "original_commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "original_line" : 59,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 42,
      "pull_request_review_id" : 562204408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552254730",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552269311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552269311"
         }
      },
      "author_association" : "NONE",
      "body" : "I did notice that but if this test is testing for out of order transactions isn't the distinction between a raw transaction and a transaction id arbitrary?",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-05T23:53:11Z",
      "diff_hunk" : "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(200)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)\n \n         self.log.info('Fail to generate block with out of order txs')\n-        raw1 = node.createrawtransaction([{'txid':txid, 'vout':0}],[{address:0.9999}])\n-        signed_raw1 = node.signrawtransactionwithwallet(raw1)['hex']\n-        txid1 = node.sendrawtransaction(signed_raw1)\n-        raw2 = node.createrawtransaction([{'txid':txid1, 'vout':0}],[{address:0.999}])\n-        signed_raw2 = node.signrawtransactionwithwallet(raw2)['hex']\n-        assert_raises_rpc_error(-25, 'TestBlockValidity failed: bad-txns-inputs-missingorspent', node.generateblock, address, [signed_raw2, txid1])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552269311",
      "id" : 552269311,
      "in_reply_to_id" : 551576038,
      "line" : 84,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI2OTMxMQ==",
      "original_commit_id" : "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "original_line" : 84,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 99,
      "pull_request_review_id" : 562220604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-05T23:53:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552269311",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552391964"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552391964"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Transactions for the miner are picked from the mempool, usually. This test should check that the tx can be supplied in raw form, not taking it from the mempool. Also, it tests that a miner can mine a tx that is not in the mempool.",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-06T06:23:26Z",
      "diff_hunk" : "@@ -51,37 +51,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552391964",
      "id" : 552391964,
      "in_reply_to_id" : 551828175,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM5MTk2NA==",
      "original_commit_id" : "1816feeddde9d56f31219d9c832dab710c34af9e",
      "original_line" : 70,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 562351279,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552391964",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552977599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552977599"
         }
      },
      "author_association" : "NONE",
      "body" : "I now realize I have wrote this in a very misleading way. Because even though this is getting generated to the `miniwallet` address I don't append it to `self._utxos` so therefore not spendable by `send_self_transfer()`. Should I append these generated blocks to `self._utxos` with some sort of helper function?",
      "commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "created_at" : "2021-01-06T21:48:36Z",
      "diff_hunk" : "@@ -5,25 +5,43 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552977599",
      "id" : 552977599,
      "line" : 45,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk3NzU5OQ==",
      "original_commit_id" : "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "original_line" : 45,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 45,
      "pull_request_review_id" : 563057965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-06T22:01:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552977599",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554607313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554607313"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can you do `hash = miniwallet.generate(1)[0][\"hash\"]` here? That way the coinbase will be appended to `miniwallet._utxos` in the way you're doing it and you won't have to duplicate logic",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T18:49:40Z",
      "diff_hunk" : "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n+        utxos = []\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554607313",
      "id" : 554607313,
      "line" : 27,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwNzMxMw==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 27,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 26,
      "pull_request_review_id" : 564890352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554607313",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554607411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554607411"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You should be able to remove this if you do `hash = miniwallet.generate(1)[0][\"hash\"]` instead",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T18:50:26Z",
      "diff_hunk" : "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n+        utxos = []\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        utxos.append(utxo)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554607411",
      "id" : 554607411,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwNzQxMQ==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 62,
      "original_position" : 62,
      "original_start_line" : 60,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 564890352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554607411",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554608202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554608202"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If you still want the `utxo` in your list, you can then just do `utxos.append(miniwallet.get_utxo())`",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T18:57:36Z",
      "diff_hunk" : "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n+        utxos = []\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        utxos.append(utxo)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554608202",
      "id" : 554608202,
      "in_reply_to_id" : 554607411,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwODIwMg==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 62,
      "original_position" : 62,
      "original_start_line" : 60,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 564890352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554608202",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554608913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554608913"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I know it's frowned upon, but thoughts on doing:\r\n```python\r\naddress = miniwallet._address\r\nscriptPubKey = miniwallet._scriptPubKey\r\n```\r\n\r\nOtherwise we're just duplicating that logic, and we can get rid of a bunch of imports. Maybe it's worth considering adding a getter for `address` and `scriptPubKey` to `MiniWallet` (although I don't see anything wrong just accessing the private vars)",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T19:03:58Z",
      "diff_hunk" : "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554608913",
      "id" : 554608913,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwODkxMw==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 54,
      "original_position" : 53,
      "original_start_line" : 53,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 564890352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554608913",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554609512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554609512"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not seeing how this is different than `miniwallet.send_self_transfer(...)`",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T19:08:36Z",
      "diff_hunk" : "@@ -51,37 +88,44 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(10)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        utxo = utxos.pop(0)\n+        rawtx = create_miniwallet_rawtx(utxo=utxo, scriptPubKey=scriptPubKey)\n+        txid = node.sendrawtransaction(rawtx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554609512",
      "id" : 554609512,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwOTUxMg==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 102,
      "original_position" : 94,
      "original_start_line" : 100,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 564890352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554609512",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554609713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554609713"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If you did miniwallet.send_self_transfer(...) as suggested above, you could get rid of this. Again, if you want the utxo in the list of utxos you are maintaining, you could do: utxos.append(miniwallet.get_utxo())",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T19:10:24Z",
      "diff_hunk" : "@@ -51,37 +88,44 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(10)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        utxo = utxos.pop(0)\n+        rawtx = create_miniwallet_rawtx(utxo=utxo, scriptPubKey=scriptPubKey)\n+        txid = node.sendrawtransaction(rawtx)\n         hash = node.generateblock(address, [txid])['hash']\n-        block = node.getblock(hash, 1)\n+        block = node.getblock(hash, 2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': block['tx'][1]['txid'], 'vout': 0, 'value': block['tx'][1]['vout'][0]['value']}\n+        utxos.append(utxo)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554609713",
      "id" : 554609713,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwOTcxMw==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 107,
      "original_position" : 100,
      "original_start_line" : 105,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 564890352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554609713",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554610229"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554610229"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think @MarcoFalke is setting you up for a layup here https://github.com/bitcoin/bitcoin/pull/20876. Then @glozow suggests \"was just thinking that it'd be nice to have a just-create-don't-send option for the MiniWallet. What do you think of a bool option?\"\r\n\r\nI think this is the PR where this is needed. So I'd consider rebasing on-top of #20876, and adding this option to `send_self_transfer` as described here. Then you can utilize this extended functionality and ditch `create_miniwallet_rawtx`\r\n\r\nthoughts?",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T19:15:11Z",
      "diff_hunk" : "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554610229",
      "id" : 554610229,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMDIyOQ==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 33,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 564890352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554610229",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554610606"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554610606"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not convinced that we need to maintain our own utxo set. After some re-working (ie adding \"a just-create-don't-send option for the MiniWallet.\") I'm wondering if this can go away",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T19:18:19Z",
      "diff_hunk" : "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n+        utxos = []",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554610606",
      "id" : 554610606,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMDYwNg==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 55,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 564890352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554610606",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554611909"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554611909"
         }
      },
      "author_association" : "NONE",
      "body" : "Yes I didn't like my approach but I wasn't sure I should touch the miniwallet class itself to add a `create_raw_transaction` function. So I think your suggestion is a nice solution.",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T19:30:31Z",
      "diff_hunk" : "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554611909",
      "id" : 554611909,
      "in_reply_to_id" : 554610229,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMTkwOQ==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 33,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 564893377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554611909",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554611927"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554611927"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I did a similar thing in `mempool_limit` by adding a `prepare_tx` method in MiniWallet Class. \r\nlink: https://github.com/bitcoin/bitcoin/pull/20874/files#diff-7932a60a9127fd22d10d367526fd7b987f9647ce017595f8b1af5c32d5db0083R58\r\nTo be honest, it was just to avoid repetition, but I can see how it could be helpful for both of us ",
      "commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "created_at" : "2021-01-10T19:30:59Z",
      "diff_hunk" : "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554611927",
      "id" : 554611927,
      "in_reply_to_id" : 554610229,
      "line" : 33,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMTkyNw==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 33,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 29,
      "pull_request_review_id" : 564893413,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-10T19:32:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554611927",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/26356227?v=4",
         "events_url" : "https://api.github.com/users/stackman27/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stackman27/followers",
         "following_url" : "https://api.github.com/users/stackman27/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stackman27/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stackman27",
         "id" : 26356227,
         "login" : "stackman27",
         "node_id" : "MDQ6VXNlcjI2MzU2MjI3",
         "organizations_url" : "https://api.github.com/users/stackman27/orgs",
         "received_events_url" : "https://api.github.com/users/stackman27/received_events",
         "repos_url" : "https://api.github.com/users/stackman27/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stackman27/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stackman27"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554613150"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554613150"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I did a similar thing in `mempool_limit` by adding a `prepare_tx` method in MiniWallet Class.\r\nlink: https://github.com/bitcoin/bitcoin/pull/20874/files#diff-7932a60a9127fd22d10d367526fd7b987f9647ce017595f8b1af5c32d5db0083R58\r\nTo be honest, it was just to avoid repetition, but I can see how it could be helpful for both of us\r\n\r\n",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T19:41:37Z",
      "diff_hunk" : "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554613150",
      "id" : 554613150,
      "in_reply_to_id" : 554610229,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMzE1MA==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 33,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 564894284,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554613150",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/26356227?v=4",
         "events_url" : "https://api.github.com/users/stackman27/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stackman27/followers",
         "following_url" : "https://api.github.com/users/stackman27/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stackman27/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stackman27",
         "id" : 26356227,
         "login" : "stackman27",
         "node_id" : "MDQ6VXNlcjI2MzU2MjI3",
         "organizations_url" : "https://api.github.com/users/stackman27/orgs",
         "received_events_url" : "https://api.github.com/users/stackman27/received_events",
         "repos_url" : "https://api.github.com/users/stackman27/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stackman27/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stackman27"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554613628"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554613628"
         }
      },
      "author_association" : "NONE",
      "body" : "Yes it probably can go away. My only reasoning for maintaining this list was because I wasn't exactly sure how I could get MiniWallet access to the utxos created from `generateblock`, and even if it did, Miniwallet (in its current state) doesn't have the option to create a transaction not submitted to mempool.",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T19:45:41Z",
      "diff_hunk" : "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n+        utxos = []",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554613628",
      "id" : 554613628,
      "in_reply_to_id" : 554610606,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMzYyOA==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 55,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 564894606,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554613628",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554614623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554614623"
         }
      },
      "author_association" : "NONE",
      "body" : "I thought of doing something along the lines of that but shouldn't I be using `generateblock` explicitly in this test?",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T19:54:39Z",
      "diff_hunk" : "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n+        utxos = []\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554614623",
      "id" : 554614623,
      "in_reply_to_id" : 554607313,
      "line" : 27,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxNDYyMw==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 27,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 26,
      "pull_request_review_id" : 564895297,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554614623",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554614840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554614840"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: shouldn't the name of the method be `create_and_sign_miniwallet_rawtx`?",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T19:56:20Z",
      "diff_hunk" : "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554614840",
      "id" : 554614840,
      "in_reply_to_id" : 554610229,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxNDg0MA==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 33,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 564895432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554614840",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/26356227?v=4",
         "events_url" : "https://api.github.com/users/stackman27/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stackman27/followers",
         "following_url" : "https://api.github.com/users/stackman27/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stackman27/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stackman27",
         "id" : 26356227,
         "login" : "stackman27",
         "node_id" : "MDQ6VXNlcjI2MzU2MjI3",
         "organizations_url" : "https://api.github.com/users/stackman27/orgs",
         "received_events_url" : "https://api.github.com/users/stackman27/received_events",
         "repos_url" : "https://api.github.com/users/stackman27/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stackman27/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stackman27"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554615413"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554615413"
         }
      },
      "author_association" : "NONE",
      "body" : "You're right, it really isn't. It mostly just comes down to the blocks generated by `generateblock` not being appended to `self._utxos`. So what it comes down to is what the proper approach for appending to `self._utxos` is.",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-10T20:01:51Z",
      "diff_hunk" : "@@ -51,37 +88,44 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(10)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        utxo = utxos.pop(0)\n+        rawtx = create_miniwallet_rawtx(utxo=utxo, scriptPubKey=scriptPubKey)\n+        txid = node.sendrawtransaction(rawtx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554615413",
      "id" : 554615413,
      "in_reply_to_id" : 554609512,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxNTQxMw==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 102,
      "original_position" : 94,
      "original_start_line" : 100,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 564895844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554615413",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554862558"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554862558"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree with @mjdietzx . Please rebase and add the bool option to #20876 ",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-11T07:59:06Z",
      "diff_hunk" : "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554862558",
      "id" : 554862558,
      "in_reply_to_id" : 554610229,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg2MjU1OA==",
      "original_commit_id" : "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "original_line" : 33,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 565124134,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T03:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554862558",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21178 (test: run mempool_reorg.py even with wallet disabled by DariusParvin)\n* #21014 (test: Run mempool_accept.py even with wallet disabled by stackman27)\n* #20889 (test: ensure any failing method in MiniWallet leaves no side-effects by mjdietzx)\n* #20874 (test: Run mempool_limit.py even with wallet disabled by stackman27)\n* #20286 (rpc: deprecate `addresses` and `reqSigs` from rpc outputs by mjdietzx)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-01-12T08:13:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-758485600",
      "id" : 758485600,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20808",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1ODQ4NTYwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-26T20:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/758485600",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r555996983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555996983"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this necessary? I don't see why we need this Coinbase in our utxos. I don't see us specifically spending it, and if you remove this it gets rid of the potential problem of appending to mini wallets private `_utxos`",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-12T18:47:41Z",
      "diff_hunk" : "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        miniwallet._utxos.append(utxo)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r555996983",
      "id" : 555996983,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk5Njk4Mw==",
      "original_commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "original_line" : 31,
      "original_position" : 30,
      "original_start_line" : 29,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 30,
      "pull_request_review_id" : 566569225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : 29,
      "start_side" : "RIGHT",
      "updated_at" : "2021-01-12T18:53:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555996983",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556000512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556000512"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I'm not sure if this really matters, but would it be better to use `miniwallet._address`? I know they are hard-coded to the same value rn\r\n\r\n@MarcoFalke what's you're opinion on this, would it be beneficial to add a getter to `MiniWallet`?\r\n```python\r\n@property\r\ndef address(self):\r\n  return self._address\r\n```",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-12T18:53:41Z",
      "diff_hunk" : "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556000512",
      "id" : 556000512,
      "line" : 24,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjAwMDUxMg==",
      "original_commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "original_line" : 24,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 22,
      "pull_request_review_id" : 566569225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T18:53:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556000512",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556008019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556008019"
         }
      },
      "author_association" : "NONE",
      "body" : "10 blocks isn't enough for the test because the 10 generated by MiniWallet are sent to sit in the mempool not to be mined. So I can up the generated blocks to 11 and remove that code, or do this approach.",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-12T19:06:36Z",
      "diff_hunk" : "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        miniwallet._utxos.append(utxo)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556008019",
      "id" : 556008019,
      "in_reply_to_id" : 555996983,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjAwODAxOQ==",
      "original_commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "original_line" : 31,
      "original_position" : 30,
      "original_start_line" : 29,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 30,
      "pull_request_review_id" : 566588270,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : 29,
      "start_side" : "RIGHT",
      "updated_at" : "2021-01-12T19:06:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556008019",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556015910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556015910"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is there any reason you need this specific utxo for this test? If you need 11, I'd say generate 11 blocks where you need them.\r\n\r\nbut the 10 generated by MiniWallet are definitely mined. ie if you synced another node, you'd see those blocks with the coinbases (utxos) you are spending. they aren't just in the mempool\r\n\r\nif I'm missing something please lmk, definitely possible",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-12T19:20:24Z",
      "diff_hunk" : "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        miniwallet._utxos.append(utxo)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556015910",
      "id" : 556015910,
      "in_reply_to_id" : 555996983,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjAxNTkxMA==",
      "original_commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "original_line" : 31,
      "original_position" : 30,
      "original_start_line" : 29,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 30,
      "pull_request_review_id" : 566611924,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : 29,
      "start_side" : "RIGHT",
      "updated_at" : "2021-01-12T19:20:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556015910",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556033753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556033753"
         }
      },
      "author_association" : "NONE",
      "body" : "I do not need that specific utxo for the test. I guess I should have elaborated more on my point. What I meant was that those 10 blocks are generated via `generate` and then are sent via `send_self_transfer`, however, those transactions are never confirmed. So while those new utxos are present within miniwallet generating a confirmed transaction based on them (because they are unconfirmed) isn't possible. Please correct me if I am wrong. Its probably just a better approach to generate 11.",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-12T19:42:18Z",
      "diff_hunk" : "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        miniwallet._utxos.append(utxo)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556033753",
      "id" : 556033753,
      "in_reply_to_id" : 555996983,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjAzMzc1Mw==",
      "original_commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "original_line" : 31,
      "original_position" : 30,
      "original_start_line" : 29,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 30,
      "pull_request_review_id" : 566629866,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : 29,
      "start_side" : "RIGHT",
      "updated_at" : "2021-01-12T19:44:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556033753",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556037737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556037737"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah yeah, so the transactions you send with `send_self_transfer` are in the mempool. However, you could still spend them even though they are only in the mempool. And you could also generate a block, and all the transactions in the mempool would then be mined/confirmed (although I don't think this is necessary).\r\n\r\nI'd recommend generating 11 blocks for miniwallet if you need to send 11 utxos. Otherwise the 11th will pick one of the previous `send_self_transfer` utxos to spend (ie one of the transactions in the mempool is the parent of that new \"child\" txn)",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-12T19:47:50Z",
      "diff_hunk" : "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        miniwallet._utxos.append(utxo)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556037737",
      "id" : 556037737,
      "in_reply_to_id" : 555996983,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjAzNzczNw==",
      "original_commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "original_line" : 31,
      "original_position" : 30,
      "original_start_line" : 29,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 30,
      "pull_request_review_id" : 566633857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : 29,
      "start_side" : "RIGHT",
      "updated_at" : "2021-01-12T19:47:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556037737",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556080918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556080918"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm just wondering whether `rpc_generateblock.py` requires a `flat_fee` or a calculated fee? Because, if i'm not mistaken you used `flat_fee` in previous commits ",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-12T20:46:26Z",
      "diff_hunk" : "@@ -55,8 +55,8 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n-        \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n+    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None,  submit_tx=True):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556080918",
      "id" : 556080918,
      "line" : 58,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjA4MDkxOA==",
      "original_commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "original_line" : 58,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/wallet.py",
      "position" : 6,
      "pull_request_review_id" : 566685675,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T20:49:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556080918",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/26356227?v=4",
         "events_url" : "https://api.github.com/users/stackman27/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stackman27/followers",
         "following_url" : "https://api.github.com/users/stackman27/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stackman27/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stackman27",
         "id" : 26356227,
         "login" : "stackman27",
         "node_id" : "MDQ6VXNlcjI2MzU2MjI3",
         "organizations_url" : "https://api.github.com/users/stackman27/orgs",
         "received_events_url" : "https://api.github.com/users/stackman27/received_events",
         "repos_url" : "https://api.github.com/users/stackman27/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stackman27/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stackman27"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556082342"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556082342"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "could this be something like `if not submit_tx: return tx` because that would help `mempool_limit.py` as well without much changes? ",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-12T20:47:38Z",
      "diff_hunk" : "@@ -73,7 +73,8 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n         self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n-        from_node.sendrawtransaction(tx_hex)\n+        if submit_tx:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556082342",
      "id" : 556082342,
      "line" : 76,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjA4MjM0Mg==",
      "original_commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "original_line" : 76,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/wallet.py",
      "position" : 16,
      "pull_request_review_id" : 566685675,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T20:49:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556082342",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/26356227?v=4",
         "events_url" : "https://api.github.com/users/stackman27/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stackman27/followers",
         "following_url" : "https://api.github.com/users/stackman27/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stackman27/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stackman27",
         "id" : 26356227,
         "login" : "stackman27",
         "node_id" : "MDQ6VXNlcjI2MzU2MjI3",
         "organizations_url" : "https://api.github.com/users/stackman27/orgs",
         "received_events_url" : "https://api.github.com/users/stackman27/received_events",
         "repos_url" : "https://api.github.com/users/stackman27/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stackman27/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stackman27"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556098137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556098137"
         }
      },
      "author_association" : "NONE",
      "body" : "The fee was irrelevant to `rpc_generateblock.py` so I used a flat fee to reduce the amount of code in the helper function `create_miniwallet_rawtx`. `create_miniwallet_rawtx` now no longer needed in place of `send_self_transfer`.",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-12T21:12:58Z",
      "diff_hunk" : "@@ -55,8 +55,8 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n-        \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n+    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None,  submit_tx=True):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556098137",
      "id" : 556098137,
      "in_reply_to_id" : 556080918,
      "line" : 58,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjA5ODEzNw==",
      "original_commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "original_line" : 58,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/wallet.py",
      "position" : 6,
      "pull_request_review_id" : 566705231,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T21:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556098137",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14829793?v=4",
         "events_url" : "https://api.github.com/users/nginocchio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nginocchio/followers",
         "following_url" : "https://api.github.com/users/nginocchio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nginocchio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nginocchio",
         "id" : 14829793,
         "login" : "nginocchio",
         "node_id" : "MDQ6VXNlcjE0ODI5Nzkz",
         "organizations_url" : "https://api.github.com/users/nginocchio/orgs",
         "received_events_url" : "https://api.github.com/users/nginocchio/received_events",
         "repos_url" : "https://api.github.com/users/nginocchio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nginocchio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nginocchio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nginocchio"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r557533619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557533619"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You can also rebuild the `tx` from the `hex` field that this returns as-is I think\r\n```python\r\nfrom test_framework.messages import CTransaction, ToHex\r\nhex = wallet.send_self_transfer(...)[\"hex\"]\r\ntx = FromHex(CTransaction(), hex)\r\n```",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-14T16:39:21Z",
      "diff_hunk" : "@@ -73,7 +73,8 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n         self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n-        from_node.sendrawtransaction(tx_hex)\n+        if submit_tx:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r557533619",
      "id" : 557533619,
      "in_reply_to_id" : 556082342,
      "line" : 76,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzUzMzYxOQ==",
      "original_commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "original_line" : 76,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/wallet.py",
      "position" : 16,
      "pull_request_review_id" : 568416670,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-14T16:39:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557533619",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r558586823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558586823"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see thanks :)",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-01-15T20:53:07Z",
      "diff_hunk" : "@@ -73,7 +73,8 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n         self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n-        from_node.sendrawtransaction(tx_hex)\n+        if submit_tx:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r558586823",
      "id" : 558586823,
      "in_reply_to_id" : 556082342,
      "line" : 76,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU4NjgyMw==",
      "original_commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "original_line" : 76,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/wallet.py",
      "position" : 16,
      "pull_request_review_id" : 569610567,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-15T20:53:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558586823",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/26356227?v=4",
         "events_url" : "https://api.github.com/users/stackman27/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stackman27/followers",
         "following_url" : "https://api.github.com/users/stackman27/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stackman27/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stackman27",
         "id" : 26356227,
         "login" : "stackman27",
         "node_id" : "MDQ6VXNlcjI2MzU2MjI3",
         "organizations_url" : "https://api.github.com/users/stackman27/orgs",
         "received_events_url" : "https://api.github.com/users/stackman27/received_events",
         "repos_url" : "https://api.github.com/users/stackman27/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stackman27/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stackman27"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r576982498"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576982498"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it is fine to just make `_address` public (remove the underscore)",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-02-16T16:58:18Z",
      "diff_hunk" : "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r576982498",
      "id" : 576982498,
      "in_reply_to_id" : 556000512,
      "line" : 24,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Njk4MjQ5OA==",
      "original_commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "original_line" : 24,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 22,
      "pull_request_review_id" : 591431920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-16T16:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576982498",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r576982673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576982673"
         }
      },
      "author_association" : "MEMBER",
      "body" : " Generating blocks takes a few seconds in valgrind, so I am thinking if this test may benefit from using `miniwallet.scan_blocks` (to be introduced in #21200)",
      "commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "created_at" : "2021-02-16T16:58:31Z",
      "diff_hunk" : "@@ -51,37 +54,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(10)\n+        node.generate(100)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r576982673",
      "id" : 576982673,
      "line" : 59,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Njk4MjY3Mw==",
      "original_commit_id" : "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "original_line" : 59,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : 42,
      "pull_request_review_id" : 591432134,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-16T16:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576982673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-29T14:22:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-809420087",
      "id" : 809420087,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20808",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwOTQyMDA4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-29T14:22:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809420087",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Are you still working on this?",
      "created_at" : "2021-07-20T07:32:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-883165139",
      "id" : 883165139,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20808",
      "node_id" : "IC_kwDOABII5840pAfT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/883165139/reactions"
      },
      "updated_at" : "2021-07-20T07:32:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/883165139",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Are you still working on this?\r\n\r\nI know someone who is working on this and hopefully they will write here soon. (Just wanted to leave a trace in the PR by this message, sorry for spam.)",
      "created_at" : "2021-11-18T19:28:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-973187509",
      "id" : 973187509,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20808",
      "node_id" : "IC_kwDOABII5846Aam1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/973187509/reactions"
      },
      "updated_at" : "2021-11-18T19:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/973187509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/244565?v=4",
         "events_url" : "https://api.github.com/users/jsarenik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jsarenik/followers",
         "following_url" : "https://api.github.com/users/jsarenik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jsarenik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jsarenik",
         "id" : 244565,
         "login" : "jsarenik",
         "node_id" : "MDQ6VXNlcjI0NDU2NQ==",
         "organizations_url" : "https://api.github.com/users/jsarenik/orgs",
         "received_events_url" : "https://api.github.com/users/jsarenik/received_events",
         "repos_url" : "https://api.github.com/users/jsarenik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jsarenik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jsarenik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jsarenik"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @jsarenik :)  I am working on this issue. I am mostly finished but will go through it a few more times (reviewing the comments here) before submitting a PR. Work in progress is [here](https://github.com/DariusParvin/bitcoin/tree/rpc-generateblock-to-miniwallet)",
      "created_at" : "2021-11-19T17:33:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-974269192",
      "id" : 974269192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20808",
      "node_id" : "IC_kwDOABII5846EisI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974269192/reactions"
      },
      "updated_at" : "2021-11-19T17:42:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974269192",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/41220998?v=4",
         "events_url" : "https://api.github.com/users/DariusParvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DariusParvin/followers",
         "following_url" : "https://api.github.com/users/DariusParvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DariusParvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DariusParvin",
         "id" : 41220998,
         "login" : "DariusParvin",
         "node_id" : "MDQ6VXNlcjQxMjIwOTk4",
         "organizations_url" : "https://api.github.com/users/DariusParvin/orgs",
         "received_events_url" : "https://api.github.com/users/DariusParvin/received_events",
         "repos_url" : "https://api.github.com/users/DariusParvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DariusParvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DariusParvin"
      }
   }
]
