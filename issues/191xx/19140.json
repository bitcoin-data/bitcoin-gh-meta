{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Avoid constructing requests that will be interpreted by libevent as PROXY requests to avoid triggering a `nullptr` dereference. Split out from #19074 as suggested by MarcoFalke.\r\n\r\nThe dereference (`req->evcon->http_server`) takes place in `evhttp_parse_request_line` and is a consequence of our hacky but necessary use of the internal function `evhttp_parse_firstline_` in the `http_request` fuzzing harness.\r\n\r\nThe suggested workaround is not aesthetically pleasing, but it successfully avoids the troublesome code path.\r\n\r\n`\" http:// HTTP/1.1\\n\"` was a crashing input prior to this workaround.\r\n\r\nBefore this PR:\r\n\r\n```\r\n$ echo \" http:// HTTP/1.1\" > input\r\n$ src/test/fuzz/http_request input\r\nsrc/test/fuzz/http_request: Running 1 inputs 1 time(s) each.\r\nRunning: input\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==27905==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000108 (pc 0x55a169b7e053 bp 0x7ffd452f1160 sp 0x7ffd452f10e0 T0)\r\n==27905==The signal is caused by a READ memory access.\r\n==27905==Hint: address points to the zero page.\r\n    #0 0x55a169b7e053 in evhttp_parse_request_line depends/work/build/x86_64-pc-linux-gnu/libevent/2.1.11-stable-36daee64dc1/http.c:1883:37\r\n    #1 0x55a169b7d9ae in evhttp_parse_firstline_ depends/work/build/x86_64-pc-linux-gnu/libevent/2.1.11-stable-36daee64dc1/http.c:2041:7\r\n    #2 0x55a1687f624e in test_one_input(std::vector<unsigned char, std::allocator<unsigned char> > const&) src/test/fuzz/http_request.cpp:51:9\r\nâ¦\r\n$ echo $?\r\n1\r\n```\r\n\r\nAfter this PR:\r\n\r\n```\r\n$ echo \" http:// HTTP/1.1\" > input\r\n$ src/test/fuzz/http_request input\r\nsrc/test/fuzz/http_request: Running 1 inputs 1 time(s) each.\r\nRunning: input\r\nExecuted input in 0 ms\r\n***\r\n*** NOTE: fuzzing was not performed, you have only\r\n***       executed the target code on a fixed set of inputs.\r\n***\r\n$ echo $?\r\n0\r\n```\r\n\r\nSee [`doc/fuzzing.md`](https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md) for information on how to fuzz Bitcoin Core. Don't forget to contribute any coverage increasing inputs you find to the [Bitcoin Core fuzzing corpus repo](https://github.com/bitcoin-core/qa-assets).\r\n\r\nHappy fuzzing :)",
   "closed_at" : "2020-07-10T20:55:21Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19140/comments",
   "created_at" : "2020-06-02T11:54:21Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19140/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/19140",
   "id" : 629142221,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19140/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NDI2NTM1Nzk0",
   "number" : 19140,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/19140.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19140",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/19140.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19140"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "tests: Avoid fuzzer-specific nullptr dereference in libevent when handling PROXY requests",
   "updated_at" : "2020-07-10T20:55:21Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19140",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
