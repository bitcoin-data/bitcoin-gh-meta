[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nWhat's the additional memory overhead per peer?",
      "created_at" : "2020-05-29T22:59:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-636228113",
      "id" : 636228113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjIyODExMw==",
      "updated_at" : "2020-05-29T22:59:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636228113",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "~~Around 54 kB.~~\r\n\r\nEDIT: Around 37 KiB now",
      "created_at" : "2020-05-29T23:23:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-636233792",
      "id" : 636233792,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjIzMzc5Mg==",
      "updated_at" : "2020-07-08T23:14:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636233792",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If I've got the maths right, in a 15 minute interval we'll announce up to 15,750 txs to an outbound peer (35 every 2 seconds), and 6,300 txs to inbound peers (35 every 5 seconds). If RBF and the like didn't exist, 10k txs would be about 4 blocks worth on average based on some recent blocks.\r\n\r\nRelaying tx's from the mempool in addition to mapRelay was introduced in #16851 and helps obtain missing unconfirmed parents when a child transaction enters the mempool (ie, poor man's package relay via the orphan pool). Without some alternative working form of package relay, I'm not sure it's ideal to drop that?\r\n\r\nPresuming we want to support mempool filtering at all, I think it's useful to be able to obtain old transactions -- if someone tries to send you a payment but uses a low feerate that isn't confirming, you want to be able to pick up that transaction from your peers' mempools so that you can CPFP it, even if you only manage to get online a few hours or a day after it was relayed across the network.\r\n\r\nOne way to preserve that behaviour might be to retain the `longlived_mempool_time` bypass, and do it first:\r\n\r\n```c++\r\n    auto txinfo = mempool.info(txid);\r\n    if (txinfo.tx && txinfo.m_time <= longlived_mempool_time) {\r\n        return txinfo.tx;\r\n    } else {\r\n        LOCK(cs_main);\r\n        if (state->m_recently_relayed_invs.contains(txid)) {\r\n            if (txinfo.tx) return txinfo.tx;\r\n\r\n            // In order to reduce NOTFOUND spam, we retain recently announced txs\r\n            // in mapRelay even if they've been removed from the mempool\r\n            auto mi = mapRelay.find(txid);\r\n            if (mi != mapRelay.end()) return mi->second;\r\n        }\r\n    }\r\n```\r\n\r\nThat way if you'll still relay \"old\" txs (and even do it without locking `cs_main`). This could let you only use `m_recently_relayed_invs` for a shorter period (a few minutes?), which in turn would let you reduce `RELAY_TX_CACHE_TIME` and `INVENTORY_MAX_RECENT_RELAY` correspondingly.\r\n\r\nIf `RELAY_TX_CACHE_TIME` was reduced from 15m to 5m, then we'd announce up to 5250 txs to outbound peers and 2100 txs to inbound peers, so could halve `INVENTORY_MAX_RECENT_RELAY` reducing it from 54kB to 27kB per peer.\r\n\r\nCould be an idea to set nElements to `INV_BC_MAX/INV_BC_INTERVAL * RELAY_TX_CACHE_TIME` (so 6300 for 15m, 2100 for 5m) for inbounds, and set it to 2.5x that for outbounds (so 15750 for 15m, 5250 for 5m) which would change the filter sizes to (85kB, 34kB) for 15m or (28kB, 11kB) for 5m.",
      "created_at" : "2020-05-30T00:26:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-636246238",
      "id" : 636246238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjI0NjIzOA==",
      "updated_at" : "2020-05-30T00:26:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636246238",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2020-05-30T02:55:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-636265665",
      "id" : 636265665,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjI2NTY2NQ==",
      "updated_at" : "2020-07-11T12:07:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636265665",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns Good points. We should be moving towards relying more on the mempool where it can provide that data. Your code looks like the right approach.\n\nSo I guess a question is parameters.\n\nWith Poisson distributed intervals, 70 s is enough for a 1 in a million chance to not have had any broadcast events. 104 s is enough for 1 in a billion. Unless there is another reason to extend, 2 minutes should be plenty (both for modelling the longlived_mempool variable, the bloom filter size, and for limiting the relay pool).\n\nIf we're talking about such short windows, perhaps memory usage is really no concern. The bloom filter could also be given a 1/billion fprate, and still be just a few kB.",
      "created_at" : "2020-06-01T08:56:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-636712875",
      "id" : 636712875,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjcxMjg3NQ==",
      "updated_at" : "2020-06-01T08:56:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636712875",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Perhaps the first question is: after how much time are we okay with attackers knowing everything that was in the mempool at the time?\r\n\r\nIf that number is small, perhaps it is sufficient to just allow responding to all tx requests, as long as the tx entered the mempool before the last inv sent out to that peer (a variable which could replace the last BIP35 response to that peer one). That would avoid the need for a Bloom filter entirely.\r\n\r\n",
      "created_at" : "2020-06-01T22:49:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-637165812",
      "id" : 637165812,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNzE2NTgxMg==",
      "updated_at" : "2020-06-01T22:49:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/637165812",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated to @ajtowns' approach suggested above, with a delay constant of 2 minutes.",
      "created_at" : "2020-06-02T03:07:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-637242837",
      "id" : 637242837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNzI0MjgzNw==",
      "updated_at" : "2020-06-02T03:07:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/637242837",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Pinging a few people who may be interested in reviewing: @naumenkogs @amiti @jonatack @MarcoFalke ",
      "created_at" : "2020-06-03T20:02:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-638431540",
      "id" : 638431540,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzODQzMTU0MA==",
      "updated_at" : "2020-06-03T20:03:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638431540",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-06-04T20:35:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-639102101",
      "id" : 639102101,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTEwMjEwMQ==",
      "updated_at" : "2020-06-04T20:35:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639102101",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm running with this code, plus this logging patch:\r\n\r\n```diff\r\n@@ -1540,6 +1540,10 @@ CTransactionRef static FindTxForGetData(CNode* peer, const uint256& txid, const\r\n         }\r\n     }\r\n \r\n+    if (txinfo.tx) {\r\n+        LogPrint(BCLog::NET, \"peer requested premature tx %s peer=%d\\n\", txid.ToString(), peer->GetId());\r\n+    }\r\n+\r\n     return {};\r\n }\r\n```\r\n\r\nAnd it's occasionally logging premature entries (a few over 24 hours), which I wasn't seeing with the code currently in master.",
      "created_at" : "2020-06-04T21:16:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-639120895",
      "id" : 639120895,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTEyMDg5NQ==",
      "updated_at" : "2020-06-04T21:21:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639120895",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> And it's occasionally logging premature entries\r\n\r\nI got some examples of that too; but the peer that was doing it looked very spy-ish.\r\n\r\nHowever, I think a legit client could trigger it, if the sequence was \"here's tx X; peer connects; here's tx Y which spends X:n; peers asks for Y; peer doesn't have X so asks for X\", all within the 2 minute timeframe.",
      "created_at" : "2020-06-05T04:37:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-639253623",
      "id" : 639253623,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTI1MzYyMw==",
      "updated_at" : "2020-06-05T04:37:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639253623",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns Almost all cases I'm seeing are within 90s of the connection being opened, which is evidence for the dependent transactions theory. I guess a potential solution is inserting the in-mempool parents of relayed transactions to the Bloom filter (as in a sense, they've been \"inved\").",
      "created_at" : "2020-06-05T22:47:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-639876495",
      "id" : 639876495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTg3NjQ5NQ==",
      "updated_at" : "2020-06-05T22:47:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639876495",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I added a commit to add unconfirmed parents of relayed transactions into the recently-relayed Bloom filter. I'm not seeing any premature requests anymore.",
      "created_at" : "2020-06-07T17:14:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-640250382",
      "id" : 640250382,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MDI1MDM4Mg==",
      "updated_at" : "2020-06-07T17:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/640250382",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "For reviewers who might be confused by the logging patch above, where CNode is a pointer rather than a reference (ISTM this was recently changed to a reference) and the code is located ~120 lines higher up than now, I think the logging patch is the following -- correct me if wrong.\r\n\r\n```diff\r\n@@ -1658,6 +1658,10 @@ CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const\r\n         }\r\n     }\r\n \r\n+    if (txinfo.tx) {\r\n+        LogPrint(BCLog::NET, \"peer requested premature tx %s peer=%d\\n\", txid.ToString(), peer.GetId());\r\n+    }\r\n+\r\n     return {};\r\n }\r\n```\r\n",
      "created_at" : "2020-06-08T10:18:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-640513111",
      "id" : 640513111,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MDUxMzExMQ==",
      "updated_at" : "2020-06-08T10:18:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/640513111",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Running a build at 19825f9143c3f1443aeb6b047ac4c02e6c0bb746 it took a half day to see any premature requests. So far 4 peers did so.\r\n\r\n<details><summary>total premature tx requests (from 4 peers)</summary><p>\r\n\r\n```\r\n$ grep \"peer requested premature tx\" ~/.bitcoin/debug.log\r\n2020-06-09T00:04:00Z peer requested premature tx 4f81c41c4190dcd345c16e12f7c7c96bcbfb692f88cd72b3b7102dd3e55ac925 peer=1693\r\n2020-06-09T00:04:06Z peer requested premature tx 07568d90c5f983b61e6950024119a46bf963e56f024c90dad9dfb1ac089f954a peer=1693\r\n2020-06-09T00:04:06Z peer requested premature tx ede66f7c1da85755463299c5b6feca8640644009ede673605a7988e8148e3def peer=1693\r\n2020-06-09T00:04:13Z peer requested premature tx 14ae18c0cbda81355d4d5e2649833a0a9be3a834ec1bed0dee2f1aa6f40f62f5 peer=1693\r\n2020-06-09T00:04:13Z peer requested premature tx aaf8ca1555d83be891aaa1905d59200d926a550c97d7b4f16d1ba6f3a1cd9dc6 peer=1693\r\n2020-06-09T00:04:22Z peer requested premature tx a0977e2d1610a0ca588008a8cf18ba11bf575c3d6215de1b1c7fbadc82f5797b peer=1693\r\n2020-06-09T00:04:22Z peer requested premature tx be76f26eaa96fe491efa2e1768523d1c897edd48c542e7685f5c0c7f95b2ddc8 peer=1693\r\n2020-06-09T00:04:36Z peer requested premature tx 8d174c13dee0721ac55c4d17efc542675763f0f8c46c41b80f39a40d68e0c4c2 peer=1693\r\n2020-06-09T00:04:40Z peer requested premature tx a0c8771d8a548cc683e5c1c3312085e5f94c00a19bb6902e78fc28aa418f1195 peer=1693\r\n2020-06-09T00:04:40Z peer requested premature tx cb3b71cdb0bd8a0c5af53c2c9297e1d12739c6ae2567ff0a3bd4fafa6e3b60cb peer=1693\r\n2020-06-09T05:27:32Z peer requested premature tx 286865209b8d4cf32a51383ec4f80483f9eea2427cbe117307128a7fff4822f5 peer=1716\r\n2020-06-09T05:32:33Z peer requested premature tx 6e6760227de82300b847e0b7a31fe2719d09e1f9c01dfb2620fd18ffddbd6abd peer=2357\r\n2020-06-09T05:32:33Z peer requested premature tx 14936cd53a93cdcb20a35f1834f39d88357f53b725e2b0aa5b8b26856a177a32 peer=2357\r\n2020-06-10T05:41:42Z peer requested premature tx 6bc1f51585d151382d9545696f1c3bdbaeb2204219181955ebabd8b5fb56b5ba peer=5334\r\n2020-06-10T05:41:42Z peer requested premature tx c1f1fbc3d2eee766914096cca0034f50fd3baacfc5718380fa189d7cded485c3 peer=5334\r\n2020-06-10T05:41:48Z peer requested premature tx 13c630c0bfa9714c2f6e235df60b562bb7adaf35d550ea7b0e63bed8905bf646 peer=5334\r\n2020-06-10T05:41:48Z peer requested premature tx 04b99d7ffcbe4f9ae325913ea569cfa770f04101d8ba0c6a74650e19dd60af6f peer=5334\r\n```\r\n</p></details>\r\n\r\n<details><summary>peer 1693 summary, 10 premature requests after 60s for another 33s, connection time 21m</summary><p>\r\n\r\n```\r\n2020-06-09T00:03:40Z Added connection to [2a02:2698:202a:724:ec61:b78c:a845:27ac]:60190 peer=1693\r\n...\r\n2020-06-09T00:03:59Z sending getheaders (997 bytes) peer=1693\r\n2020-06-09T00:04:00Z received: getheaders (997 bytes) peer=1693\r\n2020-06-09T00:04:00Z getheaders 404980 to end from peer=1693\r\n2020-06-09T00:04:00Z sending headers (162003 bytes) peer=1693\r\n2020-06-09T00:04:00Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:00Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:00Z received getdata for: witness-tx bf6699b319d55fada52ace699e6887f2bfb31ac0198d635f7b63835bee647c6b peer=1693\r\n2020-06-09T00:04:00Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:00Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:00Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:00Z received getdata for: witness-tx 6caba2af211c5a57071305b33dd3b10551515d908fc1ec9c34b8429ad8d9b295 peer=1693\r\n2020-06-09T00:04:00Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:00Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:00Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:00Z received getdata for: witness-tx e4ff4fafdd0b0a779ba2439b1a7c07b9793cdbc7eeb953dca1eb894387b96779 peer=1693\r\n2020-06-09T00:04:00Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:00Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:00Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:00Z received getdata for: witness-tx 81faf4f864c633ae6c4061dad42a2e41e38ae47d553a677d5ca29b177792e69a peer=1693\r\n2020-06-09T00:04:00Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:00Z received: getdata (109 bytes) peer=1693\r\n2020-06-09T00:04:00Z received getdata (3 invsz) peer=1693\r\n2020-06-09T00:04:00Z received getdata for: witness-tx 4f81c41c4190dcd345c16e12f7c7c96bcbfb692f88cd72b3b7102dd3e55ac925 peer=1693\r\n2020-06-09T00:04:00Z peer requested premature tx 4f81c41c4190dcd345c16e12f7c7c96bcbfb692f88cd72b3b7102dd3e55ac925 peer=1693\r\n2020-06-09T00:04:00Z sending notfound (109 bytes) peer=1693\r\n2020-06-09T00:04:00Z received: getdata (469 bytes) peer=1693\r\n2020-06-09T00:04:00Z received getdata (13 invsz) peer=1693\r\n2020-06-09T00:04:00Z received getdata for: witness-tx fada2029def49070ce6691ec8a76b4f3eaad3db3a6c64a05774285e4844c2697 peer=1693\r\n2020-06-09T00:04:00Z sending tx (216 bytes) peer=1693\r\n2020-06-09T00:04:00Z sending tx (380 bytes) peer=1693\r\n2020-06-09T00:04:00Z sending tx (224 bytes) peer=1693\r\n2020-06-09T00:04:00Z sending tx (216 bytes) peer=1693\r\n2020-06-09T00:04:00Z sending tx (223 bytes) peer=1693\r\n2020-06-09T00:04:00Z sending tx (224 bytes) peer=1693\r\n2020-06-09T00:04:00Z sending tx (224 bytes) peer=1693\r\n2020-06-09T00:04:00Z sending tx (418 bytes) peer=1693\r\n2020-06-09T00:04:00Z sending tx (591 bytes) peer=1693\r\n2020-06-09T00:04:00Z sending tx (224 bytes) peer=1693\r\n2020-06-09T00:04:00Z sending tx (224 bytes) peer=1693\r\n2020-06-09T00:04:00Z sending tx (372 bytes) peer=1693\r\n2020-06-09T00:04:00Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:05Z sending inv (1261 bytes) peer=1693\r\n2020-06-09T00:04:05Z received: headers (162003 bytes) peer=1693\r\n2020-06-09T00:04:06Z more getheaders (377636) to end to peer=1693 (startheight:925277)\r\n2020-06-09T00:04:06Z sending getheaders (997 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getheaders (997 bytes) peer=1693\r\n2020-06-09T00:04:06Z getheaders 406980 to end from peer=1693\r\n2020-06-09T00:04:06Z sending headers (162003 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx 85d8b9a91726ae2f423f308c4a4194ee7efda89e33cb82dd6ce08f759e5985ba peer=1693\r\n2020-06-09T00:04:06Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx 2ba1ab9571306655ad48106e3e852d06c15c994408aa07d010b7ea862c5030c7 peer=1693\r\n2020-06-09T00:04:06Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx fe6efaff7768662fb2cee5505fe52275563f3704135a5e42e33763daa83f6966 peer=1693\r\n2020-06-09T00:04:06Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx f92e7ec6c22d6cbcba31f680ff680ea43da4fc855d874d66e6c0680da782c649 peer=1693\r\n2020-06-09T00:04:06Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx 82a0c07b95d8b116aa2d5eaaa2400cba1a5bbb35dbff88a88d7e44d34020ca1d peer=1693\r\n2020-06-09T00:04:06Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx 01acefbfa7817221d14ab6fc13c3bd7c24b2a6be6f99f0b505cea8d35206d5b3 peer=1693\r\n2020-06-09T00:04:06Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx d735504d10763b0a1ddeaa3ed17cbaf7e9ada862ffa3198c2d1d1a7b473ee8c4 peer=1693\r\n2020-06-09T00:04:06Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (73 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (2 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx 84e09f394af3f4fb361690055fe1c1eb1bf440b2c1021151d96345054851935b peer=1693\r\n2020-06-09T00:04:06Z sending notfound (73 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (109 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (3 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx e8bd943608059ffedc45c5375755e82e43b55527ca637827b8d5a6ec93dbea98 peer=1693\r\n2020-06-09T00:04:06Z sending notfound (109 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx 0f53424acefeadcc64232e76013542c2c47e326a8ec127760cc6f37250030ba6 peer=1693\r\n2020-06-09T00:04:06Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx 71c80dc844e055bacf5c2f10ea79dfc4b4e150ae5ae13db3eef5c1b411cf76f6 peer=1693\r\n2020-06-09T00:04:06Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (73 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (2 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx 07568d90c5f983b61e6950024119a46bf963e56f024c90dad9dfb1ac089f954a peer=1693\r\n2020-06-09T00:04:06Z peer requested premature tx 07568d90c5f983b61e6950024119a46bf963e56f024c90dad9dfb1ac089f954a peer=1693\r\n2020-06-09T00:04:06Z sending notfound (73 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx ede66f7c1da85755463299c5b6feca8640644009ede673605a7988e8148e3def peer=1693\r\n2020-06-09T00:04:06Z peer requested premature tx ede66f7c1da85755463299c5b6feca8640644009ede673605a7988e8148e3def peer=1693\r\n2020-06-09T00:04:06Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:06Z received: getdata (865 bytes) peer=1693\r\n2020-06-09T00:04:06Z received getdata (24 invsz) peer=1693\r\n2020-06-09T00:04:06Z received getdata for: witness-tx 4c5a393151500ae141d4b72f5d72c9936755791f2a07fd5d7dc39193decb9199 peer=1693\r\n2020-06-09T00:04:06Z sending tx (193 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (371 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (223 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (1371 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (249 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (224 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (482 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (407 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (248 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (251 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (677 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (591 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (249 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (963 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (371 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (303 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (284 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (337 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (223 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (340 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (592 bytes) peer=1693\r\n2020-06-09T00:04:06Z sending tx (248 bytes) peer=1693\r\n2020-06-09T00:04:09Z sending inv (505 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: headers (162003 bytes) peer=1693\r\n2020-06-09T00:04:13Z more getheaders (379636) to end to peer=1693 (startheight:925277)\r\n2020-06-09T00:04:13Z sending getheaders (997 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getheaders (997 bytes) peer=1693\r\n2020-06-09T00:04:13Z getheaders 408980 to end from peer=1693\r\n2020-06-09T00:04:13Z sending headers (162003 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 4773bc49ff0e4504b3052e70607cfd86201978bd68edcaf9817c5dfa7060216d peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 15a526efb5e0b8bb7bf6548c29bf429420c90628baf846103a7b3f3a02175837 peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 7e9e75f71dd63d7b1c6e3619f14252cd7b5bbbe3bb6fc670a11ee04962b753ba peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (325 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (9 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 122efcaa234e6591bb9793f4db38edd1a01e80d83b52bbe611cbf360508a52df peer=1693\r\n2020-06-09T00:04:13Z sending notfound (325 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 722035133b12f5beb15b5f324347dc5309ea6ca836ea20400ea679e120e3eee1 peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 5b48df6f0e863dcf25e5fa6345897f46ae506aa34a2a22508c6fa077870d5231 peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (73 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (2 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx fe10da974703bec6ba3e158bcee22d6e08ca331e7d4c9128651644dd57e2501a peer=1693\r\n2020-06-09T00:04:13Z sending notfound (73 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 7de282bfbed746e62ded2fa44154b9a7fd1daeb9e256ff77d706950e3cd1d1fb peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 394b332e9fd5192d6f00a74bffd7063d162cb30c753120f1a8d4f7045b0b558c peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx dce5e870246177f297549417dba235121de3fd2f607434d567bee4c65662d77d peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (109 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (3 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 0ce920088fb2148b2234848dac2332be837ccb03f0afc1cacef3708f32686d55 peer=1693\r\n2020-06-09T00:04:13Z sending notfound (109 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx fa987f8921619074e4bab618c2e4e60fe4c7b57c643e9a943a4f5fb3e4025505 peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (109 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (3 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx a50d846b1307d37247a222a83ce65f0b2400d32d64062b946b474da90f4a7f5d peer=1693\r\n2020-06-09T00:04:13Z sending notfound (109 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx deb787eb7a04700122e24043cec616fb772cd3b213185d88f779ba86d1e87e02 peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 7b71bcd4bb58c557b916a557eeb5d78abf0bd709a0ca2247de66bd912ee859ca peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx c4e24ce967d80f8c39497c5ee163519bda122ce1e308061b1e8efdb94c81496f peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (73 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (2 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 21492041c8294b120cc484b8025e5225afb76f3dee54817be8b6b790d39fb396 peer=1693\r\n2020-06-09T00:04:13Z sending notfound (73 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 667f0b4843ef62abf86de0394c34c34a85ad1e5270883a070fb675aa81bee4c9 peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx f752fc811e87ef907c1cd7323192b07a79ffe1b2f5c5b89760617b89a7a98aad peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (73 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (2 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 14ae18c0cbda81355d4d5e2649833a0a9be3a834ec1bed0dee2f1aa6f40f62f5 peer=1693\r\n2020-06-09T00:04:13Z peer requested premature tx 14ae18c0cbda81355d4d5e2649833a0a9be3a834ec1bed0dee2f1aa6f40f62f5 peer=1693\r\n2020-06-09T00:04:13Z sending notfound (73 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (109 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (3 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 326baeac71792317a186ae1194619c41f57e4e996da14d2cd4a19d4679d942b9 peer=1693\r\n2020-06-09T00:04:13Z sending tx (247 bytes) peer=1693\r\n2020-06-09T00:04:13Z sending notfound (73 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx aaf8ca1555d83be891aaa1905d59200d926a550c97d7b4f16d1ba6f3a1cd9dc6 peer=1693\r\n2020-06-09T00:04:13Z peer requested premature tx aaf8ca1555d83be891aaa1905d59200d926a550c97d7b4f16d1ba6f3a1cd9dc6 peer=1693\r\n2020-06-09T00:04:13Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:13Z received: getdata (145 bytes) peer=1693\r\n2020-06-09T00:04:13Z received getdata (4 invsz) peer=1693\r\n2020-06-09T00:04:13Z received getdata for: witness-tx 7e291a4a37735ecc96efa1b85bc2f622ed51a0c352b726b558ee90c33717d223 peer=1693\r\n2020-06-09T00:04:13Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:13Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:13Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:13Z sending tx (226 bytes) peer=1693\r\n2020-06-09T00:04:16Z sending inv (1081 bytes) peer=1693\r\n2020-06-09T00:04:19Z sending inv (325 bytes) peer=1693\r\n2020-06-09T00:04:22Z received: headers (162003 bytes) peer=1693\r\n2020-06-09T00:04:22Z more getheaders (381636) to end to peer=1693 (startheight:925277)\r\n2020-06-09T00:04:22Z sending getheaders (997 bytes) peer=1693\r\n2020-06-09T00:04:22Z received: getdata (73 bytes) peer=1693\r\n2020-06-09T00:04:22Z received getdata (2 invsz) peer=1693\r\n2020-06-09T00:04:22Z received getdata for: witness-tx 2baacfce55625766fa866c2ce336a9a104e82621cb3b4c26802eabbe0e91a460 peer=1693\r\n2020-06-09T00:04:22Z sending notfound (73 bytes) peer=1693\r\n2020-06-09T00:04:22Z received: getheaders (997 bytes) peer=1693\r\n2020-06-09T00:04:22Z getheaders 410980 to end from peer=1693\r\n2020-06-09T00:04:22Z sending headers (162003 bytes) peer=1693\r\n2020-06-09T00:04:22Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:22Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:22Z received getdata for: witness-tx 7f14e8c83fc19f8ab371fbb0fb3baa59e23e83894cb997492217c5ca070b201b peer=1693\r\n2020-06-09T00:04:22Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:22Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:22Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:22Z received getdata for: witness-tx 959620cf222a45467c6df366104a3651849e4c75b0405eb3e2997288ca37b3c2 peer=1693\r\n2020-06-09T00:04:22Z sending tx (2050 bytes) peer=1693\r\n2020-06-09T00:04:22Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:22Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:22Z received getdata for: witness-tx afecdfc8c5dedcb21a71e1bffe90301d2fa99f85d1daf410441851bbfde683cd peer=1693\r\n2020-06-09T00:04:22Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:22Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:22Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:22Z received getdata for: witness-tx a0977e2d1610a0ca588008a8cf18ba11bf575c3d6215de1b1c7fbadc82f5797b peer=1693\r\n2020-06-09T00:04:22Z peer requested premature tx a0977e2d1610a0ca588008a8cf18ba11bf575c3d6215de1b1c7fbadc82f5797b peer=1693\r\n2020-06-09T00:04:22Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:22Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:22Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:22Z received getdata for: witness-tx be76f26eaa96fe491efa2e1768523d1c897edd48c542e7685f5c0c7f95b2ddc8 peer=1693\r\n2020-06-09T00:04:22Z peer requested premature tx be76f26eaa96fe491efa2e1768523d1c897edd48c542e7685f5c0c7f95b2ddc8 peer=1693\r\n2020-06-09T00:04:22Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:22Z received: getdata (1081 bytes) peer=1693\r\n2020-06-09T00:04:22Z received getdata (30 invsz) peer=1693\r\n2020-06-09T00:04:22Z received getdata for: witness-tx 304080b58887c15b505de96a05111832ad179fc51b5acf98c2895f7c9eb7529c peer=1693\r\n2020-06-09T00:04:22Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (373 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (250 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (226 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (226 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (380 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (486 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (223 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (247 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (224 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (189 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (223 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (677 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (841 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (249 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (249 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (666 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (519 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (418 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (189 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (926 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (519 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (226 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (224 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (250 bytes) peer=1693\r\n2020-06-09T00:04:22Z sending tx (191 bytes) peer=1693\r\n2020-06-09T00:04:31Z sending inv (1009 bytes) peer=1693\r\n2020-06-09T00:04:34Z sending inv (469 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: headers (162003 bytes) peer=1693\r\n2020-06-09T00:04:36Z more getheaders (383636) to end to peer=1693 (startheight:925277)\r\n2020-06-09T00:04:36Z sending getheaders (997 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getheaders (997 bytes) peer=1693\r\n2020-06-09T00:04:36Z getheaders 412980 to end from peer=1693\r\n2020-06-09T00:04:36Z sending headers (162003 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (145 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (4 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx 86069f096a54f5b200d5ee0e3e8c4daa2ef9c8cb3151905c85e01c989278e115 peer=1693\r\n2020-06-09T00:04:36Z sending notfound (145 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx 1e8b1f6ccb356c9dee5c404a66ca20902a31d24f7d0b61c3b521cd0cef87fa78 peer=1693\r\n2020-06-09T00:04:36Z sending tx (222 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx 6546a2f3028e2c82bdb436c1ac30aee2e1f6a2b0bec9f87e3fd15001cf222ccb peer=1693\r\n2020-06-09T00:04:36Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (73 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (2 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx 0ce9c87b69522449f3abd7cc725323acc9b0e8827dfed5e739ebfe0d31365222 peer=1693\r\n2020-06-09T00:04:36Z sending notfound (73 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx e26af8a109160f1037955e7699f7921be8cfd807675c5bffdde5920e4edacc86 peer=1693\r\n2020-06-09T00:04:36Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx 3c470a3b7b44a7ceaa6485d13cfb79d2c1c02ec17cdd6815f4e552c6211f2f65 peer=1693\r\n2020-06-09T00:04:36Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx a36fdd7edcb7341877656e500aea59de8ce50ab75ce701bfa0af2ecefd6662f0 peer=1693\r\n2020-06-09T00:04:36Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx aecc589cdd8e7f54eb7571e782f7e353d08a68387889d68cc387914f687f44ba peer=1693\r\n2020-06-09T00:04:36Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx b65213688038cbff73b9b5624dc99523107c453943e39b3c724ab9a7bfd0cda0 peer=1693\r\n2020-06-09T00:04:36Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx 436766584f83cad6227b5f77f9b2e99fafac43422ffc6c93ce229c39efc20e6a peer=1693\r\n2020-06-09T00:04:36Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (73 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (2 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx a75a959fd22ed6fb79779ee75d2789ce87216e49441813a2f61c91e68101272d peer=1693\r\n2020-06-09T00:04:36Z sending notfound (73 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx 1663a32972be5ddb985b773bb00ae3929fb617ff2ff374e563643212b754123b peer=1693\r\n2020-06-09T00:04:36Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (217 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (6 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx 3d375b6a85df8ae87cb73277d0d9f237bb5b27778d76acfedd156489300697fb peer=1693\r\n2020-06-09T00:04:36Z sending notfound (217 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx 1b17d5a64885e57804107880f169c35515bd7687d80bef02a2b375eceb1b5e48 peer=1693\r\n2020-06-09T00:04:36Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx 8d174c13dee0721ac55c4d17efc542675763f0f8c46c41b80f39a40d68e0c4c2 peer=1693\r\n2020-06-09T00:04:36Z peer requested premature tx 8d174c13dee0721ac55c4d17efc542675763f0f8c46c41b80f39a40d68e0c4c2 peer=1693\r\n2020-06-09T00:04:36Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (1009 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (28 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx fd3d714ec2158ed5233ac8e4c7c5308503ce2993d1c86d6ec1dfe99df7d4d6db peer=1693\r\n2020-06-09T00:04:36Z sending tx (255 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (520 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (191 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (193 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (280 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (189 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (223 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (373 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (224 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (224 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (442 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (224 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (247 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (405 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (222 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (371 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (224 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (371 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (226 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (372 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (226 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (486 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (280 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (190 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (372 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (224 bytes) peer=1693\r\n2020-06-09T00:04:36Z sending tx (225 bytes) peer=1693\r\n2020-06-09T00:04:36Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:36Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:36Z received getdata for: witness-tx c673265df7f1c1bdd7e32c2ece7b197ff220ec9be607e59ea3961652290ca6a1 peer=1693\r\n2020-06-09T00:04:36Z sending tx (288 bytes) peer=1693\r\n2020-06-09T00:04:40Z received: headers (162003 bytes) peer=1693\r\n2020-06-09T00:04:40Z more getheaders (385636) to end to peer=1693 (startheight:925277)\r\n2020-06-09T00:04:40Z sending getheaders (997 bytes) peer=1693\r\n2020-06-09T00:04:40Z received: getheaders (997 bytes) peer=1693\r\n2020-06-09T00:04:40Z getheaders 414980 to end from peer=1693\r\n2020-06-09T00:04:40Z sending headers (162003 bytes) peer=1693\r\n2020-06-09T00:04:40Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:40Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:40Z received getdata for: witness-tx 166006e6decbacf2100e20e44824e5180abd6b4e73ef01fed8a395c8ac173839 peer=1693\r\n2020-06-09T00:04:40Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:40Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:40Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:40Z received getdata for: witness-tx d76285c786c6575b49946d908d050a1c761f25c14683fb033dc4b52f79ac070f peer=1693\r\n2020-06-09T00:04:40Z sending tx (248 bytes) peer=1693\r\n2020-06-09T00:04:40Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:40Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:40Z received getdata for: witness-tx 649035e34d57c5db47cf0b5ac23f04d618a4b75c89030cac911c7e39f88e5310 peer=1693\r\n2020-06-09T00:04:40Z sending tx (370 bytes) peer=1693\r\n2020-06-09T00:04:40Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:40Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:40Z received getdata for: witness-tx a0c8771d8a548cc683e5c1c3312085e5f94c00a19bb6902e78fc28aa418f1195 peer=1693\r\n2020-06-09T00:04:40Z peer requested premature tx a0c8771d8a548cc683e5c1c3312085e5f94c00a19bb6902e78fc28aa418f1195 peer=1693\r\n2020-06-09T00:04:40Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:40Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:40Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:40Z received getdata for: witness-tx cb3b71cdb0bd8a0c5af53c2c9297e1d12739c6ae2567ff0a3bd4fafa6e3b60cb peer=1693\r\n2020-06-09T00:04:40Z peer requested premature tx cb3b71cdb0bd8a0c5af53c2c9297e1d12739c6ae2567ff0a3bd4fafa6e3b60cb peer=1693\r\n2020-06-09T00:04:40Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:04:40Z received: getdata (37 bytes) peer=1693\r\n2020-06-09T00:04:40Z received getdata (1 invsz) peer=1693\r\n2020-06-09T00:04:40Z received getdata for: witness-tx 8026740a463c636f84ce50405d71932b82212f844420370acfc3686cd655e7f3 peer=1693\r\n...\r\n2020-06-09T00:25:26Z received getdata for: witness-tx a16c59abe0b4532745cafa1f96942501b2af657a162089e72b2e2ff4df8966f3 peer=1693\r\n2020-06-09T00:25:26Z sending notfound (37 bytes) peer=1693\r\n2020-06-09T00:25:26Z socket recv error for peer=1693: Connection reset by peer (104)\r\n2020-06-09T00:25:26Z disconnecting peer=1693\r\n2020-06-09T00:25:26Z Cleared nodestate for peer=1693\r\n```\r\n</p></details>\r\n\r\n<details><summary>peer 2357 all activity, 2 premature requests after 25s, connection time 1m20s</summary><p>\r\n\r\n```\r\n$ grep \"peer=2357\" ~/.bitcoin/debug.log\r\n2020-06-09T05:32:08Z Added connection to [2a01:4f8:c010:2f04::1]:56616 peer=2357\r\n2020-06-09T05:32:08Z received: version (102 bytes) peer=2357\r\n2020-06-09T05:32:08Z sending version (103 bytes) peer=2357\r\n2020-06-09T05:32:08Z send version message: version 70015, blocks=633820, us=[::]:0, them=[2a01:4f8:c010:2f04::1]:56616, peer=2357\r\n2020-06-09T05:32:08Z sending verack (0 bytes) peer=2357\r\n2020-06-09T05:32:08Z receive version message: /Satoshi:0.18.1/: version 70015, blocks=633820, us=[2a01:e0a:53c:a200:bb54:3be5:c3d0:9ce5]:8333, peer=2357, peeraddr=[2a01:4f8:c010:2f04::1]:56616\r\n2020-06-09T05:32:08Z received: verack (0 bytes) peer=2357\r\n2020-06-09T05:32:08Z sending sendheaders (0 bytes) peer=2357\r\n2020-06-09T05:32:08Z sending sendcmpct (9 bytes) peer=2357\r\n2020-06-09T05:32:08Z sending sendcmpct (9 bytes) peer=2357\r\n2020-06-09T05:32:08Z sending ping (8 bytes) peer=2357\r\n2020-06-09T05:32:08Z sending addr (31 bytes) peer=2357\r\n2020-06-09T05:32:08Z initial getheaders (633819) to peer=2357 (startheight:633820)\r\n2020-06-09T05:32:08Z sending getheaders (1029 bytes) peer=2357\r\n2020-06-09T05:32:08Z sending feefilter (8 bytes) peer=2357\r\n2020-06-09T05:32:08Z received: sendheaders (0 bytes) peer=2357\r\n2020-06-09T05:32:08Z received: sendcmpct (9 bytes) peer=2357\r\n2020-06-09T05:32:08Z received: sendcmpct (9 bytes) peer=2357\r\n2020-06-09T05:32:09Z received: ping (8 bytes) peer=2357\r\n2020-06-09T05:32:09Z sending pong (8 bytes) peer=2357\r\n2020-06-09T05:32:09Z received: getheaders (1029 bytes) peer=2357\r\n2020-06-09T05:32:09Z getheaders 633820 to end from peer=2357\r\n2020-06-09T05:32:09Z sending headers (82 bytes) peer=2357\r\n2020-06-09T05:32:09Z received: feefilter (8 bytes) peer=2357\r\n2020-06-09T05:32:09Z received: feefilter of 0.00001000 BTC/kB from peer=2357\r\n2020-06-09T05:32:09Z received: pong (8 bytes) peer=2357\r\n2020-06-09T05:32:09Z received: headers (82 bytes) peer=2357\r\n2020-06-09T05:32:10Z received: inv (181 bytes) peer=2357\r\n2020-06-09T05:32:10Z got inv: tx d2827814445a925a8eabf4ae5d180638aa888649749193629c2afcb9c83d2ac7  new peer=2357\r\n2020-06-09T05:32:10Z got inv: tx ea97a471d4e64a0d2b8fcf72035bafb45ceaa2955765e7832a3d1d4f10d9f5d5  new peer=2357\r\n2020-06-09T05:32:10Z got inv: tx 49a97a7c4f5bd1abf7467bd183b17f6c0f54e18eb25e3280b994edc992ce855d  new peer=2357\r\n2020-06-09T05:32:10Z got inv: tx 7f344c55e5b006848c21b3cd52ce7d1259d1eac65ddd308b3f127fde428df0da  new peer=2357\r\n2020-06-09T05:32:10Z got inv: tx 92c12ae8ba38965e3a47f669b4bc3447b4df4cffb59f7404aeaf69b58baf5484  new peer=2357\r\n2020-06-09T05:32:11Z received: inv (217 bytes) peer=2357\r\n2020-06-09T05:32:11Z got inv: tx 3c851b8f9a5e45d52459475526fd5fed4a6825d87c41e7a39a0e462e83c24e97  new peer=2357\r\n2020-06-09T05:32:11Z got inv: tx c8c08b1e9aee6a54c0b93dde8c64cef3aa6405e703fcbe961b2b358514a1dada  new peer=2357\r\n2020-06-09T05:32:11Z got inv: tx ca7df4b16a908f1392bbc95721ebdaafad130b4e6804ce752d1b4ea29aaa2c9f  new peer=2357\r\n2020-06-09T05:32:11Z got inv: tx 6ba803139233b8ddcd421ecded8fb9b09006df42fbb562c9e68bfe848d466282  new peer=2357\r\n2020-06-09T05:32:11Z got inv: tx 493e5f0cf2df800c6f4749322cd25f1ee98bd3ffe93f8e077125526cfc076d30  new peer=2357\r\n2020-06-09T05:32:11Z got inv: tx 49d74ae1033de9ba7e0e026a77baf6bf09aec030cd6b1d795cb7353d14372a45  new peer=2357\r\n2020-06-09T05:32:12Z Requesting witness-tx d2827814445a925a8eabf4ae5d180638aa888649749193629c2afcb9c83d2ac7 peer=2357\r\n2020-06-09T05:32:12Z Requesting witness-tx ea97a471d4e64a0d2b8fcf72035bafb45ceaa2955765e7832a3d1d4f10d9f5d5 peer=2357\r\n2020-06-09T05:32:12Z Requesting witness-tx 49a97a7c4f5bd1abf7467bd183b17f6c0f54e18eb25e3280b994edc992ce855d peer=2357\r\n2020-06-09T05:32:12Z Requesting witness-tx 7f344c55e5b006848c21b3cd52ce7d1259d1eac65ddd308b3f127fde428df0da peer=2357\r\n2020-06-09T05:32:12Z Requesting witness-tx 92c12ae8ba38965e3a47f669b4bc3447b4df4cffb59f7404aeaf69b58baf5484 peer=2357\r\n2020-06-09T05:32:12Z sending getdata (181 bytes) peer=2357\r\n2020-06-09T05:32:12Z received: tx (189 bytes) peer=2357\r\n2020-06-09T05:32:12Z received: tx (418 bytes) peer=2357\r\n2020-06-09T05:32:12Z received: tx (226 bytes) peer=2357\r\n2020-06-09T05:32:12Z received: tx (284 bytes) peer=2357\r\n2020-06-09T05:32:12Z received: tx (284 bytes) peer=2357\r\n2020-06-09T05:32:13Z received: inv (361 bytes) peer=2357\r\n2020-06-09T05:32:13Z got inv: tx e38e79216ebcd699eece836bd3500996966448c1ff215e2498477f8d91a804d2  new peer=2357\r\n2020-06-09T05:32:13Z got inv: tx 45370c8ec3aeffb02cb64895107dff33b7a0f453e4eedaac12721ccad69dda3c  new peer=2357\r\n2020-06-09T05:32:13Z got inv: tx 9084f727cac9032f998081f41394c3bdd8d3523eba64d0597d116fdaca937f45  new peer=2357\r\n2020-06-09T05:32:13Z got inv: tx af7c95786e8a3cb120d2709fd63954e1beef4e608db93903c140d977cd8170c7  new peer=2357\r\n2020-06-09T05:32:13Z got inv: tx b9863f3f9351bb71b46343d3887ee59cd9ddbfaa85e16a5970a2de3448def3ad  new peer=2357\r\n2020-06-09T05:32:13Z got inv: tx 27ba0530e24bfbb251c6dcee7f54225a37b31ee8ef24c7bf75fce4891202c591  new peer=2357\r\n2020-06-09T05:32:13Z got inv: tx cdcc87d40ad1ac056a9a39daca4faf4b991913160658c03c42a8db609c8d4b78  new peer=2357\r\n2020-06-09T05:32:13Z got inv: tx fc83900e4fcda5d994786b26601799c2e5d4970d0ea9da607b88854d344e5a47  new peer=2357\r\n2020-06-09T05:32:13Z got inv: tx 4b39b46fc6d3e71add2fdc6f50964b5e4cb7d5ec4235486cbc0043cdfd76330a  new peer=2357\r\n2020-06-09T05:32:13Z got inv: tx c006077f5d26173bdd7104be89c345a83393f95d9fc2eb0fd39d38b412bdeb26  new peer=2357\r\n2020-06-09T05:32:13Z Requesting witness-tx 3c851b8f9a5e45d52459475526fd5fed4a6825d87c41e7a39a0e462e83c24e97 peer=2357\r\n2020-06-09T05:32:13Z Requesting witness-tx c8c08b1e9aee6a54c0b93dde8c64cef3aa6405e703fcbe961b2b358514a1dada peer=2357\r\n2020-06-09T05:32:13Z Requesting witness-tx ca7df4b16a908f1392bbc95721ebdaafad130b4e6804ce752d1b4ea29aaa2c9f peer=2357\r\n2020-06-09T05:32:13Z Requesting witness-tx 6ba803139233b8ddcd421ecded8fb9b09006df42fbb562c9e68bfe848d466282 peer=2357\r\n2020-06-09T05:32:13Z Requesting witness-tx 493e5f0cf2df800c6f4749322cd25f1ee98bd3ffe93f8e077125526cfc076d30 peer=2357\r\n2020-06-09T05:32:13Z Requesting witness-tx 49d74ae1033de9ba7e0e026a77baf6bf09aec030cd6b1d795cb7353d14372a45 peer=2357\r\n2020-06-09T05:32:13Z sending getdata (217 bytes) peer=2357\r\n2020-06-09T05:32:14Z received: tx (404 bytes) peer=2357\r\n2020-06-09T05:32:14Z received: tx (247 bytes) peer=2357\r\n2020-06-09T05:32:14Z received: tx (337 bytes) peer=2357\r\n2020-06-09T05:32:14Z received: tx (928 bytes) peer=2357\r\n2020-06-09T05:32:14Z received: tx (283 bytes) peer=2357\r\n2020-06-09T05:32:14Z received: tx (282 bytes) peer=2357\r\n2020-06-09T05:32:18Z sending inv (109 bytes) peer=2357\r\n2020-06-09T05:32:21Z sending inv (145 bytes) peer=2357\r\n2020-06-09T05:32:23Z received: inv (937 bytes) peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 5b6b98c26418068d90e170bb1f94f26146e4846741da0721d27ab05b360deff8  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 2b68a70de76f9b029b1329671cd078075b15f1cf38f3f7ed0d46a216dfda5bcf  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 1f4828ed502d1945975aa7a1da7d07e249dbbe76181897ccf25590dd2cfeb03b  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 7025dbf93fa6469ed02e4803b3ef16f996c38ec42493bea36f2e397f1e11745f  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 11005c4ff962398509970a0de4b9ec31dd50f6172862b6efd92e043cfd2ace54  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx adefcac5f1c66be16c2c5e49a966e827e3d7dcec50d42a709c1a8f5bc07deaba  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 2743e5df86146390f3a73dc3ad509f6ac2890a34160b0498695fd18a21d23659  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 05f73035e7f51f8238e5f6b1664d30181f90c62eeca01b31d9edb709f598822a  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 60322bfafc918e7306088c767f730bf145447f219fd617097b35a360528258b3  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 843f9810cc3577be552aa3925289e2b2a0980b5ab016a11fed64acebfabbed75  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 9ca4999938e9a7383d0d7fc451efe416d013c1d701c583c3b574cd0bec78ff87  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 11027c3a2c7371ef12c1ace9fe66b370f071f1778777991810b7754e9ac1983d  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 0f31397783ad5b050ee624010a616816a1f40ccca973ad57b5da3eac02ee35e4  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 97e49c36318476375f6320eabf2371ddd15448a0736e38e3f87c66c182be04a6  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 8955b6d19375569d443ec3689882ce9e08e89c72207cf996f48b58454e5e9bf2  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 9645a91580ca58ac764603138051c579e84b6a1fa4fd2fba6a8be245d0ec39df  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 0c6d16dcbfc5051ff8c22d60ff79f07def274e55958653ee85daa323b1ab25f4  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx b74b3f678d083d9645bad1b556bbaf3c1c21ceff0071222800e29a72701023e7  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx f95aa6cb9121a7b126bdef96bc934138772a882706e0a8204fd956e9d369fee4  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 3fbc8c88b6cb4b4040647754726b59fabc2b7fb19841c261a5b671521217c243  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx bc0eba6f2d545123600f57065d6fe6617e3b5f43ee0a84ce600e3dafa289ee0e  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 8c264ff6b0a29323fc6af4c1454c835bd2b00411c1dcc803c38f663106579cfd  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 0291cee178335548801887a452031573c7e784611105fbe2822c068928f75037  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 87720dec90d453c6fba51231b254509952b9ee45944f7e98c2a00188ab8f3eb5  new peer=2357\r\n2020-06-09T05:32:23Z got inv: tx fa13e72e0b81104e8ee3be12720db7691383d3b708aabd8bdcf1d35a05267064  have peer=2357\r\n2020-06-09T05:32:23Z got inv: tx 2d69f248da9b0abc1fe41f39c02a4759b9d839daf5a8e12f6c8ace7edf5e9009  new peer=2357\r\n2020-06-09T05:32:25Z received: addr (31 bytes) peer=2357\r\n2020-06-09T05:32:25Z Requesting witness-tx 2b68a70de76f9b029b1329671cd078075b15f1cf38f3f7ed0d46a216dfda5bcf peer=2357\r\n2020-06-09T05:32:25Z Requesting witness-tx 1f4828ed502d1945975aa7a1da7d07e249dbbe76181897ccf25590dd2cfeb03b peer=2357\r\n2020-06-09T05:32:25Z Requesting witness-tx 7025dbf93fa6469ed02e4803b3ef16f996c38ec42493bea36f2e397f1e11745f peer=2357\r\n2020-06-09T05:32:25Z Requesting witness-tx 11005c4ff962398509970a0de4b9ec31dd50f6172862b6efd92e043cfd2ace54 peer=2357\r\n2020-06-09T05:32:25Z Requesting witness-tx 2743e5df86146390f3a73dc3ad509f6ac2890a34160b0498695fd18a21d23659 peer=2357\r\n2020-06-09T05:32:25Z Requesting witness-tx 60322bfafc918e7306088c767f730bf145447f219fd617097b35a360528258b3 peer=2357\r\n2020-06-09T05:32:25Z Requesting witness-tx 0f31397783ad5b050ee624010a616816a1f40ccca973ad57b5da3eac02ee35e4 peer=2357\r\n2020-06-09T05:32:25Z Requesting witness-tx 97e49c36318476375f6320eabf2371ddd15448a0736e38e3f87c66c182be04a6 peer=2357\r\n2020-06-09T05:32:25Z Requesting witness-tx 8955b6d19375569d443ec3689882ce9e08e89c72207cf996f48b58454e5e9bf2 peer=2357\r\n2020-06-09T05:32:25Z Requesting witness-tx f95aa6cb9121a7b126bdef96bc934138772a882706e0a8204fd956e9d369fee4 peer=2357\r\n2020-06-09T05:32:25Z Requesting witness-tx 0291cee178335548801887a452031573c7e784611105fbe2822c068928f75037 peer=2357\r\n2020-06-09T05:32:25Z sending getdata (397 bytes) peer=2357\r\n2020-06-09T05:32:25Z received: tx (278 bytes) peer=2357\r\n2020-06-09T05:32:25Z received: tx (277 bytes) peer=2357\r\n2020-06-09T05:32:25Z received: tx (522 bytes) peer=2357\r\n2020-06-09T05:32:25Z received: tx (403 bytes) peer=2357\r\n2020-06-09T05:32:26Z received: tx (372 bytes) peer=2357\r\n2020-06-09T05:32:26Z received: tx (225 bytes) peer=2357\r\n2020-06-09T05:32:26Z received: tx (249 bytes) peer=2357\r\n2020-06-09T05:32:26Z received: tx (371 bytes) peer=2357\r\n2020-06-09T05:32:26Z received: tx (224 bytes) peer=2357\r\n2020-06-09T05:32:27Z received: tx (249 bytes) peer=2357\r\n2020-06-09T05:32:27Z received: tx (815 bytes) peer=2357\r\n2020-06-09T05:32:28Z sending inv (109 bytes) peer=2357\r\n2020-06-09T05:32:31Z received: headers (82 bytes) peer=2357\r\n2020-06-09T05:32:32Z sending inv (937 bytes) peer=2357\r\n2020-06-09T05:32:32Z received: inv (829 bytes) peer=2357\r\n2020-06-09T05:32:32Z got inv: tx a16675b7f8ba49b29a37f9d1935cb4bbab3e5f777bc9e2495af44913f81d8e1c  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx e8dc3cf9a0ceadc43806a48be15b242e49a8281dfed651f1c42e3c585dbf51fe  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx 99c1dc8b472f16a71b8028105557dad8eba1c166c53e6fc371c09d2bbc930fac  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx 677eb623f3b7ca2ae3f3aac78f26dd21f691b8e4873e6f910024b4d4a6427117  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx bd3479efc7fa183b48875ef2e6883d10e6c8ed147c93c862f2cc539b1c2b3753  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx 48828425ab2b4189c42751526d10e3a1e7501223997ac66f64625a144e261de4  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx a0a94cb1e0d6c2b75c5675c592beaa98f13ce40e06bf46baf1b8282ef75a51ee  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx 46e1ea8314918d230e5d0ed6ca3d4b49e584fb61129039846984eb561e548988  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx 619e8eca66f0eb6c7615fe7c8af32803127224955d9ec5e1cfcdf5da5d4bf2cd  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx 97fe113b8cef4978f3f326835c25d0526e7278b57f51642c73f76c31ac39c7d2  new peer=2357\r\n2020-06-09T05:32:32Z got inv: tx 06e2be84da484f837e15251d963dca740caa663c893d8ad4fe8328d266d94222  new peer=2357\r\n2020-06-09T05:32:32Z got inv: tx d4a62539a6098cdfed1ac7a653a17f3d50dff7c1d3e4c0db48bb2f239daa899d  new peer=2357\r\n2020-06-09T05:32:32Z got inv: tx 8d7be9e3148575b0060642f810df265e3a5b5305b17da773ed9c176ac9cc9cc1  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx 728ac7f747130c7fedd1e8d2c4a52a5b8acb36e4568710d502cab8cc9b56640d  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx aea97c435c2f3ea9be48a814e51c7180cdb6270fd53972955e76c5e26040a810  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx 59d21eabb09ddca202fa6c40c4733708c0934505d25c23272d31114392d76281  new peer=2357\r\n2020-06-09T05:32:32Z got inv: tx b27345b86c8e0ff6bd83f19a797d33309bcaa1242d163f0d066a701cdaf2d62b  new peer=2357\r\n2020-06-09T05:32:32Z got inv: tx ead8f242605469f8693c1ae11ef8ab35748c2068c32cecab482ffb70ef5894ac  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx 4d048fff8081ecad4364c1fdd00fb79e485ad25ba9e782a0c9afd73f7a6ac340  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx 356732b40058c54deddf6c3c923278ec03c8e9d3c47144233426d29cc13c6627  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx b538ab2b850b6ae1ca62d0efd864206996a578ac2c90991a797d5ee860ec3664  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx e92a54dd420f095f4365e57d672aca7b824af170e69b7775947a55a08dfa33f7  have peer=2357\r\n2020-06-09T05:32:32Z got inv: tx ff36cb41e1f8391420c4ca1610ca8cc0ed15dbea3eec5431984f6b9e85fd7fa8  have peer=2357\r\n2020-06-09T05:32:32Z received: getdata (109 bytes) peer=2357\r\n2020-06-09T05:32:32Z received getdata (3 invsz) peer=2357\r\n2020-06-09T05:32:32Z received getdata for: witness-tx 525de062409bf6ed261cfddf05621f23b28964b292fcce421e38ccffa12b4ac0 peer=2357\r\n2020-06-09T05:32:32Z sending tx (283 bytes) peer=2357\r\n2020-06-09T05:32:32Z sending tx (284 bytes) peer=2357\r\n2020-06-09T05:32:32Z sending tx (283 bytes) peer=2357\r\n2020-06-09T05:32:33Z received: getdata (37 bytes) peer=2357\r\n2020-06-09T05:32:33Z received getdata (1 invsz) peer=2357\r\n2020-06-09T05:32:33Z received getdata for: witness-tx 6e6760227de82300b847e0b7a31fe2719d09e1f9c01dfb2620fd18ffddbd6abd peer=2357\r\n2020-06-09T05:32:33Z peer requested premature tx 6e6760227de82300b847e0b7a31fe2719d09e1f9c01dfb2620fd18ffddbd6abd peer=2357\r\n2020-06-09T05:32:33Z sending notfound (37 bytes) peer=2357\r\n2020-06-09T05:32:33Z received: getdata (37 bytes) peer=2357\r\n2020-06-09T05:32:33Z received getdata (1 invsz) peer=2357\r\n2020-06-09T05:32:33Z received getdata for: witness-tx 14936cd53a93cdcb20a35f1834f39d88357f53b725e2b0aa5b8b26856a177a32 peer=2357\r\n2020-06-09T05:32:33Z peer requested premature tx 14936cd53a93cdcb20a35f1834f39d88357f53b725e2b0aa5b8b26856a177a32 peer=2357\r\n2020-06-09T05:32:33Z sending notfound (37 bytes) peer=2357\r\n2020-06-09T05:32:35Z received: inv (577 bytes) peer=2357\r\n2020-06-09T05:32:35Z got inv: tx 0f92c0b79d14a4d49a342502f3326e47b11c90bf1efd3393bf37709cc62f13f6  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx 9d1ba694423c29109c06a6e3e3fccbd0fa960262aa6db0ec79d91b51c57630cd  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx 7a1c1d6c4a870d48b41198da668363aa3dd5ee4285fde09b470496380c109bbc  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx 9531af7d17f2ac98c3839e6e4d6f0de13bc543a8a372ae8a675fa6c9b5cad063  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx b35ec90c70398eba5368db60798758cb8163609fc49c5c2b015e0dd2ad3fbdda  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx 5c5826044cded47cafa8f92958cd0317341b382467e8c8f91a10573f25884359  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx 3fea25d4b2dc263f3ee766a5f18b3efc1d98fe3adfe465d93c061e917a642be8  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx 0ff4ff831281ac909aa19d70bc87026a69a809e338b20c6e8168a82fe6f452b7  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx be017971c4e4cfe9ea0b260b0ceb688db040c9dd138d2b51d05957bbcbb1f7a7  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx 75dfa85e22a8842911d760e82125af08d22d39957dd87afc95f873d81d9f0b82  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx 96a8f804203ebbdc3e68936f55cdf18d819213ebce1542e6da0d5c6c0f88c84c  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx c4afe8b73fcf998f4fda490ceae29ee0101cb24e0fe99a4f6dc33c74f3acdc7a  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx b59aaf9d7205dddede1da65cfc60fe1a455af2534adbd4c780fabbb7dbea7b77  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx c5252450f9598b4caa51784626fbad83ecf4a3f001dc539584cfb908aafcf358  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx bc4fdc4b9d8f28a6eca58addfebc628180aa3f7cb841b88050cd22c8fef36a28  new peer=2357\r\n2020-06-09T05:32:35Z got inv: tx e7d21ec4c194e5223a7ebfd758641d1e805ad59c874331648c35b6821320001f  new peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx 0f92c0b79d14a4d49a342502f3326e47b11c90bf1efd3393bf37709cc62f13f6 peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx 9d1ba694423c29109c06a6e3e3fccbd0fa960262aa6db0ec79d91b51c57630cd peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx 7a1c1d6c4a870d48b41198da668363aa3dd5ee4285fde09b470496380c109bbc peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx 9531af7d17f2ac98c3839e6e4d6f0de13bc543a8a372ae8a675fa6c9b5cad063 peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx b35ec90c70398eba5368db60798758cb8163609fc49c5c2b015e0dd2ad3fbdda peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx 5c5826044cded47cafa8f92958cd0317341b382467e8c8f91a10573f25884359 peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx 3fea25d4b2dc263f3ee766a5f18b3efc1d98fe3adfe465d93c061e917a642be8 peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx 0ff4ff831281ac909aa19d70bc87026a69a809e338b20c6e8168a82fe6f452b7 peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx be017971c4e4cfe9ea0b260b0ceb688db040c9dd138d2b51d05957bbcbb1f7a7 peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx 75dfa85e22a8842911d760e82125af08d22d39957dd87afc95f873d81d9f0b82 peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx 96a8f804203ebbdc3e68936f55cdf18d819213ebce1542e6da0d5c6c0f88c84c peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx c4afe8b73fcf998f4fda490ceae29ee0101cb24e0fe99a4f6dc33c74f3acdc7a peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx b59aaf9d7205dddede1da65cfc60fe1a455af2534adbd4c780fabbb7dbea7b77 peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx c5252450f9598b4caa51784626fbad83ecf4a3f001dc539584cfb908aafcf358 peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx bc4fdc4b9d8f28a6eca58addfebc628180aa3f7cb841b88050cd22c8fef36a28 peer=2357\r\n2020-06-09T05:32:37Z Requesting witness-tx e7d21ec4c194e5223a7ebfd758641d1e805ad59c874331648c35b6821320001f peer=2357\r\n2020-06-09T05:32:37Z sending getdata (577 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (190 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (217 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (340 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (226 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (247 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (223 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (225 bytes) peer=2357\r\n2020-06-09T05:32:38Z sending inv (397 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (225 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (225 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (373 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (226 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (189 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (223 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (223 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (190 bytes) peer=2357\r\n2020-06-09T05:32:38Z received: tx (283 bytes) peer=2357\r\n2020-06-09T05:32:57Z sending inv (1009 bytes) peer=2357\r\n2020-06-09T05:33:02Z sending inv (325 bytes) peer=2357\r\n2020-06-09T05:33:05Z sending inv (325 bytes) peer=2357\r\n2020-06-09T05:33:06Z received: inv (1261 bytes) peer=2357\r\n2020-06-09T05:33:06Z got inv: tx d3389cda29d2d1985407af2330e00ca2e2b9c24a3145129df02c77d2ed0dbd30  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 077eac908696bbe2a927a55ed447ba1be63e50d86f2b0e7c1134aa6149492ae0  have peer=2357\r\n2020-06-09T05:33:06Z got inv: tx dee0743270840b076dbded8c9671c62b5cffc65df56ef805bdaf60b0c3d38f82  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 52f8ba1d07007ffd86f4e89bf21ee432d977ebcd631ba96f46464d5d03d23269  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx a4415c727a33ba831a9af16dac3c8f0cc03cb8c58a05130f7156dc60e629f29d  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx af7e4d8daeff25abb3fa4dc72c04531e1c17fd602e712770ebbb6cbe0e15943e  have peer=2357\r\n2020-06-09T05:33:06Z got inv: tx c1a8d5439e3d4dd42b9187bd698a93ad6158b8695deb3d4ec3ff6c15c292c3b0  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 49c6d3b33009a4ad7d79103e1bd499fbb50822f293d2919350d2cb9c1f9a4539  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 95622b5365fbfbb93592de34368037e38048407ef8177496db039510a52392ef  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 841078e5eda6b373a3be78ecd763cc6cf040613fc28fde1cd79418b1d02c41f5  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 4d494545119de9f95d1df6fa364e8fb16a373d3c46f993d268d2d79a700d34a7  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 906f6494b2c011b65e88449664dc3b87dc2bd2b1a50a107812f6dbc66bb7401c  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 7653c1003362a73ba3d43151f240c5c05006f06382569287f613b2a08261e9a9  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 917df9b063424af035ed91a130ebdf5ff621f0c083953fb215dc70d173ce66ee  have peer=2357\r\n2020-06-09T05:33:06Z got inv: tx ded777a3351f71ecd7c1d829f47f5a50bbd2411276acfa4d3c8dcca624fa22c8  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx f27fdc34612975c13a96a069221dd085bf0d0d10ec3601630926ee6744e1a1cb  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 8bbb2e8a4cfcedd8849b2ead2949a441800856d8e38eaca07015ba8e600e653a  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 72ecd183c3b4650b0b4b3ec0a53136848ff78d936e1753ef5d6b006c389b3222  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 2da6428f574badf4133aad4af4cb46d9c98cc72a0332de9997f9d74cf22854f8  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx a5397b88116d5f540a560b64ce6e5716860f38b1ebfd8acf0bea0a0b395d7d42  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 79346d98801b044f75b9fad5325f5fdfac63eebaee01f437c65846c6d0d14c10  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 813452949a7ea2a973c1a39e9db078f427eeb21725dc89bedfbfc8454c0a2b07  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx b182445e80ff35a9f5abf663e19d492d95497487511becf6319b9dc87b297067  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 9259e73afd0de4c0338171535078bc6027f9066b82998b01cbb2fc7befb36caf  have peer=2357\r\n2020-06-09T05:33:06Z got inv: tx d4a4bd230d3eded9aecee62e67be08f08cfc1defeb98daaba6645eac137924a6  have peer=2357\r\n2020-06-09T05:33:06Z got inv: tx c215287b3f784b1db85854f7704d3d33dcf469af94224a72c238eeff0e75bbf0  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 1c1c9162b2020681988b8f70250709a558267b8365a73b8dbac26570c2db01c9  have peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 5558a296c28903b5e222421b9bc79b7a3ee20336fad52d62904a2d4b50698428  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx aecd1ecd64bc95bb88ea54960630f88e88f633de7b2eb0abb2b468f99c4d8fec  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx b089025a650dbff8d01f039b4842d52592e2cb93cd46db82df4ed52b31c915b6  have peer=2357\r\n2020-06-09T05:33:06Z got inv: tx b18376d11e13bb5f7db9c074f419e2bce00af7ccb6e8e33eebcdcb751dca163f  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 4a2bd0ffb04ac32374b8d89b284429ea79ecbf700a0ec95950bb13edfb02eeda  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 5d9af61468a1e20006fe6a4d626c99a2eb31e6f91c0eb04598faf1ffd93c9f89  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 17419436c325b8e5c893280059e4b3ee208f8017c28f98953aaa4e8b7c174a45  new peer=2357\r\n2020-06-09T05:33:06Z got inv: tx 0caab3bb56975d7fa12eb9c9a82796ffb496ecdd267c6a4da210ece00f2dcda4  have peer=2357\r\n2020-06-09T05:33:07Z received: inv (757 bytes) peer=2357\r\n2020-06-09T05:33:07Z got inv: tx b79b29acb9622706ac20d1225b70623d0137efb91fb03c276c77737fb6c07442  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx bbdff41e9f89e86c022cb70b93b880c6d4a8680ca9f4381a1449868c49ab8545  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx d27900003702c0ab68c882a8ce307dd9d04c660a06009033c1b508a3a63962e5  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx cc030c933b8c1857a57037c55a47c75c37b3c109bfc61b22e10bc2d9923bd397  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx 127caf46b7033f9212808464bb9db28a214db16f806b42b5d0a6bc659237bbe6  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx b4cdd03d15e3789981cd227c0e31110e0932a5d9e4c5892fc8b8eb412c218240  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx 3ccad88b70b0952cebf21aaee82010a5035bc5ef7a44563ef4abb9c233918953  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx e69fc659a85909498adea8787043b63bd64b5ca27ce19e3838679de81edeb944  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx ae3b917e2c88a02231015d007ba01760ac5bfdcdc16ceff56dc50d6935d051fd  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx 633c7eb51872d73204c7aaa22f89db19177c1eebe986ad355064fea58dbd0989  have peer=2357\r\n2020-06-09T05:33:07Z got inv: tx 8a007e37ac46427ac70ce79a6203431ed25228fb65d766f429c1ba61a0634647  have peer=2357\r\n2020-06-09T05:33:07Z got inv: tx f5a4ef75b951426ffb8d59e05462f59d0beccb6d0bdb1472d3b236b25a705bd8  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx 4c52ae569d00d12cdc324b31771d8e1b161cb39e69866fbfaf7b47ce7cf57fe1  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx 41e2d5d742f42d3ec5b23696b6c4f7c9058bd8e175ab1186a420b28bd9548141  have peer=2357\r\n2020-06-09T05:33:07Z got inv: tx 1d24ad1946e7efdb77f99b1bebd7443c9f3e3f6c28a873cbade859f2aea0fff1  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx 775cdbcdd66909d0b1facaead514641af705d0aa778d21a14a05245c3d1f8aa2  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx 77ef014991c2bc7086ff0943a0f9febaa36af993bff1fc8cfca40cc8c290762c  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx 5eebeda9fc9536bbf346026d6f6a78e306b9ded21d3c92f5ce4e9ac90aaa7efd  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx a118e93780802a413a75665864370b3a81eb088c49e96a6dffc3e04f773cac4d  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx 2e6af179eaaf9ccdbf7abfa8c9ffcd4616d8117fc4a672a0faed81ac37ecfc9d  new peer=2357\r\n2020-06-09T05:33:07Z got inv: tx b1a52178b021938969b4b73cbff65355451f2d1e89dd7087812f65255057c8d2  new peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx d3389cda29d2d1985407af2330e00ca2e2b9c24a3145129df02c77d2ed0dbd30 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx dee0743270840b076dbded8c9671c62b5cffc65df56ef805bdaf60b0c3d38f82 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 52f8ba1d07007ffd86f4e89bf21ee432d977ebcd631ba96f46464d5d03d23269 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx a4415c727a33ba831a9af16dac3c8f0cc03cb8c58a05130f7156dc60e629f29d peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 49c6d3b33009a4ad7d79103e1bd499fbb50822f293d2919350d2cb9c1f9a4539 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 95622b5365fbfbb93592de34368037e38048407ef8177496db039510a52392ef peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 841078e5eda6b373a3be78ecd763cc6cf040613fc28fde1cd79418b1d02c41f5 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 4d494545119de9f95d1df6fa364e8fb16a373d3c46f993d268d2d79a700d34a7 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 906f6494b2c011b65e88449664dc3b87dc2bd2b1a50a107812f6dbc66bb7401c peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 7653c1003362a73ba3d43151f240c5c05006f06382569287f613b2a08261e9a9 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx ded777a3351f71ecd7c1d829f47f5a50bbd2411276acfa4d3c8dcca624fa22c8 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx f27fdc34612975c13a96a069221dd085bf0d0d10ec3601630926ee6744e1a1cb peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 8bbb2e8a4cfcedd8849b2ead2949a441800856d8e38eaca07015ba8e600e653a peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 72ecd183c3b4650b0b4b3ec0a53136848ff78d936e1753ef5d6b006c389b3222 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 2da6428f574badf4133aad4af4cb46d9c98cc72a0332de9997f9d74cf22854f8 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx a5397b88116d5f540a560b64ce6e5716860f38b1ebfd8acf0bea0a0b395d7d42 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 79346d98801b044f75b9fad5325f5fdfac63eebaee01f437c65846c6d0d14c10 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 813452949a7ea2a973c1a39e9db078f427eeb21725dc89bedfbfc8454c0a2b07 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx c215287b3f784b1db85854f7704d3d33dcf469af94224a72c238eeff0e75bbf0 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 5558a296c28903b5e222421b9bc79b7a3ee20336fad52d62904a2d4b50698428 peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 4a2bd0ffb04ac32374b8d89b284429ea79ecbf700a0ec95950bb13edfb02eeda peer=2357\r\n2020-06-09T05:33:08Z Requesting witness-tx 17419436c325b8e5c893280059e4b3ee208f8017c28f98953aaa4e8b7c174a45 peer=2357\r\n2020-06-09T05:33:08Z sending getdata (793 bytes) peer=2357\r\n2020-06-09T05:33:08Z received: tx (420 bytes) peer=2357\r\n2020-06-09T05:33:08Z received: tx (249 bytes) peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx b79b29acb9622706ac20d1225b70623d0137efb91fb03c276c77737fb6c07442 peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx bbdff41e9f89e86c022cb70b93b880c6d4a8680ca9f4381a1449868c49ab8545 peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx d27900003702c0ab68c882a8ce307dd9d04c660a06009033c1b508a3a63962e5 peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx cc030c933b8c1857a57037c55a47c75c37b3c109bfc61b22e10bc2d9923bd397 peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx 127caf46b7033f9212808464bb9db28a214db16f806b42b5d0a6bc659237bbe6 peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx b4cdd03d15e3789981cd227c0e31110e0932a5d9e4c5892fc8b8eb412c218240 peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx 3ccad88b70b0952cebf21aaee82010a5035bc5ef7a44563ef4abb9c233918953 peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx e69fc659a85909498adea8787043b63bd64b5ca27ce19e3838679de81edeb944 peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx ae3b917e2c88a02231015d007ba01760ac5bfdcdc16ceff56dc50d6935d051fd peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx f5a4ef75b951426ffb8d59e05462f59d0beccb6d0bdb1472d3b236b25a705bd8 peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx 4c52ae569d00d12cdc324b31771d8e1b161cb39e69866fbfaf7b47ce7cf57fe1 peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx 1d24ad1946e7efdb77f99b1bebd7443c9f3e3f6c28a873cbade859f2aea0fff1 peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx 775cdbcdd66909d0b1facaead514641af705d0aa778d21a14a05245c3d1f8aa2 peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx 77ef014991c2bc7086ff0943a0f9febaa36af993bff1fc8cfca40cc8c290762c peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx 5eebeda9fc9536bbf346026d6f6a78e306b9ded21d3c92f5ce4e9ac90aaa7efd peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx a118e93780802a413a75665864370b3a81eb088c49e96a6dffc3e04f773cac4d peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx 2e6af179eaaf9ccdbf7abfa8c9ffcd4616d8117fc4a672a0faed81ac37ecfc9d peer=2357\r\n2020-06-09T05:33:09Z Requesting witness-tx b1a52178b021938969b4b73cbff65355451f2d1e89dd7087812f65255057c8d2 peer=2357\r\n2020-06-09T05:33:09Z sending getdata (649 bytes) peer=2357\r\n2020-06-09T05:33:11Z received: tx (257 bytes) peer=2357\r\n2020-06-09T05:33:11Z received: tx (223 bytes) peer=2357\r\n2020-06-09T05:33:16Z received: tx (2479 bytes) peer=2357\r\n2020-06-09T05:33:16Z received: tx (1243 bytes) peer=2357\r\n2020-06-09T05:33:16Z received: tx (774 bytes) peer=2357\r\n2020-06-09T05:33:16Z received: tx (225 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (1847 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (225 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (420 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (247 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (247 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (247 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (249 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (250 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (667 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (669 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (412 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (247 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (292 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (234 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: inv (289 bytes) peer=2357\r\n2020-06-09T05:33:17Z got inv: tx 2b07dbcfcea7af9d94d49f780faea4765021f6a0e3c93da039a95a40a047b354  have peer=2357\r\n2020-06-09T05:33:17Z got inv: tx 848b9818777b9369632ccb8efcf3368318528c0c09ad90f84980c16cf887b97a  new peer=2357\r\n2020-06-09T05:33:17Z got inv: tx 17a58b69d1f8742099f3d5ff18e289b89f3a456a088652573a532ce1a05c340b  new peer=2357\r\n2020-06-09T05:33:17Z got inv: tx 9024f1dbd8bc17520963539923cf89bdd153d14bd6b1152bb909a344d21f785b  have peer=2357\r\n2020-06-09T05:33:17Z got inv: tx 1fd00d57755b635901b82b3fcd82c5f0de4a801e387c104bfcfe9e18ad896f0c  have peer=2357\r\n2020-06-09T05:33:17Z got inv: tx 929f0d7b2a3aa93446c5412e7f148beb1552f00e31ba20c4a206a92e6b8aebc7  new peer=2357\r\n2020-06-09T05:33:17Z got inv: tx 6724b7836173e857ddad405c3c458c953bc93410fe62caa291c8fe49796f269b  new peer=2357\r\n2020-06-09T05:33:17Z got inv: tx e8d8e660a6db0fe1d4116b8e46265d9ce7d939c62cd6a0140d1f30521aee47c5  new peer=2357\r\n2020-06-09T05:33:17Z received: tx (241 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (223 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (592 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (190 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (371 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (226 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (217 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (249 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (247 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (249 bytes) peer=2357\r\n2020-06-09T05:33:17Z received: tx (247 bytes) peer=2357\r\n2020-06-09T05:33:18Z socket closed for peer=2357\r\n2020-06-09T05:33:18Z disconnecting peer=2357\r\n2020-06-09T05:33:18Z Cleared nodestate for peer=2357\r\n```\r\n</p></details>\r\n\r\n<details><summary>peer 5334, 4 premature requests after 13s for another 6s, connection time 48m</summary><p>\r\n\r\n```\r\n$ grep \"peer=5334\" ~/.bitcoin/debug.log\r\n2020-06-10T05:41:29Z Added connection to [2601:601:9980:4266:f5ba:211c:c4c3:b2db]:65090 peer=5334\r\n2020-06-10T05:41:29Z received: version (102 bytes) peer=5334\r\n2020-06-10T05:41:29Z sending version (103 bytes) peer=5334\r\n2020-06-10T05:41:29Z send version message: version 70015, blocks=633997, us=[::]:0, them=[2601:601:9980:4266:f5ba:211c:c4c3:b2db]:65090, peer=5334\r\n2020-06-10T05:41:29Z sending verack (0 bytes) peer=5334\r\n2020-06-10T05:41:29Z receive version message: /Satoshi:0.19.1/: version 70015, blocks=633997, us=[2a01:e0a:53c:a200:bb54:3be5:c3d0:9ce5]:8333, peer=5334, peeraddr=[2601:601:9980:4266:f5ba:211c:c4c3:b2db]:65090\r\n2020-06-10T05:41:29Z received: verack (0 bytes) peer=5334\r\n2020-06-10T05:41:29Z sending sendheaders (0 bytes) peer=5334\r\n2020-06-10T05:41:29Z sending sendcmpct (9 bytes) peer=5334\r\n2020-06-10T05:41:29Z sending sendcmpct (9 bytes) peer=5334\r\n2020-06-10T05:41:29Z sending ping (8 bytes) peer=5334\r\n2020-06-10T05:41:29Z sending addr (31 bytes) peer=5334\r\n2020-06-10T05:41:29Z initial getheaders (633996) to peer=5334 (startheight:633997)\r\n2020-06-10T05:41:29Z sending getheaders (1029 bytes) peer=5334\r\n2020-06-10T05:41:29Z sending feefilter (8 bytes) peer=5334\r\n2020-06-10T05:41:29Z received: getaddr (0 bytes) peer=5334\r\n2020-06-10T05:41:29Z received: sendheaders (0 bytes) peer=5334\r\n2020-06-10T05:41:29Z received: sendcmpct (9 bytes) peer=5334\r\n2020-06-10T05:41:29Z received: sendcmpct (9 bytes) peer=5334\r\n2020-06-10T05:41:29Z received: ping (8 bytes) peer=5334\r\n2020-06-10T05:41:29Z sending pong (8 bytes) peer=5334\r\n2020-06-10T05:41:29Z received: addr (61 bytes) peer=5334\r\n2020-06-10T05:41:30Z received: getheaders (1029 bytes) peer=5334\r\n2020-06-10T05:41:30Z getheaders 633997 to end from peer=5334\r\n2020-06-10T05:41:30Z sending headers (82 bytes) peer=5334\r\n2020-06-10T05:41:30Z received: feefilter (8 bytes) peer=5334\r\n2020-06-10T05:41:30Z received: feefilter of 0.00001000 BTC/kB from peer=5334\r\n2020-06-10T05:41:30Z received: pong (8 bytes) peer=5334\r\n2020-06-10T05:41:30Z received: headers (82 bytes) peer=5334\r\n2020-06-10T05:41:32Z received: inv (1261 bytes) peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 51904e691e21df4326b49089a893188dce677ad90d971a1426fc6d9fd74e15dd  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 3f3c19b4877ed6ae60b0abbaf0896e80444d46bf7e405b66062f04effec4269d  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 296ec25c08188c63533c9ece8f41daeed578f5bf679f54286485e4917828cb4e  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx d79405185cbf510f9d28e2013060fc01437a70bb2b3de0102a6614f3a5dfdfdf  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx e19022ac5720fc63b3a10220256d12d228a4a7c765c506115cdb74fbef840414  new peer=5334\r\n2020-06-10T05:41:32Z got inv: tx e94ddab30ffa67698031a3a08068e94c02ba7112fb37b3f35786e79be9853dd1  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx b30f16f8e49baaa23f53c5b9b46d77b121304807d065c65136480063a06d89f8  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 65e8e274dc1d56270667c436c068c310a3b5fbd03ae5355473dd0a4291249192  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx aea1c816bec9adbf67f17504027e5b39daed81508f85c4fa79f30081340a900c  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx d9a9b90b79b22d40fd746c4bf7ca8ad5100e8ce81107c7850171067429ec7616  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 7f1c0c2f377691f47632807d3d95e677b511f1413c905621cd52dfa7b3f493c1  new peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 5a91c512a66883825b5d76a709de86377520654007df816b140bc4d843c08bb9  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 9eddc13f42c64f265f34cd653cd5acc0706ff92ca38ee6a5497b0571036a1812  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx aaf37f50ac6463a04080c0872338047a9b48bc8991fa32c2f5f2e14e0051843f  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 5d16913ad13cc0b91bf3f27105372eceee76cf9d7c8aae0fae26c3b7e80f03e6  new peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 6f017416b71d7bbd49ac9a3e7e3f3fd2bd0cd14861a5343aba27badfb4502688  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 212db23305f7b3c7a7fae5cc9545888a291f92ae33c5c147ebc54a7bf5fb4ece  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 7c4adbce47fb39c536a86b74c0dbea151156be722e5f9ae26a67ee777cf5725f  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 13d4082850ee5688459cbc385b6f7c2f50997dbe55e11faa82561e3c1fedaa94  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 099fbb495d7707e5631159b64c31785e2ea4d8061dbd731d7b25fcd6f757976f  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 0253a025e16689d1a85dc8423f8ef148cbd2652b286742f97dac7240525cf234  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 876f86a67c52729ab98815496a29e760fa95bb26c7fbebdde12d96b7cda582e8  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 13e9b437071114c39142464437e703efdfd38141a2fba420eb0503132f9a77dd  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx c9e96549f8299fac330648c3f766d9ac459e443f3fd100cd4d56a7b6725d2f47  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 42abf7a34485e59fb6709ae704af8cc133878b6314117477c9a9f4e696200229  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 582099e8cc2229ef86a0f9452d0561fdcafba383b710f6f34fe7eab431d73e22  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 7d525c2e847d4816e5a215429c65ad2277486196458180611d09d1ddcf52e6cf  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 38b77f9173bbe2727e463835c321be83a8036e6966b706e54decc661be6b55f2  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx d50e58a417101fcf20b11b16b985cbf56d6561fedf3225922feeaeecfff52fc2  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx f139938316c39aae16ee181b823aec96ca4832b9b3b34ff3341da19b8aac9661  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx f6988ec471d3b32f82225135ff6aff7daeecbc84642f07ca7833b88e0c2f15f8  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 985cb89d4e022568e19f12f867965827590f7121bcf0eba228739d2910b8bfbc  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 3c37233cabc6bb4ae74ada028de9931fcbb08321487da1336313e64e9003006c  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 235749960ea57cfbb6bc298558983b16de40f5d68d595b8d49fdb06b177a1d3b  have peer=5334\r\n2020-06-10T05:41:32Z got inv: tx 480ec68d1716363865875c65ecfda1d6fc6bb77e60e47860683e518e7db95001  have peer=5334\r\n2020-06-10T05:41:35Z received: inv (1261 bytes) peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 81e33a4b758b1ed76f61cd3922b6548656c4e88fdb632ec3b69b4f631eeb40d2  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx d239e785b548b5790f32b23c808c4091cd60f0955a70ec8dc349f99247a2f560  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 838fed4237b942ec1aa2a8a08dc959e17e590110376e5d8347b0716a8a5e01e4  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx e5d0f5516dc4d976db253676049d929c0017aa1efa536aad46e744f01b33e630  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 38a1a2de259ecb7df693fcb26bfebed8009ed7edc29b95aa86037d2f02d46a4a  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 423e64d975e272174b1f73b8916d46de36df49d46f987e3e79dc6105be2a1731  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx a5effbcc5914f6ccae2c7afac4a80401a1c5b6b590014cc0c6e6baf4151edf26  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 85942c1ee159ba82fc30790757b2835e2ab392448fa945f921fb8d5e0a6daaf1  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx d0ac4ab264f8ad40def6ff0e387269efa63ec5006c21f155e9dd9695031ecaee  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 08d5738468838e507c1c7f271729af0673b2baf2a8e132bd9510f7070bc412de  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 0bb366bde6b8a475b3694d30b257128baaf18e38329f4205eddd0173015443c4  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx ac53c988dc70893d6657a6541b2ccc9ca0360b2a5edeaec6f739c8e4e3fa6196  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 45ad5973ccb50887558f13680312dc6af4768a2b9e2bbcdb9a13f9451179897e  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx fdb71ef9c801872f2377377d184910358ba922ab1007258fdcaa4e4aa42474db  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 5baadc944d007724326f1983a2743aa8132c81371d35c2ea16dea4f44855a83b  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx bb88c71c80f4b80bc8fa67d07e136696f98053173f1847900566c15f86bda8f7  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 6743c14c0f9e546692b06592fe2e6072441f31e48f3f23c310430615dd9988eb  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 4528eca49d19cc3018e016afcdadd690c40c04f719ad0f1846dd16a3abd4c9c5  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx b6b11e5c974c4c3d3a30d63bf5dbedfe722b94a3a3367be2db0a44622966e82e  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx f5cc1836839bb171bb7dbd5f64fb2e536f468ad4ebb73f4149c353ce1f65a62a  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 423217a58e5216133206ecac409c6865fb58034706fa2f1734701218177a7d95  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx cdc184a779fc4f6149aad972ba4c708a8e8ff349e3e2bff1a3449c92fd6ce009  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx db67ab6767ebf8029d7a5744819bdefcf8cd5313e9883645482c9e38e17c74ea  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 5a0ff6040ad4a6c87a0d3f4b07352548c595ea4071fcab6b54192678cd2ed8dd  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 58dd71b0ada9d30a39ae7d57e25ae770dbefff54875e7468d8509e6d52efadbf  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx a8f1ff31dbaeb1b9b0ccc3883c3bf306493056a82dc81101790028be7b0a4e58  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx ec8769d3895ce694d77071e3d57a96b3c4c5bde18c1e3802481169cf87e33d51  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 20bbcd6a1448f0a401a24c0aa9c290f46dd0f9d160511b7fcb9f5e0265c4a89e  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 6049b8854ba5857250945ef7955c2956bf89147164cd075531f6d2eff3c74d64  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 770ae0039cae51ab85f40d29ad0b2e02efc6b42429fac47793239448902752eb  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 15484e2a4929f95cd9db7a845781047a2374eb288b147258c75e144539d71874  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx ddee4b04c33fbabe5ae25b9023e3695f471c47c9b1f9537aa205de292c9f836f  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx b3b8c407b15c84a70464bdbd06151c7ed35db861c79750213b40e7b4ffd98cde  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx 2138ce7740ff130c9ec7c4c21438083d0c04ea826b086fbadb254dd7babf91e9  have peer=5334\r\n2020-06-10T05:41:35Z got inv: tx fea5fbc1aca724abfaad6c11441d5a370519ec5f2362d9d942a1620e6f658fcb  have peer=5334\r\n2020-06-10T05:41:36Z received: inv (181 bytes) peer=5334\r\n2020-06-10T05:41:36Z got inv: tx 10fee3fc3089f0bbbbd72701af038d87ccd7a55fbe63274b27663a02966fad20  have peer=5334\r\n2020-06-10T05:41:36Z got inv: tx 775676b9ad90d1115f2591b56f2e49febffcdcbc3d2ea3e8b6bda97be0c34b4f  have peer=5334\r\n2020-06-10T05:41:36Z got inv: tx 0506c72bbd95899c9dac23b7a4cc7203c22d984f5b18b635d81a0f6fca0b4149  have peer=5334\r\n2020-06-10T05:41:36Z got inv: tx eb75f492bb48bf2a107b04e9c3b6c63267769ba666175731a0a3ce7af084d4bb  have peer=5334\r\n2020-06-10T05:41:36Z got inv: tx c675f009562cb88de6e99e60d1e4335ac8752e9003695ff9ab2de0c9a8147cbf  have peer=5334\r\n2020-06-10T05:41:37Z received: inv (433 bytes) peer=5334\r\n2020-06-10T05:41:37Z got inv: tx 6faf23ba26c473914959f419698b5ae25c0dff9c672882608a38462b3d7c187e  have peer=5334\r\n2020-06-10T05:41:37Z got inv: tx a661b8c39e4a03f4462d39a91d64796c293efa4e09bb19e245a77e13e1293dc1  have peer=5334\r\n2020-06-10T05:41:37Z got inv: tx 0b82980f55d9b051a4a7114c241656b07861ed2e16d4c8896e6e520e69ba37b9  have peer=5334\r\n2020-06-10T05:41:37Z got inv: tx 5f925ea0fbeed1daa4b2a32b49bb3ed292a28f64a8a48a3cc06b93a53c8f3cb2  have peer=5334\r\n2020-06-10T05:41:37Z got inv: tx f698a7ff45153a7af3aecb67686183fd6ec531d6ad07d092ac89ad733d8feb60  have peer=5334\r\n2020-06-10T05:41:37Z got inv: tx 70f6f3bafac80553f210cbc07853c340bba4354e1213b99db6d1d2d87ac7e83c  have peer=5334\r\n2020-06-10T05:41:37Z got inv: tx d512fcc1d387a333037f98e9a26e460573a37abe384d4875e15650779be6fd07  have peer=5334\r\n2020-06-10T05:41:37Z got inv: tx b12a348b721c5c64620e008d61760c8f4dc70ff31813f473ae82f3a87bf3c46c  have peer=5334\r\n2020-06-10T05:41:37Z got inv: tx b1a4378c8279a7a7906f2d381c42381c8494b75cb785a6be8f7bfd6000ad03ba  have peer=5334\r\n2020-06-10T05:41:37Z got inv: tx 548053a5f55b9322d4f465b5144581c7c29dcd1319c5e81e7e51d7cce7548574  have peer=5334\r\n2020-06-10T05:41:37Z got inv: tx 7204be7cf34050047532f2b4f1bdea6f1dbdd7986ed079bf2b41fccf05e846b7  have peer=5334\r\n2020-06-10T05:41:37Z got inv: tx c6f0361765b577aaed69af31609443493ac7cc51a4626e3bbc3195c46ee653b5  have peer=5334\r\n2020-06-10T05:41:39Z sending addr (30003 bytes) peer=5334\r\n2020-06-10T05:41:39Z received: inv (505 bytes) peer=5334\r\n2020-06-10T05:41:39Z got inv: tx f0c35bf6fee6ba46f25c670c6dd7a5e9410f0d529c6f8f680fbf2b784bde1958  have peer=5334\r\n2020-06-10T05:41:39Z got inv: tx 78257a8ef431ad19824b0ddc13b3dd3810df77b7dac1660d4993a87e480bf3e8  have peer=5334\r\n2020-06-10T05:41:39Z got inv: tx 657c7828f7884555bde735d0023ccefaa14841e1f074db298af458b82327561e  have peer=5334\r\n2020-06-10T05:41:39Z got inv: tx 19da7e41f3e7acde3d2fa69f8ee581e5874344ef38ca5ad22010839b66c7cb78  have peer=5334\r\n2020-06-10T05:41:39Z got inv: tx 1d55f6e3f942da15fa7b0213c43116dbf59f3ef686e6d2ffdd482bbaf8eaeb42  have peer=5334\r\n2020-06-10T05:41:39Z got inv: tx 1b1ddba1339a4edacca66bfb4743847174cc6db51fda2d4886430be6a061b02c  have peer=5334\r\n2020-06-10T05:41:39Z got inv: tx 192ff12d2c39e979b6c8e86914ad2facd98e9a37d366cd60c90349e71e31dc89  new peer=5334\r\n2020-06-10T05:41:39Z got inv: tx 2e28c562af3e976a6bb79e3b1110fc34f2f707afa59a1a271d91888a013481b1  have peer=5334\r\n2020-06-10T05:41:39Z got inv: tx ab0963447e8bf7e40e2971579c8d758d0d59672bba9383343c1fad748cb258a2  have peer=5334\r\n2020-06-10T05:41:39Z got inv: tx 6646f3bdb7802a1af28733388cd18e6cd6d73587a9ba123713652a99ce6b26b3  have peer=5334\r\n2020-06-10T05:41:39Z got inv: tx d1c4ffbe3562c6a752631d878534ab5975bc141ee81898cde8215ee79fbb161f  have peer=5334\r\n2020-06-10T05:41:39Z got inv: tx bba8387f990b27a25b015fa871a1513922fb9711184fef95a7bee235e6a554d1  have peer=5334\r\n2020-06-10T05:41:39Z got inv: tx a38f4114f92ac96042c0381e976abcb84831488508ada146999ecf080927aed4  have peer=5334\r\n2020-06-10T05:41:39Z got inv: tx d72872682bd099de639524a7896d2d58199d168b010af10aa6cddc013501162c  new peer=5334\r\n2020-06-10T05:41:41Z sending inv (577 bytes) peer=5334\r\n2020-06-10T05:41:41Z received: getdata (505 bytes) peer=5334\r\n2020-06-10T05:41:41Z received getdata (14 invsz) peer=5334\r\n2020-06-10T05:41:41Z received getdata for: witness-tx 1b0de0f0b1bee82c610d39948f29d60bdafc824f25fdebc52db43d9e6c408fda peer=5334\r\n2020-06-10T05:41:41Z sending tx (380 bytes) peer=5334\r\n2020-06-10T05:41:41Z sending tx (249 bytes) peer=5334\r\n2020-06-10T05:41:41Z sending tx (249 bytes) peer=5334\r\n2020-06-10T05:41:41Z sending tx (252 bytes) peer=5334\r\n2020-06-10T05:41:41Z sending tx (224 bytes) peer=5334\r\n2020-06-10T05:41:41Z sending tx (249 bytes) peer=5334\r\n2020-06-10T05:41:41Z sending tx (226 bytes) peer=5334\r\n2020-06-10T05:41:41Z sending tx (404 bytes) peer=5334\r\n2020-06-10T05:41:41Z sending tx (247 bytes) peer=5334\r\n2020-06-10T05:41:41Z sending tx (247 bytes) peer=5334\r\n2020-06-10T05:41:41Z sending tx (1699 bytes) peer=5334\r\n2020-06-10T05:41:41Z sending tx (962 bytes) peer=5334\r\n2020-06-10T05:41:41Z sending tx (284 bytes) peer=5334\r\n2020-06-10T05:41:41Z sending tx (283 bytes) peer=5334\r\n2020-06-10T05:41:42Z received: getdata (37 bytes) peer=5334\r\n2020-06-10T05:41:42Z received getdata (1 invsz) peer=5334\r\n2020-06-10T05:41:42Z received getdata for: witness-tx 6bc1f51585d151382d9545696f1c3bdbaeb2204219181955ebabd8b5fb56b5ba peer=5334\r\n2020-06-10T05:41:42Z peer requested premature tx 6bc1f51585d151382d9545696f1c3bdbaeb2204219181955ebabd8b5fb56b5ba peer=5334\r\n2020-06-10T05:41:42Z sending notfound (37 bytes) peer=5334\r\n2020-06-10T05:41:42Z received: getdata (37 bytes) peer=5334\r\n2020-06-10T05:41:42Z received getdata (1 invsz) peer=5334\r\n2020-06-10T05:41:42Z received getdata for: witness-tx c1f1fbc3d2eee766914096cca0034f50fd3baacfc5718380fa189d7cded485c3 peer=5334\r\n2020-06-10T05:41:42Z peer requested premature tx c1f1fbc3d2eee766914096cca0034f50fd3baacfc5718380fa189d7cded485c3 peer=5334\r\n2020-06-10T05:41:42Z sending notfound (37 bytes) peer=5334\r\n2020-06-10T05:41:42Z received: inv (289 bytes) peer=5334\r\n2020-06-10T05:41:42Z got inv: tx 399539127ec4e1c179fe36d785e363b08b6829ace0e60ce5885422eef8243972  have peer=5334\r\n2020-06-10T05:41:42Z got inv: tx 9fbe2c406b656f8c9f75a5b155c234c271e8f4ed805209e6cd07e3f192d71d56  have peer=5334\r\n2020-06-10T05:41:42Z got inv: tx edff59ed55d34919b0b2ad5a76bb9c43b7b4de0db138510710a18958e990c3d7  have peer=5334\r\n2020-06-10T05:41:42Z got inv: tx 0e06a219bc3335d4d11ae0078a41b3fe4eda1c3ccba93acaf086967dd5ccf880  have peer=5334\r\n2020-06-10T05:41:42Z got inv: tx ff1e5020f077f03b7bffd7fdf6d0a041f8d6844fd00032e00e176a06bec9f278  have peer=5334\r\n2020-06-10T05:41:42Z got inv: tx 3eb244fd269e890fb39bd370f85d5a991d45056aa0b95dc88d90408b95eac326  have peer=5334\r\n2020-06-10T05:41:42Z got inv: tx d7143d76d597c28311e46196337aac6afc5de63cc0704be9111f23a383e6cd09  have peer=5334\r\n2020-06-10T05:41:42Z got inv: tx 26a6fe495642539f7749f0279307581144e6eb1cb624087e2c8b17514252fd06  have peer=5334\r\n2020-06-10T05:41:43Z received: inv (325 bytes) peer=5334\r\n2020-06-10T05:41:43Z got inv: tx ec531c8dabe3005d5d51fd369816be18aaa6c307d96f636bc429680bed350a05  have peer=5334\r\n2020-06-10T05:41:43Z got inv: tx 8c73cd96046a3dd62fe44174c73db24d254270576b82ffff680fef6661e56eb5  have peer=5334\r\n2020-06-10T05:41:43Z got inv: tx 1a55f4966a4b46b4e8a1b7656ef9c02e14c1be99aa76d8227d0ae4f0f6d6cc0b  have peer=5334\r\n2020-06-10T05:41:43Z got inv: tx 8547ca96e16896b1d5eb283b1caf451b7228320bc17f86d7821b9420bbbb0903  have peer=5334\r\n2020-06-10T05:41:43Z got inv: tx a6621f8963364c278abb397e672cef09289b07392db9b3085af6f4694f0bb523  have peer=5334\r\n2020-06-10T05:41:43Z got inv: tx 31177e9d76f62c68774e532eecfc5aa3c3219d0acdf9f3d4ee719598c4d58dc4  have peer=5334\r\n2020-06-10T05:41:43Z got inv: tx bb1d8b66ea2778414d7f31e4a0070e70949eef65e29143fd0491abf0df09d81d  have peer=5334\r\n2020-06-10T05:41:43Z got inv: tx 6d3fde5c229947c8f565751d324a7fe089c03bfc3979e3a8a592d2d87b684020  have peer=5334\r\n2020-06-10T05:41:43Z got inv: tx 78771fd0e6acd4cdcc32c692a8199d4feb927222508c8728cf8b83b74b7c1b1b  have peer=5334\r\n2020-06-10T05:41:44Z sending inv (37 bytes) peer=5334\r\n2020-06-10T05:41:47Z received: inv (289 bytes) peer=5334\r\n2020-06-10T05:41:47Z got inv: tx 9c2001584d6fb1d6deb96d41acde5ca3a9ba1a74e0c31d681931f653b3a8bdeb  have peer=5334\r\n2020-06-10T05:41:47Z got inv: tx 8005a6a82d4ad00a6954349d7a0ef5ac38eba1bc24dd9ccee677f88fde6de0e9  have peer=5334\r\n2020-06-10T05:41:47Z got inv: tx dfe5aba579a2816ba5a0c0e681dd26d2fcb3e8814d1d96673c931af3f3240b2a  have peer=5334\r\n2020-06-10T05:41:47Z got inv: tx a337b0c6de70c000c39a3456e5c2a4e12a98eca46055baf941efde294c867038  have peer=5334\r\n2020-06-10T05:41:47Z got inv: tx 6580536b20b8c39c1d68a8482b9d6ea7018d71a76dbd6b421b1acd6ce0666266  have peer=5334\r\n2020-06-10T05:41:47Z got inv: tx eaad973cea7cebee01e59031298f7b8d3b9acab07a5209e98afa299269c66aa2  have peer=5334\r\n2020-06-10T05:41:47Z got inv: tx 332e654cdd78f70d2ff40eda895371341b68e4a3b3386f24f99646271a0c7481  have peer=5334\r\n2020-06-10T05:41:47Z got inv: tx ddf4d2921bfe87306444bc3ab2d83663380b7bd06f6a21f50f77c7155d3b1c7b  have peer=5334\r\n2020-06-10T05:41:48Z sending inv (289 bytes) peer=5334\r\n2020-06-10T05:41:48Z received: getdata (289 bytes) peer=5334\r\n2020-06-10T05:41:48Z received getdata (8 invsz) peer=5334\r\n2020-06-10T05:41:48Z received getdata for: witness-tx 24afaafeab68b5fc6db70375320b696ccfe6d5a8af30f1a001724c3c98f3529e peer=5334\r\n2020-06-10T05:41:48Z sending tx (247 bytes) peer=5334\r\n2020-06-10T05:41:48Z sending tx (249 bytes) peer=5334\r\n2020-06-10T05:41:48Z sending tx (372 bytes) peer=5334\r\n2020-06-10T05:41:48Z sending tx (741 bytes) peer=5334\r\n2020-06-10T05:41:48Z sending tx (223 bytes) peer=5334\r\n2020-06-10T05:41:48Z sending tx (224 bytes) peer=5334\r\n2020-06-10T05:41:48Z sending tx (249 bytes) peer=5334\r\n2020-06-10T05:41:48Z sending tx (256 bytes) peer=5334\r\n2020-06-10T05:41:48Z received: getdata (37 bytes) peer=5334\r\n2020-06-10T05:41:48Z received getdata (1 invsz) peer=5334\r\n2020-06-10T05:41:48Z received getdata for: witness-tx 13c630c0bfa9714c2f6e235df60b562bb7adaf35d550ea7b0e63bed8905bf646 peer=5334\r\n2020-06-10T05:41:48Z peer requested premature tx 13c630c0bfa9714c2f6e235df60b562bb7adaf35d550ea7b0e63bed8905bf646 peer=5334\r\n2020-06-10T05:41:48Z sending notfound (37 bytes) peer=5334\r\n2020-06-10T05:41:48Z received: getdata (37 bytes) peer=5334\r\n2020-06-10T05:41:48Z received getdata (1 invsz) peer=5334\r\n2020-06-10T05:41:48Z received getdata for: witness-tx 04b99d7ffcbe4f9ae325913ea569cfa770f04101d8ba0c6a74650e19dd60af6f peer=5334\r\n2020-06-10T05:41:48Z peer requested premature tx 04b99d7ffcbe4f9ae325913ea569cfa770f04101d8ba0c6a74650e19dd60af6f peer=5334\r\n2020-06-10T05:41:48Z sending notfound (37 bytes) peer=5334\r\n2020-06-10T05:41:50Z received: inv (145 bytes) peer=5334\r\n2020-06-10T05:41:50Z got inv: tx bdfd34d44339a17345e0c811206f2a63ac087b313c1aaf72d1430abe97aa84f9  have peer=5334\r\n2020-06-10T05:41:50Z got inv: tx 0b0faf30e283a6caed01b0319ffcda58eab4d245a8d6a63c21af458feea5c7e0  have peer=5334\r\n2020-06-10T05:41:50Z got inv: tx e7158071c799991e55167a4324c309dc476ef63f4f09ea2faeef14908aa5de8e  have peer=5334\r\n2020-06-10T05:41:50Z got inv: tx debf23870d4a5fec6e652233052fba967c2c977d10eb1bbbcf6452b9bb7ac76a  have peer=5334\r\n2020-06-10T05:41:52Z sending inv (217 bytes) peer=5334\r\n2020-06-10T05:41:52Z received: getdata (109 bytes) peer=5334\r\n2020-06-10T05:41:52Z received getdata (3 invsz) peer=5334\r\n2020-06-10T05:41:52Z received getdata for: witness-tx 5dc79c86592499a7aff214a12b5bb1c69cfc5513cf3a904981dcd8115d029367 peer=5334\r\n...\r\n2020-06-10T06:28:12Z sending inv (577 bytes) peer=5334\r\n2020-06-10T06:28:14Z sending inv (289 bytes) peer=5334\r\n2020-06-10T06:28:16Z sending inv (433 bytes) peer=5334\r\n2020-06-10T06:28:23Z socket recv error for peer=5334: No route to host (113)\r\n2020-06-10T06:28:23Z disconnecting peer=5334\r\n2020-06-10T06:28:23Z Cleared nodestate for peer=5334\r\n```\r\n</p></details>\r\n\r\n\r\nEDIT: added a 4th peer (5336) seen after 36 hours.\r\n\r\nNow running the same logging patch on the last commit 3883453647e18b2234b5d04187220632a7a0de4b",
      "created_at" : "2020-06-09T08:19:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-641116818",
      "id" : 641116818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MTExNjgxOA==",
      "updated_at" : "2020-06-10T10:20:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/641116818",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r437977348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437977348"
         }
      },
      "author_association" : "MEMBER",
      "body" : "announced recently, not relayed?",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-10T09:10:01Z",
      "diff_hunk" : "@@ -1634,19 +1645,25 @@ CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const\n \n     auto txinfo = mempool.info(txid);\n     if (txinfo.tx) {\n-        // To protect privacy, do not answer getdata using the mempool when\n-        // that TX couldn't have been INVed in reply to a MEMPOOL request,\n-        // and it's more recent than UNCONDITIONAL_RELAY_DELAY.\n+        // If a TX could have been INVed in reply to a MEMPOOL request,\n+        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n+        // unconditionally.\n         if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return txinfo.tx;\n+            return std::move(txinfo.tx);\n         }\n     }\n \n     {\n         LOCK(cs_main);\n-        // Look up transaction in relay pool\n-        auto mi = mapRelay.find(txid);\n-        if (mi != mapRelay.end()) return mi->second;\n+\n+        // Otherwise, the transaction must have been relayed recently.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r437977348",
      "id" : 437977348,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk3NzM0OA==",
      "original_commit_id" : "da6769980a1abac333cb822354ac67a51e0cf169",
      "original_line" : 1659,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 427862948,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437977348",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r437977759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437977759"
         }
      },
      "author_association" : "MEMBER",
      "body" : "same question about the commit name:\r\n\"Only respond to requests for recently relayed transactions \"",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-10T09:10:45Z",
      "diff_hunk" : "@@ -1634,19 +1645,25 @@ CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const\n \n     auto txinfo = mempool.info(txid);\n     if (txinfo.tx) {\n-        // To protect privacy, do not answer getdata using the mempool when\n-        // that TX couldn't have been INVed in reply to a MEMPOOL request,\n-        // and it's more recent than UNCONDITIONAL_RELAY_DELAY.\n+        // If a TX could have been INVed in reply to a MEMPOOL request,\n+        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n+        // unconditionally.\n         if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return txinfo.tx;\n+            return std::move(txinfo.tx);\n         }\n     }\n \n     {\n         LOCK(cs_main);\n-        // Look up transaction in relay pool\n-        auto mi = mapRelay.find(txid);\n-        if (mi != mapRelay.end()) return mi->second;\n+\n+        // Otherwise, the transaction must have been relayed recently.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r437977759",
      "id" : 437977759,
      "in_reply_to_id" : 437977348,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk3Nzc1OQ==",
      "original_commit_id" : "da6769980a1abac333cb822354ac67a51e0cf169",
      "original_line" : 1659,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 427863494,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437977759",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\nThe code also looks correct.\r\n\r\n1. I assume mempool requests are \"trusted\" in a sense that those nodes can actually spy on us? At least I see how to accomplish that with current code and after a change, so just double-checking.\r\n2. I was wondering about probing child transactions... Let's say the parent was sitting there for a day, but now a child comes. A child should not be probed via any a-la package relay things. Just something we should keep in mind here and in further reviews.",
      "created_at" : "2020-06-10T10:59:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-641926760",
      "id" : 641926760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MTkyNjc2MA==",
      "updated_at" : "2020-06-10T10:59:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/641926760",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r438515417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438515417"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@naumenkogs Yeah, announced is clearer terminology. I've changed it in the variable name, comments, and commit message.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-11T02:58:51Z",
      "diff_hunk" : "@@ -1634,19 +1645,25 @@ CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const\n \n     auto txinfo = mempool.info(txid);\n     if (txinfo.tx) {\n-        // To protect privacy, do not answer getdata using the mempool when\n-        // that TX couldn't have been INVed in reply to a MEMPOOL request,\n-        // and it's more recent than UNCONDITIONAL_RELAY_DELAY.\n+        // If a TX could have been INVed in reply to a MEMPOOL request,\n+        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n+        // unconditionally.\n         if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return txinfo.tx;\n+            return std::move(txinfo.tx);\n         }\n     }\n \n     {\n         LOCK(cs_main);\n-        // Look up transaction in relay pool\n-        auto mi = mapRelay.find(txid);\n-        if (mi != mapRelay.end()) return mi->second;\n+\n+        // Otherwise, the transaction must have been relayed recently.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r438515417",
      "id" : 438515417,
      "in_reply_to_id" : 437977348,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxNTQxNw==",
      "original_commit_id" : "da6769980a1abac333cb822354ac67a51e0cf169",
      "original_line" : 1659,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 428559723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438515417",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs \r\n\r\n1. Yes, I think that's fine. BIP35 requests are only enabled with opt-in (whitelist, or when BIP37 is also enabled). Further, BIP35 responses go out asynchronously, after the normal inv Poisson delay, so this can't be used to get better time accuracy (only to bypass the 2 minutes unconditional relay barrier).\r\n\r\n2. How does this let you probe for child transactions?",
      "created_at" : "2020-06-11T03:02:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-642376743",
      "id" : 642376743,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MjM3Njc0Mw==",
      "updated_at" : "2020-06-11T03:02:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642376743",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "1. In FindTxForGetData, the first condition can be satisfied by just spamming mempool requests and requesting arbitrary transactions (getting a BIP35 response is not necessary for attacker).\r\n\r\n2. I don't have an exact scenario. Just something for us to keep in mind re package relay. No action required for this PR.",
      "created_at" : "2020-06-12T06:57:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-643102535",
      "id" : 643102535,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzEwMjUzNQ==",
      "updated_at" : "2020-06-12T06:58:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643102535",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I added a commit to add unconfirmed parents of relayed transactions into the recently-relayed Bloom filter. I'm not seeing any premature requests anymore.\r\n\r\nAfter running 36 hours with this commit, I'm not seeing them anymore either, as opposed to at the previous commit as described above https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-641116818.",
      "created_at" : "2020-06-12T07:18:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-643111821",
      "id" : 643111821,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzExMTgyMQ==",
      "updated_at" : "2020-06-12T07:18:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643111821",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440408679"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440408679"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I know we don't have a style guide for line length, but this seems unnecessarily long, and makes this difficult to read or review in many places. Can I convince you to make it shorter?\r\n\r\nStatic asserts require a message parameter, but I don't see the benefit of making them long and detailed. That detail can go in the comment above.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-15T19:49:42Z",
      "diff_hunk" : "@@ -125,6 +127,13 @@ static const unsigned int INVENTORY_BROADCAST_INTERVAL = 5;\n /** Maximum number of inventory items to send per transmission.\n  *  Limits the impact of low-fee transaction floods. */\n static constexpr unsigned int INVENTORY_BROADCAST_MAX = 7 * INVENTORY_BROADCAST_INTERVAL;\n+/** The how many most recently announced inventory messages a peer can request. */\n+static constexpr unsigned int INVENTORY_MAX_RECENT_RELAY = 3500;\n+/** Verify that INVENTORY_MAX_RECENT_RELAY is enough to cache everything typically\n+ *  relayed before unconditional relay from the mempool kicks in. This is only a\n+ *  lower bound, and it should be larger to account for higher inv rate to outbound\n+ *  peers, and random variations in the broadcast mechanism. */\n+static_assert(INVENTORY_MAX_RECENT_RELAY >= INVENTORY_BROADCAST_MAX * UNCONDITIONAL_RELAY_DELAY / std::chrono::seconds{INVENTORY_BROADCAST_INTERVAL}, \"INVENTORY_RELAY_MAX must be high enough to cover everything announced before uncondition relay kicks in\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440408679",
      "id" : 440408679,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQwODY3OQ==",
      "original_commit_id" : "39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "original_line" : 136,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 430944478,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440408679",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440410878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440410878"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps it makes sense to add a new `constexpr int MAX_INVENTORY_RELAY_PER_SECOND{7}`. That value is used to derive `INVENTORY_BROADCAST_MAX`, and you're using `INVENTORY_BROADCAST_MAX` to rederive it here. I think it'd be clearer to just be its own constant.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-15T19:54:13Z",
      "diff_hunk" : "@@ -125,6 +127,13 @@ static const unsigned int INVENTORY_BROADCAST_INTERVAL = 5;\n /** Maximum number of inventory items to send per transmission.\n  *  Limits the impact of low-fee transaction floods. */\n static constexpr unsigned int INVENTORY_BROADCAST_MAX = 7 * INVENTORY_BROADCAST_INTERVAL;\n+/** The how many most recently announced inventory messages a peer can request. */\n+static constexpr unsigned int INVENTORY_MAX_RECENT_RELAY = 3500;\n+/** Verify that INVENTORY_MAX_RECENT_RELAY is enough to cache everything typically\n+ *  relayed before unconditional relay from the mempool kicks in. This is only a\n+ *  lower bound, and it should be larger to account for higher inv rate to outbound\n+ *  peers, and random variations in the broadcast mechanism. */\n+static_assert(INVENTORY_MAX_RECENT_RELAY >= INVENTORY_BROADCAST_MAX * UNCONDITIONAL_RELAY_DELAY / std::chrono::seconds{INVENTORY_BROADCAST_INTERVAL}, \"INVENTORY_RELAY_MAX must be high enough to cover everything announced before uncondition relay kicks in\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440410878",
      "id" : 440410878,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMDg3OA==",
      "original_commit_id" : "39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "original_line" : 136,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 430944478,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440410878",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440417767"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440417767"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Responses _to_ MEMPOOL requests...",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-15T20:08:07Z",
      "diff_hunk" : "@@ -4156,6 +4182,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                             if (!pto->m_tx_relay->pfilter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         }\n                         pto->m_tx_relay->filterInventoryKnown.insert(hash);\n+                        // Responses MEMPOOL requests bypass the m_recently_announced_invs filter.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440417767",
      "id" : 440417767,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxNzc2Nw==",
      "original_commit_id" : "39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "original_line" : 4185,
      "original_position" : 133,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 430944478,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440417767",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440421113"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440421113"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this naturally belongs in the `TxRelay` struct, along with the rest of the per-peer transaction relay data. It's a bit unfortunate that it's defined in net.h, but it'd mean you don't need to lock cs_main to access it.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-15T20:14:39Z",
      "diff_hunk" : "@@ -398,6 +407,9 @@ struct CNodeState {\n     //! Whether this peer is a manual connection\n     bool m_is_manual_connection;\n \n+    //! A rolling bloom filter of all announced tx CInvs to this peer.\n+    CRollingBloomFilter m_recently_announced_invs = CRollingBloomFilter{INVENTORY_MAX_RECENT_RELAY, 0.000001};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440421113",
      "id" : 440421113,
      "line" : 410,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMTExMw==",
      "original_commit_id" : "39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "original_line" : 410,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 37,
      "pull_request_review_id" : 430944478,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440421113",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440422397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440422397"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should we do this recursively? (ie include all unconfirmed ancestors, not just unconfirmed parents)",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-15T20:17:07Z",
      "diff_hunk" : "@@ -1680,11 +1690,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440422397",
      "id" : 440422397,
      "line" : 1697,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMjM5Nw==",
      "original_commit_id" : "39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "original_line" : 1697,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 117,
      "pull_request_review_id" : 430944478,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440422397",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440422700"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440422700"
         }
      },
      "author_association" : "MEMBER",
      "body" : "placing `m_recently_announed_invs` under `cs_tx_inventory` would avoid this lock dance.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-15T20:17:43Z",
      "diff_hunk" : "@@ -1680,11 +1690,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    bool add = true;\n+                    {\n+                        LOCK(pfrom.m_tx_relay->cs_tx_inventory);\n+                        add = !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash);\n+                    }\n+                    if (add) {\n+                        LOCK(cs_main);\n+                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440422700",
      "id" : 440422700,
      "line" : 1704,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMjcwMA==",
      "original_commit_id" : "39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "original_line" : 1704,
      "original_position" : 122,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 124,
      "pull_request_review_id" : 430944478,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440422700",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440988253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440988253"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree, but at the same time TxRelay really belongs in net_processing...\r\n\r\nI'd rather not move it to net, because that would mean also moving the INVENTORY_MAX_RECENT_RELAY to net.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-16T16:33:45Z",
      "diff_hunk" : "@@ -398,6 +407,9 @@ struct CNodeState {\n     //! Whether this peer is a manual connection\n     bool m_is_manual_connection;\n \n+    //! A rolling bloom filter of all announced tx CInvs to this peer.\n+    CRollingBloomFilter m_recently_announced_invs = CRollingBloomFilter{INVENTORY_MAX_RECENT_RELAY, 0.000001};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440988253",
      "id" : 440988253,
      "in_reply_to_id" : 440421113,
      "line" : 410,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk4ODI1Mw==",
      "original_commit_id" : "39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "original_line" : 410,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 37,
      "pull_request_review_id" : 431691561,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440988253",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440988995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440988995"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this is needed, because when they request the parent, the grandparents will be added to the filter, and so on.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-16T16:34:56Z",
      "diff_hunk" : "@@ -1680,11 +1690,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440988995",
      "id" : 440988995,
      "in_reply_to_id" : 440422397,
      "line" : 1697,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk4ODk5NQ==",
      "original_commit_id" : "39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "original_line" : 1697,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 117,
      "pull_request_review_id" : 431692512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440988995",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440989228"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440989228"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree, but I'd rather not; see reasons above.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-16T16:35:18Z",
      "diff_hunk" : "@@ -1680,11 +1690,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    bool add = true;\n+                    {\n+                        LOCK(pfrom.m_tx_relay->cs_tx_inventory);\n+                        add = !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash);\n+                    }\n+                    if (add) {\n+                        LOCK(cs_main);\n+                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440989228",
      "id" : 440989228,
      "in_reply_to_id" : 440422700,
      "line" : 1704,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk4OTIyOA==",
      "original_commit_id" : "39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "original_line" : 1704,
      "original_position" : 122,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 124,
      "pull_request_review_id" : 431692774,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440989228",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440995658"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440995658"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-16T16:45:18Z",
      "diff_hunk" : "@@ -4156,6 +4182,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                             if (!pto->m_tx_relay->pfilter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         }\n                         pto->m_tx_relay->filterInventoryKnown.insert(hash);\n+                        // Responses MEMPOOL requests bypass the m_recently_announced_invs filter.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440995658",
      "id" : 440995658,
      "in_reply_to_id" : 440417767,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5NTY1OA==",
      "original_commit_id" : "39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "original_line" : 4185,
      "original_position" : 133,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 431700764,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440995658",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440995838"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440995838"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good idea; I've added something like that.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-16T16:45:38Z",
      "diff_hunk" : "@@ -125,6 +127,13 @@ static const unsigned int INVENTORY_BROADCAST_INTERVAL = 5;\n /** Maximum number of inventory items to send per transmission.\n  *  Limits the impact of low-fee transaction floods. */\n static constexpr unsigned int INVENTORY_BROADCAST_MAX = 7 * INVENTORY_BROADCAST_INTERVAL;\n+/** The how many most recently announced inventory messages a peer can request. */\n+static constexpr unsigned int INVENTORY_MAX_RECENT_RELAY = 3500;\n+/** Verify that INVENTORY_MAX_RECENT_RELAY is enough to cache everything typically\n+ *  relayed before unconditional relay from the mempool kicks in. This is only a\n+ *  lower bound, and it should be larger to account for higher inv rate to outbound\n+ *  peers, and random variations in the broadcast mechanism. */\n+static_assert(INVENTORY_MAX_RECENT_RELAY >= INVENTORY_BROADCAST_MAX * UNCONDITIONAL_RELAY_DELAY / std::chrono::seconds{INVENTORY_BROADCAST_INTERVAL}, \"INVENTORY_RELAY_MAX must be high enough to cover everything announced before uncondition relay kicks in\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440995838",
      "id" : 440995838,
      "in_reply_to_id" : 440410878,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5NTgzOA==",
      "original_commit_id" : "39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "original_line" : 136,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 431700999,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440995838",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440995930"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440995930"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shortened it.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-16T16:45:47Z",
      "diff_hunk" : "@@ -125,6 +127,13 @@ static const unsigned int INVENTORY_BROADCAST_INTERVAL = 5;\n /** Maximum number of inventory items to send per transmission.\n  *  Limits the impact of low-fee transaction floods. */\n static constexpr unsigned int INVENTORY_BROADCAST_MAX = 7 * INVENTORY_BROADCAST_INTERVAL;\n+/** The how many most recently announced inventory messages a peer can request. */\n+static constexpr unsigned int INVENTORY_MAX_RECENT_RELAY = 3500;\n+/** Verify that INVENTORY_MAX_RECENT_RELAY is enough to cache everything typically\n+ *  relayed before unconditional relay from the mempool kicks in. This is only a\n+ *  lower bound, and it should be larger to account for higher inv rate to outbound\n+ *  peers, and random variations in the broadcast mechanism. */\n+static_assert(INVENTORY_MAX_RECENT_RELAY >= INVENTORY_BROADCAST_MAX * UNCONDITIONAL_RELAY_DELAY / std::chrono::seconds{INVENTORY_BROADCAST_INTERVAL}, \"INVENTORY_RELAY_MAX must be high enough to cover everything announced before uncondition relay kicks in\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r440995930",
      "id" : 440995930,
      "in_reply_to_id" : 440408679,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5NTkzMA==",
      "original_commit_id" : "39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "original_line" : 136,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 431701100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440995930",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r441051642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441051642"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think \"inventory items\" or \"announced transactions\" is better than \"inventory messages\", since an INV message can contain many tx inv items.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-16T18:18:57Z",
      "diff_hunk" : "@@ -122,9 +124,18 @@ static constexpr std::chrono::seconds AVG_ADDRESS_BROADCAST_INTERVAL{30};\n /** Average delay between trickled inventory transmissions in seconds.\n  *  Blocks and whitelisted receivers bypass this, outbound peers get half this delay. */\n static const unsigned int INVENTORY_BROADCAST_INTERVAL = 5;\n-/** Maximum number of inventory items to send per transmission.\n+/** Maximum rate of inventory items to send per second.\n  *  Limits the impact of low-fee transaction floods. */\n-static constexpr unsigned int INVENTORY_BROADCAST_MAX = 7 * INVENTORY_BROADCAST_INTERVAL;\n+static constexpr unsigned int INVENTORY_BROADCAST_PER_SECOND = 7;\n+/** Maximum number of inventory items to send per transmission. */\n+static constexpr unsigned int INVENTORY_BROADCAST_MAX = INVENTORY_BROADCAST_PER_SECOND * INVENTORY_BROADCAST_INTERVAL;\n+/** The how many most recently announced inventory messages a peer can request. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r441051642",
      "id" : 441051642,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1MTY0Mg==",
      "original_commit_id" : "47dd49a72dc1932d378ab228b194c8b653a98716",
      "original_line" : 132,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 431776737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441051642",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r441506702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441506702"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I tried to exploit this for spying, but the worst I came up with is:\r\n1. A victim transmits tx_A (paying to a spy) to the network via regular relay.\r\n2. A spy spends tx_A via tx_B and transmits tx_B immediately to *everyone*\r\n3. Now when tx_A reaches nodes in the network, they add both tx_A, tx_B to their mempool and announce them.\r\n4. Now the victim's tx_A can be time-analyzed faster, because tx_B may potentially allow to request it earlier (before tx_A is announced, but after tx_B is announced)\r\n\r\nActually, the more outputs from tx_A an attacker can spend, the more transaction they can spawn to make (4) even worse.\r\n\r\nThis is a very special case of targeting victim transacting with the spy to find victim's node. I believe that general topology inference via regular tx flood can be done easier, but this attack has a different goal.\r\n\r\nMaybe this scenario will inspire other findings :)",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-17T12:29:04Z",
      "diff_hunk" : "@@ -1697,6 +1697,22 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r441506702",
      "id" : 441506702,
      "line" : 1701,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUwNjcwMg==",
      "original_commit_id" : "47dd49a72dc1932d378ab228b194c8b653a98716",
      "original_line" : 1701,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 121,
      "pull_request_review_id" : 432349323,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441506702",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 47dd49a",
      "created_at" : "2020-06-17T12:33:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-645345845",
      "id" : 645345845,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTM0NTg0NQ==",
      "updated_at" : "2020-06-17T12:33:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645345845",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r441526314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441526314"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't understand (4) \"before tx_A is announced, but after tx_B is announced\". Aren't they announced at the same time? How would a node announce the child before the parent?",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-17T13:01:37Z",
      "diff_hunk" : "@@ -1697,6 +1697,22 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r441526314",
      "id" : 441526314,
      "in_reply_to_id" : 441506702,
      "line" : 1701,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyNjMxNA==",
      "original_commit_id" : "47dd49a72dc1932d378ab228b194c8b653a98716",
      "original_line" : 1701,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 121,
      "pull_request_review_id" : 432375815,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441526314",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r441542181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441542181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, I think you're right, because they will appear in the same INV batch when `nNextInvSend` is triggered. I forgot it's not a per-TX thing.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-17T13:25:13Z",
      "diff_hunk" : "@@ -1697,6 +1697,22 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r441542181",
      "id" : 441542181,
      "in_reply_to_id" : 441506702,
      "line" : 1701,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0MjE4MQ==",
      "original_commit_id" : "47dd49a72dc1932d378ab228b194c8b653a98716",
      "original_line" : 1701,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 121,
      "pull_request_review_id" : 432397016,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441542181",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r441911001"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441911001"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point, that was confusing. Fixed.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-18T00:59:02Z",
      "diff_hunk" : "@@ -122,9 +124,18 @@ static constexpr std::chrono::seconds AVG_ADDRESS_BROADCAST_INTERVAL{30};\n /** Average delay between trickled inventory transmissions in seconds.\n  *  Blocks and whitelisted receivers bypass this, outbound peers get half this delay. */\n static const unsigned int INVENTORY_BROADCAST_INTERVAL = 5;\n-/** Maximum number of inventory items to send per transmission.\n+/** Maximum rate of inventory items to send per second.\n  *  Limits the impact of low-fee transaction floods. */\n-static constexpr unsigned int INVENTORY_BROADCAST_MAX = 7 * INVENTORY_BROADCAST_INTERVAL;\n+static constexpr unsigned int INVENTORY_BROADCAST_PER_SECOND = 7;\n+/** Maximum number of inventory items to send per transmission. */\n+static constexpr unsigned int INVENTORY_BROADCAST_MAX = INVENTORY_BROADCAST_PER_SECOND * INVENTORY_BROADCAST_INTERVAL;\n+/** The how many most recently announced inventory messages a peer can request. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r441911001",
      "id" : 441911001,
      "in_reply_to_id" : 441051642,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkxMTAwMQ==",
      "original_commit_id" : "47dd49a72dc1932d378ab228b194c8b653a98716",
      "original_line" : 132,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 432871171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441911001",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "created_at" : "2020-06-18T01:03:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-645706724",
      "id" : 645706724,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTcwNjcyNA==",
      "updated_at" : "2020-06-18T01:03:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645706724",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm also not seeing premature requests as of 39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "created_at" : "2020-06-18T01:50:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-645720453",
      "id" : 645720453,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTcyMDQ1Mw==",
      "updated_at" : "2020-06-18T01:50:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645720453",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs \r\n\r\n> 1. In FindTxForGetData, the first condition can be satisfied by just spamming mempool requests and requesting arbitrary transactions (getting a BIP35 response is not necessary for attacker).\r\n\r\n`m_last_mempool_req` is only set once a BIP35 request is processed, so the attacker does have to wait for the response (which is subject to the same Poisson delay as normal invs). Given that these are restricted (need either a whitelist, or explicitly enabled BIP37 support), I think that's sufficient.",
      "created_at" : "2020-06-18T02:14:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-645727237",
      "id" : 645727237,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTcyNzIzNw==",
      "updated_at" : "2020-06-18T02:14:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645727237",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "created_at" : "2020-06-18T07:10:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-645825703",
      "id" : 645825703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTgyNTcwMw==",
      "updated_at" : "2020-06-18T07:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645825703",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r442747935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442747935"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3e72ffe nit: `s/The how many/How many|The number of/`",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-19T09:58:58Z",
      "diff_hunk" : "@@ -122,9 +124,18 @@ static constexpr std::chrono::seconds AVG_ADDRESS_BROADCAST_INTERVAL{30};\n /** Average delay between trickled inventory transmissions in seconds.\n  *  Blocks and whitelisted receivers bypass this, outbound peers get half this delay. */\n static const unsigned int INVENTORY_BROADCAST_INTERVAL = 5;\n-/** Maximum number of inventory items to send per transmission.\n+/** Maximum rate of inventory items to send per second.\n  *  Limits the impact of low-fee transaction floods. */\n-static constexpr unsigned int INVENTORY_BROADCAST_MAX = 7 * INVENTORY_BROADCAST_INTERVAL;\n+static constexpr unsigned int INVENTORY_BROADCAST_PER_SECOND = 7;\n+/** Maximum number of inventory items to send per transmission. */\n+static constexpr unsigned int INVENTORY_BROADCAST_MAX = INVENTORY_BROADCAST_PER_SECOND * INVENTORY_BROADCAST_INTERVAL;\n+/** The how many most recently announced transactions a peer can request. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r442747935",
      "id" : 442747935,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NzkzNQ==",
      "original_commit_id" : "2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "original_line" : 132,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 433934366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442747935",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r442756387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442756387"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Currently this static assert verifies that 3500 >= 840 (7 * 120)\r\n\r\nVerified the two new calculated constants\r\n```cpp\r\nstatic_assert(INVENTORY_BROADCAST_MAX == 35);\r\nstatic_assert(INVENTORY_BROADCAST_PER_SECOND * UNCONDITIONAL_RELAY_DELAY / std::chrono::seconds{1} == 7 * 120);\r\n```",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-19T10:16:37Z",
      "diff_hunk" : "@@ -122,9 +124,18 @@ static constexpr std::chrono::seconds AVG_ADDRESS_BROADCAST_INTERVAL{30};\n /** Average delay between trickled inventory transmissions in seconds.\n  *  Blocks and whitelisted receivers bypass this, outbound peers get half this delay. */\n static const unsigned int INVENTORY_BROADCAST_INTERVAL = 5;\n-/** Maximum number of inventory items to send per transmission.\n+/** Maximum rate of inventory items to send per second.\n  *  Limits the impact of low-fee transaction floods. */\n-static constexpr unsigned int INVENTORY_BROADCAST_MAX = 7 * INVENTORY_BROADCAST_INTERVAL;\n+static constexpr unsigned int INVENTORY_BROADCAST_PER_SECOND = 7;\n+/** Maximum number of inventory items to send per transmission. */\n+static constexpr unsigned int INVENTORY_BROADCAST_MAX = INVENTORY_BROADCAST_PER_SECOND * INVENTORY_BROADCAST_INTERVAL;\n+/** The how many most recently announced transactions a peer can request. */\n+static constexpr unsigned int INVENTORY_MAX_RECENT_RELAY = 3500;\n+/** Verify that INVENTORY_MAX_RECENT_RELAY is enough to cache everything typically\n+ *  relayed before unconditional relay from the mempool kicks in. This is only a\n+ *  lower bound, and it should be larger to account for higher inv rate to outbound\n+ *  peers, and random variations in the broadcast mechanism. */\n+static_assert(INVENTORY_MAX_RECENT_RELAY >= INVENTORY_BROADCAST_PER_SECOND * UNCONDITIONAL_RELAY_DELAY / std::chrono::seconds{1}, \"INVENTORY_RELAY_MAX too low\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r442756387",
      "id" : 442756387,
      "line" : 135,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1NjM4Nw==",
      "original_commit_id" : "2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "original_line" : 135,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 28,
      "pull_request_review_id" : 433934366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442756387",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r442761085"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442761085"
         }
      },
      "author_association" : "MEMBER",
      "body" : "abbe15f while touching this, ISTM `peer` may be passed as reference to const\r\n",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-06-19T10:26:41Z",
      "diff_hunk" : "@@ -1620,30 +1635,28 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n }\n \n //! Determine whether or not a peer can request a transaction, and return it (or nullptr if not found or not allowed).\n-CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds longlived_mempool_time) LOCKS_EXCLUDED(cs_main)\n+CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds now) LOCKS_EXCLUDED(cs_main)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r442761085",
      "id" : 442761085,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc2MTA4NQ==",
      "original_commit_id" : "2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "original_line" : 1638,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 433934366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442761085",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm also not seeing premature requests as of [39676fd](https://github.com/bitcoin/bitcoin/commit/39676fd490dc75af82d7ee0ec00b6c87d139dbc4)\r\n\r\nAfter a couple weeks running this patch I've now seen exactly one premature request,\r\n```\r\n2020-06-20T13:57:14Z peer requested premature (42s) tx 031dcb8e06d681392004fdc308346984f33dbd88b40a15fa25c204de67fbaa09 peer=24\r\n```\r\n\r\nThere's not quite enough info in the logs to debug this (and the tx seems to have been RBFed or otherwise double spent as it's no longer in my mempool and not in explorers etc), but another peer managed to successfully request it just one second later. (And that peer connected claiming a best height of 931419 which seems weird too)\r\n\r\nEDIT: oh, actually that peer had already announced that tx:\r\n\r\n```\r\n2020-06-20T13:56:33Z got inv: tx 031dcb8e06d681392004fdc308346984f33dbd88b40a15fa25c204de67fbaa09  have peer=24\r\n```\r\n\r\nAnd, uh, apparently peer=24 is my other node, running master, more or less, so presumably isn't hostile/spying...",
      "created_at" : "2020-07-01T13:49:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-652430078",
      "id" : 652430078,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjQzMDA3OA==",
      "updated_at" : "2020-07-01T13:59:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652430078",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r448395613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448395613"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Makes sense. I'm hoping to move all remaining application layer stuff from net to net_processing soon: https://github.com/bitcoin/bitcoin/issues/19398. This can be incorporated into TxRelay when that happens.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-01T14:17:49Z",
      "diff_hunk" : "@@ -398,6 +407,9 @@ struct CNodeState {\n     //! Whether this peer is a manual connection\n     bool m_is_manual_connection;\n \n+    //! A rolling bloom filter of all announced tx CInvs to this peer.\n+    CRollingBloomFilter m_recently_announced_invs = CRollingBloomFilter{INVENTORY_MAX_RECENT_RELAY, 0.000001};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r448395613",
      "id" : 448395613,
      "in_reply_to_id" : 440421113,
      "line" : 410,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM5NTYxMw==",
      "original_commit_id" : "39676fd490dc75af82d7ee0ec00b6c87d139dbc4",
      "original_line" : 410,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 37,
      "pull_request_review_id" : 440912555,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448395613",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r448402402"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448402402"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could have said\r\n\r\n```c++\r\nbool add = WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash);\r\n```",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-01T14:27:46Z",
      "diff_hunk" : "@@ -1680,11 +1692,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    bool add = true;\n+                    {\n+                        LOCK(pfrom.m_tx_relay->cs_tx_inventory);\n+                        add = !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash);\n+                    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r448402402",
      "id" : 448402402,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQwMjQwMg==",
      "original_commit_id" : "2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "original_line" : 1709,
      "original_position" : 126,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 440921683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448402402",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r448409198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448409198"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I suspect this is the cause of the premature request I saw:\r\n\r\n * Peer tells me it has tx X (so it's in filterInventoryKnown)\r\n * Peer sees tx R, which RBFs X, removing it from the mempool\r\n * I see tx Y, which is a child of X\r\n * I announce tx Y to peer\r\n * Peer requests Y, I send it\r\n * Peer requests parent X\r\n\r\nand all this happens within X's UNCONDITIONAL_RELAY_DELAY.\r\n\r\nI'm not sure if there's anything we could pick here that wouldn't be useful for analysing the network topology, so I think the current behaviour is probably fine?",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-01T14:37:14Z",
      "diff_hunk" : "@@ -1680,11 +1692,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    bool add = true;\n+                    {\n+                        LOCK(pfrom.m_tx_relay->cs_tx_inventory);\n+                        add = !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash);\n+                    }\n+                    if (add) {\n+                        LOCK(cs_main);\n+                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r448409198",
      "id" : 448409198,
      "line" : 1704,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQwOTE5OA==",
      "original_commit_id" : "2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "original_line" : 1704,
      "original_position" : 129,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 124,
      "pull_request_review_id" : 440921683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448409198",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r448445802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448445802"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah I can't find any issue with this sequence of events either.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-01T15:31:27Z",
      "diff_hunk" : "@@ -1680,11 +1692,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    bool add = true;\n+                    {\n+                        LOCK(pfrom.m_tx_relay->cs_tx_inventory);\n+                        add = !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash);\n+                    }\n+                    if (add) {\n+                        LOCK(cs_main);\n+                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r448445802",
      "id" : 448445802,
      "in_reply_to_id" : 448409198,
      "line" : 1704,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ0NTgwMg==",
      "original_commit_id" : "2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "original_line" : 1704,
      "original_position" : 129,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 124,
      "pull_request_review_id" : 440979571,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448445802",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r451876517"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451876517"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@ajtowns I also don't think there is any real problem here... but perhaps the last commit (which inserts unconfirmed parents into the filter) should just not check `filterInventoryKnown`?",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-08T23:18:32Z",
      "diff_hunk" : "@@ -1680,11 +1692,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    bool add = true;\n+                    {\n+                        LOCK(pfrom.m_tx_relay->cs_tx_inventory);\n+                        add = !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash);\n+                    }\n+                    if (add) {\n+                        LOCK(cs_main);\n+                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r451876517",
      "id" : 451876517,
      "in_reply_to_id" : 448409198,
      "line" : 1704,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3NjUxNw==",
      "original_commit_id" : "2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "original_line" : 1704,
      "original_position" : 129,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 124,
      "pull_request_review_id" : 445190944,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451876517",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r451893412"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451893412"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I was worried that might open a DoS vector where you send a tx with lots of parents that would then roll `m_recently_announced_invs` over, thus potentially removing new txs that hadn't been requested yet, causing them to not get relayed.\r\n\r\nIt'd still be an edge case -- you'd need the node sending the child tx to have the parents, and the node receiving the child tx to not have many of them; so seems like it would be hard to exploit, but if you could it would affect other people's txs, whereas as it is, the edge case mostly only affects your own txs (ie, the missing parent is one you had to both rbf and then cpfp at around the same time in order to generate the problem).",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-09T00:15:25Z",
      "diff_hunk" : "@@ -1680,11 +1692,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    bool add = true;\n+                    {\n+                        LOCK(pfrom.m_tx_relay->cs_tx_inventory);\n+                        add = !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash);\n+                    }\n+                    if (add) {\n+                        LOCK(cs_main);\n+                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r451893412",
      "id" : 451893412,
      "in_reply_to_id" : 448409198,
      "line" : 1704,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg5MzQxMg==",
      "original_commit_id" : "2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "original_line" : 1704,
      "original_position" : 129,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 124,
      "pull_request_review_id" : 445209803,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451893412",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r451910255"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451910255"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmm, yes. It's probably not big enough an issue to care about. Arguably it's desirable - if they had X and replaced it with R, we're not doing them a favor by giving them X again.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-09T01:20:35Z",
      "diff_hunk" : "@@ -1680,11 +1692,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    bool add = true;\n+                    {\n+                        LOCK(pfrom.m_tx_relay->cs_tx_inventory);\n+                        add = !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash);\n+                    }\n+                    if (add) {\n+                        LOCK(cs_main);\n+                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r451910255",
      "id" : 451910255,
      "in_reply_to_id" : 448409198,
      "line" : 1704,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkxMDI1NQ==",
      "original_commit_id" : "2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "original_line" : 1704,
      "original_position" : 129,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 124,
      "pull_request_review_id" : 445228612,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451910255",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r451913913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451913913"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-09T01:34:36Z",
      "diff_hunk" : "@@ -1680,11 +1692,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    bool add = true;\n+                    {\n+                        LOCK(pfrom.m_tx_relay->cs_tx_inventory);\n+                        add = !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash);\n+                    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r451913913",
      "id" : 451913913,
      "in_reply_to_id" : 448402402,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkxMzkxMw==",
      "original_commit_id" : "2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "original_line" : 1709,
      "original_position" : 126,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 445232716,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451913913",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r451913969"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451913969"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-09T01:34:46Z",
      "diff_hunk" : "@@ -1620,30 +1635,28 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n }\n \n //! Determine whether or not a peer can request a transaction, and return it (or nullptr if not found or not allowed).\n-CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds longlived_mempool_time) LOCKS_EXCLUDED(cs_main)\n+CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds now) LOCKS_EXCLUDED(cs_main)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r451913969",
      "id" : 451913969,
      "in_reply_to_id" : 442761085,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkxMzk2OQ==",
      "original_commit_id" : "2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "original_line" : 1638,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 445232767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451913969",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r451913995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451913995"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-09T01:34:54Z",
      "diff_hunk" : "@@ -122,9 +124,18 @@ static constexpr std::chrono::seconds AVG_ADDRESS_BROADCAST_INTERVAL{30};\n /** Average delay between trickled inventory transmissions in seconds.\n  *  Blocks and whitelisted receivers bypass this, outbound peers get half this delay. */\n static const unsigned int INVENTORY_BROADCAST_INTERVAL = 5;\n-/** Maximum number of inventory items to send per transmission.\n+/** Maximum rate of inventory items to send per second.\n  *  Limits the impact of low-fee transaction floods. */\n-static constexpr unsigned int INVENTORY_BROADCAST_MAX = 7 * INVENTORY_BROADCAST_INTERVAL;\n+static constexpr unsigned int INVENTORY_BROADCAST_PER_SECOND = 7;\n+/** Maximum number of inventory items to send per transmission. */\n+static constexpr unsigned int INVENTORY_BROADCAST_MAX = INVENTORY_BROADCAST_PER_SECOND * INVENTORY_BROADCAST_INTERVAL;\n+/** The how many most recently announced transactions a peer can request. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r451913995",
      "id" : 451913995,
      "in_reply_to_id" : 442747935,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkxMzk5NQ==",
      "original_commit_id" : "2da7ee37b7843ce871a48fc16911e93b7038cea0",
      "original_line" : 132,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 445232799,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-09T01:34:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451913995",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "reACK f32c408f3\r\n\r\nOnly changes:\r\n- rebase on master\r\n- updated code comment (https://github.com/bitcoin/bitcoin/pull/19109#discussion_r442747935)\r\n- make `peer` const in `FindTxForGetData()`\r\n- Use `WITH_LOCK` macro in `ProcessGetData()` (https://github.com/bitcoin/bitcoin/pull/19109#discussion_r448402402)\r\n\r\nI think this is ready for merge if @naumenkogs @jonatack and @ajtowns reACK.",
      "created_at" : "2020-07-09T06:19:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-655925949",
      "id" : 655925949,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NTkyNTk0OQ==",
      "updated_at" : "2020-07-09T06:19:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655925949",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-13T03:22:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-657337738",
      "id" : 657337738,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzMzNzczOA==",
      "updated_at" : "2020-07-13T03:22:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657337738",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think this is ready for merge. It has three ACKs on the latest HEAD:\r\n\r\najtowns (https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-657337738)\r\njonatack (https://github.com/bitcoin/bitcoin/pull/19109#pullrequestreview-445339521)\r\njnewbery (https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-655925949)\r\n\r\nplus one ACK on a previous HEAD:\r\n\r\nnaukmenkogs (https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-645825703)",
      "created_at" : "2020-07-13T08:23:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#issuecomment-657403045",
      "id" : 657403045,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzQwMzA0NQ==",
      "updated_at" : "2020-07-13T08:23:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657403045",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r455197217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455197217"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Rather than loop over all inputs (of which there could be thousands), perhaps we should instead just ask the mempool for unconfirmed parents?",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-15T17:00:11Z",
      "diff_hunk" : "@@ -1677,11 +1689,22 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r455197217",
      "id" : 455197217,
      "line" : 1698,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5NzIxNw==",
      "original_commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "original_line" : 1698,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 118,
      "pull_request_review_id" : 449142759,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-15T17:04:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455197217",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r455199527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455199527"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure I quite follow the conversation here, so apologies if this is redundant. I was just looking at this commit and wondering if we might insert too many entries into the bloom filter -- being willing to add all unconfirmed parents of a transaction makes the bloom filter effectively 24x smaller than we'd expect it to be.\r\n\r\nFor outbound peers, I think we're only within a factor of 2 of being able to roll the filter assuming no unconfirmed parents are added to it, so this seems potentially problematic?  It doesn't seem to me like RBF is a necessary precondition, just a busy network with people relaying lots of transactions with lots of unconfirmed parents.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-15T17:04:04Z",
      "diff_hunk" : "@@ -1677,11 +1689,22 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash))) {\n+                        LOCK(cs_main);\n+                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r455199527",
      "id" : 455199527,
      "line" : 1704,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5OTUyNw==",
      "original_commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "original_line" : 1704,
      "original_position" : 124,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 124,
      "pull_request_review_id" : 449142759,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-15T17:04:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455199527",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r456820373"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456820373"
         }
      },
      "author_association" : "MEMBER",
      "body" : "So if you have a transaction A with (say) 2000 outputs, and a transaction B that spends all 2000 of those outputs, then I believe this logic would cause us to enter A's txid 2000 times into the filter, which I believe will waste thousands of filter entries, right?",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-18T19:29:43Z",
      "diff_hunk" : "@@ -1677,11 +1689,22 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash))) {\n+                        LOCK(cs_main);\n+                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r456820373",
      "id" : 456820373,
      "in_reply_to_id" : 455199527,
      "line" : 1704,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgyMDM3Mw==",
      "original_commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "original_line" : 1704,
      "original_position" : 124,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 124,
      "pull_request_review_id" : 451077558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456820373",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r456824369"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456824369"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@sdaftuar Where does the number 24x and 2x come from? I think you may be right that there is a mismatch; `INVENTORY_MAX_RECENT_RELAY` is sized based on the avg _outbound_ inv rate, while the auto-adding of unconfirmed parents may mean that indirectly everything added to the mempool in the past `UNCONDITIONAL_RELAY_DELAY` can be announced - is there any reason why there'd be a lower bound than that?\r\n\r\nYou're also right about the duplicate txid issue, which seems solvable independently using a set to deduplicate or so.\r\n",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-18T20:20:29Z",
      "diff_hunk" : "@@ -1677,11 +1689,22 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash))) {\n+                        LOCK(cs_main);\n+                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r456824369",
      "id" : 456824369,
      "in_reply_to_id" : 455199527,
      "line" : 1704,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgyNDM2OQ==",
      "original_commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "original_line" : 1704,
      "original_position" : 124,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 124,
      "pull_request_review_id" : 451080214,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-18T20:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456824369",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r456826659"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456826659"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@sipa On further thought I think my concern about the size due to transaction chains may be incorrect -- I forgot that we add transactions that we announce to a peer to that peer's `filterInventoryKnown`, which means that such transactions wouldn't be re-added to the peer's recently announced filter.  So the only situation where you get this potential issue of adding a much larger multiple of the outbound peer announcement rate is where a node has just recently connected (and therefore never got the INVs for the parents), but that should solve itself relatively quickly (and wouldn't be a general issue on the network in busy times, as I initially hypothesized). \r\n\r\n> You're also right about the duplicate txid issue, which seems solvable independently using a set to deduplicate or so.\r\n\r\nYeah I think this gets fixed immediately by using the mempool to tell us the unconfirmed parents of the transaction in question, rather than loop over inputs.\r\n\r\n(PS If you open a PR to fix this, could you please wait until after wtxidrelay is merged?  Many thanks :) )\r\n\r\n",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2020-07-18T20:50:09Z",
      "diff_hunk" : "@@ -1677,11 +1689,22 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash))) {\n+                        LOCK(cs_main);\n+                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r456826659",
      "id" : 456826659,
      "in_reply_to_id" : 455199527,
      "line" : 1704,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgyNjY1OQ==",
      "original_commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "original_line" : 1704,
      "original_position" : 124,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 124,
      "pull_request_review_id" : 451081634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-18T20:50:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456826659",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r1182313081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182313081"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hope you don't mind me digging up an old PR - why do responses to mempool requests bypass the recently announced filter? And could it make sense to remove this special case? I get the idea is to give the peer access to full mempool contents, but it still seems better to only serve the stuff we announced. Concerned about `-peerbloomfilters=1` nodes getting fingerprinted through sending `mempool` + `getdata` for arbitrary transactions.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2023-05-02T09:28:22Z",
      "diff_hunk" : "@@ -1617,30 +1632,28 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n }\n \n //! Determine whether or not a peer can request a transaction, and return it (or nullptr if not found or not allowed).\n-CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds longlived_mempool_time) LOCKS_EXCLUDED(cs_main)\n+CTransactionRef static FindTxForGetData(const CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds now) LOCKS_EXCLUDED(cs_main)\n {\n-    // Check if the requested transaction is so recent that we're just\n-    // about to announce it to the peer; if so, they certainly shouldn't\n-    // know we already have it.\n-    {\n-        LOCK(peer.m_tx_relay->cs_tx_inventory);\n-        if (peer.m_tx_relay->setInventoryTxToSend.count(txid)) return {};\n+    auto txinfo = mempool.info(txid);\n+    if (txinfo.tx) {\n+        // If a TX could have been INVed in reply to a MEMPOOL request,\n+        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n+        // unconditionally.\n+        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n+            return std::move(txinfo.tx);\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r1182313081",
      "id" : 1182313081,
      "line" : 1644,
      "node_id" : "PRRC_kwDOABII585GeKp5",
      "original_commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "original_line" : 1644,
      "original_position" : 70,
      "original_start_line" : 1639,
      "path" : "src/net_processing.cpp",
      "position" : 70,
      "pull_request_review_id" : 1408741967,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182313081/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1639,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-02T09:28:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182313081",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r1182319182"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182319182"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I believe that was just done not to break existing use cases of BIP35. The thinking was perhaps that since it requires special setting/permission anyway for that peer, it can bypass the fingerprinting protections.",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2023-05-02T09:34:01Z",
      "diff_hunk" : "@@ -1617,30 +1632,28 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n }\n \n //! Determine whether or not a peer can request a transaction, and return it (or nullptr if not found or not allowed).\n-CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds longlived_mempool_time) LOCKS_EXCLUDED(cs_main)\n+CTransactionRef static FindTxForGetData(const CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds now) LOCKS_EXCLUDED(cs_main)\n {\n-    // Check if the requested transaction is so recent that we're just\n-    // about to announce it to the peer; if so, they certainly shouldn't\n-    // know we already have it.\n-    {\n-        LOCK(peer.m_tx_relay->cs_tx_inventory);\n-        if (peer.m_tx_relay->setInventoryTxToSend.count(txid)) return {};\n+    auto txinfo = mempool.info(txid);\n+    if (txinfo.tx) {\n+        // If a TX could have been INVed in reply to a MEMPOOL request,\n+        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n+        // unconditionally.\n+        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n+            return std::move(txinfo.tx);\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r1182319182",
      "id" : 1182319182,
      "in_reply_to_id" : 1182313081,
      "line" : 1644,
      "node_id" : "PRRC_kwDOABII585GeMJO",
      "original_commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "original_line" : 1644,
      "original_position" : 70,
      "original_start_line" : 1639,
      "path" : "src/net_processing.cpp",
      "position" : 70,
      "pull_request_review_id" : 1408750795,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182319182/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1639,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-02T09:34:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182319182",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r1182380379"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182380379"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just repeating a comment made on IRC here for posterity.\r\n\r\nIt seems to be the case that no special setting/permission is required to solicity a response to a mempool msg query, only that the local node has set NODE_BLOOM (_or_ we have whitelisted it with the mempool netpermission): https://github.com/bitcoin/bitcoin/blob/d89aca1bdbe52406f000e3fa8dda12c46dca9bdd/src/net_processing.cpp#LL4603C52-L4603\r\n\r\n\r\n\r\n",
      "commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "created_at" : "2023-05-02T10:39:21Z",
      "diff_hunk" : "@@ -1617,30 +1632,28 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n }\n \n //! Determine whether or not a peer can request a transaction, and return it (or nullptr if not found or not allowed).\n-CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds longlived_mempool_time) LOCKS_EXCLUDED(cs_main)\n+CTransactionRef static FindTxForGetData(const CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds now) LOCKS_EXCLUDED(cs_main)\n {\n-    // Check if the requested transaction is so recent that we're just\n-    // about to announce it to the peer; if so, they certainly shouldn't\n-    // know we already have it.\n-    {\n-        LOCK(peer.m_tx_relay->cs_tx_inventory);\n-        if (peer.m_tx_relay->setInventoryTxToSend.count(txid)) return {};\n+    auto txinfo = mempool.info(txid);\n+    if (txinfo.tx) {\n+        // If a TX could have been INVed in reply to a MEMPOOL request,\n+        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n+        // unconditionally.\n+        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n+            return std::move(txinfo.tx);\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19109#discussion_r1182380379",
      "id" : 1182380379,
      "in_reply_to_id" : 1182313081,
      "line" : 1644,
      "node_id" : "PRRC_kwDOABII585GebFb",
      "original_commit_id" : "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "original_line" : 1644,
      "original_position" : 70,
      "original_start_line" : 1639,
      "path" : "src/net_processing.cpp",
      "position" : 70,
      "pull_request_review_id" : 1408846328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182380379/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1639,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-02T10:39:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182380379",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   }
]
