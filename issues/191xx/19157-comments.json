[
   {
      "author_association" : "MEMBER",
      "body" : "> Both methods may fail to detect some deadlocks\r\n\r\nIt seems they fail to detect a deadlock, but isn't the deadlock happening good enough of an indication that something is wrong? For example running the tests and observing a reproducible timeout should be enough to hint to a deadlock, no?",
      "created_at" : "2020-06-03T13:29:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-638197523",
      "id" : 638197523,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzODE5NzUyMw==",
      "updated_at" : "2020-06-03T13:29:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638197523",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Well, the `DEBUG_LOCKORDER` checks and the deadlock detection from tsan exist because deadlocks happening are not good enough to analyze the problem. A sporadic timeout on CI once per week, or worse, on the users' computers without any printouts is very difficult to analyze.\r\n\r\nDeadlocks are often elusive and not 100% repoducable. Even in the test case above most of the code is to ensure that the deadlock actually happens :)",
      "created_at" : "2020-06-03T13:42:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-638205333",
      "id" : 638205333,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzODIwNTMzMw==",
      "updated_at" : "2020-06-03T13:42:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638205333",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-06-03T13:48:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-638209854",
      "id" : 638209854,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzODIwOTg1NA==",
      "updated_at" : "2020-06-03T13:48:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638209854",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I submitted the testcase at https://github.com/google/sanitizers/issues/1258. It looks like a bug to me.",
      "created_at" : "2020-06-03T19:21:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-638409425",
      "id" : 638409425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzODQwOTQyNQ==",
      "updated_at" : "2020-06-03T19:21:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638409425",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@vasild Are you familiar with the dining philosopher's problem?",
      "created_at" : "2020-06-03T19:33:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-638415904",
      "id" : 638415904,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzODQxNTkwNA==",
      "updated_at" : "2020-06-03T19:33:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638415904",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa, in the context of the dining philosophers problem I propose the [resource hierarchy solution](https://en.wikipedia.org/wiki/Dining_philosophers_problem#Resource_hierarchy_solution) where all resources (mutexes) are related by order.",
      "created_at" : "2020-06-04T06:53:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-638642004",
      "id" : 638642004,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzODY0MjAwNA==",
      "updated_at" : "2020-06-04T06:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638642004",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@vasild I'm not sure that works in the presence of multiple partially overlapping sets of dependent locks.\r\n\r\nLet's say the following lock orders exist: A->B A->C B->C (which is not a deadlock). Assume A->C is grabbed first, so you assign A=1, C=2; then A->B is grabbed, assigning B=3. Now B->C is grabbed which is considered a reversal and incorrectly treated as a deadlock.",
      "created_at" : "2020-06-04T19:30:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-639070249",
      "id" : 639070249,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTA3MDI0OQ==",
      "updated_at" : "2020-06-04T19:30:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639070249",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sorry, I should have elaborated more - by \"predefined\" I mean hardcoded in the source code (not assigned dynamically at runtime).\r\n\r\nIn the above case the developer(s) would assign A=1, B=2, C=3. Then, if the code has a bug and locks in different order, e.g. first B, then A, just executing that code path is enough to catch the problem. No need to have two contradicting executions A->B & B->A like now.\r\n\r\nI counted about 70 mutexes in the entire code base, including tests. If it turns out that this is too big to do in one go we can start with defining the order between some mutexes and assign \"wildcard\" to the rest, skipping the hierarchy check for them.",
      "created_at" : "2020-06-05T08:12:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-639328800",
      "id" : 639328800,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTMyODgwMA==",
      "updated_at" : "2020-06-05T08:12:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639328800",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This sounds similar to https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#acquired-before-acquired-after, but I heard someone say they are not actually implemented in libcxx <sup>[Citation needed]</sup>",
      "created_at" : "2020-06-05T11:51:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-639434176",
      "id" : 639434176,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTQzNDE3Ng==",
      "updated_at" : "2020-06-05T11:51:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639434176",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This sounds similar to https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#acquired-before-acquired-after, but I heard someone say they are not actually implemented in libcxx [Citation needed]\r\n\r\nhttps://clang.llvm.org/docs/ThreadSafetyAnalysis.html#acquired-before-and-acquired-after-are-currently-unimplemented",
      "created_at" : "2020-06-05T11:53:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-639434901",
      "id" : 639434901,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTQzNDkwMQ==",
      "updated_at" : "2020-06-05T11:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639434901",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@vasild I think that's a very ugly solution, as it requires global coordination over the whole codebase. It makes components less reusable, and means that the introduction of code that now grabs two previously unrelated locks may result in requiring a renumbering of several locks.\n\nAs performance does not matter that much, I think you could just run a naive cycle-finding algorithm (DFS traversal, caching which nodes you've already hit) to find issues.",
      "created_at" : "2020-06-05T17:23:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-639647817",
      "id" : 639647817,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTY0NzgxNw==",
      "updated_at" : "2020-06-05T17:23:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639647817",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "FWIW, a custom `hierarchical_mutex` mutex type and its usage are provided by Anthony Williams in his _C++ Concurrency in Action_, SE, 2019 (3.2.4 Deadlock: the problem and a solution -- Use a lock hierarchy).",
      "created_at" : "2020-06-05T17:44:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-639661769",
      "id" : 639661769,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTY2MTc2OQ==",
      "updated_at" : "2020-06-05T17:44:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639661769",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "All, thanks for the input! Next I will see if I can turn this into some code, so that we have something concrete to discuss.\r\n\r\nPS The cycle-finding algorithm is what TSan already does.",
      "created_at" : "2020-06-08T07:20:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-640416692",
      "id" : 640416692,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MDQxNjY5Mg==",
      "updated_at" : "2020-06-08T07:20:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/640416692",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@vasild did you ever investigate this further?",
      "created_at" : "2022-08-03T18:07:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-1204306739",
      "id" : 1204306739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "IC_kwDOABII585HyEMz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1204306739/reactions"
      },
      "updated_at" : "2022-08-03T18:07:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1204306739",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "No, but I don't think much investigation is needed. I just need to sit down and implement a hierarchical mutex (the [resource hierarchy solution](https://en.wikipedia.org/wiki/Dining_philosophers_problem#Resource_hierarchy_solution)) and see how it will be accepted by the community. I have worked with a [simple version of that in the InnoDB storage engine in MySQL](https://github.com/mysql/mysql-server/blob/fbdaa4def30d269bc4de5b85de61de34b11c0afc/storage/innobase/include/sync0types.h#L59) that was written in the 90s and it was perfectly reasonable (thanks, Heikki! :heart:). I think it can be done in a more elegant way with the new language extensions that we have now in 2022.",
      "created_at" : "2022-08-12T13:22:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19157#issuecomment-1213105407",
      "id" : 1213105407,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19157",
      "node_id" : "IC_kwDOABII585IToT_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1213105407/reactions"
      },
      "updated_at" : "2022-08-12T13:24:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1213105407",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
