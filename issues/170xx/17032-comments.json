[
   {
      "author_association" : "MEMBER",
      "body" : "Mhmm, I'm not sure why the new test works. In ```initialize_datadir()``` in test/test_framework/util.py it says:\r\n\r\n```\r\nf.write(\"{}=1\\n\".format(chain_name_conf_arg))\r\n```\r\n\r\nwhich would result in \r\n```\r\nchain_5=1\r\n```\r\nfor example instead of resulting in \r\n\r\n```\r\nchain=chain_5\r\n```\r\n\r\nas it should and would with:\r\n```\r\n        f.write(\"chain={}\\n\".format(chain_name_conf_arg))\r\n```\r\n\r\nIf I do the change, it still works, but then feature_config_args fails in the test that is run with mainnet (something that #16681 fixes, btw).\r\n\r\nAny ideas on why is it working?\r\n\r\n",
      "created_at" : "2019-10-03T18:56:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#issuecomment-538079113",
      "id" : 538079113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17032",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzODA3OTExMw==",
      "updated_at" : "2019-10-03T18:56:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/538079113",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18267 (BIP-325: Signet [consensus] by kallewoof)\n* #17556 (test: Change feature_config_args.py not to rely on strange regtest=0 behavior by ryanofsky)\n* #16770 (Chainparams: Rename IsTestChain() to AllowAcceptNonstd() by jtimon)\n* #16333 (test: Set BIP34Height = 2 for regtest by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-10-03T20:30:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#issuecomment-538115641",
      "id" : 538115641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17032",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzODExNTY0MQ==",
      "updated_at" : "2020-05-01T06:09:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/538115641",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Didn't look at the approach.",
      "created_at" : "2019-10-08T14:03:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#issuecomment-539529241",
      "id" : 539529241,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17032",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzOTUyOTI0MQ==",
      "updated_at" : "2019-10-08T14:03:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/539529241",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r339704075"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339704075"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Since this is called inside of `UpdateFromArgs()` I think this line can be removed?",
      "commit_id" : "2aaf473e57de8e4a016372273a95dd89e68caf7f",
      "created_at" : "2019-10-28T17:45:10Z",
      "diff_hunk" : "@@ -334,10 +291,12 @@ class CRegTestParams : public CChainParams {\n         consensus.vDeployments[d].nTimeout = nTimeout;\n     }\n     void UpdateActivationParametersFromArgs(const ArgsManager& args);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r339704075",
      "id" : 339704075,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzOTcwNDA3NQ==",
      "original_commit_id" : "6c54f7d447b130b5c69193c651bd49a6e781c3d7",
      "original_position" : 77,
      "path" : "src/chainparams.cpp",
      "position" : 80,
      "pull_request_review_id" : 308032973,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032",
      "updated_at" : "2020-02-19T20:50:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339704075",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r339704137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339704137"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could set this string from `CBaseChainParams::REGTEST`.",
      "commit_id" : "2aaf473e57de8e4a016372273a95dd89e68caf7f",
      "created_at" : "2019-10-28T17:45:17Z",
      "diff_hunk" : "@@ -255,54 +255,18 @@ class CRegTestParams : public CChainParams {\n public:\n     explicit CRegTestParams(const ArgsManager& args) {\n         strNetworkID = \"regtest\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r339704137",
      "id" : 339704137,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzOTcwNDEzNw==",
      "original_commit_id" : "6c54f7d447b130b5c69193c651bd49a6e781c3d7",
      "original_position" : 3,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 308032973,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032",
      "updated_at" : "2020-02-19T20:50:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339704137",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r340273954"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340273954"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, the method still needs to be declared.\r\n```\r\nchainparams.cpp:296:6: error: no declaration matches âvoid CRegTestParams::UpdateActivationParametersFromArgs(const ArgsManager&)â\r\n void CRegTestParams::UpdateActivationParametersFromArgs(const ArgsManager& args)\r\n      ^~~~~~~~~~~~~~\r\nchainparams.cpp:296:6: note: no functions named âvoid CRegTestParams::UpdateActivationParametersFromArgs(const ArgsManager&)â\r\nchainparams.cpp:254:7: note: âclass CRegTestParamsâ defined here\r\n class CRegTestParams : public CChainParams {\r\n       ^~~~~~~~~~~~~~\r\nchainparams.cpp: In member function âvoid CRegTestParams::UpdateFromArgs(const ArgsManager&)â:\r\nchainparams.cpp:342:5: error: âUpdateActivationParametersFromArgsâ was not declared in this scope\r\n     UpdateActivationParametersFromArgs(args);\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nchainparams.cpp:342:5: note: suggested alternative: âUpdateVersionBitsParametersâ\r\n     UpdateActivationParametersFromArgs(args);\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     UpdateVersionBitsParameters\r\n\r\n```",
      "commit_id" : "2aaf473e57de8e4a016372273a95dd89e68caf7f",
      "created_at" : "2019-10-29T19:10:36Z",
      "diff_hunk" : "@@ -334,10 +291,12 @@ class CRegTestParams : public CChainParams {\n         consensus.vDeployments[d].nTimeout = nTimeout;\n     }\n     void UpdateActivationParametersFromArgs(const ArgsManager& args);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r340273954",
      "id" : 340273954,
      "in_reply_to_id" : 339704075,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDI3Mzk1NA==",
      "original_commit_id" : "6c54f7d447b130b5c69193c651bd49a6e781c3d7",
      "original_position" : 77,
      "path" : "src/chainparams.cpp",
      "position" : 80,
      "pull_request_review_id" : 308766865,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032",
      "updated_at" : "2020-02-19T20:50:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340273954",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r340283357"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340283357"
         }
      },
      "author_association" : "MEMBER",
      "body" : "mhmm. I remember this failing to compile or to run at some point, but it seems to work now. Perhaps it had to do with some older version of cpp or something. Or perhaps I misremember and it was only networksyle.cpp where I wasn't able to to it.\r\nIn any case, since this can be done for other chains other than regtest and in other places other than chainparams.cpp, I'm going to do it in another PR: https://github.com/bitcoin/bitcoin/pull/17306",
      "commit_id" : "2aaf473e57de8e4a016372273a95dd89e68caf7f",
      "created_at" : "2019-10-29T19:32:22Z",
      "diff_hunk" : "@@ -255,54 +255,18 @@ class CRegTestParams : public CChainParams {\n public:\n     explicit CRegTestParams(const ArgsManager& args) {\n         strNetworkID = \"regtest\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r340283357",
      "id" : 340283357,
      "in_reply_to_id" : 339704137,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDI4MzM1Nw==",
      "original_commit_id" : "6c54f7d447b130b5c69193c651bd49a6e781c3d7",
      "original_position" : 3,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 308779136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032",
      "updated_at" : "2020-02-19T20:50:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340283357",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-10-30T12:10:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#issuecomment-547871239",
      "id" : 547871239,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17032",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzg3MTIzOQ==",
      "updated_at" : "2019-10-30T12:10:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547871239",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased after #17306 was merged.\r\nFixed nit in https://github.com/bitcoin/bitcoin/pull/17306#discussion_r340289065 here.",
      "created_at" : "2019-10-30T12:53:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#issuecomment-547887045",
      "id" : 547887045,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17032",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzg4NzA0NQ==",
      "updated_at" : "2019-10-30T12:53:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547887045",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2020-02-18T02:54:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#issuecomment-587249429",
      "id" : 587249429,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17032",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NzI0OTQyOQ==",
      "updated_at" : "2020-02-18T02:54:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587249429",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2020-02-19T20:41:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#issuecomment-588442810",
      "id" : 588442810,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17032",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODQ0MjgxMA==",
      "updated_at" : "2020-02-19T20:41:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588442810",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "One way to demonstrate the usefulness of this, is to design a test where `getchaintips` contains an `invalid` tip.",
      "created_at" : "2020-03-03T13:37:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#issuecomment-593953542",
      "id" : 593953542,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17032",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5Mzk1MzU0Mg==",
      "updated_at" : "2020-03-03T13:37:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/593953542",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r387159255"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387159255"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why even expose this option if `-acceptnonstdtxn=0` does the trick?",
      "commit_id" : "2aaf473e57de8e4a016372273a95dd89e68caf7f",
      "created_at" : "2020-03-03T16:56:51Z",
      "diff_hunk" : "@@ -23,6 +23,39 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nsubsidyhalvinginterval\", \"Number of blocks between one subsidy adjustment and the next one. Default: 150 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip16exception\", \"A block hash not to validate BIP16 on. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip34height\", \"Height from which BIP34 is enforced. Default: 500 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip34hash\", \"Hardcoded hash for BIP34 activation corresponding to the bip34height so that bip30 checks can be saved. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip65height\", \"Height from which BIP65 is enforced. Default: 1351 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip66height\", \"Height from which BIP66 is enforced. Default: 1251 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_csvheight\", \"Height from which CSV is enforced. Default: 432 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_minbip9warningheight\", \"Height from which BIP9 warnings are used. Default: 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_powlimit\", \"Maximum proof of work target. Default 7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_npowtargettimespan\", \"Proof of work retargetting interval in seconds. Default: 2 weeks (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_npowtargetspacing\", \"Proof of work target for interval between blocks in seconds. Default: 600 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_fpowallowmindifficultyblocks\", \"Whether the chain allows minimum difficulty blocks or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_fpownoretargeting\", \"Whether the chain skips proof of work retargetting or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nminerconfirmationwindow\", \"Interval for BIP9 deployment activation. Default: 144 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nrulechangeactivationthreshold\", \"Minimum blocks to signal readiness for a chain for BIP9 activation. Default 108 (ie 75%). (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nminimumchainwork\", \"The best chain should have at least this much work. Default: 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_defaultassumevalid\", \"By default assume that the signatures in ancestors of this block are valid. Consider using -assumevalid instead. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-ndefaultport\", \"The port to listen for connections on by default. Consider using -port instead of changing the default.  Default: 18444 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-npruneafterheight\", \"Only start prunning after this height. Default: 1000 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-assumed_blockchain_size\", \"Estimated current blockchain size (in GB) for UI purposes. Default 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-assumed_chain_state_size\", \"Estimated current chain state size (in GB) for UI purposes. Default 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-fdefaultconsistencychecks\", \"Whether -checkblockindex and -checkmempool are active by default or not. Consider using those options instead. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-frequirestandard\", \"Whether standard policy rules are applied in the local mempool by default. Consider using -acceptnonstdtxn=0 instead of changing the default. Default: 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r387159255",
      "id" : 387159255,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE1OTI1NQ==",
      "original_commit_id" : "340d62d48d9b48635070cc1e4e68ad443b04bd8b",
      "original_position" : 26,
      "path" : "src/chainparamsbase.cpp",
      "position" : 26,
      "pull_request_review_id" : 368154740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032",
      "updated_at" : "2020-03-03T17:14:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387159255",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r387159648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387159648"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems useless?",
      "commit_id" : "2aaf473e57de8e4a016372273a95dd89e68caf7f",
      "created_at" : "2020-03-03T16:57:28Z",
      "diff_hunk" : "@@ -23,6 +23,39 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nsubsidyhalvinginterval\", \"Number of blocks between one subsidy adjustment and the next one. Default: 150 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip16exception\", \"A block hash not to validate BIP16 on. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip34height\", \"Height from which BIP34 is enforced. Default: 500 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip34hash\", \"Hardcoded hash for BIP34 activation corresponding to the bip34height so that bip30 checks can be saved. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip65height\", \"Height from which BIP65 is enforced. Default: 1351 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip66height\", \"Height from which BIP66 is enforced. Default: 1251 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_csvheight\", \"Height from which CSV is enforced. Default: 432 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_minbip9warningheight\", \"Height from which BIP9 warnings are used. Default: 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_powlimit\", \"Maximum proof of work target. Default 7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_npowtargettimespan\", \"Proof of work retargetting interval in seconds. Default: 2 weeks (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_npowtargetspacing\", \"Proof of work target for interval between blocks in seconds. Default: 600 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_fpowallowmindifficultyblocks\", \"Whether the chain allows minimum difficulty blocks or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_fpownoretargeting\", \"Whether the chain skips proof of work retargetting or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nminerconfirmationwindow\", \"Interval for BIP9 deployment activation. Default: 144 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nrulechangeactivationthreshold\", \"Minimum blocks to signal readiness for a chain for BIP9 activation. Default 108 (ie 75%). (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nminimumchainwork\", \"The best chain should have at least this much work. Default: 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_defaultassumevalid\", \"By default assume that the signatures in ancestors of this block are valid. Consider using -assumevalid instead. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-ndefaultport\", \"The port to listen for connections on by default. Consider using -port instead of changing the default.  Default: 18444 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-npruneafterheight\", \"Only start prunning after this height. Default: 1000 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-assumed_blockchain_size\", \"Estimated current blockchain size (in GB) for UI purposes. Default 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-assumed_chain_state_size\", \"Estimated current chain state size (in GB) for UI purposes. Default 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-fdefaultconsistencychecks\", \"Whether -checkblockindex and -checkmempool are active by default or not. Consider using those options instead. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-frequirestandard\", \"Whether standard policy rules are applied in the local mempool by default. Consider using -acceptnonstdtxn=0 instead of changing the default. Default: 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-is_test_chain\", \"Whether it's allowed to set -acceptnonstdtxn=0 for this chain or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r387159648",
      "id" : 387159648,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE1OTY0OA==",
      "original_commit_id" : "340d62d48d9b48635070cc1e4e68ad443b04bd8b",
      "original_position" : 27,
      "path" : "src/chainparamsbase.cpp",
      "position" : 27,
      "pull_request_review_id" : 368154740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032",
      "updated_at" : "2020-03-03T17:14:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387159648",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r387160070"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387160070"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you think of a use case where _disabling_ mocktime on regtest makes sense?",
      "commit_id" : "2aaf473e57de8e4a016372273a95dd89e68caf7f",
      "created_at" : "2020-03-03T16:58:08Z",
      "diff_hunk" : "@@ -23,6 +23,39 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nsubsidyhalvinginterval\", \"Number of blocks between one subsidy adjustment and the next one. Default: 150 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip16exception\", \"A block hash not to validate BIP16 on. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip34height\", \"Height from which BIP34 is enforced. Default: 500 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip34hash\", \"Hardcoded hash for BIP34 activation corresponding to the bip34height so that bip30 checks can be saved. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip65height\", \"Height from which BIP65 is enforced. Default: 1351 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip66height\", \"Height from which BIP66 is enforced. Default: 1251 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_csvheight\", \"Height from which CSV is enforced. Default: 432 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_minbip9warningheight\", \"Height from which BIP9 warnings are used. Default: 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_powlimit\", \"Maximum proof of work target. Default 7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_npowtargettimespan\", \"Proof of work retargetting interval in seconds. Default: 2 weeks (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_npowtargetspacing\", \"Proof of work target for interval between blocks in seconds. Default: 600 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_fpowallowmindifficultyblocks\", \"Whether the chain allows minimum difficulty blocks or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_fpownoretargeting\", \"Whether the chain skips proof of work retargetting or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nminerconfirmationwindow\", \"Interval for BIP9 deployment activation. Default: 144 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nrulechangeactivationthreshold\", \"Minimum blocks to signal readiness for a chain for BIP9 activation. Default 108 (ie 75%). (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nminimumchainwork\", \"The best chain should have at least this much work. Default: 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_defaultassumevalid\", \"By default assume that the signatures in ancestors of this block are valid. Consider using -assumevalid instead. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-ndefaultport\", \"The port to listen for connections on by default. Consider using -port instead of changing the default.  Default: 18444 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-npruneafterheight\", \"Only start prunning after this height. Default: 1000 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-assumed_blockchain_size\", \"Estimated current blockchain size (in GB) for UI purposes. Default 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-assumed_chain_state_size\", \"Estimated current chain state size (in GB) for UI purposes. Default 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-fdefaultconsistencychecks\", \"Whether -checkblockindex and -checkmempool are active by default or not. Consider using those options instead. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-frequirestandard\", \"Whether standard policy rules are applied in the local mempool by default. Consider using -acceptnonstdtxn=0 instead of changing the default. Default: 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-is_test_chain\", \"Whether it's allowed to set -acceptnonstdtxn=0 for this chain or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-is_mockable_chain\", \"Whether mocktime rpc calls are allowed or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r387160070",
      "id" : 387160070,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE2MDA3MA==",
      "original_commit_id" : "340d62d48d9b48635070cc1e4e68ad443b04bd8b",
      "original_position" : 28,
      "path" : "src/chainparamsbase.cpp",
      "position" : 28,
      "pull_request_review_id" : 368154740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032",
      "updated_at" : "2020-03-03T17:14:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387160070",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r387161703"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387161703"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Light preference for making this hex, to be consistent with `-extpubkeyprefix` and friends.",
      "commit_id" : "2aaf473e57de8e4a016372273a95dd89e68caf7f",
      "created_at" : "2020-03-03T17:00:47Z",
      "diff_hunk" : "@@ -23,6 +23,39 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nsubsidyhalvinginterval\", \"Number of blocks between one subsidy adjustment and the next one. Default: 150 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip16exception\", \"A block hash not to validate BIP16 on. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip34height\", \"Height from which BIP34 is enforced. Default: 500 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip34hash\", \"Hardcoded hash for BIP34 activation corresponding to the bip34height so that bip30 checks can be saved. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip65height\", \"Height from which BIP65 is enforced. Default: 1351 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_bip66height\", \"Height from which BIP66 is enforced. Default: 1251 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_csvheight\", \"Height from which CSV is enforced. Default: 432 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_minbip9warningheight\", \"Height from which BIP9 warnings are used. Default: 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_powlimit\", \"Maximum proof of work target. Default 7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_npowtargettimespan\", \"Proof of work retargetting interval in seconds. Default: 2 weeks (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_npowtargetspacing\", \"Proof of work target for interval between blocks in seconds. Default: 600 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_fpowallowmindifficultyblocks\", \"Whether the chain allows minimum difficulty blocks or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_fpownoretargeting\", \"Whether the chain skips proof of work retargetting or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nminerconfirmationwindow\", \"Interval for BIP9 deployment activation. Default: 144 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nrulechangeactivationthreshold\", \"Minimum blocks to signal readiness for a chain for BIP9 activation. Default 108 (ie 75%). (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_nminimumchainwork\", \"The best chain should have at least this much work. Default: 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-con_defaultassumevalid\", \"By default assume that the signatures in ancestors of this block are valid. Consider using -assumevalid instead. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-ndefaultport\", \"The port to listen for connections on by default. Consider using -port instead of changing the default.  Default: 18444 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-npruneafterheight\", \"Only start prunning after this height. Default: 1000 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-assumed_blockchain_size\", \"Estimated current blockchain size (in GB) for UI purposes. Default 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-assumed_chain_state_size\", \"Estimated current chain state size (in GB) for UI purposes. Default 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-fdefaultconsistencychecks\", \"Whether -checkblockindex and -checkmempool are active by default or not. Consider using those options instead. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-frequirestandard\", \"Whether standard policy rules are applied in the local mempool by default. Consider using -acceptnonstdtxn=0 instead of changing the default. Default: 0 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-is_test_chain\", \"Whether it's allowed to set -acceptnonstdtxn=0 for this chain or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-is_mockable_chain\", \"Whether mocktime rpc calls are allowed or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-bech32_hrp\", \"Human readable part for bech32 addresses. See BIP173 for more info. Default: bcrt (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-pubkeyprefix\", \"Magic for base58 pubkeys. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r387161703",
      "id" : 387161703,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE2MTcwMw==",
      "original_commit_id" : "340d62d48d9b48635070cc1e4e68ad443b04bd8b",
      "original_position" : 30,
      "path" : "src/chainparamsbase.cpp",
      "position" : 30,
      "pull_request_review_id" : 368154740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032",
      "updated_at" : "2020-03-03T17:14:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387161703",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r387165365"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387165365"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems unsafe. We really want to test with actual mainnet, see e.g. #17449.",
      "commit_id" : "2aaf473e57de8e4a016372273a95dd89e68caf7f",
      "created_at" : "2020-03-03T17:06:33Z",
      "diff_hunk" : "@@ -42,9 +42,9 @@ def test_config_file_parser(self):\n             self.nodes[0].assert_start_raises_init_error(expected_msg='Error: Config setting for -wallet only applied on %s network when in [%s] section.' % (self.chain, self.chain))\n \n         with open(inc_conf_file_path, 'w', encoding='utf-8') as conf:\n-            conf.write('regtest=0\\n') # mainnet\n+            conf.write('is_test_chain=0\\n') # like mainnet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#discussion_r387165365",
      "id" : 387165365,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE2NTM2NQ==",
      "original_commit_id" : "2aaf473e57de8e4a016372273a95dd89e68caf7f",
      "original_position" : 5,
      "path" : "test/functional/feature_config_args.py",
      "position" : 5,
      "pull_request_review_id" : 368154740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17032",
      "updated_at" : "2020-03-03T17:14:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387165365",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for all the reviews, really.\r\nBut I'm no longer interested in this.\r\nPlease, if anyone is interested, don't hesitate to take the branch and improve it and try, rewrite it or whatever.\r\n",
      "created_at" : "2020-05-06T13:35:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17032#issuecomment-624653215",
      "id" : 624653215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17032",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDY1MzIxNQ==",
      "updated_at" : "2020-05-06T13:35:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624653215",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   }
]
