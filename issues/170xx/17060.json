{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "This is an attempt to more tightly pack the data inside `CCoinsMap`. (replaces #16970, done after my investigations on #16957) Currently, there is quite a bit of overhead involved in the `CCoinsMap::value_type` data structure (total bytes to the left):\r\n\r\n```\r\n96 CCoinsMap::value_type\r\n    36 COutPoint\r\n        32 uint256\r\n         4 uint32_t\r\n     4 >>> PADDING <<<\r\n    56 CCoinsCacheEntry\r\n        48 Coin\r\n            40 CTxOut\r\n                8 nValue\r\n                32 CScript\r\n             4 fCoinBase & nHeight\r\n             4 >>> PADDING <<<\r\n         1 flags (dirty & fresh)\r\n         7 >>> PADDING <<< \r\n```\r\n\r\nSo there is quite a bit of padding data. In my experiements I've noticed that the compiler is forced to use a padding size >=8 only because `nValue`'s `CAmount` type is `int64_t` which has to be 8-byte aligned. When replacing nValue with a 4-byte aligned data structure, the whole `CCoinsMap::value_type` will be aligned to 4 bytes, reducing padding.\r\n\r\nAnother 4 bytes can be saved by refactoring `prevector` to only use a single byte for direct size information, and reducing CScript's size from 28  to 27 bytes. It is still able to directly cache most scripts as most are <= 25 bytes long.\r\n\r\nThe remaining 4 bytes due to the 1 byte flag + 3 bytes padding in `CCoinsCacheEntry` can be removed by moving the flags into `Coin`, stealing another 2 bits from `nHeight`. \r\n\r\nFinally, the resulting data structure is 20 bytes smaller:\r\n\r\n```\r\n76 CCoinsMap::value_type\r\n    36 COutPoint\r\n        32 uint256\r\n         4 uint32_t\r\n    40 CCoinsCacheEntry\r\n        40 Coin\r\n            36 CTxOut\r\n                 8 nValue\r\n                28 CScript\r\n            4 fCoinBase & nHeight & flags (dirty & fresh)\r\n```\r\n\r\nSo we can store about 26% more data into dbcache's memory. I have evalued this on my Intel i7-8700, 32GB RAM, external SSD, for `-reindex-chainstate` with both `-dbcache=500` and `-dbcache=5000`:\r\n\r\n![out2](https://user-images.githubusercontent.com/14386/66253968-18352400-e770-11e9-9cf3-7ca5b5099054.png)\r\n\r\nÂ  | Â  | time | max resident set size\r\n-- | -- | -- | --\r\nmaster | -dbcache=500 | 05:57:20 | 2957532\r\n2019-09-more-compact-Coin | -dbcache=500 | 05:33:37 | 2919312\r\nImprovement | Â  | 6,64% | 1,29%\r\n\r\n\r\nÂ  | Â  | time | max resident set size\r\n-- | -- | -- | --\r\nmaster | -dbcache=5000 | 04:22:42 | 7072612\r\n2019-09-more-compact-Coin | -dbcache=5000 | 04:09:16 | 6533132\r\nImprovement | Â  | 5,11% | 7,63%\r\n\r\nSo on my machine there is definitive an improvement, but honestly I am not sure if this ~6% improvement is worth the change. Maybe the improvement is bigger with slower disk, as ~26% more transaction can be cached.",
   "closed_at" : "2020-02-18T22:45:52Z",
   "closed_by" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
      "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
      "followers_url" : "https://api.github.com/users/martinus/followers",
      "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/martinus",
      "id" : 14386,
      "login" : "martinus",
      "node_id" : "MDQ6VXNlcjE0Mzg2",
      "organizations_url" : "https://api.github.com/users/martinus/orgs",
      "received_events_url" : "https://api.github.com/users/martinus/received_events",
      "repos_url" : "https://api.github.com/users/martinus/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/martinus"
   },
   "comments" : 47,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060/comments",
   "created_at" : "2019-10-05T11:07:11Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060",
   "id" : 502949810,
   "labels" : [
      {
         "color" : "fef2c0",
         "default" : false,
         "description" : "",
         "id" : 1392286103,
         "name" : "Needs Conceptual Review",
         "node_id" : "MDU6TGFiZWwxMzkyMjg2MTAz",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review"
      },
      {
         "color" : "cccccc",
         "default" : false,
         "description" : "",
         "id" : 955867938,
         "name" : "Needs rebase",
         "node_id" : "MDU6TGFiZWw5NTU4Njc5Mzg=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase"
      },
      {
         "color" : "981023",
         "default" : false,
         "description" : null,
         "id" : 326918230,
         "name" : "Resource usage",
         "node_id" : "MDU6TGFiZWwzMjY5MTgyMzA=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Resource%20usage"
      },
      {
         "color" : "fbca04",
         "default" : false,
         "description" : null,
         "id" : 97470796,
         "name" : "UTXO Db and Indexes",
         "node_id" : "MDU6TGFiZWw5NzQ3MDc5Ng==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes"
      },
      {
         "color" : "6060aa",
         "default" : false,
         "description" : null,
         "id" : 118379652,
         "name" : "Validation",
         "node_id" : "MDU6TGFiZWwxMTgzNzk2NTI=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MzI0OTMwNDYz",
   "number" : 17060,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/17060.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17060",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/17060.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17060"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Cache 26% more coins: Reduce CCoinsMap::value_type from 96 to 76 bytes",
   "updated_at" : "2020-02-18T22:45:52Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17060",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
      "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
      "followers_url" : "https://api.github.com/users/martinus/followers",
      "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/martinus",
      "id" : 14386,
      "login" : "martinus",
      "node_id" : "MDQ6VXNlcjE0Mzg2",
      "organizations_url" : "https://api.github.com/users/martinus/orgs",
      "received_events_url" : "https://api.github.com/users/martinus/received_events",
      "repos_url" : "https://api.github.com/users/martinus/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/martinus"
   }
}
