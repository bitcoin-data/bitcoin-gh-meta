{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Moving the discussion from #15798 here, as it makes more sense to have it in an issue instead of a PR. #15798 no longer reflects the current proposed Rust changes, and Rust related work is now happening across multiple others.\r\n\r\n[Corys](https://github.com/theuni/) thoughts / introduction from #15798:\r\n\r\n> This is not intended to be merged as-is, but instead to serve as a reference for anyone who might be interested in trying out some rust code inside of Bitcoin Core. I have no idea what works. I have lots of questions about debugging, threading, etc. But instead of trying to hack and document how things work, we thought it'd be fun for everyone to be able to poke at it and scratch our heads together :). If something interesting comes out of it, a discussion about merging can happen then.\r\n\r\n> It is surprisingly functional. The rust tools are impeccable. I would've thought this would be a project that would take months/years, but the rust devs have done such a good job that mostly everything already just works. The gitian descriptors have been modified to actually incorporate working rust code. All of our currently supported platforms seem to already work (even macOS cross!) with the exception of 32bit windows and ancient linux distros. The specific issues are documented in the gitian descriptors. For now, Gitian needs net access and a larger disk volume, but those are both very temporary issues\r\n\r\n> Why rust? I don't know. Maybe not. But I think it's a fair assumption to say that Rust code will eventually end up in Bitcoin Core as the result of adding a new dependency. Adoption is happing quickly. So, I think it prudent to look ahead and not only be prepared, but actively help usher it in. Already I have a few things that I would like to work on and upstream to rust-lang to make our integration nicer, and I assume that more will be uncovered as it actually gets used.\r\n\r\n> Anybody have any fun ideas?\r\n\r\nThere's still discussion to be had / documentation to be added around various Rust related decisions, such as:\r\n* Whether to use/require the `2015` or `2018` Editions.\r\n* A minimum required version of the language.\r\n* How failures in the Rust code are (expected to be) handled by the c++ code.\r\n\r\nAs well as higher level discussions around how far we might take the Rust integration/re-writing of certain parts of the code, and the complexities that could introduce in regards which contributors can/can't write/review Rust, or have more/less experience with the language compared to `C++` etc.\r\n\r\nPersonally, I'd like to think that we'll have some off-by-default Rust as part of the Bitcoin Core 0.20.0 release; and I think something like #16834 might be a good first approach. Regardless of approach, the idea of using Rust inside Bitcoin Core seems to resonate with some of the (still limited set) of other contributors I've discussed it with.\r\n\r\n#### Using `rustc` directly instead of Cargo\r\nThe initial Rust [integration PR](https://github.com/bitcoin/bitcoin/pull/15798) used [Cargo](https://doc.rust-lang.org/cargo) for managing compiling, dependencies etc. Since then, the Rust changes have been refactored to remove the `cbindgen` dependency and drop any usage of Cargo altogether, in favour of using [`rustc` directly](https://github.com/bitcoin/bitcoin/pull/16834/files#diff-480477e89f9b6ddafb30c4383dcdd705R371).\r\n\r\nSee also the recent [Security advisory for Cargo](https://blog.rust-lang.org/2019/09/30/Security-advisory-for-cargo.html).\r\n\r\n#### Related PRs\r\n[Fetch Headers over DNS](https://github.com/bitcoin/bitcoin/pull/16834)\r\n[Rust-based Backup over-REST block downloader](https://github.com/bitcoin/bitcoin/pull/16762)\r\n[Add Parallel P2P Client in Rust](https://github.com/bitcoin/bitcoin/pull/17376)\r\n\r\n\r\n#### Related Reading\r\n[Bootstrapping Rust using Guix](https://guix.gnu.org/blog/2018/bootstrapping-rust/)",
   "closed_at" : "2022-08-15T13:13:54Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 38,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17090/comments",
   "created_at" : "2019-10-09T21:01:30Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17090/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/17090",
   "id" : 504893181,
   "labels" : [
      {
         "color" : "ebd775",
         "default" : false,
         "description" : null,
         "id" : 64584,
         "name" : "Brainstorming",
         "node_id" : "MDU6TGFiZWw2NDU4NA==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming"
      },
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      },
      {
         "color" : "fef2c0",
         "default" : false,
         "description" : "",
         "id" : 1392286103,
         "name" : "Needs Conceptual Review",
         "node_id" : "MDU6TGFiZWwxMzkyMjg2MTAz",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17090/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU1MDQ4OTMxODE=",
   "number" : 17090,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 22,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 22,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17090/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : "completed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17090/timeline",
   "title" : "RFC: Rust code integration",
   "updated_at" : "2022-08-15T13:13:55Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17090",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
