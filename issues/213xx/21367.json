{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Reported on IRC [this morning](http://www.erisian.com.au/bitcoin-core-dev/log-2021-03-05.html#l-1). I've recreated using the following and master @ da8c7edffe0c9efe99d56ec9e8b96b3b4e3e275f:\r\n```bash\r\nUbuntu 20.04.2 LTS\r\ng++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\r\nPython 3.8.5\r\nvalgrind-3.15.0\r\n\r\nmake -C depends/ NO_QT=1 NO_UPNP=1 NO_ZMQ=1 NO_NATPMP=1 -j10\r\n./autogen.sh.sh\r\n./configure --prefix=/home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu\r\nmake -j10\r\ntest/functional/test_runner.py \"wallet_send.py --descriptors\" --valgrind\r\n```\r\n\r\n```bash\r\ntest/functional/test_runner.py \"wallet_hd.py --descriptors\" --valgrind\r\nTemporary test directory at /tmp/test_runner_â¿_ð_20210305_025257\r\nRunning Unit Tests for Test Framework Modules\r\n..........\r\n----------------------------------------------------------------------\r\nRan 10 tests in 0.601s\r\n\r\nOK\r\nRemaining jobs: [wallet_hd.py --descriptors]\r\n1/1 - wallet_hd.py --descriptors failed, Duration: 8 s\r\n\r\nstdout:\r\n2021-03-05T02:52:57.805000Z TestFramework (INFO): Initializing test directory /tmp/test_runner_â¿_ð_20210305_025257/wallet_hd_0\r\n2021-03-05T02:53:05.165000Z TestFramework (ERROR): Unexpected exception caught during testing\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/authproxy.py\", line 108, in _request\r\n    return self._get_response()\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/authproxy.py\", line 168, in _get_response\r\n    http_response = self.__conn.getresponse()\r\n  File \"/usr/lib/python3.8/http/client.py\", line 1347, in getresponse\r\n    response.begin()\r\n  File \"/usr/lib/python3.8/http/client.py\", line 307, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/usr/lib/python3.8/http/client.py\", line 276, in _read_status\r\n    raise RemoteDisconnected(\"Remote end closed connection without\"\r\nhttp.client.RemoteDisconnected: Remote end closed connection without response\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 127, in main\r\n    self.setup()\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 278, in setup\r\n    self.setup_network()\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 372, in setup_network\r\n    self.setup_nodes()\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 399, in setup_nodes\r\n    self.import_deterministic_coinbase_privkeys()\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 416, in import_deterministic_coinbase_privkeys\r\n    self.init_wallet(i)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 424, in init_wallet\r\n    n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase')\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_node.py\", line 696, in importprivkey\r\n    import_res = self.importdescriptors(req)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/authproxy.py\", line 144, in __call__\r\n    response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/authproxy.py\", line 113, in _request\r\n    self.__conn.request(method, path, postdata, headers)\r\n  File \"/usr/lib/python3.8/http/client.py\", line 1255, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.8/http/client.py\", line 1301, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.8/http/client.py\", line 1250, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.8/http/client.py\", line 1010, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib/python3.8/http/client.py\", line 950, in send\r\n    self.connect()\r\n  File \"/usr/lib/python3.8/http/client.py\", line 921, in connect\r\n    self.sock = self._create_connection(\r\n  File \"/usr/lib/python3.8/socket.py\", line 808, in create_connection\r\n    raise err\r\n  File \"/usr/lib/python3.8/socket.py\", line 796, in create_connection\r\n    sock.connect(sa)\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n2021-03-05T02:53:05.216000Z TestFramework (INFO): Stopping nodes\r\n2021-03-05T02:53:05.216000Z TestFramework.node0 (ERROR): Unable to stop node.\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_node.py\", line 323, in stop_node\r\n    self.stop(wait=wait)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/authproxy.py\", line 144, in __call__\r\n    response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/authproxy.py\", line 107, in _request\r\n    self.__conn.request(method, path, postdata, headers)\r\n  File \"/usr/lib/python3.8/http/client.py\", line 1255, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.8/http/client.py\", line 1266, in _send_request\r\n    self.putrequest(method, url, **skips)\r\n  File \"/usr/lib/python3.8/http/client.py\", line 1092, in putrequest\r\n    raise CannotSendRequest(self.__state)\r\nhttp.client.CannotSendRequest: Request-sent\r\n\r\n\r\nstderr:\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/bitcoin/test/functional/wallet_hd.py\", line 279, in <module>\r\n    WalletHDTest().main()\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 151, in main\r\n    exit_code = self.shutdown()\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 294, in shutdown\r\n    self.stop_nodes()\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 541, in stop_nodes\r\n    node.stop_node(wait=wait, wait_until_stopped=False)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_node.py\", line 337, in stop_node\r\n    raise AssertionError(\"Unexpected stderr {} != {}\".format(stderr, expected_stderr))\r\nAssertionError: Unexpected stderr ==2717675== Thread 13 b-httpworker.2:\r\n==2717675== Conditional jump or move depends on uninitialised value(s)\r\n==2717675==    at 0x5873EB: CWallet::ScanForWalletTransactions(uint256 const&, int, std::optional<int>, WalletRescanReserver const&, bool) (in /home/ubuntu/bitcoin/src/bitcoind)\r\n==2717675==    by 0x587E2A: CWallet::RescanFromTime(long, WalletRescanReserver const&, bool) (in /home/ubuntu/bitcoin/src/bitcoind)\r\n==2717675==    by 0x5FEFE7: importdescriptors()::{lambda(RPCHelpMan const&, JSONRPCRequest const&)#1}::operator()(RPCHelpMan const&, JSONRPCRequest const&) const [clone .isra.0] (in /home/ubuntu/bitcoin/src/bitcoind)\r\n==2717675==    by 0x600024: std::_Function_handler<UniValue (RPCHelpMan const&, JSONRPCRequest const&), importdescriptors()::{lambda(RPCHelpMan const&, JSONRPCRequest const&)#1}>::_M_invoke(std::_Any_data const&, RPCHelpMan const&, JSONRPCRequest const&) (in /home/ubuntu/bitcoin/src/bitcoind)\r\n==2717675==    by 0x32F958: CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, RPCHelpMan (*)())::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}::operator()(JSONRPCRequest const&, UniValue&, bool) const (in /home/ubuntu/bitcoin/src/bitcoind)\r\n==2717675==    by 0x4C0B5B: wallet::(anonymous namespace)::WalletClientImpl::registerRpcs()::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}::operator()(JSONRPCRequest const&, UniValue&, bool) const (in /home/ubuntu/bitcoin/src/bitcoind)\r\n==2717675==    by 0x2AF134: std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) (in /home/ubuntu/bitcoin/src/bitcoind)\r\n==2717675==    by 0x3BA3C8: CRPCTable::execute(JSONRPCRequest const&) const (in /home/ubuntu/bitcoin/src/bitcoind)\r\n==2717675==    by 0x47EB89: HTTPReq_JSONRPC(util::Ref const&, HTTPRequest*) (in /home/ubuntu/bitcoin/src/bitcoind)\r\n==2717675==    by 0x4832DB: HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) (in /home/ubuntu/bitcoin/src/bitcoind)\r\n==2717675==    by 0x495FD83: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)\r\n==2717675==    by 0x486F608: start_thread (pthread_create.c:477)\r\n==2717675== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:_ZN7CWallet25ScanForWalletTransactionsERK7uint256iSt8optionalIiERK20WalletRescanReserverb\r\n   fun:_ZN7CWallet14RescanFromTimeElRK20WalletRescanReserverb\r\n   fun:_ZZ17importdescriptorsvENKUlRK10RPCHelpManRK14JSONRPCRequestE_clES1_S4_.isra.0\r\n   fun:_ZNSt17_Function_handlerIF8UniValueRK10RPCHelpManRK14JSONRPCRequestEZ17importdescriptorsvEUlS3_S6_E_E9_M_invokeERKSt9_Any_dataS3_S6_\r\n   fun:_ZZN11CRPCCommandC4ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF10RPCHelpManvEENKUlRK14JSONRPCRequestR8UniValuebE_clESB_SD_b\r\n   fun:_ZZN6wallet12_GLOBAL__N_116WalletClientImpl12registerRpcsEvENKUlRK14JSONRPCRequestR8UniValuebE_clES4_S6_b\r\n   fun:_ZNSt17_Function_handlerIFbRK14JSONRPCRequestR8UniValuebEZN4node12_GLOBAL__N_114RpcHandlerImplC4ERK11CRPCCommandEUlS2_S4_bE_E9_M_invokeERKSt9_Any_dataS2_S4_Ob\r\n   fun:_ZNK9CRPCTable7executeERK14JSONRPCRequest\r\n   fun:_ZL15HTTPReq_JSONRPCRKN4util3RefEP11HTTPRequest\r\n   fun:_ZL16HTTPWorkQueueRunP9WorkQueueI11HTTPClosureEi\r\n   obj:/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28\r\n   fun:start_thread\r\n}\r\n==2717675== \r\n==2717675== Exit program on first error (--exit-on-first-error=yes) != \r\n\r\n\r\n\r\nTEST                       | STATUS    | DURATION\r\n\r\nwallet_hd.py --descriptors | â Failed  | 8 s\r\n\r\nALL                        | â Failed  | 8 s (accumulated) \r\nRuntime: 8 s\r\n```",
   "closed_at" : "2022-08-15T11:35:37Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 6,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21367/comments",
   "created_at" : "2021-03-05T02:57:26Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21367/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/21367",
   "id" : 822694101,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "description" : null,
         "id" : 64585,
         "name" : "Bug",
         "node_id" : "MDU6TGFiZWw2NDU4NQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      },
      {
         "color" : "08a781",
         "default" : false,
         "description" : null,
         "id" : 149424,
         "name" : "Wallet",
         "node_id" : "MDU6TGFiZWwxNDk0MjQ=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21367/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU4MjI2OTQxMDE=",
   "number" : 21367,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21367/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : "completed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21367/timeline",
   "title" : "ScanForWalletTransactions: jump or move depends on uninitialised value",
   "updated_at" : "2022-08-15T11:35:38Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21367",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
