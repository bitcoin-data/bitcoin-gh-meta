[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on removing no-longer  needed abstraction. [Currently failing to compile](https://cirrus-ci.com/task/5067477362147328?command=ci#L2464):\r\n```bash\r\n  CXX      wallet/libbitcoin_wallet_a-coincontrol.o\r\nIn file included from /usr/include/c++/9/bits/move.h:55,\r\n                 from /usr/include/c++/9/bits/nested_exception.h:40,\r\n                 from /usr/include/c++/9/exception:144,\r\n                 from /usr/include/c++/9/new:40,\r\n                 from /usr/include/c++/9/any:37,\r\n                 from ./rpc/request.h:9,\r\n                 from ./rpc/server.h:10,\r\n                 from rpc/server.cpp:6:\r\n/usr/include/c++/9/type_traits: In instantiation of âstruct std::__and_<std::is_copy_constructible<JSONRPCRequest>, std::__not_<std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >, std::__not_<std::__is_in_place_type<JSONRPCRequest> > >â:\r\n/usr/include/c++/9/type_traits:150:27:   required from âconstexpr const bool std::__and_v<std::is_copy_constructible<JSONRPCRequest>, std::__not_<std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >, std::__not_<std::__is_in_place_type<JSONRPCRequest> > >â\r\n/usr/include/c++/9/any:192:27:   required by substitution of âtemplate<class _ValueType, class _Tp, class _Mgr, typename std::enable_if<__and_v<std::is_copy_constructible<_Tp>, std::__not_<std::is_constructible<_Tp, _ValueType&&> >, std::__not_<std::__is_in_place_type<_Tp> > >, bool>::type <anonymous> > std::any::any(_ValueType&&) [with _ValueType = const JSONRPCRequest&; _Tp = JSONRPCRequest; _Mgr = std::any::_Manager_external<JSONRPCRequest>; typename std::enable_if<__and_v<std::is_copy_constructible<_Tp>, std::__not_<std::is_constructible<_Tp, _ValueType&&> >, std::__not_<std::__is_in_place_type<_Tp> > >, bool>::type <anonymous> = <missing>]â\r\n/usr/include/c++/9/type_traits:883:12:   required from âstruct std::is_constructible<JSONRPCRequest, const JSONRPCRequest&>â\r\n/usr/include/c++/9/type_traits:901:12:   required from âstruct std::__is_copy_constructible_impl<JSONRPCRequest, true>â\r\n/usr/include/c++/9/type_traits:907:12:   required from âstruct std::is_copy_constructible<JSONRPCRequest>â\r\n/usr/include/c++/9/type_traits:131:12:   required from âstruct std::__and_<std::is_copy_constructible<JSONRPCRequest>, std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >â\r\n/usr/include/c++/9/any:181:58:   required by substitution of âtemplate<class _ValueType, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, _ValueType&&> >::value, bool>::type <anonymous>, typename std::enable_if<(! std::__is_in_place_type<_Tp>::value), bool>::type <anonymous> > std::any::any(_ValueType&&) [with _ValueType = const JSONRPCRequest&; _Tp = JSONRPCRequest; _Mgr = std::any::_Manager_external<JSONRPCRequest>; typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, _ValueType&&> >::value, bool>::type <anonymous> = <missing>; typename std::enable_if<(! std::__is_in_place_type<_Tp>::value), bool>::type <anonymous> = <missing>]â\r\nrpc/server.cpp:91:32:   required from here\r\n/usr/include/c++/9/type_traits:136:12: error: incomplete type âstd::is_copy_constructible<JSONRPCRequest>â used in nested name specifier\r\n  136 |     struct __and_<_B1, _B2, _B3, _Bn...>\r\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/usr/include/c++/9/type_traits: In instantiation of âconstexpr const bool std::__and_v<std::is_copy_constructible<JSONRPCRequest>, std::__not_<std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >, std::__not_<std::__is_in_place_type<JSONRPCRequest> > >â:\r\n/usr/include/c++/9/any:192:27:   required by substitution of âtemplate<class _ValueType, class _Tp, class _Mgr, typename std::enable_if<__and_v<std::is_copy_constructible<_Tp>, std::__not_<std::is_constructible<_Tp, _ValueType&&> >, std::__not_<std::__is_in_place_type<_Tp> > >, bool>::type <anonymous> > std::any::any(_ValueType&&) [with _ValueType = const JSONRPCRequest&; _Tp = JSONRPCRequest; _Mgr = std::any::_Manager_external<JSONRPCRequest>; typename std::enable_if<__and_v<std::is_copy_constructible<_Tp>, std::__not_<std::is_constructible<_Tp, _ValueType&&> >, std::__not_<std::__is_in_place_type<_Tp> > >, bool>::type <anonymous> = <missing>]â\r\n/usr/include/c++/9/type_traits:883:12:   required from âstruct std::is_constructible<JSONRPCRequest, const JSONRPCRequest&>â\r\n/usr/include/c++/9/type_traits:901:12:   required from âstruct std::__is_copy_constructible_impl<JSONRPCRequest, true>â\r\n/usr/include/c++/9/type_traits:907:12:   required from âstruct std::is_copy_constructible<JSONRPCRequest>â\r\n/usr/include/c++/9/type_traits:131:12:   required from âstruct std::__and_<std::is_copy_constructible<JSONRPCRequest>, std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >â\r\n/usr/include/c++/9/any:181:58:   required by substitution of âtemplate<class _ValueType, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, _ValueType&&> >::value, bool>::type <anonymous>, typename std::enable_if<(! std::__is_in_place_type<_Tp>::value), bool>::type <anonymous> > std::any::any(_ValueType&&) [with _ValueType = const JSONRPCRequest&; _Tp = JSONRPCRequest; _Mgr = std::any::_Manager_external<JSONRPCRequest>; typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, _ValueType&&> >::value, bool>::type <anonymous> = <missing>; typename std::enable_if<(! std::__is_in_place_type<_Tp>::value), bool>::type <anonymous> = <missing>]â\r\nrpc/server.cpp:91:32:   required from here\r\n/usr/include/c++/9/type_traits:150:27: error: âvalueâ is not a member of âstd::__and_<std::is_copy_constructible<JSONRPCRequest>, std::__not_<std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >, std::__not_<std::__is_in_place_type<JSONRPCRequest> > >â\r\n  150 |     inline constexpr bool __and_v = __and_<_Bn...>::value;\r\n      |                           ^~~~~~~\r\nmake[2]: *** [Makefile:8807: rpc/libbitcoin_server_a-server.o] Error 1\r\n```",
      "created_at" : "2021-03-05T02:49:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-791110639",
      "id" : 791110639,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTExMDYzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-05T02:49:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791110639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20459 (rpc: Fail to return undocumented return values by MarcoFalke)\n* #19101 (refactor: remove ::vpwallets and related global variables by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-03-05T09:56:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-791310076",
      "id" : 791310076,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTMxMDA3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-31T19:22:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791310076",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Meh, there seems to be a problem with the (default) copy-constructor of `class JSONRPCRequest` that is invoked in `CRPCTable::help`:\r\n```\r\n... (..., const JSONRPCRequest& helpreq) {\r\n    ...\r\n    JSONRPCRequest jreq(helpreq);\r\n    ...\r\n}\r\n```\r\nNo idea why this compiles locally with clang11 and obviously also for the CI jobs for MacOS and ARM.",
      "created_at" : "2021-03-05T13:05:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-791407659",
      "id" : 791407659,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTQwNzY1OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-05T13:05:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791407659",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588287531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588287531"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactor: replace util::Ref by std::any (C++17)\" (c6686a3a582670618b685e69bdfa2ba893b5ce92)\r\n\r\nThis change and other changes in this commit seems pretty obscure and verbose. It would be nice to define a helper function so these 7 lines could be just be replaced with:\r\n\r\n```c++\r\nconst NodeContext* node = util::AnyPtr<NodeContext>(context);\r\n```\r\n\r\nHelper could go in `util/system.h` and look like:\r\n\r\n```c++\r\ntemplate<typename T>\r\nT* AnyPtr(const std::any& any)\r\n{\r\n    try {\r\n        return std::any_cast<T*>(any);\r\n    } catch (const std::bad_any_cast&) {\r\n        return nullptr;\r\n    }\r\n}\r\n```\r\n\r\nAlso I think it would be better to just assign `context = &node` instead of `context = std::ref(node)`. I think the only reason you would use reference_wrappers instead of pointers is when you want non-nullable references, but std::any is inherently nullable so combining it with std::reference_wrapper just makes things complicated for no benefit.",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-05T13:15:01Z",
      "diff_hunk" : "@@ -94,9 +96,15 @@ static NodeContext* GetNodeContext(const util::Ref& context, HTTPRequest* req)\n  *                 context mempool is not found.\n  * @returns        Pointer to the mempool or nullptr if no mempool found.\n  */\n-static CTxMemPool* GetMemPool(const util::Ref& context, HTTPRequest* req)\n+static CTxMemPool* GetMemPool(const std::any& context, HTTPRequest* req)\n {\n-    NodeContext* node = context.Has<NodeContext>() ? &context.Get<NodeContext>() : nullptr;\n+    const NodeContext* node;\n+    try {\n+        NodeContext& node_context = std::any_cast<std::reference_wrapper<NodeContext>>(context);\n+        node = &node_context;\n+    } catch (const std::bad_any_cast&) {\n+        node = nullptr;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588287531",
      "id" : 588287531,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODI4NzUzMQ==",
      "original_commit_id" : "c6686a3a582670618b685e69bdfa2ba893b5ce92",
      "original_line" : 107,
      "original_position" : 51,
      "original_start_line" : 99,
      "path" : "src/rest.cpp",
      "position" : null,
      "pull_request_review_id" : 605127354,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588287531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588356462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588356462"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Both introducing a `std::any` access helper and using pointers instead of references are great ideas, thanks! Looks much cleaner now, with the clunky try/catch-construct deduplicated and hidden in util/system.h.",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-05T14:57:45Z",
      "diff_hunk" : "@@ -94,9 +96,15 @@ static NodeContext* GetNodeContext(const util::Ref& context, HTTPRequest* req)\n  *                 context mempool is not found.\n  * @returns        Pointer to the mempool or nullptr if no mempool found.\n  */\n-static CTxMemPool* GetMemPool(const util::Ref& context, HTTPRequest* req)\n+static CTxMemPool* GetMemPool(const std::any& context, HTTPRequest* req)\n {\n-    NodeContext* node = context.Has<NodeContext>() ? &context.Get<NodeContext>() : nullptr;\n+    const NodeContext* node;\n+    try {\n+        NodeContext& node_context = std::any_cast<std::reference_wrapper<NodeContext>>(context);\n+        node = &node_context;\n+    } catch (const std::bad_any_cast&) {\n+        node = nullptr;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588356462",
      "id" : 588356462,
      "in_reply_to_id" : 588287531,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODM1NjQ2Mg==",
      "original_commit_id" : "c6686a3a582670618b685e69bdfa2ba893b5ce92",
      "original_line" : 107,
      "original_position" : 51,
      "original_start_line" : 99,
      "path" : "src/rest.cpp",
      "position" : null,
      "pull_request_review_id" : 605296631,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588356462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed with suggestions by @ryanofsky (https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588287531): introduced a helper `AnyPtr` to access `std::any` contents and generally assigned pointers to std::any instances instead of references. Code looks much cleaner now.",
      "created_at" : "2021-03-05T14:59:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-791472457",
      "id" : 791472457,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTQ3MjQ1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-05T14:59:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791472457",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588895346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588895346"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactor: replace util::Ref by std::any (C++17)\" (feb55dde39e59a2709ecefff848a1d8eb9fe69ca)\r\n\r\nThere's a bug here ~and this change should be reverted~. This line is supposed to create `jreq` as a copy of `helpreq` using the `JSONRPCRequest` copy constructor. Now it creates a new `jreq` request using the `helpreq` object as an embedded request context.\r\n\r\nI'm not sure if this is a new bug, or this bug was present previously (even previously `util::Ref` constructor might have take precedence over copy constructor), but passing `&helpreq` here is not intended.\r\n\r\n---\r\n\r\nEDIT: Instead of reverting this, would suggest changing it to:\r\n\r\n```\r\nJSONRPCRequest jreq = helpreq;\r\n```\r\n\r\nThis would be more clear and prevent the context constructor from being called (since it's marked explicit).",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-06T15:34:42Z",
      "diff_hunk" : "@@ -87,7 +88,7 @@ std::string CRPCTable::help(const std::string& strCommand, const JSONRPCRequest&\n         vCommands.push_back(make_pair(entry.second.front()->category + entry.first, entry.second.front()));\n     sort(vCommands.begin(), vCommands.end());\n \n-    JSONRPCRequest jreq(helpreq);\n+    JSONRPCRequest jreq(&helpreq);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588895346",
      "id" : 588895346,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg5NTM0Ng==",
      "original_commit_id" : "feb55dde39e59a2709ecefff848a1d8eb9fe69ca",
      "original_line" : 91,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/rpc/server.cpp",
      "position" : null,
      "pull_request_review_id" : 605765026,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588895346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588896097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588896097"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactor: replace util::Ref by std::any (C++17)\" (feb55dde39e59a2709ecefff848a1d8eb9fe69ca)\r\n\r\nThis turns out to be dangerous because in some cases like `JSONRPCRequest jreq(helpreq);` this constructor will take precedence over the copy constructor.\r\n\r\n~Would suggest changing this only to accept pointer arguments so it won't be accidentally invoked trying to create a copy:~\r\n\r\n```c++\r\ntemplate<typename T>\r\nexplicit JSONRPCRequest(T* context) : id(NullUniValue), params(NullUniValue), fHelp(false), context(context) {}\r\n```\r\n\r\n---\r\n\r\nEDIT: Struck out suggestion above. It doesn't work because the JSONRPCRequest needs a reference to a long-lived std::any object and can't use a internal one. I'm not actually sure why this is the case, and think it may be worth simplifying in the future, but this would be a bigger change. Can disregard this comment.",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-06T15:41:00Z",
      "diff_hunk" : "@@ -38,14 +35,14 @@ class JSONRPCRequest\n     std::string URI;\n     std::string authUser;\n     std::string peerAddr;\n-    const util::Ref& context;\n+    const std::any& context;\n \n-    explicit JSONRPCRequest(const util::Ref& context) : id(NullUniValue), params(NullUniValue), fHelp(false), context(context) {}\n+    explicit JSONRPCRequest(const std::any& context) : id(NullUniValue), params(NullUniValue), fHelp(false), context(context) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588896097",
      "id" : 588896097,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg5NjA5Nw==",
      "original_commit_id" : "feb55dde39e59a2709ecefff848a1d8eb9fe69ca",
      "original_line" : 40,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/request.h",
      "position" : null,
      "pull_request_review_id" : 605765026,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588896097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588921151"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588921151"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept NACK this implementation.\r\n\r\nYou should label this function as noexcept and use the noexcept versions of any_cast which will already return you a nullptr. See variants 4 and 5 https://en.cppreference.com/w/cpp/utility/any/any_cast. These are implemented AFAIK internally without using exceptions.\r\n\r\nExceptions have a non negligible performance overhead if hitting the `catch` case we may want to avoid.\r\n\r\nYou could -- if you want -- introduce a try/catch variant that is called `AnyPtrLikely` that uses try/catch where we're already pretty sure that we'll succeed, but that seems like over optimizing.",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-06T19:29:52Z",
      "diff_hunk" : "@@ -501,6 +502,21 @@ inline void insert(std::set<TsetT>& dst, const Tsrc& src) {\n     dst.insert(src.begin(), src.end());\n }\n \n+/**\n+ * Helper function to access the contained object of a std::any instance.\n+ * Returns a pointer to the object if passed instance has a value and the type\n+ * matches, nullptr otherwise.\n+ */\n+template<typename T>\n+T* AnyPtr(const std::any& any)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588921151",
      "id" : 588921151,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODkyMTE1MQ==",
      "original_commit_id" : "003e76c29caa0173e0e898659e9e06fad31577ad",
      "original_line" : 511,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : null,
      "pull_request_review_id" : 605781570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588921151",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588923880"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588923880"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oops, sorry. I didn't know about the noexcept casts. This can be simplified to:\r\n\r\n```c++\r\ntemplate<typename T>\r\nT* AnyPtr(const std::any& any)\r\n{\r\n    T* const* ptr = std::any_cast<T*>(&any);\r\n    return ptr ? *ptr : nullptr;\r\n}\r\n```\r\n\r\nI don't think this is used in any performance critical code, but no reason this needs to be slower and more complicated.",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-06T19:55:34Z",
      "diff_hunk" : "@@ -501,6 +502,21 @@ inline void insert(std::set<TsetT>& dst, const Tsrc& src) {\n     dst.insert(src.begin(), src.end());\n }\n \n+/**\n+ * Helper function to access the contained object of a std::any instance.\n+ * Returns a pointer to the object if passed instance has a value and the type\n+ * matches, nullptr otherwise.\n+ */\n+template<typename T>\n+T* AnyPtr(const std::any& any)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588923880",
      "id" : 588923880,
      "in_reply_to_id" : 588921151,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODkyMzg4MA==",
      "original_commit_id" : "003e76c29caa0173e0e898659e9e06fad31577ad",
      "original_line" : 511,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : null,
      "pull_request_review_id" : 605783441,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588923880",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Another batch of simplifications you could consider. There's no need really to require request objects to have contexts assigned.\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\ndiff --git a/src/bitcoind.cpp b/src/bitcoind.cpp\r\nindex 87c63593051..7d246325e44 100644\r\n--- a/src/bitcoind.cpp\r\n+++ b/src/bitcoind.cpp\r\n@@ -131,7 +131,7 @@ static bool AppInit(int argc, char* argv[])\r\n             // If locking the data directory failed, exit immediately\r\n             return false;\r\n         }\r\n-        fRet = AppInitInterfaces(node) && AppInitMain(context, node);\r\n+        fRet = AppInitInterfaces(node) && AppInitMain(node);\r\n     }\r\n     catch (const std::exception& e) {\r\n         PrintExceptionContinue(&e, \"AppInit()\");\r\ndiff --git a/src/httprpc.cpp b/src/httprpc.cpp\r\nindex d33e671ee42..cd45eccc4ed 100644\r\n--- a/src/httprpc.cpp\r\n+++ b/src/httprpc.cpp\r\n@@ -159,7 +159,8 @@ static bool HTTPReq_JSONRPC(const std::any& context, HTTPRequest* req)\r\n         return false;\r\n     }\r\n \r\n-    JSONRPCRequest jreq(context);\r\n+    JSONRPCRequest jreq;\r\n+    jreq.context = context;\r\n     jreq.peerAddr = req->GetPeer().ToString();\r\n     if (!RPCAuthorized(authHeader.second, jreq.authUser)) {\r\n         LogPrintf(\"ThreadRPCServer incorrect password attempt from %s\\n\", jreq.peerAddr);\r\n@@ -294,7 +295,7 @@ bool StartHTTPRPC(const std::any& context)\r\n     if (!InitRPCAuthentication())\r\n         return false;\r\n \r\n-    auto handle_rpc = [&context](HTTPRequest* req, const std::string&) { return HTTPReq_JSONRPC(context, req); };\r\n+    auto handle_rpc = [context](HTTPRequest* req, const std::string&) { return HTTPReq_JSONRPC(context, req); };\r\n     RegisterHTTPHandler(\"/\", true, handle_rpc);\r\n     if (g_wallet_init_interface.HasWalletSupport()) {\r\n         RegisterHTTPHandler(\"/wallet/\", false, handle_rpc);\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex efb92802126..c166af10f1f 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -785,7 +785,7 @@ static bool InitSanityCheck()\r\n     return true;\r\n }\r\n \r\n-static bool AppInitServers(const std::any& context, NodeContext& node)\r\n+static bool AppInitServers(NodeContext& node)\r\n {\r\n     const ArgsManager& args = *Assert(node.args);\r\n     RPCServer::OnStarted(&OnRPCStarted);\r\n@@ -794,9 +794,9 @@ static bool AppInitServers(const std::any& context, NodeContext& node)\r\n         return false;\r\n     StartRPC();\r\n     node.rpc_interruption_point = RpcInterruptionPoint;\r\n-    if (!StartHTTPRPC(context))\r\n+    if (!StartHTTPRPC(&node))\r\n         return false;\r\n-    if (args.GetBoolArg(\"-rest\", DEFAULT_REST_ENABLE)) StartREST(context);\r\n+    if (args.GetBoolArg(\"-rest\", DEFAULT_REST_ENABLE)) StartREST(&node);\r\n     StartHTTPServer();\r\n     return true;\r\n }\r\n@@ -1274,7 +1274,7 @@ bool AppInitInterfaces(NodeContext& node)\r\n     return true;\r\n }\r\n \r\n-bool AppInitMain(const std::any& context, NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\r\n+bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\r\n {\r\n     const ArgsManager& args = *Assert(node.args);\r\n     const CChainParams& chainparams = Params();\r\n@@ -1379,7 +1379,7 @@ bool AppInitMain(const std::any& context, NodeContext& node, interfaces::BlockAn\r\n      */\r\n     if (args.GetBoolArg(\"-server\", false)) {\r\n         uiInterface.InitMessage_connect(SetRPCWarmupStatus);\r\n-        if (!AppInitServers(context, node))\r\n+        if (!AppInitServers(node))\r\n             return InitError(_(\"Unable to start HTTP server. See debug log for details.\"));\r\n     }\r\n \r\ndiff --git a/src/init.h b/src/init.h\r\nindex fe1c66202bf..d8fcb1e0ce3 100644\r\n--- a/src/init.h\r\n+++ b/src/init.h\r\n@@ -59,7 +59,7 @@ bool AppInitInterfaces(NodeContext& node);\r\n  * @note This should only be done after daemonization. Call Shutdown() if this function fails.\r\n  * @pre Parameters should be parsed and config file should be read, AppInitLockDataDirectory should have been called.\r\n  */\r\n-bool AppInitMain(const std::any& context, NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info = nullptr);\r\n+bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info = nullptr);\r\n \r\n /**\r\n  * Register all arguments with the ArgsManager\r\ndiff --git a/src/node/interfaces.cpp b/src/node/interfaces.cpp\r\nindex 8cf0dee5b4e..7d195688032 100644\r\n--- a/src/node/interfaces.cpp\r\n+++ b/src/node/interfaces.cpp\r\n@@ -76,7 +76,7 @@ public:\r\n     }\r\n     bool appInitMain(interfaces::BlockAndHeaderTipInfo* tip_info) override\r\n     {\r\n-        return AppInitMain(m_context_ref, *m_context, tip_info);\r\n+        return AppInitMain(*m_context, tip_info);\r\n     }\r\n     void appShutdown() override\r\n     {\r\n@@ -218,7 +218,8 @@ public:\r\n     CFeeRate getDustRelayFee() override { return ::dustRelayFee; }\r\n     UniValue executeRpc(const std::string& command, const UniValue& params, const std::string& uri) override\r\n     {\r\n-        JSONRPCRequest req(m_context_ref);\r\n+        JSONRPCRequest req;\r\n+        req.context = m_context;\r\n         req.params = params;\r\n         req.strMethod = command;\r\n         req.URI = uri;\r\n@@ -287,14 +288,8 @@ public:\r\n     void setContext(NodeContext* context) override\r\n     {\r\n         m_context = context;\r\n-        if (context) {\r\n-            m_context_ref = context;\r\n-        } else {\r\n-            m_context_ref.reset();\r\n-        }\r\n     }\r\n     NodeContext* m_context{nullptr};\r\n-    std::any m_context_ref;\r\n };\r\n \r\n bool FillBlock(const CBlockIndex* index, const FoundBlock& block, UniqueLock<RecursiveMutex>& lock, const CChain& active)\r\ndiff --git a/src/rest.cpp b/src/rest.cpp\r\nindex 452435f3e92..e2af5128121 100644\r\n--- a/src/rest.cpp\r\n+++ b/src/rest.cpp\r\n@@ -317,7 +317,8 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\r\n \r\n     switch (rf) {\r\n     case RetFormat::JSON: {\r\n-        JSONRPCRequest jsonRequest(context);\r\n+        JSONRPCRequest jsonRequest;\r\n+        jsonRequest.context = context;\r\n         jsonRequest.params = UniValue(UniValue::VARR);\r\n         UniValue chainInfoObject = getblockchaininfo().HandleRequest(jsonRequest);\r\n         std::string strJSON = chainInfoObject.write() + \"\\n\";\r\n@@ -687,7 +688,7 @@ static const struct {\r\n void StartREST(const std::any& context)\r\n {\r\n     for (const auto& up : uri_prefixes) {\r\n-        auto handler = [&context, up](HTTPRequest* req, const std::string& prefix) { return up.handler(context, req, prefix); };\r\n+        auto handler = [context, up](HTTPRequest* req, const std::string& prefix) { return up.handler(context, req, prefix); };\r\n         RegisterHTTPHandler(up.prefix, false, handler);\r\n     }\r\n }\r\ndiff --git a/src/rpc/request.h b/src/rpc/request.h\r\nindex 82d8fdc63ae..7a78d382cc9 100644\r\n--- a/src/rpc/request.h\r\n+++ b/src/rpc/request.h\r\n@@ -35,18 +35,7 @@ public:\r\n     std::string URI;\r\n     std::string authUser;\r\n     std::string peerAddr;\r\n-    const std::any& context;\r\n-\r\n-    explicit JSONRPCRequest(const std::any& context) : id(NullUniValue), params(NullUniValue), fHelp(false), context(context) {}\r\n-\r\n-    //! Initializes request information from another request object and the\r\n-    //! given context. The implementation should be updated if any members are\r\n-    //! added or removed above.\r\n-    JSONRPCRequest(const JSONRPCRequest& other, const std::any& context)\r\n-        : id(other.id), strMethod(other.strMethod), params(other.params), fHelp(other.fHelp), URI(other.URI),\r\n-          authUser(other.authUser), peerAddr(other.peerAddr), context(context)\r\n-    {\r\n-    }\r\n+    std::any context;\r\n \r\n     void parse(const UniValue& valRequest);\r\n };\r\ndiff --git a/src/rpc/server.cpp b/src/rpc/server.cpp\r\nindex 3d5216055ce..f16adf96d3e 100644\r\n--- a/src/rpc/server.cpp\r\n+++ b/src/rpc/server.cpp\r\n@@ -88,7 +88,7 @@ std::string CRPCTable::help(const std::string& strCommand, const JSONRPCRequest&\r\n         vCommands.push_back(make_pair(entry.second.front()->category + entry.first, entry.second.front()));\r\n     sort(vCommands.begin(), vCommands.end());\r\n \r\n-    JSONRPCRequest jreq(&helpreq);\r\n+    JSONRPCRequest jreq(helpreq);\r\n     jreq.fHelp = true;\r\n     jreq.params = UniValue();\r\n \r\ndiff --git a/src/test/rpc_tests.cpp b/src/test/rpc_tests.cpp\r\nindex 4ffc2478696..d2749c89599 100644\r\n--- a/src/test/rpc_tests.cpp\r\n+++ b/src/test/rpc_tests.cpp\r\n@@ -33,8 +33,8 @@ UniValue RPCTestingSetup::CallRPC(std::string args)\r\n     boost::split(vArgs, args, boost::is_any_of(\" \\t\"));\r\n     std::string strMethod = vArgs[0];\r\n     vArgs.erase(vArgs.begin());\r\n-    std::any context{&m_node};\r\n-    JSONRPCRequest request(context);\r\n+    JSONRPCRequest request;\r\n+    request.context = &m_node;\r\n     request.strMethod = strMethod;\r\n     request.params = RPCConvertValues(strMethod, vArgs);\r\n     request.fHelp = false;\r\ndiff --git a/src/wallet/interfaces.cpp b/src/wallet/interfaces.cpp\r\nindex c91ede94f95..46533d8704c 100644\r\n--- a/src/wallet/interfaces.cpp\r\n+++ b/src/wallet/interfaces.cpp\r\n@@ -514,7 +514,9 @@ public:\r\n     {\r\n         for (const CRPCCommand& command : GetWalletRPCCommands()) {\r\n             m_rpc_commands.emplace_back(command.category, command.name, [this, &command](const JSONRPCRequest& request, UniValue& result, bool last_handler) {\r\n-                return command.actor({request, &m_context}, result, last_handler);\r\n+                JSONRPCRequest wrapped = request;\r\n+                wrapped.context = &m_context;\r\n+                return command.actor(wrapped, result, last_handler);\r\n             }, command.argNames, command.unique_id);\r\n             m_rpc_handlers.emplace_back(m_context.chain->handleRpc(m_rpc_commands.back()));\r\n         }\r\ndiff --git a/src/wallet/test/wallet_tests.cpp b/src/wallet/test/wallet_tests.cpp\r\nindex e48f7b4d4f5..a9c20921abd 100644\r\n--- a/src/wallet/test/wallet_tests.cpp\r\n+++ b/src/wallet/test/wallet_tests.cpp\r\n@@ -213,8 +213,7 @@ BOOST_FIXTURE_TEST_CASE(importmulti_rescan, TestChain100Setup)\r\n         key.pushKV(\"timestamp\", newTip->GetBlockTimeMax() + TIMESTAMP_WINDOW + 1);\r\n         key.pushKV(\"internal\", UniValue(true));\r\n         keys.push_back(key);\r\n-        std::any context;\r\n-        JSONRPCRequest request(context);\r\n+        JSONRPCRequest request;\r\n         request.params.setArray();\r\n         request.params.push_back(keys);\r\n \r\n@@ -265,8 +264,7 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\r\n             AddWallet(wallet);\r\n             wallet->SetLastBlockProcessed(::ChainActive().Height(), ::ChainActive().Tip()->GetBlockHash());\r\n         }\r\n-        std::any context;\r\n-        JSONRPCRequest request(context);\r\n+        JSONRPCRequest request;\r\n         request.params.setArray();\r\n         request.params.push_back(backup_file);\r\n \r\n@@ -281,8 +279,7 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\r\n         LOCK(wallet->cs_wallet);\r\n         wallet->SetupLegacyScriptPubKeyMan();\r\n \r\n-        std::any context;\r\n-        JSONRPCRequest request(context);\r\n+        JSONRPCRequest request;\r\n         request.params.setArray();\r\n         request.params.push_back(backup_file);\r\n         AddWallet(wallet);\r\n```\r\n</p>\r\n</details>",
      "created_at" : "2021-03-06T20:09:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-792044351",
      "id" : 792044351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MjA0NDM1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-06T20:09:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792044351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588926343"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588926343"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good catch, I somehow missed that there was a noexcept version of `std::any_cast`. But then I guess we can as well directly use that instead of introducing AnyPtr? This would be in effect just another name for the same purpose.",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-06T20:19:25Z",
      "diff_hunk" : "@@ -501,6 +502,21 @@ inline void insert(std::set<TsetT>& dst, const Tsrc& src) {\n     dst.insert(src.begin(), src.end());\n }\n \n+/**\n+ * Helper function to access the contained object of a std::any instance.\n+ * Returns a pointer to the object if passed instance has a value and the type\n+ * matches, nullptr otherwise.\n+ */\n+template<typename T>\n+T* AnyPtr(const std::any& any)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588926343",
      "id" : 588926343,
      "in_reply_to_id" : 588921151,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODkyNjM0Mw==",
      "original_commit_id" : "003e76c29caa0173e0e898659e9e06fad31577ad",
      "original_line" : 511,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : null,
      "pull_request_review_id" : 605784947,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588926343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588927512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588927512"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, done.",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-06T20:29:32Z",
      "diff_hunk" : "@@ -87,7 +88,7 @@ std::string CRPCTable::help(const std::string& strCommand, const JSONRPCRequest&\n         vCommands.push_back(make_pair(entry.second.front()->category + entry.first, entry.second.front()));\n     sort(vCommands.begin(), vCommands.end());\n \n-    JSONRPCRequest jreq(helpreq);\n+    JSONRPCRequest jreq(&helpreq);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588927512",
      "id" : 588927512,
      "in_reply_to_id" : 588895346,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODkyNzUxMg==",
      "original_commit_id" : "feb55dde39e59a2709ecefff848a1d8eb9fe69ca",
      "original_line" : 91,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/rpc/server.cpp",
      "position" : null,
      "pull_request_review_id" : 605785613,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588927512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588928188"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588928188"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Good catch, I somehow missed that there was a noexcept version of `std::any_cast`. But then I guess we can as well directly use that instead of introducing AnyPtr? This would be in effect just another name for the same purpose.\r\n\r\nMy preference would be to keep AnyPtr instead of introducing NodeContext* const* temporary variables because I think the two different ways these could be null could be confusing and cause non-obvious bugs, but feel free to take any approach.",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-06T20:36:43Z",
      "diff_hunk" : "@@ -501,6 +502,21 @@ inline void insert(std::set<TsetT>& dst, const Tsrc& src) {\n     dst.insert(src.begin(), src.end());\n }\n \n+/**\n+ * Helper function to access the contained object of a std::any instance.\n+ * Returns a pointer to the object if passed instance has a value and the type\n+ * matches, nullptr otherwise.\n+ */\n+template<typename T>\n+T* AnyPtr(const std::any& any)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588928188",
      "id" : 588928188,
      "in_reply_to_id" : 588921151,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODkyODE4OA==",
      "original_commit_id" : "003e76c29caa0173e0e898659e9e06fad31577ad",
      "original_line" : 511,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : null,
      "pull_request_review_id" : 605786058,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588928188",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed with feedback from @JeremyRubin (https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588921151) and @ryanofsky (https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588923880) taken into account: `AnyPtr` uses now the variant of `std::any_cast` that doesn't use exceptions. Also updated the PR description which still referred to the changeset without the `AnyPtr` helper and the exception variant of `std::any_cast`.\r\n\r\n> Another batch of simplifications you could consider. There's no need really to require request objects to have contexts assigned.\r\n\r\nGood idea. I think those changes are out of scope for this PR, as the proposed simplifications are not connected to the `util::Ref`/`std::any` replacements. Happy to open a follow-up PR though or review if someone else does.",
      "created_at" : "2021-03-06T23:59:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-792124283",
      "id" : 792124283,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MjEyNDI4Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-07T00:03:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792124283",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588957692"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588957692"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "using any_cast bare is a code smell IMO because it can arbitrarily become the non noexcept version :(, the wrapper makes the version guaranteed. If anything, you could declare it as inline so there is no overhead? (idk about template + inline...)\r\n\r\nI think that's what @ryanofsky is saying.",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-07T01:50:30Z",
      "diff_hunk" : "@@ -501,6 +502,21 @@ inline void insert(std::set<TsetT>& dst, const Tsrc& src) {\n     dst.insert(src.begin(), src.end());\n }\n \n+/**\n+ * Helper function to access the contained object of a std::any instance.\n+ * Returns a pointer to the object if passed instance has a value and the type\n+ * matches, nullptr otherwise.\n+ */\n+template<typename T>\n+T* AnyPtr(const std::any& any)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588957692",
      "id" : 588957692,
      "in_reply_to_id" : 588921151,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODk1NzY5Mg==",
      "original_commit_id" : "003e76c29caa0173e0e898659e9e06fad31577ad",
      "original_line" : 511,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : null,
      "pull_request_review_id" : 605801761,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588957692",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\n+89 â155 -- very nice! :)",
      "created_at" : "2021-03-07T18:31:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-792329779",
      "id" : 792329779,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MjMyOTc3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-07T18:31:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792329779",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r589096062"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589096062"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "After having tried out using std::any_cast directly yesterday, I can confirm ryanofsky's point of the drawback, needing temporary variables, making the code clunky and potentially confusing. Also the ambiguity on which version is chosen is a strong argument against it. Kept the AnyPtr function, changed it to the [proposed implementation](https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588923880), see https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-792124283.",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-07T22:09:50Z",
      "diff_hunk" : "@@ -501,6 +502,21 @@ inline void insert(std::set<TsetT>& dst, const Tsrc& src) {\n     dst.insert(src.begin(), src.end());\n }\n \n+/**\n+ * Helper function to access the contained object of a std::any instance.\n+ * Returns a pointer to the object if passed instance has a value and the type\n+ * matches, nullptr otherwise.\n+ */\n+template<typename T>\n+T* AnyPtr(const std::any& any)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r589096062",
      "id" : 589096062,
      "in_reply_to_id" : 588921151,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTA5NjA2Mg==",
      "original_commit_id" : "003e76c29caa0173e0e898659e9e06fad31577ad",
      "original_line" : 511,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : null,
      "pull_request_review_id" : 605890553,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589096062",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-10T07:33:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-795023502",
      "id" : 795023502,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NTAyMzUwMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-10T07:33:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/795023502",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased on master.",
      "created_at" : "2021-03-10T20:18:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-796031037",
      "id" : 796031037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NjAzMTAzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-10T20:18:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796031037",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-11T14:55:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-796795225",
      "id" : 796795225,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5Njc5NTIyNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-11T14:55:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796795225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased on master again.",
      "created_at" : "2021-03-16T00:49:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-799860466",
      "id" : 799860466,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5OTg2MDQ2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-16T00:49:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/799860466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2021-03-28T00:38:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-808823725",
      "id" : 808823725,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwODgyMzcyNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-28T00:38:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/808823725",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r602820686"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602820686"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Add `#include <any>` ?",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-28T02:46:37Z",
      "diff_hunk" : "@@ -38,7 +38,6 @@\n #include <uint256.h>\n #include <univalue.h>\n #include <util/check.h>\n-#include <util/ref.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r602820686",
      "id" : 602820686,
      "line" : 41,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjgyMDY4Ng==",
      "original_commit_id" : "39069499a61d7c2cab8594162c99bf00ea2ac88b",
      "original_line" : 41,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/node/interfaces.cpp",
      "position" : 4,
      "pull_request_review_id" : 622716405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602820686",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r602821073"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602821073"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Could be more concise without losing much details:\r\n```suggestion\r\n    auto node_context = util::AnyPtr<NodeContext>(context);\r\n```\r\n\r\n(Here and in other places when `util::AnyPtr<T>` is used)",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-28T02:50:15Z",
      "diff_hunk" : "@@ -73,18 +75,18 @@ static bool RESTERR(HTTPRequest* req, enum HTTPStatusCode status, std::string me\n  *                  context is not found.\n  * @returns         Pointer to the node context or nullptr if not found.\n  */\n-static NodeContext* GetNodeContext(const util::Ref& context, HTTPRequest* req)\n+static NodeContext* GetNodeContext(const std::any& context, HTTPRequest* req)\n {\n-    NodeContext* node = context.Has<NodeContext>() ? &context.Get<NodeContext>() : nullptr;\n-    if (!node) {\n+    NodeContext* node_context = util::AnyPtr<NodeContext>(context);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r602821073",
      "id" : 602821073,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjgyMTA3Mw==",
      "original_commit_id" : "39069499a61d7c2cab8594162c99bf00ea2ac88b",
      "original_line" : 80,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/rest.cpp",
      "position" : null,
      "pull_request_review_id" : 622716405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602821073",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r602821146"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602821146"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need to `#include <any>` here. ",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-28T02:51:21Z",
      "diff_hunk" : "@@ -15,6 +15,7 @@\n #include <boost/algorithm/string/split.hpp>\n #include <boost/signals2/signal.hpp>\n \n+#include <any>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r602821146",
      "id" : 602821146,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjgyMTE0Ng==",
      "original_commit_id" : "39069499a61d7c2cab8594162c99bf00ea2ac88b",
      "original_line" : 18,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/server.cpp",
      "position" : null,
      "pull_request_review_id" : 622716405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602821146",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-29T14:21:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-809419765",
      "id" : 809419765,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwOTQxOTc2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-29T14:21:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809419765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r603630093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603630093"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-29T21:36:55Z",
      "diff_hunk" : "@@ -38,7 +38,6 @@\n #include <uint256.h>\n #include <univalue.h>\n #include <util/check.h>\n-#include <util/ref.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r603630093",
      "id" : 603630093,
      "in_reply_to_id" : 602820686,
      "line" : 41,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzYzMDA5Mw==",
      "original_commit_id" : "39069499a61d7c2cab8594162c99bf00ea2ac88b",
      "original_line" : 41,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/node/interfaces.cpp",
      "position" : 4,
      "pull_request_review_id" : 623671044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:37:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603630093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r603632492"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603632492"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good idea. I agree that for the reader it is obvious enough to see that \"AnyPtr< T >(...)\" returns type \"T*\" and using \"auto\" makes sense here. Done for all instances.",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-29T21:41:15Z",
      "diff_hunk" : "@@ -73,18 +75,18 @@ static bool RESTERR(HTTPRequest* req, enum HTTPStatusCode status, std::string me\n  *                  context is not found.\n  * @returns         Pointer to the node context or nullptr if not found.\n  */\n-static NodeContext* GetNodeContext(const util::Ref& context, HTTPRequest* req)\n+static NodeContext* GetNodeContext(const std::any& context, HTTPRequest* req)\n {\n-    NodeContext* node = context.Has<NodeContext>() ? &context.Get<NodeContext>() : nullptr;\n-    if (!node) {\n+    NodeContext* node_context = util::AnyPtr<NodeContext>(context);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r603632492",
      "id" : 603632492,
      "in_reply_to_id" : 602821073,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzYzMjQ5Mg==",
      "original_commit_id" : "39069499a61d7c2cab8594162c99bf00ea2ac88b",
      "original_line" : 80,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/rest.cpp",
      "position" : null,
      "pull_request_review_id" : 623673790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:42:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603632492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r603633200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603633200"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, removed.",
      "commit_id" : "916ab0195d567fd0a9097045e73a6654c453adea",
      "created_at" : "2021-03-29T21:42:47Z",
      "diff_hunk" : "@@ -15,6 +15,7 @@\n #include <boost/algorithm/string/split.hpp>\n #include <boost/signals2/signal.hpp>\n \n+#include <any>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r603633200",
      "id" : 603633200,
      "in_reply_to_id" : 602821146,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzYzMzIwMA==",
      "original_commit_id" : "39069499a61d7c2cab8594162c99bf00ea2ac88b",
      "original_line" : 18,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/server.cpp",
      "position" : null,
      "pull_request_review_id" : 623674675,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-29T21:42:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603633200",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased on master and took in all suggestions by @hebasto (https://github.com/bitcoin/bitcoin/pull/21366#pullrequestreview-622716405) -- thanks a lot for reviewing!",
      "created_at" : "2021-03-29T21:45:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-809735068",
      "id" : 809735068,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwOTczNTA2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-29T21:45:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809735068",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   }
]
