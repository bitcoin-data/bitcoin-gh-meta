[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2021-03-08T11:20:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-792687216",
      "id" : 792687216,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MjY4NzIxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T11:20:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792687216",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589351441"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589351441"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Note to reviewers: this old code was inconsistent with the events it requested depending on which function was used - it requested \"in\" or \"out\" (`POLLIN | POLLOUT`) when using `poll()` but only \"out\" when using `select()` (did not pass `fdset` as 2'nd arg to `select()`).\r\n\r\nThis is now replaced by `Sock::Wait(..., requested Sock::RECV | Sock::SEND)` which, if ends up calling `select()`, will ask it for both \"in\" and \"out\".\r\n\r\nI think this is ok.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-08T11:23:56Z",
      "diff_hunk" : "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589351441",
      "id" : 589351441,
      "line" : 575,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTM1MTQ0MQ==",
      "original_commit_id" : "d59cb9b3d335d122fc2865e5e0334e32ef92b3e7",
      "original_line" : 575,
      "original_position" : 48,
      "original_start_line" : 645,
      "path" : "src/netbase.cpp",
      "position" : 40,
      "pull_request_review_id" : 606194599,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589351441/reactions"
      },
      "side" : "LEFT",
      "start_line" : 564,
      "start_side" : "LEFT",
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589351441",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589358838"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589358838"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit in the first commit: Wouldn't it be better to change `private` to `protected`? This would allow other tests to mock `m_socket` without having to enumerate all \"friend\" test classes here",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-08T11:37:43Z",
      "diff_hunk" : "@@ -155,6 +155,8 @@ class Sock\n      * Contained socket. `INVALID_SOCKET` designates the object is empty.\n      */\n     SOCKET m_socket;\n+\n+    friend class FuzzedSock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589358838",
      "id" : 589358838,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTM1ODgzOA==",
      "original_commit_id" : "ed7af727d36734874234d30a8f02cdb8506cef55",
      "original_line" : 159,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/sock.h",
      "position" : null,
      "pull_request_review_id" : 606203859,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589358838/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589358838",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589360815"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589360815"
         }
      },
      "author_association" : "MEMBER",
      "body" : "it might be good to split the non-fuzz \"refactors\" out into their own pull",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-08T11:41:33Z",
      "diff_hunk" : "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589360815",
      "id" : 589360815,
      "in_reply_to_id" : 589351441,
      "line" : 575,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTM2MDgxNQ==",
      "original_commit_id" : "d59cb9b3d335d122fc2865e5e0334e32ef92b3e7",
      "original_line" : 575,
      "original_position" : 48,
      "original_start_line" : 645,
      "path" : "src/netbase.cpp",
      "position" : 40,
      "pull_request_review_id" : 606203859,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589360815/reactions"
      },
      "side" : "LEFT",
      "start_line" : 564,
      "start_side" : "LEFT",
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589360815",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589393703"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589393703"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Lets see which are the non-fuzz refactors:\r\n\r\n```\r\n[7] i2p: add fuzz tests on the I2P Session public interface\r\n[6] i2p: use pointers to Sock to accommodate mocking\r\n[5] net: change ConnectSocketDirectly() to take a Sock argument\r\n[4] net: add connect() and getsockopt() wrappers to Sock\r\n[3] fuzz: avoid FuzzedSock::Recv() repeated errors with EAGAIN\r\n[2] fuzz: extend FuzzedSock::Recv() to support MSG_PEEK\r\n[1] fuzz: implement unimplemented FuzzedSock methods\r\n```\r\n\r\n`1-3` are obviously fuzz. `4` touches `FuzzedSocket`. `7` adds fuzz tests. So only `5` and `6` remain. `5` depends on the previous commits. `6` is non-fuzz, does not depend on the previous commits and can be extracted, but `7` depends on it.\r\nSo a split can be:\r\nPR-A: 6\r\nPR-B: 1-5, 7\r\n\r\nI think it is not worth to split, given that 6 is a small mechanical change.\r\n",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-08T12:43:30Z",
      "diff_hunk" : "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589393703",
      "id" : 589393703,
      "in_reply_to_id" : 589351441,
      "line" : 575,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTM5MzcwMw==",
      "original_commit_id" : "d59cb9b3d335d122fc2865e5e0334e32ef92b3e7",
      "original_line" : 575,
      "original_position" : 48,
      "original_start_line" : 645,
      "path" : "src/netbase.cpp",
      "position" : 40,
      "pull_request_review_id" : 606250305,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589393703/reactions"
      },
      "side" : "LEFT",
      "start_line" : 564,
      "start_side" : "LEFT",
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589393703",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589393794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589393794"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-08T12:43:43Z",
      "diff_hunk" : "@@ -155,6 +155,8 @@ class Sock\n      * Contained socket. `INVALID_SOCKET` designates the object is empty.\n      */\n     SOCKET m_socket;\n+\n+    friend class FuzzedSock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589393794",
      "id" : 589393794,
      "in_reply_to_id" : 589358838,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTM5Mzc5NA==",
      "original_commit_id" : "ed7af727d36734874234d30a8f02cdb8506cef55",
      "original_line" : 159,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/sock.h",
      "position" : null,
      "pull_request_review_id" : 606250441,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589393794/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589393794",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589398727"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589398727"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Either this should be `mutable` or the `const` qualifier should be removed from `Sock::Recv()` (and `Sock::Send()` for consistency). I don't have a strong opinion. I chose `mutable` because it is a smaller change and did not require modifying existing code.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-08T12:52:19Z",
      "diff_hunk" : "@@ -534,36 +534,37 @@ class FuzzedSock : public Sock\n {\n     FuzzedDataProvider& m_fuzzed_data_provider;\n \n+    /**\n+     * Data to return when `MSG_PEEK` is used as a `Recv()` flag.\n+     * If `MSG_PEEK` is used, then our `Recv()` returns some random data as usual, but on the next\n+     * `Recv()` call we must return the same data, thus we remember it here.\n+     */\n+    mutable std::optional<uint8_t> m_peek_data;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589398727",
      "id" : 589398727,
      "line" : 563,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTM5ODcyNw==",
      "original_commit_id" : "a6c20d2b88ea92fd31a3bef393da2ab1d9003157",
      "original_line" : 563,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : 9,
      "pull_request_review_id" : 606256672,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589398727/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589398727",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nThanks for improving `FuzzedSock` with `connect`, `getsockopt` and `MSG_PEEK` (`recv`)  support! :)\r\n\r\nVery happy to see the I2P code being thoroughly fuzzed before landing in a release! \"Fuzz before release\" is a nice high bar I think we should try to aim for going forward for new features :)",
      "created_at" : "2021-03-08T17:46:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-792944472",
      "id" : 792944472,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5Mjk0NDQ3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T17:46:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792944472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589667320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589667320"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Builds cleanly at a6c20d2b88ea92, but I'm seeing a UBSan runtime error when starting the fuzzer (same error for each of 3 times):\r\n\r\n ```\r\n$ clang --version\r\nclang version 9.0.1-16 \r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\n\r\n$ FUZZ=i2p src/test/fuzz/fuzz ../qa-assets/fuzz_seed_corpus/\r\nINFO: Seed: 3673367385\r\nINFO: Loaded 1 modules   (642733 inline 8-bit counters): 642733 [0x55abe383e4c8, 0x55abe38db375), \r\nINFO: Loaded 1 PC tables (642733 PCs): 642733 [0x55abe38db378,0x55abe42a9e48), \r\nINFO:   132706 files found in ../qa-assets/fuzz_seed_corpus/\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes\r\nINFO: seed corpus: files: 132706 min: 1b max: 3986616b total: 1882953565b rss: 284Mb\r\n#4096\tpulse  cov: 1773 ft: 2176 corp: 11/47b exec/s: 2048 rss: 366Mb\r\n\r\ntest/fuzz/util.h:703:30: runtime error: null pointer passed as argument 2, which is declared to never be null\r\n/usr/include/string.h:44:28: note: nonnull attribute specified here\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior test/fuzz/util.h:703:30 in \r\n\r\n#8192\tpulse  cov: 2600 ft: 3813 corp: 32/219b exec/s: 2730 rss: 441Mb\r\n#16384\tpulse  cov: 2655 ft: 4890 corp: 70/750b exec/s: 2730 rss: 586Mb\r\n#32768\tpulse  cov: 2773 ft: 6429 corp: 111/2011b exec/s: 2730 rss: 649Mb\r\n#65536\tpulse  cov: 2794 ft: 7344 corp: 142/4922b exec/s: 2849 rss: 649Mb\r\n#131072\tpulse  cov: 2890 ft: 8189 corp: 162/47Kb exec/s: 2473 rss: 1271Mb\r\n#132707\tINITED cov: 2890 ft: 8189 corp: 162/47Kb exec/s: 2249 rss: 1271Mb\r\n#132896\tREDUCE cov: 2890 ft: 8189 corp: 162/46Kb lim: 14309 exec/s: 2214 rss: 1271Mb L: 13800/13800 MS: 4 ChangeBinInt-ChangeByte-ChangeByte-EraseBytes-\r\n.../...\r\n#204032\tREDUCE cov: 2912 ft: 9195 corp: 194/29Kb lim: 14413 exec/s: 2147 rss: 1271Mb L: 62/2551 MS: 2 ChangeBinInt-EraseBytes-\r\n#206627\tREDUCE cov: 2912 ft: 9195 corp: 194/29Kb lim: 14426 exec/s: 2152 rss: 1271Mb L: 66/2551 MS: 5 InsertByte-PersAutoDict-ChangeByte-EraseBytes-PersAutoDict- DE: \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x1a\"-\"\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"-\r\n#207638\tREDUCE cov: 2912 ft: 9195 corp: 194/29Kb lim: 14426 exec/s: 2162 rss: 1271Mb L: 102/2551 MS: 1 EraseBytes-\r\n```\r\n",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-08T18:53:22Z",
      "diff_hunk" : "@@ -642,6 +664,49 @@ class FuzzedSock : public Sock\n         return random_bytes.size();\n     }\n \n+    int Connect(const sockaddr*, socklen_t) const override\n+    {\n+        // Have a permanent error at connect_errnos[0] because when the fuzzed data is exhausted\n+        // SetFuzzedErrNo() will always return the first element and we want to avoid Connect()\n+        // returning -1 and setting errno to EAGAIN repeatedly.\n+        constexpr std::array connect_errnos{\n+            ECONNREFUSED,\n+            EAGAIN,\n+            ECONNRESET,\n+            EHOSTUNREACH,\n+            EINPROGRESS,\n+            EINTR,\n+            ENETUNREACH,\n+            ETIMEDOUT,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, connect_errnos);\n+            return -1;\n+        }\n+        return 0;\n+    }\n+\n+    int Getsockopt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const override\n+    {\n+        constexpr std::array getsockopt_errnos{\n+            ENOMEM,\n+            ENOBUFS,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, getsockopt_errnos);\n+            return -1;\n+        }\n+        if (opt_val == nullptr) {\n+            return 0;\n+        }\n+        const auto rnd = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(*opt_len);\n+        std::memcpy(opt_val, rnd.data(), rnd.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r589667320",
      "id" : 589667320,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTY2NzMyMA==",
      "original_commit_id" : "a6c20d2b88ea92fd31a3bef393da2ab1d9003157",
      "original_line" : 703,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : null,
      "pull_request_review_id" : 606605336,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589667320/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589667320",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2021-03-08T19:23:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-793009873",
      "id" : 793009873,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MzAwOTg3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-16T22:50:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793009873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r590150134"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590150134"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed, thanks! I did not see this because my `memcpy()` does not have the nonnull attribute.\r\n\r\nOff-topic: the nonnull attribute has this speciality - the compiler assumes that the parameter will never be null and may eliminate branches in the function that check for that. For example:\r\n\r\n```cpp\r\nvoid func(char* buf) __nonnull(1)\r\n{\r\n    if (buf == nullptr) {\r\n        // take action\r\n        return;\r\n    }\r\n    buf[0] = 1;\r\n}\r\n```\r\n\r\nCompiler optimization may reduce this to:\r\n\r\n```cpp\r\nvoid func(char* buf) __nonnull(1)\r\n{\r\n    buf[0] = 1;\r\n}\r\n```\r\n\r\nIt looks reasonable, given that code like `func(nullptr);` will not compile. However, if the value of the argument is determined at runtime and may still end up being `nullptr`, then the compiler has no way to detect this during compilation. So the line `buf[0] = 1;` may still be executed with `buf` being `nullptr` even though the source code checks for that just above, leading to some nice \"wtf\" moments.\r\n\r\nUbsan alleviates this.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-09T09:52:11Z",
      "diff_hunk" : "@@ -642,6 +664,49 @@ class FuzzedSock : public Sock\n         return random_bytes.size();\n     }\n \n+    int Connect(const sockaddr*, socklen_t) const override\n+    {\n+        // Have a permanent error at connect_errnos[0] because when the fuzzed data is exhausted\n+        // SetFuzzedErrNo() will always return the first element and we want to avoid Connect()\n+        // returning -1 and setting errno to EAGAIN repeatedly.\n+        constexpr std::array connect_errnos{\n+            ECONNREFUSED,\n+            EAGAIN,\n+            ECONNRESET,\n+            EHOSTUNREACH,\n+            EINPROGRESS,\n+            EINTR,\n+            ENETUNREACH,\n+            ETIMEDOUT,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, connect_errnos);\n+            return -1;\n+        }\n+        return 0;\n+    }\n+\n+    int Getsockopt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const override\n+    {\n+        constexpr std::array getsockopt_errnos{\n+            ENOMEM,\n+            ENOBUFS,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, getsockopt_errnos);\n+            return -1;\n+        }\n+        if (opt_val == nullptr) {\n+            return 0;\n+        }\n+        const auto rnd = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(*opt_len);\n+        std::memcpy(opt_val, rnd.data(), rnd.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r590150134",
      "id" : 590150134,
      "in_reply_to_id" : 589667320,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDE1MDEzNA==",
      "original_commit_id" : "a6c20d2b88ea92fd31a3bef393da2ab1d9003157",
      "original_line" : 703,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : null,
      "pull_request_review_id" : 607211575,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590150134/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590150134",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`a6c20d2b8...933d181a8`: avoid calling `memcpy()` with `NULL` argument even if `size` is `0`",
      "created_at" : "2021-03-09T09:53:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-793642544",
      "id" : 793642544,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MzY0MjU0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-09T09:53:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793642544",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r591426204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591426204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes. Runs without the error now.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-10T12:09:51Z",
      "diff_hunk" : "@@ -642,6 +664,49 @@ class FuzzedSock : public Sock\n         return random_bytes.size();\n     }\n \n+    int Connect(const sockaddr*, socklen_t) const override\n+    {\n+        // Have a permanent error at connect_errnos[0] because when the fuzzed data is exhausted\n+        // SetFuzzedErrNo() will always return the first element and we want to avoid Connect()\n+        // returning -1 and setting errno to EAGAIN repeatedly.\n+        constexpr std::array connect_errnos{\n+            ECONNREFUSED,\n+            EAGAIN,\n+            ECONNRESET,\n+            EHOSTUNREACH,\n+            EINPROGRESS,\n+            EINTR,\n+            ENETUNREACH,\n+            ETIMEDOUT,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, connect_errnos);\n+            return -1;\n+        }\n+        return 0;\n+    }\n+\n+    int Getsockopt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const override\n+    {\n+        constexpr std::array getsockopt_errnos{\n+            ENOMEM,\n+            ENOBUFS,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, getsockopt_errnos);\n+            return -1;\n+        }\n+        if (opt_val == nullptr) {\n+            return 0;\n+        }\n+        const auto rnd = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(*opt_len);\n+        std::memcpy(opt_val, rnd.data(), rnd.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r591426204",
      "id" : 591426204,
      "in_reply_to_id" : 589667320,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTQyNjIwNA==",
      "original_commit_id" : "a6c20d2b88ea92fd31a3bef393da2ab1d9003157",
      "original_line" : 703,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : null,
      "pull_request_review_id" : 608640187,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591426204/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591426204",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r591428495"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591428495"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, getting another one.",
      "commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "created_at" : "2021-03-10T12:12:12Z",
      "diff_hunk" : "@@ -642,6 +664,49 @@ class FuzzedSock : public Sock\n         return random_bytes.size();\n     }\n \n+    int Connect(const sockaddr*, socklen_t) const override\n+    {\n+        // Have a permanent error at connect_errnos[0] because when the fuzzed data is exhausted\n+        // SetFuzzedErrNo() will always return the first element and we want to avoid Connect()\n+        // returning -1 and setting errno to EAGAIN repeatedly.\n+        constexpr std::array connect_errnos{\n+            ECONNREFUSED,\n+            EAGAIN,\n+            ECONNRESET,\n+            EHOSTUNREACH,\n+            EINPROGRESS,\n+            EINTR,\n+            ENETUNREACH,\n+            ETIMEDOUT,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, connect_errnos);\n+            return -1;\n+        }\n+        return 0;\n+    }\n+\n+    int Getsockopt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const override\n+    {\n+        constexpr std::array getsockopt_errnos{\n+            ENOMEM,\n+            ENOBUFS,\n+        };\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            SetFuzzedErrNo(m_fuzzed_data_provider, getsockopt_errnos);\n+            return -1;\n+        }\n+        if (opt_val == nullptr) {\n+            return 0;\n+        }\n+        const auto rnd = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(*opt_len);\n+        std::memcpy(opt_val, rnd.data(), rnd.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r591428495",
      "id" : 591428495,
      "in_reply_to_id" : 589667320,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTQyODQ5NQ==",
      "original_commit_id" : "a6c20d2b88ea92fd31a3bef393da2ab1d9003157",
      "original_line" : 703,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : null,
      "pull_request_review_id" : 608642049,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-10T12:12:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591428495",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Saw this OOM error three times, but only with  `../qa-assets/fuzz_seed_corpus/` (git pulled the latest head)\r\n\r\n<details><summary>fuzz output</summary><p>\r\n\r\n```\r\n$ FUZZ=i2p src/test/fuzz/fuzz ../qa-assets/fuzz_seed_corpus/\r\nINFO: Seed: 2309095707\r\nINFO: Loaded 1 modules   (642728 inline 8-bit counters): 642728 [0x55bbf8e17668, 0x55bbf8eb4510), \r\nINFO: Loaded 1 PC tables (642728 PCs): 642728 [0x55bbf8eb4510,0x55bbf9882f90), \r\nINFO:   237105 files found in ../qa-assets/fuzz_seed_corpus/\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes\r\nINFO: seed corpus: files: 237105 min: 1b max: 3986616b total: 4147898382b rss: 359Mb\r\n#4096\tpulse  cov: 1461 ft: 1820 corp: 8/29b exec/s: 2048 rss: 445Mb\r\n#8192\tpulse  cov: 1862 ft: 2571 corp: 23/136b exec/s: 2048 rss: 520Mb\r\n#16384\tpulse  cov: 2655 ft: 4120 corp: 38/278b exec/s: 2340 rss: 659Mb\r\n#32768\tpulse  cov: 2749 ft: 5425 corp: 81/926b exec/s: 2730 rss: 722Mb\r\n#65536\tpulse  cov: 2813 ft: 6711 corp: 132/2841b exec/s: 2849 rss: 722Mb\r\n#131072\tpulse  cov: 2911 ft: 8428 corp: 169/7173b exec/s: 2730 rss: 722Mb\r\n==16390== ERROR: libFuzzer: out-of-memory (used: 2191Mb; limit: 2048Mb)\r\n   To change the out-of-memory limit use -rss_limit_mb=<N>\r\n\r\nLive Heap Allocations: 89301481 bytes in 242997 chunks; quarantined: 245829231 bytes in 30252 chunks; 1909049 other chunks; total chunks: 2182298; showing top 95% (at most 8 unique contexts)\r\n22746576 byte(s) (25%) in 237105 allocation(s)\r\n    #0 0x55bbf4cf94fd in malloc (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2d444fd)\r\n    #1 0x55bbf4c0bde7 in operator new(unsigned long) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c56de7)\r\n    #2 0x55bbf4c23aac in fuzzer::ReadCorpora(std::Fuzzer::vector<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> >, fuzzer::fuzzer_allocator<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> > > > const&, std::Fuzzer::vector<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> >, fuzzer::fuzzer_allocator<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> > > > const&) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c6eaac)\r\n    #3 0x55bbf4c23672 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c6e672)\r\n    #4 0x55bbf4c4cb12 in main (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c97b12)\r\n    #5 0x7f929ca83d09 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26d09)\r\n\r\n21499328 byte(s) (24%) in 12 allocation(s)\r\n    #0 0x55bbf4cf94fd in malloc (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2d444fd)\r\n    #1 0x55bbf4c0bde7 in operator new(unsigned long) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c56de7)\r\n    #2 0x55bbf4c4cb12 in main (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c97b12)\r\n    #3 0x7f929ca83d09 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26d09)\r\n\r\n16777216 byte(s) (18%) in 1 allocation(s)\r\n    #0 0x55bbf4d28c3d in operator new(unsigned long) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2d73c3d)\r\n    #1 0x55bbf4e228c5 in __gnu_cxx::new_allocator<uint256>::allocate(unsigned long, void const*) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/ext/new_allocator.h:115:27\r\n    #2 0x55bbf4e228c5 in std::allocator_traits<std::allocator<uint256> >::allocate(std::allocator<uint256>&, unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/alloc_traits.h:460:20\r\n    #3 0x55bbf4e228c5 in std::_Vector_base<uint256, std::allocator<uint256> >::_M_allocate(unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:346:20\r\n    #4 0x55bbf575d27a in std::vector<uint256, std::allocator<uint256> >::_M_default_append(unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/vector.tcc:635:34\r\n    #5 0x55bbf575cdd2 in std::vector<uint256, std::allocator<uint256> >::resize(unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:940:4\r\n    #6 0x55bbf575c623 in CuckooCache::cache<uint256, SignatureCacheHasher>::setup(unsigned int) /home/jon/projects/bitcoin/bitcoin/src/./cuckoocache.h:344:15\r\n    #7 0x55bbf59809e6 in CuckooCache::cache<uint256, SignatureCacheHasher>::setup_bytes(unsigned long) /home/jon/projects/bitcoin/bitcoin/src/./cuckoocache.h:368:16\r\n    #8 0x55bbf59809e6 in InitScriptExecutionCache() /home/jon/projects/bitcoin/bitcoin/src/validation.cpp:1468:44\r\n    #9 0x55bbf607ba7f in BasicTestingSetup::BasicTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&) /home/jon/projects/bitcoin/bitcoin/src/test/util/setup_common.cpp:110:5\r\n    #10 0x55bbf4dc2187 in std::_MakeUniq<BasicTestingSetup const>::__single_object std::make_unique<BasicTestingSetup const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/unique_ptr.h:962:34\r\n    #11 0x55bbf4dbe382 in std::unique_ptr<BasicTestingSetup const, std::default_delete<BasicTestingSetup const> > MakeNoLogFileContext<BasicTestingSetup const>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&) /home/jon/projects/bitcoin/bitcoin/src/./test/util/setup_common.h:170:12\r\n    #12 0x55bbf4fe4723 in initialize_i2p() /home/jon/projects/bitcoin/bitcoin/src/test/fuzz/i2p.cpp:17:39\r\n    #13 0x55bbf4d2f80c in void std::__invoke_impl<void, void (*&)()>(std::__invoke_other, void (*&)()) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:60:14\r\n    #14 0x55bbf4d2f80c in std::enable_if<is_invocable_r_v<void, void (*&)()>, void>::type std::__invoke_r<void, void (*&)()>(void (*&)()) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:110:2\r\n    #15 0x55bbf4d2f80c in std::_Function_handler<void (), void (*)()>::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:291:9\r\n    #16 0x55bbf531c54c in std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:622:14\r\n    #17 0x55bbf66a3c92 in initialize() /home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz.cpp:44:5\r\n    #18 0x55bbf66a51cd in LLVMFuzzerInitialize /home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz.cpp:70:5\r\n    #19 0x55bbf4c218ac in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c6c8ac)\r\n    #20 0x55bbf4c4cb12 in main (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c97b12)\r\n    #21 0x7f929ca83d09 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26d09)\r\n\r\n16777216 byte(s) (18%) in 1 allocation(s)\r\n    #0 0x55bbf4d28c3d in operator new(unsigned long) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2d73c3d)\r\n    #1 0x55bbf4e228c5 in __gnu_cxx::new_allocator<uint256>::allocate(unsigned long, void const*) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/ext/new_allocator.h:115:27\r\n    #2 0x55bbf4e228c5 in std::allocator_traits<std::allocator<uint256> >::allocate(std::allocator<uint256>&, unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/alloc_traits.h:460:20\r\n    #3 0x55bbf4e228c5 in std::_Vector_base<uint256, std::allocator<uint256> >::_M_allocate(unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:346:20\r\n    #4 0x55bbf575d27a in std::vector<uint256, std::allocator<uint256> >::_M_default_append(unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/vector.tcc:635:34\r\n    #5 0x55bbf575cdd2 in std::vector<uint256, std::allocator<uint256> >::resize(unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:940:4\r\n    #6 0x55bbf575c623 in CuckooCache::cache<uint256, SignatureCacheHasher>::setup(unsigned int) /home/jon/projects/bitcoin/bitcoin/src/./cuckoocache.h:344:15\r\n    #7 0x55bbf5759dc2 in CuckooCache::cache<uint256, SignatureCacheHasher>::setup_bytes(unsigned long) /home/jon/projects/bitcoin/bitcoin/src/./cuckoocache.h:368:16\r\n    #8 0x55bbf5759dc2 in (anonymous namespace)::CSignatureCache::setup_bytes(unsigned long) /home/jon/projects/bitcoin/bitcoin/src/script/sigcache.cpp:80:25\r\n    #9 0x55bbf5759dc2 in InitSignatureCache() /home/jon/projects/bitcoin/bitcoin/src/script/sigcache.cpp:100:36\r\n    #10 0x55bbf607ba6f in BasicTestingSetup::BasicTestingSetup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&) /home/jon/projects/bitcoin/bitcoin/src/test/util/setup_common.cpp:109:5\r\n    #11 0x55bbf4dc2187 in std::_MakeUniq<BasicTestingSetup const>::__single_object std::make_unique<BasicTestingSetup const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/unique_ptr.h:962:34\r\n    #12 0x55bbf4dbe382 in std::unique_ptr<BasicTestingSetup const, std::default_delete<BasicTestingSetup const> > MakeNoLogFileContext<BasicTestingSetup const>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<char const*, std::allocator<char const*> > const&) /home/jon/projects/bitcoin/bitcoin/src/./test/util/setup_common.h:170:12\r\n    #13 0x55bbf4fe4723 in initialize_i2p() /home/jon/projects/bitcoin/bitcoin/src/test/fuzz/i2p.cpp:17:39\r\n    #14 0x55bbf4d2f80c in void std::__invoke_impl<void, void (*&)()>(std::__invoke_other, void (*&)()) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:60:14\r\n    #15 0x55bbf4d2f80c in std::enable_if<is_invocable_r_v<void, void (*&)()>, void>::type std::__invoke_r<void, void (*&)()>(void (*&)()) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:110:2\r\n    #16 0x55bbf4d2f80c in std::_Function_handler<void (), void (*)()>::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:291:9\r\n    #17 0x55bbf531c54c in std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:622:14\r\n    #18 0x55bbf66a3c92 in initialize() /home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz.cpp:44:5\r\n    #19 0x55bbf66a51cd in LLVMFuzzerInitialize /home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz.cpp:70:5\r\n    #20 0x55bbf4c218ac in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c6c8ac)\r\n    #21 0x55bbf4c4cb12 in main (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c97b12)\r\n    #22 0x7f929ca83d09 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26d09)\r\n\r\n8388608 byte(s) (9%) in 1 allocation(s)\r\n    #0 0x55bbf4cf94fd in malloc (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2d444fd)\r\n    #1 0x55bbf4c0bde7 in operator new(unsigned long) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c56de7)\r\n    #2 0x55bbf4c2f807 in fuzzer::GetSizedFilesFromDir(std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> > const&, std::Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >*) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c7a807)\r\n    #3 0x55bbf4c23aac in fuzzer::ReadCorpora(std::Fuzzer::vector<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> >, fuzzer::fuzzer_allocator<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> > > > const&, std::Fuzzer::vector<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> >, fuzzer::fuzzer_allocator<std::Fuzzer::basic_string<char, std::Fuzzer::char_traits<char>, std::Fuzzer::allocator<char> > > > const&) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c6eaac)\r\n    #4 0x55bbf4c23672 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c6e672)\r\n    #5 0x55bbf4c4cb12 in main (/home/jon/projects/bitcoin/bitcoin/src/test/fuzz/fuzz+0x2c97b12)\r\n    #6 0x7f929ca83d09 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26d09)\r\n\r\nMS: 0 ; base unit: 0000000000000000000000000000000000000000\r\n\r\n\r\nartifact_prefix='./'; Test unit written to ./oom-da39a3ee5e6b4b0d3255bfef95601890afd80709\r\nBase64: \r\nSUMMARY: libFuzzer: out-of-memory\r\n```\r\n</p></details>\r\n",
      "created_at" : "2021-03-10T12:17:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-795334306",
      "id" : 795334306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NTMzNDMwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-10T12:20:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/795334306",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Had the same OOM issue today with another fuzz PR, so I'm proceeding on the assumption that it's a regression that is not related to this PR.",
      "created_at" : "2021-03-11T19:23:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-796982444",
      "id" : 796982444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5Njk4MjQ0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-11T19:23:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796982444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592677389"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592677389"
         }
      },
      "author_association" : "MEMBER",
      "body" : "e944970 nit, can alternatively omit the `count` argument with an initializer list\r\n```suggestion\r\n            random_bytes.assign({m_peek_data.value()});\r\n```",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-11T19:53:28Z",
      "diff_hunk" : "@@ -620,8 +624,26 @@ class FuzzedSock : public Sock\n             }\n             return r;\n         }\n-        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\n-            m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\n+        std::vector<uint8_t> random_bytes;\n+        bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\n+        if (m_peek_data.has_value()) {\n+            // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\n+            random_bytes.assign(1, m_peek_data.value());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592677389",
      "id" : 592677389,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY3NzM4OQ==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 631,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : null,
      "pull_request_review_id" : 610167469,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592677389/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592677389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592691628"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592691628"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3e5afb3b\r\n\r\nmember function naming: `s/Getsockopt/GetSockOpt/`\r\n\r\nnit, in the Doxygen docs: `s/unit-tested/unit tested/` lines 95 and 102\r\n",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-11T20:16:40Z",
      "diff_hunk" : "@@ -90,6 +90,19 @@ class Sock\n      */\n     virtual ssize_t Recv(void* buf, size_t len, int flags) const;\n \n+    /**\n+     * connect(2) wrapper. Equivalent to `connect(this->Get(), addr, addrlen)`. Code that uses this\n+     * wrapper can be unit-tested if this method is overridden by a mock Sock implementation.\n+     */\n+    virtual int Connect(const sockaddr* addr, socklen_t addr_len) const;\n+\n+    /**\n+     * getsockopt(2) wrapper. Equivalent to\n+     * `getsockopt(this->Get(), level, opt_name, opt_val, opt_len)`. Code that uses this\n+     * wrapper can be unit-tested if this method is overridden by a mock Sock implementation.\n+     */\n+    virtual int Getsockopt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592691628",
      "id" : 592691628,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY5MTYyOA==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 104,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/util/sock.h",
      "position" : null,
      "pull_request_review_id" : 610167469,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592691628/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592691628",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592695756"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592695756"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3e5afb3bf0db02ad3fc00afe431f64f3dcd0d3b1\r\n```suggestion\r\n    int Connect(const sockaddr* addr, socklen_t addr_len) const override\r\n```",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-11T20:23:23Z",
      "diff_hunk" : "@@ -642,6 +664,47 @@ class FuzzedSock : public Sock\n         return random_bytes.size();\n     }\n \n+    int Connect(const sockaddr*, socklen_t) const override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592695756",
      "id" : 592695756,
      "line" : 688,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY5NTc1Ng==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 688,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : 109,
      "pull_request_review_id" : 610167469,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592695756/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592695756",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592710461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592710461"
         }
      },
      "author_association" : "MEMBER",
      "body" : "34c199db11b36eee91e56cdd046c090f62da18d6\r\n```suggestion\r\n    if (sock.Connect(reinterpret_cast<struct sockaddr*>(&sockaddr), len) == SOCKET_ERROR)\r\n```",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-11T20:47:14Z",
      "diff_hunk" : "@@ -633,7 +633,7 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n     }\n \n     // Connect to the addrConnect service on the hSocket socket.\n-    if (connect(hSocket, (struct sockaddr*)&sockaddr, len) == SOCKET_ERROR)\n+    if (sock.Connect((struct sockaddr*)&sockaddr, len) == SOCKET_ERROR)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592710461",
      "id" : 592710461,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjcxMDQ2MQ==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 636,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_review_id" : 610167469,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592710461/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592710461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592715679"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592715679"
         }
      },
      "author_association" : "MEMBER",
      "body" : "34c199db11b36eee91e56cdd046c090f62da18d6\r\n```suggestion\r\n            if (sock.Getsockopt(SOL_SOCKET, SO_ERROR, static_cast<sockopt_arg_type>(&sockerr), &sockerr_len) ==\r\n```\r\n",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-11T20:56:11Z",
      "diff_hunk" : "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);\n+            if (sock.Getsockopt(SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&sockerr, &sockerr_len) ==",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592715679",
      "id" : 592715679,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjcxNTY3OQ==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 663,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_review_id" : 610167469,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592715679/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592715679",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592717790"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592717790"
         }
      },
      "author_association" : "MEMBER",
      "body" : "34c199db11b36eee91e56cdd046c090f62da18d6 Should `sockerr` be initialized with a value?",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-11T20:59:33Z",
      "diff_hunk" : "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r592717790",
      "id" : 592717790,
      "line" : 580,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjcxNzc5MA==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 580,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : 74,
      "pull_request_review_id" : 610167469,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592717790/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592717790",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Had the same OOM issue today with another fuzz PR\r\n\r\nCan you reproduce it? E.g. `FUZZ=i2p src/test/fuzz/fuzz ./oom-da39a3ee5e6b4b0d3255bfef95601890afd80709`",
      "created_at" : "2021-03-12T08:12:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-797314843",
      "id" : 797314843,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzMxNDg0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T08:12:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797314843",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\nINFO: Seed: 3949145381\r\nINFO: Loaded 1 modules   (643885 inline 8-bit counters): 643885 [0x56188117c288, 0x5618812195b5), \r\nINFO: Loaded 1 PC tables (643885 PCs): 643885 [0x5618812195b8,0x561881bec888), \r\nsrc/test/fuzz/fuzz: Running 1 inputs 1 time(s) each.\r\nRunning: oom-da39a3ee5e6b4b0d3255bfef95601890afd80709\r\nExecuted oom-da39a3ee5e6b4b0d3255bfef95601890afd80709 in 0 ms\r\n***\r\n*** NOTE: fuzzing was not performed, you have only\r\n***       executed the target code on a fixed set of inputs.\r\n***\r\n```\r\n",
      "created_at" : "2021-03-12T13:32:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-797492455",
      "id" : 797492455,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzQ5MjQ1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T13:32:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797492455",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593196080"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593196080"
         }
      },
      "author_association" : "MEMBER",
      "body" : "5ac2bc1 Verified this line and line 352 compile when replaced with explicit typing and braced initialization `std::unique_ptr<Sock> sock{Hello()};` (which would save people time in looking up the type)",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T14:04:57Z",
      "diff_hunk" : "@@ -370,12 +372,12 @@ void Session::CreateIfNotCreatedAlready()\n               m_my_addr.ToString());\n }\n \n-Sock Session::StreamAccept()\n+std::unique_ptr<Sock> Session::StreamAccept()\n {\n-    Sock sock = Hello();\n+    auto sock = Hello();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593196080",
      "id" : 593196080,
      "line" : 377,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzE5NjA4MA==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 377,
      "original_position" : 134,
      "original_start_line" : null,
      "path" : "src/i2p.cpp",
      "position" : 134,
      "pull_request_review_id" : 610813459,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593196080/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593196080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593203017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593203017"
         }
      },
      "author_association" : "MEMBER",
      "body" : "933d181a nit, `sam_proxy` here and `to` on line 43 below can both be `const` (to show intention)",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T14:14:44Z",
      "diff_hunk" : "@@ -0,0 +1,51 @@\n+// Copyright (c) 2020-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+void initialize_i2p()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<>();\n+}\n+\n+FUZZ_TARGET_INIT(i2p, initialize_i2p)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    // Mock CreateSock() to create a fuzzed socket.\n+    auto CreateSockOrig = CreateSock;\n+    CreateSock = [&fuzzed_data_provider](const CService&) {\n+        return std::make_unique<FuzzedSock>(fuzzed_data_provider);\n+    };\n+\n+    CService sam_proxy;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593203017",
      "id" : 593203017,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzIwMzAxNw==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 30,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/test/fuzz/i2p.cpp",
      "position" : null,
      "pull_request_review_id" : 610813459,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593203017/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593203017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593322760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593322760"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T17:00:08Z",
      "diff_hunk" : "@@ -620,8 +624,26 @@ class FuzzedSock : public Sock\n             }\n             return r;\n         }\n-        const std::vector<uint8_t> random_bytes = m_fuzzed_data_provider.ConsumeBytes<uint8_t>(\n-            m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, len));\n+        std::vector<uint8_t> random_bytes;\n+        bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\n+        if (m_peek_data.has_value()) {\n+            // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\n+            random_bytes.assign(1, m_peek_data.value());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593322760",
      "id" : 593322760,
      "in_reply_to_id" : 592677389,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyMjc2MA==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 631,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : null,
      "pull_request_review_id" : 610982731,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593322760/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593322760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593322872"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593322872"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T17:00:18Z",
      "diff_hunk" : "@@ -90,6 +90,19 @@ class Sock\n      */\n     virtual ssize_t Recv(void* buf, size_t len, int flags) const;\n \n+    /**\n+     * connect(2) wrapper. Equivalent to `connect(this->Get(), addr, addrlen)`. Code that uses this\n+     * wrapper can be unit-tested if this method is overridden by a mock Sock implementation.\n+     */\n+    virtual int Connect(const sockaddr* addr, socklen_t addr_len) const;\n+\n+    /**\n+     * getsockopt(2) wrapper. Equivalent to\n+     * `getsockopt(this->Get(), level, opt_name, opt_val, opt_len)`. Code that uses this\n+     * wrapper can be unit-tested if this method is overridden by a mock Sock implementation.\n+     */\n+    virtual int Getsockopt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593322872",
      "id" : 593322872,
      "in_reply_to_id" : 592691628,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyMjg3Mg==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 104,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/util/sock.h",
      "position" : null,
      "pull_request_review_id" : 610982898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593322872/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593322872",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593325238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325238"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why? It is a bit shorter without the parameter names. Omitting parameter names if they are not used I think is a good practice because it makes it obvious that they are not used.\r\n\r\nAlso, specifying parameter names and not using those parameters in the function will produce a compiler warning with `-Wunused-parameter` (which is explicitly disabled in Bitcoin Core, I guess because of so many functions that violate it that it is hard to fix).",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T17:04:16Z",
      "diff_hunk" : "@@ -642,6 +664,47 @@ class FuzzedSock : public Sock\n         return random_bytes.size();\n     }\n \n+    int Connect(const sockaddr*, socklen_t) const override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593325238",
      "id" : 593325238,
      "in_reply_to_id" : 592695756,
      "line" : 688,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyNTIzOA==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 688,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : 109,
      "pull_request_review_id" : 610986257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325238/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593325381"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325381"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T17:04:30Z",
      "diff_hunk" : "@@ -633,7 +633,7 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n     }\n \n     // Connect to the addrConnect service on the hSocket socket.\n-    if (connect(hSocket, (struct sockaddr*)&sockaddr, len) == SOCKET_ERROR)\n+    if (sock.Connect((struct sockaddr*)&sockaddr, len) == SOCKET_ERROR)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593325381",
      "id" : 593325381,
      "in_reply_to_id" : 592710461,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyNTM4MQ==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 636,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_review_id" : 610986477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325381/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325381",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593325452"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325452"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T17:04:38Z",
      "diff_hunk" : "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);\n+            if (sock.Getsockopt(SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&sockerr, &sockerr_len) ==",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593325452",
      "id" : 593325452,
      "in_reply_to_id" : 592715679,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyNTQ1Mg==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 663,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_review_id" : 610986602,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325452/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593325452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593326447"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593326447"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think so - `getsockopt()` will set it (if it returns `0`). The previous code abused `nRet` which contained a leftover value from the call to `select()`.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T17:06:00Z",
      "diff_hunk" : "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593326447",
      "id" : 593326447,
      "in_reply_to_id" : 592717790,
      "line" : 580,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyNjQ0Nw==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 580,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : 74,
      "pull_request_review_id" : 610987789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593326447/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593326447",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593326687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593326687"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T17:06:25Z",
      "diff_hunk" : "@@ -0,0 +1,51 @@\n+// Copyright (c) 2020-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+void initialize_i2p()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<>();\n+}\n+\n+FUZZ_TARGET_INIT(i2p, initialize_i2p)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    // Mock CreateSock() to create a fuzzed socket.\n+    auto CreateSockOrig = CreateSock;\n+    CreateSock = [&fuzzed_data_provider](const CService&) {\n+        return std::make_unique<FuzzedSock>(fuzzed_data_provider);\n+    };\n+\n+    CService sam_proxy;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593326687",
      "id" : 593326687,
      "in_reply_to_id" : 593203017,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMyNjY4Nw==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 30,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/test/fuzz/i2p.cpp",
      "position" : null,
      "pull_request_review_id" : 610988169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593326687/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593326687",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`933d181a8...7c6fc2de5`: address suggestions and also fuzz the `IsConnected()` method of `Sock` / `FuzzedSock`.",
      "created_at" : "2021-03-12T17:07:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-797627661",
      "id" : 797627661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzYyNzY2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T17:07:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797627661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593335641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593335641"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Broke the windows build. Reverted.\r\n```\r\nnetbase.cpp:663:81: error: invalid static_cast from type âint*â to type âsockopt_arg_typeâ {aka âchar*â}\r\n  663 |                     SOL_SOCKET, SO_ERROR, static_cast<sockopt_arg_type>(&sockerr), &sockerr_len) ==\r\n      |                                                                                 ^\r\n```",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T17:20:34Z",
      "diff_hunk" : "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);\n+            if (sock.Getsockopt(SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&sockerr, &sockerr_len) ==",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593335641",
      "id" : 593335641,
      "in_reply_to_id" : 592715679,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMzNTY0MQ==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 663,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_review_id" : 610999794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593335641/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593335641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`7c6fc2de5...23c861d6f`: fix Windows CI",
      "created_at" : "2021-03-12T17:20:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-797636166",
      "id" : 797636166,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzYzNjE2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T17:20:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797636166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593350667"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593350667"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Removing `const` is not feasible (an avalanche of changes, not worth it).",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T17:44:33Z",
      "diff_hunk" : "@@ -534,36 +534,37 @@ class FuzzedSock : public Sock\n {\n     FuzzedDataProvider& m_fuzzed_data_provider;\n \n+    /**\n+     * Data to return when `MSG_PEEK` is used as a `Recv()` flag.\n+     * If `MSG_PEEK` is used, then our `Recv()` returns some random data as usual, but on the next\n+     * `Recv()` call we must return the same data, thus we remember it here.\n+     */\n+    mutable std::optional<uint8_t> m_peek_data;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593350667",
      "id" : 593350667,
      "in_reply_to_id" : 589398727,
      "line" : 563,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzM1MDY2Nw==",
      "original_commit_id" : "a6c20d2b88ea92fd31a3bef393da2ab1d9003157",
      "original_line" : 563,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : 9,
      "pull_request_review_id" : 611019339,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593350667/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593350667",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593358721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593358721"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We should probably use `reinterpret_cast` to signal that this is an ugly and non-portable cast (based on typedefs in `compat.h`). It doesn't have to be done in this PR. There are related cases.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T17:58:17Z",
      "diff_hunk" : "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);\n+            if (sock.Getsockopt(SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&sockerr, &sockerr_len) ==",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593358721",
      "id" : 593358721,
      "in_reply_to_id" : 592715679,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzM1ODcyMQ==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 663,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_review_id" : 611029870,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593358721/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593358721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593359156"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593359156"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for the explanation.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T17:58:56Z",
      "diff_hunk" : "@@ -642,6 +664,47 @@ class FuzzedSock : public Sock\n         return random_bytes.size();\n     }\n \n+    int Connect(const sockaddr*, socklen_t) const override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593359156",
      "id" : 593359156,
      "in_reply_to_id" : 592695756,
      "line" : 688,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzM1OTE1Ng==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 688,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : 109,
      "pull_request_review_id" : 611030390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593359156/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593359156",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593376959"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593376959"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, it looks like `getsockopt` will set both `sockerr` and `sockerr_len`. I was curious what `sizeof` would return on an uninitialized `int` on my implementation/compiler:\r\n\r\n\r\n```c++\r\n#include <iostream>\r\n#include <sys/socket.h>\r\n\r\nint main()\r\n{\r\n    int sockerr;\r\n    socklen_t sockerr_len{sizeof(sockerr)};\r\n\r\n    std::cout << \"sockerr: \" << sockerr << '\\n';\r\n    std::cout << \"size_of(sockerr): \" << sizeof(sockerr) << '\\n';\r\n    std::cout << \"sockerr_len: \" << sockerr_len << '\\n';\r\n\r\n    return 0;\r\n}\r\n```\r\n```\r\nsockerr: 0\r\nsize_of(sockerr): 4\r\nsockerr_len: 4\r\n```",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-12T18:48:52Z",
      "diff_hunk" : "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593376959",
      "id" : 593376959,
      "in_reply_to_id" : 592717790,
      "line" : 580,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzM3Njk1OQ==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 580,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : 74,
      "pull_request_review_id" : 611058652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593376959/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593376959",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 23c861d6ff995b7e6034d4bec6af2f6a3d595dca",
      "created_at" : "2021-03-12T18:50:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-797680919",
      "id" : 797680919,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzY4MDkxOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T18:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797680919",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593615829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593615829"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`sizeof()` does not read the value, can be used safely without triggering any ubsan or valgrind warnings on uninitialized variables.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2021-03-13T05:33:21Z",
      "diff_hunk" : "@@ -642,46 +642,34 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             // Connection didn't actually fail, but is being established\n             // asynchronously. Thus, use async I/O api (select/poll)\n             // synchronously to check for successful connection with a timeout.\n-#ifdef USE_POLL\n-            struct pollfd pollfd = {};\n-            pollfd.fd = hSocket;\n-            pollfd.events = POLLIN | POLLOUT;\n-            int nRet = poll(&pollfd, 1, nTimeout);\n-#else\n-            struct timeval timeout = MillisToTimeval(nTimeout);\n-            fd_set fdset;\n-            FD_ZERO(&fdset);\n-            FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n-#endif\n-            // Upon successful completion, both select and poll return the total\n-            // number of file descriptors that have been selected. A value of 0\n-            // indicates that the call timed out and no file descriptors have\n-            // been selected.\n-            if (nRet == 0)\n-            {\n-                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+            const Sock::Event requested = Sock::RECV | Sock::SEND;\n+            Sock::Event occurred;\n+            if (!sock.Wait(std::chrono::milliseconds{nTimeout}, requested, &occurred)) {\n+                LogPrintf(\"wait for connect to %s failed: %s\\n\",\n+                          addrConnect.ToString(),\n+                          NetworkErrorString(WSAGetLastError()));\n                 return false;\n-            }\n-            if (nRet == SOCKET_ERROR)\n-            {\n-                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            } else if (occurred == 0) {\n+                LogPrint(BCLog::NET, \"connection attempt to %s timed out\\n\", addrConnect.ToString());\n                 return false;\n             }\n \n-            // Even if the select/poll was successful, the connect might not\n+            // Even if the wait was successful, the connect might not\n             // have been successful. The reason for this failure is hidden away\n             // in the SO_ERROR for the socket in modern systems. We read it into\n-            // nRet here.\n-            socklen_t nRetSize = sizeof(nRet);\n-            if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&nRet, &nRetSize) == SOCKET_ERROR)\n-            {\n+            // sockerr here.\n+            int sockerr;\n+            socklen_t sockerr_len = sizeof(sockerr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r593615829",
      "id" : 593615829,
      "in_reply_to_id" : 592717790,
      "line" : 580,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzYxNTgyOQ==",
      "original_commit_id" : "933d181a8c0c41318204b1657765d582418a80a1",
      "original_line" : 580,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : 74,
      "pull_request_review_id" : 611569527,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593615829/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T14:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593615829",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-16T11:38:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-800185090",
      "id" : 800185090,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMDE4NTA5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-16T11:38:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800185090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`23c861d6f...40316a37c`:\r\n\r\n* rebase due to conflicts\r\n* expect that `Sock` methods `RecvUntilTerminator()` and `SendComplete()` could throw an exception when using fuzzed socket. After all a fuzzed socket may return an error at any time.\r\n* add a regression test for the bug fixed in https://github.com/bitcoin/bitcoin/pull/21407.",
      "created_at" : "2021-03-16T14:02:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-800283578",
      "id" : 800283578,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMDI4MzU3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-16T14:02:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800283578",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Tested ACK 40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5\r\n\r\nGreat fuzzing work @vasild!",
      "created_at" : "2021-03-20T23:31:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-803478375",
      "id" : 803478375,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMzQ3ODM3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-20T23:31:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803478375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(Changed title, because this is not test-only)",
      "created_at" : "2021-03-22T06:55:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-803812017",
      "id" : 803812017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMzgxMjAxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-22T06:55:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803812017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK 40316a37cb",
      "created_at" : "2021-03-22T06:55:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-803812074",
      "id" : 803812074,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMzgxMjA3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-22T06:55:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803812074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r893296736"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893296736"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like this is never reached?\r\n\r\nhttps://marcofalke.github.io/btc_cov/fuzz.coverage/src/test/fuzz/i2p.cpp.gcov.html",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2022-06-09T09:42:49Z",
      "diff_hunk" : "@@ -0,0 +1,57 @@\n+// Copyright (c) 2020-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+void initialize_i2p()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<>();\n+}\n+\n+FUZZ_TARGET_INIT(i2p, initialize_i2p)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    // Mock CreateSock() to create FuzzedSock.\n+    auto CreateSockOrig = CreateSock;\n+    CreateSock = [&fuzzed_data_provider](const CService&) {\n+        return std::make_unique<FuzzedSock>(fuzzed_data_provider);\n+    };\n+\n+    const CService sam_proxy;\n+    CThreadInterrupt interrupt;\n+\n+    i2p::sam::Session sess{GetDataDir() / \"fuzzed_i2p_private_key\", sam_proxy, &interrupt};\n+\n+    i2p::Connection conn;\n+\n+    if (sess.Listen(conn)) {\n+        if (sess.Accept(conn)) {\n+            try {\n+                conn.sock->RecvUntilTerminator('\\n', 10ms, interrupt, i2p::sam::MAX_MSG_SIZE);\n+            } catch (const std::runtime_error&) {\n+            }\n+        }\n+    }\n+\n+    const CService to;\n+    bool proxy_error;\n+\n+    if (sess.Connect(to, conn, proxy_error)) {\n+        try {\n+            conn.sock->SendComplete(\"verack\\n\", 10ms, interrupt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r893296736",
      "id" : 893296736,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII5841PqBg",
      "original_commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_line" : 51,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/test/fuzz/i2p.cpp",
      "position" : 51,
      "pull_request_review_id" : 1001035309,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893296736/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T09:42:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893296736",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r893611842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893611842"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Well, it would be executed, but for `Connect()` to return `true` the fuzzed sock must return some meaningful data, which I guess has a very very low chance of happening.\r\n\r\nEdit: now I remember I was considering crafting a custom fuzz-corpus data input which would contain the meaningful data at the right offsets so that `Connect()` will succeed. I gave up because that would be difficult to maintain because the binary \"magic\" corpus data would have to be adjusted every time this test is modified to add or remove calls that consume fuzz data before `Connect()` is called. Also, that would not be fuzzing so much, but rather some kind of unit testing.",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2022-06-09T14:55:59Z",
      "diff_hunk" : "@@ -0,0 +1,57 @@\n+// Copyright (c) 2020-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+void initialize_i2p()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<>();\n+}\n+\n+FUZZ_TARGET_INIT(i2p, initialize_i2p)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    // Mock CreateSock() to create FuzzedSock.\n+    auto CreateSockOrig = CreateSock;\n+    CreateSock = [&fuzzed_data_provider](const CService&) {\n+        return std::make_unique<FuzzedSock>(fuzzed_data_provider);\n+    };\n+\n+    const CService sam_proxy;\n+    CThreadInterrupt interrupt;\n+\n+    i2p::sam::Session sess{GetDataDir() / \"fuzzed_i2p_private_key\", sam_proxy, &interrupt};\n+\n+    i2p::Connection conn;\n+\n+    if (sess.Listen(conn)) {\n+        if (sess.Accept(conn)) {\n+            try {\n+                conn.sock->RecvUntilTerminator('\\n', 10ms, interrupt, i2p::sam::MAX_MSG_SIZE);\n+            } catch (const std::runtime_error&) {\n+            }\n+        }\n+    }\n+\n+    const CService to;\n+    bool proxy_error;\n+\n+    if (sess.Connect(to, conn, proxy_error)) {\n+        try {\n+            conn.sock->SendComplete(\"verack\\n\", 10ms, interrupt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r893611842",
      "id" : 893611842,
      "in_reply_to_id" : 893296736,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII5841Q29C",
      "original_commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_line" : 51,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/test/fuzz/i2p.cpp",
      "position" : 51,
      "pull_request_review_id" : 1001485752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893611842/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T15:00:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893611842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r893637770"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893637770"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There'd also be a middle way to teach the fuzz engine a meaningful format or snippets. This can be achieved with a dict, a custom mutator, or with some code in the fuzz target (CallOneOf(...))",
      "commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "created_at" : "2022-06-09T15:16:52Z",
      "diff_hunk" : "@@ -0,0 +1,57 @@\n+// Copyright (c) 2020-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+void initialize_i2p()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<>();\n+}\n+\n+FUZZ_TARGET_INIT(i2p, initialize_i2p)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    // Mock CreateSock() to create FuzzedSock.\n+    auto CreateSockOrig = CreateSock;\n+    CreateSock = [&fuzzed_data_provider](const CService&) {\n+        return std::make_unique<FuzzedSock>(fuzzed_data_provider);\n+    };\n+\n+    const CService sam_proxy;\n+    CThreadInterrupt interrupt;\n+\n+    i2p::sam::Session sess{GetDataDir() / \"fuzzed_i2p_private_key\", sam_proxy, &interrupt};\n+\n+    i2p::Connection conn;\n+\n+    if (sess.Listen(conn)) {\n+        if (sess.Accept(conn)) {\n+            try {\n+                conn.sock->RecvUntilTerminator('\\n', 10ms, interrupt, i2p::sam::MAX_MSG_SIZE);\n+            } catch (const std::runtime_error&) {\n+            }\n+        }\n+    }\n+\n+    const CService to;\n+    bool proxy_error;\n+\n+    if (sess.Connect(to, conn, proxy_error)) {\n+        try {\n+            conn.sock->SendComplete(\"verack\\n\", 10ms, interrupt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21387#discussion_r893637770",
      "id" : 893637770,
      "in_reply_to_id" : 893296736,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII5841Q9SK",
      "original_commit_id" : "40316a37cb02cf8a9a8b2cbd4d7153ffa57e7ec5",
      "original_line" : 51,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/test/fuzz/i2p.cpp",
      "position" : 51,
      "pull_request_review_id" : 1001533944,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21387",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893637770/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T15:16:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893637770",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
