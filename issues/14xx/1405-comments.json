[
   {
      "author_association" : "NONE",
      "body" : "The \"Add UI InitMessage for -loadblock.\" commit should get in asap, but be seperate from this one.\n",
      "created_at" : "2012-06-07T18:15:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1405#issuecomment-6183408",
      "id" : 6183408,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1405",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxODM0MDg=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6183408/reactions"
      },
      "updated_at" : "2012-06-07T18:15:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6183408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Finally got around to benchmarking IBD using -autoprune, it was a tiny sliver faster than master (just under 5%) -loadblock'ing to the current block, but its blkindex.dat was only 351MB instead of 554MB.  \nThus, I made -autoprune default and rebased.\n",
      "created_at" : "2012-06-07T22:17:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1405#issuecomment-6189658",
      "id" : 6189658,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1405",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxODk2NTg=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6189658/reactions"
      },
      "updated_at" : "2012-06-07T22:17:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6189658",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r948155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948155"
         }
      },
      "author_association" : "NONE",
      "body" : "That Commented out code should be removed, if not used :).\n",
      "commit_id" : "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "created_at" : "2012-06-07T23:21:24Z",
      "diff_hunk" : "@@ -535,6 +551,118 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n+bool CTxDB::PruneBlockIndex(uint256 hashPruneFrom, uint256 hashPruneTo)\n+{\n+//    TODO: assert here, but cant #include main.h\n+//    if (hashPruneFrom != 0)\n+//        assert(hashPruneTo == hashBestBlock);\n+\n+    CBlockIndex* pindexScan = pindexGenesisBlock;\n+    uint256 hashOldBestCheckpoint;\n+    if (ReadHashBestCheckpoint(hashOldBestCheckpoint) && hashOldBestCheckpoint == hashPruneTo)\n+        return true;\n+\n+    if (!mapBlockIndex.count(hashPruneTo))\n+        return true;\n+\n+    if (hashPruneFrom != 0)\n+        pindexScan = mapBlockIndex[hashPruneFrom];\n+    assert(pindexScan);\n+\n+    printf(\"Pruning Block Index from %s to %s.\\n\", hashPruneFrom.ToString().substr(0,20).c_str(), hashPruneTo.ToString().substr(0,20).c_str());\n+\n+    // Cache of Txes by hash -> txouts spent before hashPruneTo flags + cant be deleted flag\n+    map<uint256, pair<vector<bool>, bool> > mapTxIndexCache;\n+\n+    while (pindexScan != NULL && *(pindexScan->phashBlock) != hashPruneTo)\n+    {\n+        if(fRequestShutdown)\n+            return true;\n+\n+        CBlock block;\n+        block.ReadFromDisk(pindexScan);\n+\n+        BOOST_FOREACH(CTransaction& tx, block.vtx)\n+        {\n+            if (tx.IsCoinBase())\n+                continue;\n+\n+            BOOST_FOREACH(CTxIn& txin, tx.vin)\n+            {\n+                COutPoint& txout = txin.prevout;\n+                uint256& hash = txout.hash;\n+                pair<vector<bool>, bool>& pairTx = mapTxIndexCache[hash];\n+\n+                if (pairTx.first.size() == 0)\n+                {\n+                    CTxIndex txindex;\n+                    if (!ReadTxIndex(hash, txindex))\n+                    {\n+                        // This should only ever happen if we get interrupted pruning and dont WriteHashBestCheckpoint\n+                        pairTx.second = false;\n+                        break;\n+                    }\n+\n+                    vector<CDiskTxPos>& vSpent = txindex.vSpent;\n+                    unsigned int vouts = vSpent.size();\n+\n+                    pairTx.first.resize(vouts);\n+\n+                    pairTx.second = true;\n+                    for (unsigned int i = 0; i < vouts; i++)\n+                    {\n+                        if (vSpent[i].IsNull())\n+                        {\n+                            pairTx.second = false;\n+                            break;\n+                        }\n+                        pairTx.first[i] = false;\n+                    }\n+                }\n+\n+                if (pairTx.second == false)\n+                    continue;\n+\n+                pairTx.first[txout.n] = true;\n+            }\n+        }\n+\n+        pindexScan = pindexScan->pnext;\n+    }\n+\n+    // TODO: It may be prudent to use DB Transactions here, but if we do we overrun our maximum lock objects\n+    //if (!TxnBegin())\n+    //    return false;\n+\n+    unsigned int nTxsPruned = 0;\n+    typedef pair<const uint256, pair<vector<bool>, bool> > TxIndexCachePairType;\n+    BOOST_FOREACH(TxIndexCachePairType& pair, mapTxIndexCache)\n+    {\n+        bool fPrunable = true;\n+        BOOST_FOREACH(bool fSpent, pair.second.first)\n+            if (!fSpent)\n+            {\n+                fPrunable = false;\n+                break;\n+            }\n+\n+        if (!fPrunable)\n+            continue;\n+\n+        EraseTxIndex(pair.first);\n+        nTxsPruned++;\n+    }\n+\n+    WriteHashBestCheckpoint(hashPruneTo);\n+\n+    //if (!TxnCommit())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r948155",
      "id" : 948155,
      "line" : 658,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk0ODE1NQ==",
      "original_commit_id" : "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "original_line" : null,
      "original_position" : 138,
      "original_start_line" : null,
      "path" : "src/db.cpp",
      "position" : 138,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948155/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-07T23:21:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r948312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948312"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Meh, it would be nice to have that, so it serves as a TODO.\n",
      "commit_id" : "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "created_at" : "2012-06-07T23:55:26Z",
      "diff_hunk" : "@@ -535,6 +551,118 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n+bool CTxDB::PruneBlockIndex(uint256 hashPruneFrom, uint256 hashPruneTo)\n+{\n+//    TODO: assert here, but cant #include main.h\n+//    if (hashPruneFrom != 0)\n+//        assert(hashPruneTo == hashBestBlock);\n+\n+    CBlockIndex* pindexScan = pindexGenesisBlock;\n+    uint256 hashOldBestCheckpoint;\n+    if (ReadHashBestCheckpoint(hashOldBestCheckpoint) && hashOldBestCheckpoint == hashPruneTo)\n+        return true;\n+\n+    if (!mapBlockIndex.count(hashPruneTo))\n+        return true;\n+\n+    if (hashPruneFrom != 0)\n+        pindexScan = mapBlockIndex[hashPruneFrom];\n+    assert(pindexScan);\n+\n+    printf(\"Pruning Block Index from %s to %s.\\n\", hashPruneFrom.ToString().substr(0,20).c_str(), hashPruneTo.ToString().substr(0,20).c_str());\n+\n+    // Cache of Txes by hash -> txouts spent before hashPruneTo flags + cant be deleted flag\n+    map<uint256, pair<vector<bool>, bool> > mapTxIndexCache;\n+\n+    while (pindexScan != NULL && *(pindexScan->phashBlock) != hashPruneTo)\n+    {\n+        if(fRequestShutdown)\n+            return true;\n+\n+        CBlock block;\n+        block.ReadFromDisk(pindexScan);\n+\n+        BOOST_FOREACH(CTransaction& tx, block.vtx)\n+        {\n+            if (tx.IsCoinBase())\n+                continue;\n+\n+            BOOST_FOREACH(CTxIn& txin, tx.vin)\n+            {\n+                COutPoint& txout = txin.prevout;\n+                uint256& hash = txout.hash;\n+                pair<vector<bool>, bool>& pairTx = mapTxIndexCache[hash];\n+\n+                if (pairTx.first.size() == 0)\n+                {\n+                    CTxIndex txindex;\n+                    if (!ReadTxIndex(hash, txindex))\n+                    {\n+                        // This should only ever happen if we get interrupted pruning and dont WriteHashBestCheckpoint\n+                        pairTx.second = false;\n+                        break;\n+                    }\n+\n+                    vector<CDiskTxPos>& vSpent = txindex.vSpent;\n+                    unsigned int vouts = vSpent.size();\n+\n+                    pairTx.first.resize(vouts);\n+\n+                    pairTx.second = true;\n+                    for (unsigned int i = 0; i < vouts; i++)\n+                    {\n+                        if (vSpent[i].IsNull())\n+                        {\n+                            pairTx.second = false;\n+                            break;\n+                        }\n+                        pairTx.first[i] = false;\n+                    }\n+                }\n+\n+                if (pairTx.second == false)\n+                    continue;\n+\n+                pairTx.first[txout.n] = true;\n+            }\n+        }\n+\n+        pindexScan = pindexScan->pnext;\n+    }\n+\n+    // TODO: It may be prudent to use DB Transactions here, but if we do we overrun our maximum lock objects\n+    //if (!TxnBegin())\n+    //    return false;\n+\n+    unsigned int nTxsPruned = 0;\n+    typedef pair<const uint256, pair<vector<bool>, bool> > TxIndexCachePairType;\n+    BOOST_FOREACH(TxIndexCachePairType& pair, mapTxIndexCache)\n+    {\n+        bool fPrunable = true;\n+        BOOST_FOREACH(bool fSpent, pair.second.first)\n+            if (!fSpent)\n+            {\n+                fPrunable = false;\n+                break;\n+            }\n+\n+        if (!fPrunable)\n+            continue;\n+\n+        EraseTxIndex(pair.first);\n+        nTxsPruned++;\n+    }\n+\n+    WriteHashBestCheckpoint(hashPruneTo);\n+\n+    //if (!TxnCommit())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r948312",
      "id" : 948312,
      "line" : 658,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk0ODMxMg==",
      "original_commit_id" : "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "original_line" : null,
      "original_position" : 138,
      "original_start_line" : null,
      "path" : "src/db.cpp",
      "position" : 138,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948312/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-07T23:55:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "No noticeable speedup here, but ACK on the idea. I'll have a look at the code later.\n",
      "created_at" : "2012-06-08T16:23:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1405#issuecomment-6206992",
      "id" : 6206992,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1405",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMDY5OTI=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6206992/reactions"
      },
      "updated_at" : "2012-06-08T16:23:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6206992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "idea ACK.  I like this!\n",
      "created_at" : "2012-06-08T18:22:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1405#issuecomment-6209711",
      "id" : 6209711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1405",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMDk3MTE=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6209711/reactions"
      },
      "updated_at" : "2012-06-08T18:22:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6209711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r974400"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974400"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you add `TODO:` in the comment, many code editors will show it in an overview. Might be useful, and more clear to readers that it isn't just commented out code (otherwise, someone that doesn't know might remove it).\n",
      "commit_id" : "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "created_at" : "2012-06-13T08:36:14Z",
      "diff_hunk" : "@@ -535,6 +551,118 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n+bool CTxDB::PruneBlockIndex(uint256 hashPruneFrom, uint256 hashPruneTo)\n+{\n+//    TODO: assert here, but cant #include main.h\n+//    if (hashPruneFrom != 0)\n+//        assert(hashPruneTo == hashBestBlock);\n+\n+    CBlockIndex* pindexScan = pindexGenesisBlock;\n+    uint256 hashOldBestCheckpoint;\n+    if (ReadHashBestCheckpoint(hashOldBestCheckpoint) && hashOldBestCheckpoint == hashPruneTo)\n+        return true;\n+\n+    if (!mapBlockIndex.count(hashPruneTo))\n+        return true;\n+\n+    if (hashPruneFrom != 0)\n+        pindexScan = mapBlockIndex[hashPruneFrom];\n+    assert(pindexScan);\n+\n+    printf(\"Pruning Block Index from %s to %s.\\n\", hashPruneFrom.ToString().substr(0,20).c_str(), hashPruneTo.ToString().substr(0,20).c_str());\n+\n+    // Cache of Txes by hash -> txouts spent before hashPruneTo flags + cant be deleted flag\n+    map<uint256, pair<vector<bool>, bool> > mapTxIndexCache;\n+\n+    while (pindexScan != NULL && *(pindexScan->phashBlock) != hashPruneTo)\n+    {\n+        if(fRequestShutdown)\n+            return true;\n+\n+        CBlock block;\n+        block.ReadFromDisk(pindexScan);\n+\n+        BOOST_FOREACH(CTransaction& tx, block.vtx)\n+        {\n+            if (tx.IsCoinBase())\n+                continue;\n+\n+            BOOST_FOREACH(CTxIn& txin, tx.vin)\n+            {\n+                COutPoint& txout = txin.prevout;\n+                uint256& hash = txout.hash;\n+                pair<vector<bool>, bool>& pairTx = mapTxIndexCache[hash];\n+\n+                if (pairTx.first.size() == 0)\n+                {\n+                    CTxIndex txindex;\n+                    if (!ReadTxIndex(hash, txindex))\n+                    {\n+                        // This should only ever happen if we get interrupted pruning and dont WriteHashBestCheckpoint\n+                        pairTx.second = false;\n+                        break;\n+                    }\n+\n+                    vector<CDiskTxPos>& vSpent = txindex.vSpent;\n+                    unsigned int vouts = vSpent.size();\n+\n+                    pairTx.first.resize(vouts);\n+\n+                    pairTx.second = true;\n+                    for (unsigned int i = 0; i < vouts; i++)\n+                    {\n+                        if (vSpent[i].IsNull())\n+                        {\n+                            pairTx.second = false;\n+                            break;\n+                        }\n+                        pairTx.first[i] = false;\n+                    }\n+                }\n+\n+                if (pairTx.second == false)\n+                    continue;\n+\n+                pairTx.first[txout.n] = true;\n+            }\n+        }\n+\n+        pindexScan = pindexScan->pnext;\n+    }\n+\n+    // TODO: It may be prudent to use DB Transactions here, but if we do we overrun our maximum lock objects\n+    //if (!TxnBegin())\n+    //    return false;\n+\n+    unsigned int nTxsPruned = 0;\n+    typedef pair<const uint256, pair<vector<bool>, bool> > TxIndexCachePairType;\n+    BOOST_FOREACH(TxIndexCachePairType& pair, mapTxIndexCache)\n+    {\n+        bool fPrunable = true;\n+        BOOST_FOREACH(bool fSpent, pair.second.first)\n+            if (!fSpent)\n+            {\n+                fPrunable = false;\n+                break;\n+            }\n+\n+        if (!fPrunable)\n+            continue;\n+\n+        EraseTxIndex(pair.first);\n+        nTxsPruned++;\n+    }\n+\n+    WriteHashBestCheckpoint(hashPruneTo);\n+\n+    //if (!TxnCommit())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r974400",
      "id" : 974400,
      "line" : 658,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3NDQwMA==",
      "original_commit_id" : "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "original_line" : null,
      "original_position" : 138,
      "original_start_line" : null,
      "path" : "src/db.cpp",
      "position" : 138,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974400/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-13T08:36:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974400",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r974401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974401"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, right, you did this above. Never mind.\n",
      "commit_id" : "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "created_at" : "2012-06-13T08:36:39Z",
      "diff_hunk" : "@@ -535,6 +551,118 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n+bool CTxDB::PruneBlockIndex(uint256 hashPruneFrom, uint256 hashPruneTo)\n+{\n+//    TODO: assert here, but cant #include main.h\n+//    if (hashPruneFrom != 0)\n+//        assert(hashPruneTo == hashBestBlock);\n+\n+    CBlockIndex* pindexScan = pindexGenesisBlock;\n+    uint256 hashOldBestCheckpoint;\n+    if (ReadHashBestCheckpoint(hashOldBestCheckpoint) && hashOldBestCheckpoint == hashPruneTo)\n+        return true;\n+\n+    if (!mapBlockIndex.count(hashPruneTo))\n+        return true;\n+\n+    if (hashPruneFrom != 0)\n+        pindexScan = mapBlockIndex[hashPruneFrom];\n+    assert(pindexScan);\n+\n+    printf(\"Pruning Block Index from %s to %s.\\n\", hashPruneFrom.ToString().substr(0,20).c_str(), hashPruneTo.ToString().substr(0,20).c_str());\n+\n+    // Cache of Txes by hash -> txouts spent before hashPruneTo flags + cant be deleted flag\n+    map<uint256, pair<vector<bool>, bool> > mapTxIndexCache;\n+\n+    while (pindexScan != NULL && *(pindexScan->phashBlock) != hashPruneTo)\n+    {\n+        if(fRequestShutdown)\n+            return true;\n+\n+        CBlock block;\n+        block.ReadFromDisk(pindexScan);\n+\n+        BOOST_FOREACH(CTransaction& tx, block.vtx)\n+        {\n+            if (tx.IsCoinBase())\n+                continue;\n+\n+            BOOST_FOREACH(CTxIn& txin, tx.vin)\n+            {\n+                COutPoint& txout = txin.prevout;\n+                uint256& hash = txout.hash;\n+                pair<vector<bool>, bool>& pairTx = mapTxIndexCache[hash];\n+\n+                if (pairTx.first.size() == 0)\n+                {\n+                    CTxIndex txindex;\n+                    if (!ReadTxIndex(hash, txindex))\n+                    {\n+                        // This should only ever happen if we get interrupted pruning and dont WriteHashBestCheckpoint\n+                        pairTx.second = false;\n+                        break;\n+                    }\n+\n+                    vector<CDiskTxPos>& vSpent = txindex.vSpent;\n+                    unsigned int vouts = vSpent.size();\n+\n+                    pairTx.first.resize(vouts);\n+\n+                    pairTx.second = true;\n+                    for (unsigned int i = 0; i < vouts; i++)\n+                    {\n+                        if (vSpent[i].IsNull())\n+                        {\n+                            pairTx.second = false;\n+                            break;\n+                        }\n+                        pairTx.first[i] = false;\n+                    }\n+                }\n+\n+                if (pairTx.second == false)\n+                    continue;\n+\n+                pairTx.first[txout.n] = true;\n+            }\n+        }\n+\n+        pindexScan = pindexScan->pnext;\n+    }\n+\n+    // TODO: It may be prudent to use DB Transactions here, but if we do we overrun our maximum lock objects\n+    //if (!TxnBegin())\n+    //    return false;\n+\n+    unsigned int nTxsPruned = 0;\n+    typedef pair<const uint256, pair<vector<bool>, bool> > TxIndexCachePairType;\n+    BOOST_FOREACH(TxIndexCachePairType& pair, mapTxIndexCache)\n+    {\n+        bool fPrunable = true;\n+        BOOST_FOREACH(bool fSpent, pair.second.first)\n+            if (!fSpent)\n+            {\n+                fPrunable = false;\n+                break;\n+            }\n+\n+        if (!fPrunable)\n+            continue;\n+\n+        EraseTxIndex(pair.first);\n+        nTxsPruned++;\n+    }\n+\n+    WriteHashBestCheckpoint(hashPruneTo);\n+\n+    //if (!TxnCommit())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r974401",
      "id" : 974401,
      "line" : 658,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3NDQwMQ==",
      "original_commit_id" : "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "original_line" : null,
      "original_position" : 138,
      "original_start_line" : null,
      "path" : "src/db.cpp",
      "position" : 138,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974401/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-13T08:36:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r974409"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974409"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why main.h? For assert you need the header &lt;cassert> (which seems to be included in serialize.h)\n",
      "commit_id" : "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "created_at" : "2012-06-13T08:38:48Z",
      "diff_hunk" : "@@ -535,6 +551,118 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n+bool CTxDB::PruneBlockIndex(uint256 hashPruneFrom, uint256 hashPruneTo)\n+{\n+//    TODO: assert here, but cant #include main.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r974409",
      "id" : 974409,
      "line" : 556,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3NDQwOQ==",
      "original_commit_id" : "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "original_line" : null,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/db.cpp",
      "position" : 36,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974409/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-13T08:38:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974409",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r976359"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976359"
         }
      },
      "author_association" : "MEMBER",
      "body" : "main.h has hashBestBlock.\n",
      "commit_id" : "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "created_at" : "2012-06-13T14:23:05Z",
      "diff_hunk" : "@@ -535,6 +551,118 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n+bool CTxDB::PruneBlockIndex(uint256 hashPruneFrom, uint256 hashPruneTo)\n+{\n+//    TODO: assert here, but cant #include main.h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r976359",
      "id" : 976359,
      "line" : 556,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3NjM1OQ==",
      "original_commit_id" : "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "original_line" : null,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/db.cpp",
      "position" : 36,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976359/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-13T14:23:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976359",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing in favor of an (eventual) ultraprune.  No point in merging a stop-gap that conflicts with an actual solution.\n",
      "created_at" : "2012-07-05T20:17:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1405#issuecomment-6789452",
      "id" : 6789452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1405",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODk0NTI=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6789452/reactions"
      },
      "updated_at" : "2012-07-05T20:17:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6789452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   }
]
