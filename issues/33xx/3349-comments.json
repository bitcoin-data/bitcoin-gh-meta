[
   {
      "author_association" : "MEMBER",
      "body" : "Closing this, I don't think this can be achieved in bitcoin-cli, through RPC.\n\nI still think this functionality is seful; e.g. I have a deploy script for a few nodes that stops them, uploads a new version of bitcoind, and starts them again. But that needs to be sure that the daemon is no longer running. But as this is local-only I'm going to use an external script that just waits for the pid to die, e.g.:\n\n```\n    pid_t pid = ReadPidFile(); \n    while(kill(pid, 0) == 0)\n        usleep(250000);\n```\n",
      "created_at" : "2015-09-23T18:22:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3349#issuecomment-142687400",
      "id" : 142687400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3349",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0MjY4NzQwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2015-09-23T18:22:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142687400",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reopening this. I still often would like this functionality.\r\n\r\nAt least on UNIX it can be implemented by waiting for the PID in the PID file to exit. Alternatively, for the data directory lock file to be unlocked? (Neither of these work cross-host, but I am fine with that limitation if mentioned explicitly)\r\n\r\n(one case where it is useful is for restarting `bitcoind` when it's running in the backgound, need to be sure what it's quit entirely)",
      "created_at" : "2021-03-01T17:36:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3349#issuecomment-788134434",
      "id" : 788134434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3349",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4ODEzNDQzNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-01T17:43:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788134434",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
