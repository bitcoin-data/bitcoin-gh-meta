[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22867](https://github.com/bitcoin/bitcoin/pull/22867) (test: Extend test coverage of BIP125 and document confusing/inconsistent behavior by mjdietzx)\n* [#22290](https://github.com/bitcoin/bitcoin/pull/22290) (Package Mempool Submission with Package Fee-Bumping by glozow)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-09-16T16:20:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22998#issuecomment-921045941",
      "id" : 921045941,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22998",
      "node_id" : "IC_kwDOABII58425gu1",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-16T16:20:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921045941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "concept ACK\r\nsuccessfully ran test with \r\n<details>\r\n<summary> commenting test_rpc subtest </summary>\r\n\r\n```\r\n2021-09-21T10:20:52.294000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_gvoms1s4\r\n2021-09-21T10:20:57.334000Z TestFramework (INFO): Running test simple doublespend...\r\n2021-09-21T10:20:57.352000Z TestFramework (INFO): Running test doublespend chain...\r\n2021-09-21T10:20:57.415000Z TestFramework (INFO): Running test doublespend tree...\r\n2021-09-21T10:20:57.877000Z TestFramework (INFO): Running test replacement feeperkb...\r\n2021-09-21T10:20:57.934000Z TestFramework (INFO): Running test spends of conflicting outputs...\r\n2021-09-21T10:20:57.945000Z TestFramework (INFO): Running test new unconfirmed inputs...\r\n2021-09-21T10:20:57.953000Z TestFramework (INFO): Running test too many replacements...\r\n2021-09-21T10:20:58.020000Z TestFramework (INFO): Running test opt-in...\r\n2021-09-21T10:20:58.034000Z TestFramework (INFO): Running test prioritised transactions...\r\n2021-09-21T10:20:58.114000Z TestFramework (INFO): Running test no inherited signaling...\r\n2021-09-21T10:20:58.121000Z TestFramework (INFO): Check that the child tx can still be replaced (via a tx that also replaces the parent)\r\n2021-09-21T10:20:58.124000Z TestFramework (INFO): Running test replacement relay fee...\r\n2021-09-21T10:20:58.126000Z TestFramework (INFO): Passed\r\n2021-09-21T10:20:58.177000Z TestFramework (INFO): Stopping nodes\r\n2021-09-21T10:20:58.581000Z TestFramework (INFO): Cleaning up /tmp/bitcoin_func_test_gvoms1s4 on exit\r\n2021-09-21T10:20:58.582000Z TestFramework (INFO): Tests successful\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary> changes on  test_rpc proposed in #23052  </summary>\r\n\r\n```\r\n2021-09-21T10:18:35.765000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_q9cpp4nw\r\n2021-09-21T10:18:42.487000Z TestFramework (INFO): Running test simple doublespend...\r\n2021-09-21T10:18:42.504000Z TestFramework (INFO): Running test doublespend chain...\r\n2021-09-21T10:18:42.553000Z TestFramework (INFO): Running test doublespend tree...\r\n2021-09-21T10:18:43.002000Z TestFramework (INFO): Running test replacement feeperkb...\r\n2021-09-21T10:18:43.062000Z TestFramework (INFO): Running test spends of conflicting outputs...\r\n2021-09-21T10:18:43.073000Z TestFramework (INFO): Running test new unconfirmed inputs...\r\n2021-09-21T10:18:43.081000Z TestFramework (INFO): Running test too many replacements...\r\n2021-09-21T10:18:43.147000Z TestFramework (INFO): Running test opt-in...\r\n2021-09-21T10:18:43.159000Z TestFramework (INFO): Running test RPC...\r\n2021-09-21T10:18:43.728000Z TestFramework (INFO): Running test prioritised transactions...\r\n2021-09-21T10:18:43.817000Z TestFramework (INFO): Running test no inherited signaling...\r\n2021-09-21T10:18:43.823000Z TestFramework (INFO): Check that the child tx can still be replaced (via a tx that also replaces the parent)\r\n2021-09-21T10:18:43.825000Z TestFramework (INFO): Running test replacement relay fee...\r\n2021-09-21T10:18:43.828000Z TestFramework (INFO): Passed\r\n2021-09-21T10:18:43.878000Z TestFramework (INFO): Stopping nodes\r\n2021-09-21T10:18:47.246000Z TestFramework (INFO): Cleaning up /tmp/bitcoin_func_test_q9cpp4nw on exit\r\n2021-09-21T10:18:47.246000Z TestFramework (INFO): Tests successful\r\n```\r\n</details>",
      "created_at" : "2021-09-21T10:28:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22998#issuecomment-923847240",
      "id" : 923847240,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22998",
      "node_id" : "IC_kwDOABII5843EMpI",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-21T10:28:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923847240",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58947326?v=4",
         "events_url" : "https://api.github.com/users/Shubhankar-Gambhir/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Shubhankar-Gambhir/followers",
         "following_url" : "https://api.github.com/users/Shubhankar-Gambhir/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Shubhankar-Gambhir/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Shubhankar-Gambhir",
         "id" : 58947326,
         "login" : "Shubhankar-Gambhir",
         "node_id" : "MDQ6VXNlcjU4OTQ3MzI2",
         "organizations_url" : "https://api.github.com/users/Shubhankar-Gambhir/orgs",
         "received_events_url" : "https://api.github.com/users/Shubhankar-Gambhir/received_events",
         "repos_url" : "https://api.github.com/users/Shubhankar-Gambhir/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Shubhankar-Gambhir/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Shubhankar-Gambhir/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Shubhankar-Gambhir"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22998#discussion_r712923941"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22998"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712923941"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What happens if this output is removed? Previously the wallet would also \"donate\" the change to the fee.",
      "commit_id" : "f680d27155374de658d40db0ba40460919aa1ba2",
      "created_at" : "2021-09-21T10:53:26Z",
      "diff_hunk" : "@@ -89,29 +96,23 @@ def run_test(self):\n     def make_utxo(self, node, amount, confirmed=True, scriptPubKey=DUMMY_P2WPKH_SCRIPT):\n         \"\"\"Create a txout with a given amount and scriptPubKey\n \n-        Mines coins as needed.\n+        Assumes that MiniWallet has enough funds to cover the amount and the fixed fee\n+        (from it's internal utxos, the one with the largest value is taken).\n \n         confirmed - txouts created will be confirmed in the blockchain;\n                     unconfirmed otherwise.\n         \"\"\"\n-        fee = 1 * COIN\n-        while node.getbalance() < satoshi_round((amount + fee) / COIN):\n-            self.generate(node, COINBASE_MATURITY)\n-\n-        new_addr = node.getnewaddress()\n-        txid = node.sendtoaddress(new_addr, satoshi_round((amount + fee) / COIN))\n-        tx1 = node.getrawtransaction(txid, 1)\n-        txid = int(txid, 16)\n-        i, _ = next(filter(lambda vout: new_addr == vout[1]['scriptPubKey']['address'], enumerate(tx1['vout'])))\n-\n-        tx2 = CTransaction()\n-        tx2.vin = [CTxIn(COutPoint(txid, i))]\n-        tx2.vout = [CTxOut(amount, scriptPubKey)]\n-        tx2.rehash()\n-\n-        signed_tx = node.signrawtransactionwithwallet(tx2.serialize().hex())\n-\n-        txid = node.sendrawtransaction(signed_tx['hex'], 0)\n+        # MiniWallet only supports sweeping utxos to its own internal scriptPubKey, so in\n+        # order to create an output with arbitrary amount/scriptPubKey, we have to add it\n+        # manually after calling the create_self_transfer method. The MiniWallet output's\n+        # nValue has to be adapted accordingly (amount and fee deduction). To keep things\n+        # simple, we use a fixed fee of 1000 Satoshis here.\n+        fee = 1000\n+        tx = self.wallet.create_self_transfer(from_node=node, fee_rate=0, mempool_valid=False)['tx']\n+        assert_greater_than(tx.vout[0].nValue, amount + fee)\n+        tx.vout[0].nValue -= (amount + fee)           # change output -> MiniWallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22998#discussion_r712923941",
      "id" : 712923941,
      "line" : 113,
      "node_id" : "PRRC_kwDOABII584qflsl",
      "original_commit_id" : "f680d27155374de658d40db0ba40460919aa1ba2",
      "original_line" : 113,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "test/functional/feature_rbf.py",
      "position" : 66,
      "pull_request_review_id" : 759591512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22998",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-21T10:54:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712923941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22998#discussion_r712952283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22998"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712952283"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "IIUC what you mean: without this output, no new utxo to the internal MiniWallet scriptPubKey is created, i.e. we would probably run out of funds (or, could only create as many transactions as there are coinbase outputs from the pre-mined blocks from the test framework).",
      "commit_id" : "f680d27155374de658d40db0ba40460919aa1ba2",
      "created_at" : "2021-09-21T11:37:01Z",
      "diff_hunk" : "@@ -89,29 +96,23 @@ def run_test(self):\n     def make_utxo(self, node, amount, confirmed=True, scriptPubKey=DUMMY_P2WPKH_SCRIPT):\n         \"\"\"Create a txout with a given amount and scriptPubKey\n \n-        Mines coins as needed.\n+        Assumes that MiniWallet has enough funds to cover the amount and the fixed fee\n+        (from it's internal utxos, the one with the largest value is taken).\n \n         confirmed - txouts created will be confirmed in the blockchain;\n                     unconfirmed otherwise.\n         \"\"\"\n-        fee = 1 * COIN\n-        while node.getbalance() < satoshi_round((amount + fee) / COIN):\n-            self.generate(node, COINBASE_MATURITY)\n-\n-        new_addr = node.getnewaddress()\n-        txid = node.sendtoaddress(new_addr, satoshi_round((amount + fee) / COIN))\n-        tx1 = node.getrawtransaction(txid, 1)\n-        txid = int(txid, 16)\n-        i, _ = next(filter(lambda vout: new_addr == vout[1]['scriptPubKey']['address'], enumerate(tx1['vout'])))\n-\n-        tx2 = CTransaction()\n-        tx2.vin = [CTxIn(COutPoint(txid, i))]\n-        tx2.vout = [CTxOut(amount, scriptPubKey)]\n-        tx2.rehash()\n-\n-        signed_tx = node.signrawtransactionwithwallet(tx2.serialize().hex())\n-\n-        txid = node.sendrawtransaction(signed_tx['hex'], 0)\n+        # MiniWallet only supports sweeping utxos to its own internal scriptPubKey, so in\n+        # order to create an output with arbitrary amount/scriptPubKey, we have to add it\n+        # manually after calling the create_self_transfer method. The MiniWallet output's\n+        # nValue has to be adapted accordingly (amount and fee deduction). To keep things\n+        # simple, we use a fixed fee of 1000 Satoshis here.\n+        fee = 1000\n+        tx = self.wallet.create_self_transfer(from_node=node, fee_rate=0, mempool_valid=False)['tx']\n+        assert_greater_than(tx.vout[0].nValue, amount + fee)\n+        tx.vout[0].nValue -= (amount + fee)           # change output -> MiniWallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22998#discussion_r712952283",
      "id" : 712952283,
      "in_reply_to_id" : 712923941,
      "line" : 113,
      "node_id" : "PRRC_kwDOABII584qfsnb",
      "original_commit_id" : "f680d27155374de658d40db0ba40460919aa1ba2",
      "original_line" : 113,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "test/functional/feature_rbf.py",
      "position" : 66,
      "pull_request_review_id" : 759629501,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22998",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-21T11:37:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712952283",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   }
]
