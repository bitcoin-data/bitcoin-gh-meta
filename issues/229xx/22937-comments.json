[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706015262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706015262"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wasn't `path.string()` already explicit enough? Also, when should `u8string` be used instead? Finally, `strprintf(\"%s\", path)` without any helpers still compiles? When should/shouldn't that be used?",
      "commit_id" : "1e071392799def86e1cb6d93e83b985df025f0f8",
      "created_at" : "2021-09-10T08:56:02Z",
      "diff_hunk" : "@@ -114,16 +114,16 @@ bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n+        LogPrintf(\"Missing or invalid file %s\\n\", fs::PathToString(path));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706015262",
      "id" : 706015262,
      "line" : 117,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjAxNTI2Mg==",
      "original_commit_id" : "1e071392799def86e1cb6d93e83b985df025f0f8",
      "original_line" : 117,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : 23,
      "pull_request_review_id" : 751195114,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-10T08:56:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706015262",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23280](https://github.com/bitcoin/bitcoin/pull/23280) (init: Coalesce Chainstate loading sequence between {,non-}unittest codepaths by dongcarl)\n* [#23203](https://github.com/bitcoin/bitcoin/pull/23203) ([POC] build: static musl libc based bitcoind (with LTO) by fanquake)\n* [#22910](https://github.com/bitcoin/bitcoin/pull/22910) ([RFC] Encapsulate asmap in NetGroupManager by jnewbery)\n* [#22663](https://github.com/bitcoin/bitcoin/pull/22663) (dbwrapper: wrap options in unique_ptr and use DeleteOptions by Crypt-iQ)\n* [#22350](https://github.com/bitcoin/bitcoin/pull/22350) (Rotate debug.log file by LarryRuane)\n* [#20974](https://github.com/bitcoin/bitcoin/pull/20974) (test: add test for corrupt wallet bdb logs by ryanofsky)\n* [#20744](https://github.com/bitcoin/bitcoin/pull/20744) (Use std::filesystem. Remove Boost Filesystem & System by fanquake)\n* [#20435](https://github.com/bitcoin/bitcoin/pull/20435) (util: use stronger-guarantee rename method by vasild)\n* [#20331](https://github.com/bitcoin/bitcoin/pull/20331) (allow -loadblock blocks to be unsorted by LarryRuane)\n* [#19461](https://github.com/bitcoin/bitcoin/pull/19461) (multiprocess: Add bitcoin-gui -ipcconnect option by ryanofsky)\n* [#19460](https://github.com/bitcoin/bitcoin/pull/19460) (multiprocess: Add bitcoin-wallet -ipcconnect option by ryanofsky)\n* [#10443](https://github.com/bitcoin/bitcoin/pull/10443) (Add fee_est tool for debugging fee estimation code by ryanofsky)\n* [#10102](https://github.com/bitcoin/bitcoin/pull/10102) ([experimental] Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-09-10T09:40:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916773723",
      "id" : 916773723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pNtb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916773723/reactions"
      },
      "updated_at" : "2021-10-15T01:15:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916773723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-09-10T10:03:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916786722",
      "id" : 916786722,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pQ4i",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T10:03:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916786722",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706070518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706070518"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Wasn't `path.string()` already explicit enough?\r\n\r\nThe problem with `path.string()` isn't the explicitness, it's the unsafe behavior with the new path class on windows, where it returns a string in an arbitrary encoding based on the local code page. In preparation for this, this PR is disabling the `path.string()` now so it isn't misused later, and adding `PathToString` as a replacement which preserves the behavior we need and is complementary to `PathFromStrong`.\r\n\r\n> Also, when should `u8string` be used instead?\r\n\r\n`u8string/u8path` functions should be used for converting strings/paths where the strings must be valid UTF-8 strings. `PathToString/PathFromString` functions should be used otherwise.\r\n\r\nU8 functions are the right functions to call in JSON-RPC code and Qt string code because Qt strings and JSON requests/responses require valid UTF-8. But otherwise `PathToString/PathFromString` functions which pass along strings verbatim and avoid making encoding assumptions are more appropriate. `PathToString/PathFromString` functions are the right functions to call for parsing argv paths, parsing environment variable paths, parsing config paths, writing to log files, and calling POSIX APIs that expect and return native 8-bit path strings. In all these places UTF-8 encoding is typical and nice to have, but not something that should be enforced or required. If someone has their home directory set to a non-utf8 path, `PathToString/PathFromString` won't mangle the string or care about the encoding.\r\n\r\nEverything above is actually documented in the followup commit 3e88c9f6b4e84ab5da78f4862266b5ff13bb8fc0 ([tag](https://github.com/ryanofsky/bitcoin/commits/review.20744.8-edit.1)) posted https://github.com/bitcoin/bitcoin/pull/20744#issuecomment-916627496, but I threw together the documentation really quickly while trying to converge on a solution, so it could use some cleanup and reshuffling, either in this PR or the std::filesystem PR later when these functions stop being identical stubs.\r\n\r\n> Finally, `strprintf(\"%s\", path)` without any helpers still compiles? When should/shouldn't that be used?\r\n\r\nI can look into that because I'm not too familiar with tinyformat, but I would suspect that this always compiled and never worked at runtime maybe? I'm not sure how it could have worked unless tinyformat knew about boost types.",
      "commit_id" : "ddbfc51002d3ef3238bc796b1aec159f361828b9",
      "created_at" : "2021-09-10T10:21:51Z",
      "diff_hunk" : "@@ -114,16 +114,16 @@ bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n+        LogPrintf(\"Missing or invalid file %s\\n\", fs::PathToString(path));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706070518",
      "id" : 706070518,
      "in_reply_to_id" : 706015262,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjA3MDUxOA==",
      "original_commit_id" : "1e071392799def86e1cb6d93e83b985df025f0f8",
      "original_line" : 117,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : null,
      "pull_request_review_id" : 751266886,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-10T10:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706070518",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706072473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706072473"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think tinyformat just \"emulates\" our `::ToString(path)`, which should also compile (didn't try)",
      "commit_id" : "ddbfc51002d3ef3238bc796b1aec159f361828b9",
      "created_at" : "2021-09-10T10:25:23Z",
      "diff_hunk" : "@@ -114,16 +114,16 @@ bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n+        LogPrintf(\"Missing or invalid file %s\\n\", fs::PathToString(path));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706072473",
      "id" : 706072473,
      "in_reply_to_id" : 706015262,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjA3MjQ3Mw==",
      "original_commit_id" : "1e071392799def86e1cb6d93e83b985df025f0f8",
      "original_line" : 117,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : null,
      "pull_request_review_id" : 751269463,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-10T10:25:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706072473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706086559"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706086559"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think tinyformat just \"emulates\" our `::ToString(path)`, which should also compile (didn't try)\r\n\r\nApparently tinyformat is using operator<<, which boost path and std path both provide. I found I could disable it with\r\n\r\n```c++\r\ntemplate<class CharT, class Traits>\r\nstd::basic_ostream<CharT,Traits>& operator<<(std::basic_ostream<CharT,Traits>& os, const path& p)\r\n{\r\n    static_assert(sizeof(CharT) == -1, \"Implicit path to string conversion is error-prone and not supported, please use explicit PathToString call\");\r\n    return os;\r\n}\r\n```\r\n\r\nBut I found that this also broke some boost tests, and also I'm a little reluctant to make this change anyway since formatting support seems convenient for debugging. I'm leaving this alone for now but happy to do whatever people prefer here.\r\n",
      "commit_id" : "ddbfc51002d3ef3238bc796b1aec159f361828b9",
      "created_at" : "2021-09-10T10:51:05Z",
      "diff_hunk" : "@@ -114,16 +114,16 @@ bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n+        LogPrintf(\"Missing or invalid file %s\\n\", fs::PathToString(path));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706086559",
      "id" : 706086559,
      "in_reply_to_id" : 706015262,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjA4NjU1OQ==",
      "original_commit_id" : "1e071392799def86e1cb6d93e83b985df025f0f8",
      "original_line" : 117,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : null,
      "pull_request_review_id" : 751287335,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-10T10:57:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706086559",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "mingw complains:\r\n```\r\nwallet/rpcdump.cpp: In lambda function:\r\nwallet/rpcdump.cpp:553:76: error: use of deleted function âfs::path::path(const string&)â\r\n  553 |         file.open(request.params[0].get_str(), std::ios::in | std::ios::ate);\r\n      |                                                                            ^\r\nIn file included from ./flatfile.h:11,\r\n                 from ./chain.h:11,\r\n                 from wallet/rpcdump.cpp:5:\r\n./fs.h:40:5: note: declared here\r\n   40 |     path(const std::string& string) = delete;\r\n      |     ^~~~\r\nmake[2]: *** [Makefile:10361: wallet/libbitcoin_wallet_a-rpcdump.o] Error 1\r\n```",
      "created_at" : "2021-09-10T10:54:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916814941",
      "id" : 916814941,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pXxd",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T10:54:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916814941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706099389"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706099389"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> PathToString/PathFromString functions should be used otherwise\r\n> U8 functions are the right functions to call in JSON-RPC code and Qt string code ...\r\n\r\n\r\nI am not sure how this can be achieved, without something like bilingual_str.\r\n\r\nFor example, `InitError`s are passed to Qt, as well as stderr, as well as the debug log. If Qt requires `u8string` and the others require `PathToString`, then with the current approach here this is impossible to achieve, no?",
      "commit_id" : "ddbfc51002d3ef3238bc796b1aec159f361828b9",
      "created_at" : "2021-09-10T11:15:19Z",
      "diff_hunk" : "@@ -114,16 +114,16 @@ bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n+        LogPrintf(\"Missing or invalid file %s\\n\", fs::PathToString(path));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706099389",
      "id" : 706099389,
      "in_reply_to_id" : 706015262,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjA5OTM4OQ==",
      "original_commit_id" : "1e071392799def86e1cb6d93e83b985df025f0f8",
      "original_line" : 117,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : null,
      "pull_request_review_id" : 751303632,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-10T11:15:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706099389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916814941\r\n\r\n> mingw complains:\r\n\r\nThanks for headsup, and this should be addressed in the last push",
      "created_at" : "2021-09-10T11:15:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916826194",
      "id" : 916826194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pahS",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T11:15:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916826194",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This PR is basically ready but I still am looking for feedback about about whether best solution to `path.string()` method and `path(string)` constructor brokenness on windows is to make these methods uncallable and replace with them with `PathToString` `PathFromString` functions like this PR is doing. Or to just override these methods to keep current boost path behavior, and actually do what we want, but not follow the standard path class behavior. Or to take an alternate approach like using the new (since mid-2019) windows build option to force a UTF-8 code page, and not worry about older windows versions.\r\n\r\n---\r\n\r\nOther remaining todos here: improve fs.h documentation and split commit into two parts so fs.h functions are added in the first commit, and code is switched over to call the new functions in a second commit.\r\n",
      "created_at" : "2021-09-10T11:19:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916828329",
      "id" : 916828329,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pbCp",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T11:19:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916828329",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Or to take an alternate approach like using the new (since mid-2019) windows build option to force a UTF-8 code page\r\n\r\nIf this fixes all our issues and avoids developer headaches when writing code (which conversion function to use), that seems most preferable.",
      "created_at" : "2021-09-10T11:35:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916836553",
      "id" : 916836553,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pdDJ",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T11:35:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916836553",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > Or to take an alternate approach like using the new (since mid-2019) windows build option to force a UTF-8 code page\r\n> \r\n> If this fixes all our issues and avoids developer headaches when writing code (which conversion function to use), that seems most preferable.\r\n\r\nSorry, I thought I had posted more details/drawbacks about this alternate approach previously, but I don't think I ever did. Details can be found at https://docs.microsoft.com/en-us/windows/apps/design/globalizing/use-utf8-code-page#set-a-process-code-page-to-utf-8\r\n\r\nThe only impact I believe this alternate approach would have for future developers (as opposed to current reviewers) compared to the current approach is that future developers will be able to write `p.string()` instead of `PathToString(p)` and write `fs::path(s)` instead of `fs::PathFromString(s)`. And I think this difference is actually a drawback, not a benefit of that approach, because the `fs::path` constructor is not explicit, and the implicit conversions can lead to unintended bugs that are less likely to be cause by reviewer. Also I think it is better to have our own `PathToString` and `PathFromString` functions because these give a way to document more obviously which functions should be used for our project, instead of leaving developers looking at abstract cppreference pages that do not give concrete information about what the functions actually do on different platforms, or give any guidance on whether it is appropriate to chose `.string()` or `.u8string()` or `.native()` conversion methods in the context of writing bitcoin application code.\r\n\r\nAnother drawback of the UTF-8 windows code page build option is that is silently ignored by older versions of windows.\r\n\r\nAnother drawback of the UTF-8 windows code page build option is that it is not yet unimplemented, and will require someone with more knowledge than me of both the MSVC and Mingw builds to implement, while this PR is a straightforward code change that is basically ready to go.\r\n\r\n---\r\n\r\nUpdated ddbfc51002d3ef3238bc796b1aec159f361828b9 -> d312e529ce904c0dc8244f29424b8cba9c7da9cd ([`pr/u8path.2`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.2) -> [`pr/u8path.3`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.2..pr/u8path.3)) to fix https://cirrus-ci.com/task/6285153786920960",
      "created_at" : "2021-09-10T12:06:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916852960",
      "id" : 916852960,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842phDg",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T12:32:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916852960",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Out of curiosity, what is the leveldb approach to handle paths on Windows?",
      "created_at" : "2021-09-10T12:51:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916880346",
      "id" : 916880346,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pnva",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T12:51:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916880346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "friendly ping @sipsorcery ",
      "created_at" : "2021-09-10T13:26:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916903617",
      "id" : 916903617,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842ptbB",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T13:26:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916903617",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> friendly ping @sipsorcery\r\n\r\n:facepalm: To be clear I think that the build hack would be inferior to this PR in every way! I think think the build hack is not worth implementing or even discussing seriously. The only reason I brought it up was for completeness and to illustrate how fragile and unpredictable the [`std::filesystem::path(std::string)` implicit constructor](https://en.cppreference.com/w/cpp/filesystem/path/path) and [`std::filesystem::path::string()` method](https://en.cppreference.com/w/cpp/filesystem/path/string) are, and why I think we should forbid them in favor of explicit `PathFromString/PathToString` functions that we can call straightforwardly and explain straightforwardly, to preserve correct behavior of `boost::filesystem::path`, and avoid a small pitfall in `std::filesystem::path`!\r\n\r\n> Out of curiosity, what is the leveldb approach to handle paths on Windows?\r\n\r\nleveldb just uses string paths, not `boost::filessystem::path` or `std::filesystem::path`. Handling windows paths is really not that complicated. All you have to do is avoid older code page APIs and use newer APIs that ignore the windows code page. In the new `std::filesystem` there are two methods that are using the windows code page, instead of ignoring it like we want, and like the `boost::filesystem` equivalents did. So this PR is just switching code to avoid these two particular methods, and prevent them from being called in the future.",
      "created_at" : "2021-09-10T16:19:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917032695",
      "id" : 917032695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842qM73",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T16:19:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917032695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on adding own explicit path <-> string conversion functions.\r\n\r\n> To be clear I think that the build hack would be inferior to this PR in every way! I think think the build hack is not worth implementing or even discussing seriously.\r\n\r\nSorry Russ, but I don't follow what \"the build hack\" do you mean.\r\n\r\n> > Out of curiosity, what is the leveldb approach to handle paths on Windows?\r\n> \r\n> leveldb just uses string paths, not `boost::filessystem::path` or `std::filesystem::path`. Handling windows paths is really not that complicated. All you have to do is avoid older code page APIs and use newer APIs that ignore the windows code page. In the new `std::filesystem` there are two methods that are using the windows code page, instead of ignoring it like we want, and like the `boost::filesystem` equivalents did. So this PR is just switching code to avoid these two particular methods, and prevent them from being called in the future.\r\n\r\nThanks for explanation!",
      "created_at" : "2021-09-10T17:43:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917091206",
      "id" : 917091206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842qbOG",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T17:43:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917091206",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Sorry Russ, but I don't follow what \"the build hack\" do you mean.\r\n\r\nSorry, my fault for making this thread really confusing, but I wasn't sure the reason you were pinging windows build guru sipsorcery and I thought the reason was that you wanted sipsorcery to implement the \"build option\" discussed here https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916836553 which I do not think is a good idea, and I'm sorry I brought up!",
      "created_at" : "2021-09-10T18:00:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917101941",
      "id" : 917101941,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842qd11",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T18:00:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917101941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Do I understand correctly that _all_ changes (except for `fs.h` and `fs.cpp`) are \"forced\" by a compiler due to https://github.com/bitcoin/bitcoin/blob/d312e529ce904c0dc8244f29424b8cba9c7da9cd/src/fs.h#L40-L42?",
      "created_at" : "2021-09-10T18:14:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917111119",
      "id" : 917111119,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842qgFP",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T18:15:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917111119",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Do I understand correctly that _all_ changes (except for `fs.h` and `fs.cpp`) are \"forced\" by a compiler\r\n\r\nYes that is exactly right. I'm working on splitting up the PR into commits and rewriting the description and documentation now that various test bugs have been fixed, but this PR is just forbidding calls to `fs::path` methods that work ok on unix, but are confusing, badly documented, and can mangle strings on windows. It is replacing those method calls with `PathToString/PathFromString` calls and `u8string/u8path` calls which all do the same thing in the `boost::filesystem` implemenation, but will avoid complexity and bugs after the`std::filesystem` switch.",
      "created_at" : "2021-09-10T18:29:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917120632",
      "id" : 917120632,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842qiZ4",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T18:29:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917120632",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@hebasto this stuff is a bit above my pay grade I'm afraid. I'm ok with the Win32 API's, such as `CreateFileA` for ANSI, `CreateFileW` for Unicode (UTF-16) etc. but when it comes to the file paths in the standard library `std::filesystem` and `boost` I'm out of my depth.\r\n\r\nIt's a pity @ken2812221 isn't still around, he seemed to have a good grip on this stuff. I've always wondered where he got to?\r\n\r\nhttps://github.com/bitcoin/bitcoin/pulls?q=is%3Apr+author%3Aken2812221+unicode ",
      "created_at" : "2021-09-10T18:39:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917126876",
      "id" : 917126876,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842qj7c",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T18:39:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917126876",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/197660?v=4",
         "events_url" : "https://api.github.com/users/sipsorcery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipsorcery/followers",
         "following_url" : "https://api.github.com/users/sipsorcery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipsorcery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipsorcery",
         "id" : 197660,
         "login" : "sipsorcery",
         "node_id" : "MDQ6VXNlcjE5NzY2MA==",
         "organizations_url" : "https://api.github.com/users/sipsorcery/orgs",
         "received_events_url" : "https://api.github.com/users/sipsorcery/received_events",
         "repos_url" : "https://api.github.com/users/sipsorcery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipsorcery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipsorcery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm working on improving documentation so this will be easier to understand, but the idea is just that we need to call functions that convert strings predictably and ignore the current windows \"code page\". We need to avoid calling functions that convert strings unpredictably and use the the windows code page.\r\n\r\nThe `fs::path` class happens to have two methods which we are calling which ignore the windows code page currently in the `boost::filesystem` implementation but unfortunately will start using the windows code page after #20744 which switches to the `std::filesystem` implementation.\r\n\r\nSo this PR is just forbidding calls to those two methods and replacing them with other calls.",
      "created_at" : "2021-09-10T18:53:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917135109",
      "id" : 917135109,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842ql8F",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T18:54:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917135109",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706413370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706413370"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we should also add\r\n```suggestion\r\n    path& operator=(std::string&) = delete;\r\n    path& operator/=(const std::string&) = delete;\r\n    path& append(const std::string&) = delete;\r\n```",
      "commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "created_at" : "2021-09-10T19:14:40Z",
      "diff_hunk" : "@@ -15,7 +15,55 @@\n #include <boost/filesystem/fstream.hpp>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs {\n+\n+using namespace boost::filesystem;\n+\n+/**\n+ * Path class wrapper to prepare application code for transition from\n+ * boost::filesystem::path to std::filesystem::path.\n+ *\n+ * The new std::filesystem::path class lacks imbue functionality boost provided\n+ * to make implicit path/string functionality work safely on windows, so this\n+ * class hides the unsafe methods, and provides explicit PathToString /\n+ * PathFromString functions which be needed after the transition from boost to\n+ * convert to native path strings, and explicit u8string / u8path functions to\n+ * convert to UTF-8 strings. See\n+ * https://github.com/bitcoin/bitcoin/pull/20744#issuecomment-916627496 for more\n+ * information about the boost path transition and windows encoding ambiguities.\n+ */\n+class path : public boost::filesystem::path\n+{\n+public:\n+    using boost::filesystem::path::path;\n+    path(boost::filesystem::path path) : boost::filesystem::path::path(std::move(path)) {}\n+    path(const std::string& string) = delete;\n+    path& operator=(std::string&) = delete;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706413370",
      "id" : 706413370,
      "line" : 41,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjQxMzM3MA==",
      "original_commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "original_line" : 41,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/fs.h",
      "position" : 28,
      "pull_request_review_id" : 751721216,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-10T19:14:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706413370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky Have you seen my previous comment https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706099389 ?",
      "created_at" : "2021-09-11T07:18:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917357785",
      "id" : 917357785,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842rcTZ",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-11T07:18:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917357785",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706610162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706610162"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nothing we want to achieve should be impossible to achieve or require a different string type. If your home directory is `\"/home/\\xf0\"` (invalid utf-8), and Qt needs to display an error message about peers.dat, it should just display it with a [replacement character](https://en.wikipedia.org/wiki/Specials_(Unicode_block)#Replacement_character) like \"Error reading /home/ï¿½/.bitcoin/peers.dat\". If we want to return the same file path as JSON-RPC, we might choose a different escaping mechanism like [python's lone surrogates](https://www.python.org/dev/peps/pep-0383/) `\"/home/\\udcf0/.bitcoin/peers.dat\"`.\r\n\r\nAt the boundaries between our application and external programs and libraries like JSON-RPC and Qt, different ways of representing paths as strings will be necessary. That is why standard encoding functions like `u8path` and `u8string` are useful, and why we will choose different encoding functions in different places we are interacting with external code. But internally, any path can always be represented as a `path` object, and any path can always be represented as a string of bytes, as long as we are consistent about how we interpret those bytes. The `PathToString` and `PathFromString` function provide a consistent way to represent path objects as strings of bytes, now that we will no longer be able to rely on the `boost::filesystem::path` class's string methods. (The new `std::filesystem::path` class has similar methods, but unlike boost's methods their behavior cannot be controlled with an imbue function, so they are unsafe and expose complicated operating system specific behavior and will mangle strings, which is why this PR avoids and prevents calling them.)",
      "commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "created_at" : "2021-09-11T12:56:56Z",
      "diff_hunk" : "@@ -114,16 +114,16 @@ bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n+        LogPrintf(\"Missing or invalid file %s\\n\", fs::PathToString(path));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706610162",
      "id" : 706610162,
      "in_reply_to_id" : 706015262,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjYxMDE2Mg==",
      "original_commit_id" : "1e071392799def86e1cb6d93e83b985df025f0f8",
      "original_line" : 117,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : null,
      "pull_request_review_id" : 751916995,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-11T12:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706610162",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707215834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707215834"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can probably remove all of this code, because `BOOST_FILESYSTEM_C_STR` is no longer used? If yes, maybe even split up this change",
      "commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "created_at" : "2021-09-13T10:44:05Z",
      "diff_hunk" : "@@ -249,9 +249,9 @@ void ofstream::close()\n #else // __GLIBCXX__\n \n #if BOOST_VERSION >= 107700\n-static_assert(sizeof(*BOOST_FILESYSTEM_C_STR(fs::path())) == sizeof(wchar_t),\n+static_assert(sizeof(*BOOST_FILESYSTEM_C_STR(boost::filesystem::path())) == sizeof(wchar_t),\n #else\n-static_assert(sizeof(*fs::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),\n+static_assert(sizeof(*boost::filesystem::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707215834",
      "id" : 707215834,
      "line" : 254,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNzIxNTgzNA==",
      "original_commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "original_line" : 254,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/fs.cpp",
      "position" : 26,
      "pull_request_review_id" : 752589150,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-13T10:44:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707215834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707217372"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707217372"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it make sense to make `operator<<(a)` call `a<<PathToString(*this)`?",
      "commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "created_at" : "2021-09-13T10:46:35Z",
      "diff_hunk" : "@@ -15,7 +15,55 @@\n #include <boost/filesystem/fstream.hpp>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs {\n+\n+using namespace boost::filesystem;\n+\n+/**\n+ * Path class wrapper to prepare application code for transition from\n+ * boost::filesystem::path to std::filesystem::path.\n+ *\n+ * The new std::filesystem::path class lacks imbue functionality boost provided\n+ * to make implicit path/string functionality work safely on windows, so this\n+ * class hides the unsafe methods, and provides explicit PathToString /\n+ * PathFromString functions which be needed after the transition from boost to\n+ * convert to native path strings, and explicit u8string / u8path functions to\n+ * convert to UTF-8 strings. See\n+ * https://github.com/bitcoin/bitcoin/pull/20744#issuecomment-916627496 for more\n+ * information about the boost path transition and windows encoding ambiguities.\n+ */\n+class path : public boost::filesystem::path\n+{\n+public:\n+    using boost::filesystem::path::path;\n+    path(boost::filesystem::path path) : boost::filesystem::path::path(std::move(path)) {}\n+    path(const std::string& string) = delete;\n+    path& operator=(std::string&) = delete;\n+    std::string string() const = delete;\n+    std::string u8string() const { return boost::filesystem::path::string(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707217372",
      "id" : 707217372,
      "line" : 43,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNzIxNzM3Mg==",
      "original_commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "original_line" : 43,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/fs.h",
      "position" : 30,
      "pull_request_review_id" : 752591246,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-13T10:46:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707217372",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707300999"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707300999"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm happy to base #20744 on this change, if this is the direction we are taking, and save splitting the Boost removal over several PRs.",
      "commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "created_at" : "2021-09-13T12:48:36Z",
      "diff_hunk" : "@@ -249,9 +249,9 @@ void ofstream::close()\n #else // __GLIBCXX__\n \n #if BOOST_VERSION >= 107700\n-static_assert(sizeof(*BOOST_FILESYSTEM_C_STR(fs::path())) == sizeof(wchar_t),\n+static_assert(sizeof(*BOOST_FILESYSTEM_C_STR(boost::filesystem::path())) == sizeof(wchar_t),\n #else\n-static_assert(sizeof(*fs::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),\n+static_assert(sizeof(*boost::filesystem::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707300999",
      "id" : 707300999,
      "in_reply_to_id" : 707215834,
      "line" : 254,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNzMwMDk5OQ==",
      "original_commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "original_line" : 254,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/fs.cpp",
      "position" : 26,
      "pull_request_review_id" : 752703134,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-13T12:48:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707300999",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707303172"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707303172"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If we want to move forward with removing `boost::fs`, it could even make sense to split up the #20744 build system changes, so that other pull requests can start using the other C++17 features.",
      "commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "created_at" : "2021-09-13T12:51:15Z",
      "diff_hunk" : "@@ -249,9 +249,9 @@ void ofstream::close()\n #else // __GLIBCXX__\n \n #if BOOST_VERSION >= 107700\n-static_assert(sizeof(*BOOST_FILESYSTEM_C_STR(fs::path())) == sizeof(wchar_t),\n+static_assert(sizeof(*BOOST_FILESYSTEM_C_STR(boost::filesystem::path())) == sizeof(wchar_t),\n #else\n-static_assert(sizeof(*fs::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),\n+static_assert(sizeof(*boost::filesystem::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707303172",
      "id" : 707303172,
      "in_reply_to_id" : 707215834,
      "line" : 254,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNzMwMzE3Mg==",
      "original_commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "original_line" : 254,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/fs.cpp",
      "position" : 26,
      "pull_request_review_id" : 752705970,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-13T12:51:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707303172",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707309090"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707309090"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm happy to base #20744 on this change, if this is the direction we are taking, and save splitting the Boost removal over several PRs.\r\n\r\nYeah, sorry, I've been a slow iterating over the documentation and variations on the idea, but I'll push an updated version of this and rebased version of #20744 today",
      "commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "created_at" : "2021-09-13T12:58:31Z",
      "diff_hunk" : "@@ -249,9 +249,9 @@ void ofstream::close()\n #else // __GLIBCXX__\n \n #if BOOST_VERSION >= 107700\n-static_assert(sizeof(*BOOST_FILESYSTEM_C_STR(fs::path())) == sizeof(wchar_t),\n+static_assert(sizeof(*BOOST_FILESYSTEM_C_STR(boost::filesystem::path())) == sizeof(wchar_t),\n #else\n-static_assert(sizeof(*fs::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),\n+static_assert(sizeof(*boost::filesystem::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707309090",
      "id" : 707309090,
      "in_reply_to_id" : 707215834,
      "line" : 254,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNzMwOTA5MA==",
      "original_commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "original_line" : 254,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/fs.cpp",
      "position" : 26,
      "pull_request_review_id" : 752713935,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-13T12:59:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707309090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707555626"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707555626"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707215834\r\n\r\n> Can probably remove all of this code, because `BOOST_FILESYSTEM_C_STR` is no longer used? If yes, maybe even split up this change\r\n\r\nIt would be wrong to remove the static asserts without removing the fsbridge::fopen code, which is still used. Followup PR #20744 removes all of this, though. The static asserts here are verifying that the fsbridge::fopen function is making valid assumptions and will work correctly at runtime. The first static assert is for newer versions of boost where that should always be the true, and the second static assert is for older versions of boost where it is only true on some platforms.\r\n\r\nProbably there is some way to write these static asserts without using BOOST_FILESYSTEM_C_STR, but it seems better to leave code unchanged except for adding namespace prefix, which is the same change made other places.",
      "commit_id" : "f735d6031d827e8a1bea5dcb00a11262be9c8a20",
      "created_at" : "2021-09-13T17:50:10Z",
      "diff_hunk" : "@@ -249,9 +249,9 @@ void ofstream::close()\n #else // __GLIBCXX__\n \n #if BOOST_VERSION >= 107700\n-static_assert(sizeof(*BOOST_FILESYSTEM_C_STR(fs::path())) == sizeof(wchar_t),\n+static_assert(sizeof(*BOOST_FILESYSTEM_C_STR(boost::filesystem::path())) == sizeof(wchar_t),\n #else\n-static_assert(sizeof(*fs::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),\n+static_assert(sizeof(*boost::filesystem::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707555626",
      "id" : 707555626,
      "in_reply_to_id" : 707215834,
      "line" : 254,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNzU1NTYyNg==",
      "original_commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "original_line" : 254,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/fs.cpp",
      "position" : 26,
      "pull_request_review_id" : 753048812,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-13T19:27:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707555626",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707555997"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707555997"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706413370\r\n\r\n> I think we should also add\r\n\r\nGreat suggestion! Added these. Trying to block every method that might result in a bad string conversion is probably not worth it, but these methods are pretty frequently used, and blocking these did turn up two more possible bugs.\r\n",
      "commit_id" : "f735d6031d827e8a1bea5dcb00a11262be9c8a20",
      "created_at" : "2021-09-13T17:50:43Z",
      "diff_hunk" : "@@ -15,7 +15,55 @@\n #include <boost/filesystem/fstream.hpp>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs {\n+\n+using namespace boost::filesystem;\n+\n+/**\n+ * Path class wrapper to prepare application code for transition from\n+ * boost::filesystem::path to std::filesystem::path.\n+ *\n+ * The new std::filesystem::path class lacks imbue functionality boost provided\n+ * to make implicit path/string functionality work safely on windows, so this\n+ * class hides the unsafe methods, and provides explicit PathToString /\n+ * PathFromString functions which be needed after the transition from boost to\n+ * convert to native path strings, and explicit u8string / u8path functions to\n+ * convert to UTF-8 strings. See\n+ * https://github.com/bitcoin/bitcoin/pull/20744#issuecomment-916627496 for more\n+ * information about the boost path transition and windows encoding ambiguities.\n+ */\n+class path : public boost::filesystem::path\n+{\n+public:\n+    using boost::filesystem::path::path;\n+    path(boost::filesystem::path path) : boost::filesystem::path::path(std::move(path)) {}\n+    path(const std::string& string) = delete;\n+    path& operator=(std::string&) = delete;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707555997",
      "id" : 707555997,
      "in_reply_to_id" : 706413370,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNzU1NTk5Nw==",
      "original_commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "original_line" : 41,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/fs.h",
      "position" : null,
      "pull_request_review_id" : 753048812,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-13T19:27:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707555997",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707562869"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707562869"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707217372\r\n\r\n> Would it make sense to make `operator<<(a)` call `a<<PathToString(*this)`?\r\n\r\nI'm more comfortable blocking methods that are unsafe than overriding their behavior so they no longer behave as described by the c++ standard. Also PathToString() might be the right string representation for some cases, and the wrong string representation for other cases. For writing to console output on windows for example, the standard behavior encoding to the current code page is better behavior than encoding to UTF-8.\r\n\r\nI would just leave this alone so print debugging works well and tests don't have to change, unless there is argument that allowing this is really dangerous.",
      "commit_id" : "f735d6031d827e8a1bea5dcb00a11262be9c8a20",
      "created_at" : "2021-09-13T18:00:26Z",
      "diff_hunk" : "@@ -15,7 +15,55 @@\n #include <boost/filesystem/fstream.hpp>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs {\n+\n+using namespace boost::filesystem;\n+\n+/**\n+ * Path class wrapper to prepare application code for transition from\n+ * boost::filesystem::path to std::filesystem::path.\n+ *\n+ * The new std::filesystem::path class lacks imbue functionality boost provided\n+ * to make implicit path/string functionality work safely on windows, so this\n+ * class hides the unsafe methods, and provides explicit PathToString /\n+ * PathFromString functions which be needed after the transition from boost to\n+ * convert to native path strings, and explicit u8string / u8path functions to\n+ * convert to UTF-8 strings. See\n+ * https://github.com/bitcoin/bitcoin/pull/20744#issuecomment-916627496 for more\n+ * information about the boost path transition and windows encoding ambiguities.\n+ */\n+class path : public boost::filesystem::path\n+{\n+public:\n+    using boost::filesystem::path::path;\n+    path(boost::filesystem::path path) : boost::filesystem::path::path(std::move(path)) {}\n+    path(const std::string& string) = delete;\n+    path& operator=(std::string&) = delete;\n+    std::string string() const = delete;\n+    std::string u8string() const { return boost::filesystem::path::string(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707562869",
      "id" : 707562869,
      "in_reply_to_id" : 707217372,
      "line" : 58,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNzU2Mjg2OQ==",
      "original_commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "original_line" : 58,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/fs.h",
      "position" : 45,
      "pull_request_review_id" : 753048812,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-13T19:27:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707562869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707654702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707654702"
         }
      },
      "author_association" : "MEMBER",
      "body" : "typo: \r\n```suggestion\r\n    // Allow path objects arguments for compatibility,.\r\n```",
      "commit_id" : "f735d6031d827e8a1bea5dcb00a11262be9c8a20",
      "created_at" : "2021-09-13T20:23:17Z",
      "diff_hunk" : "@@ -15,7 +15,109 @@\n #include <boost/filesystem/fstream.hpp>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs {\n+\n+using namespace boost::filesystem;\n+\n+/**\n+ * Path class wrapper to prepare application code for transition from\n+ * boost::filesystem library to std::filesystem implementation. The main\n+ * purpose of the class is to define fs::path::u8string() and fs::u8path()\n+ * functions not present in boost. It also blocks calls to the\n+ * fs::path(std::string) implicit constructor and the fs::path::string()\n+ * method, which worked well in the boost::filesystem implementation, but have\n+ * unsafe and unpredictable behavior on Windows in the std::filesystem\n+ * implementation (see implementation note in \\ref PathToString for details).\n+ */\n+class path : public boost::filesystem::path\n+{\n+public:\n+    using boost::filesystem::path::path;\n+\n+    // Allow path objects arguments for comptability.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r707654702",
      "id" : 707654702,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNzY1NDcwMg==",
      "original_commit_id" : "f735d6031d827e8a1bea5dcb00a11262be9c8a20",
      "original_line" : 37,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/fs.h",
      "position" : 24,
      "pull_request_review_id" : 753180673,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-13T20:25:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707654702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated f735d6031d827e8a1bea5dcb00a11262be9c8a20 -> 650470227f9312b627b4bee3f85540f2e00f8bd7 ([`pr/u8path.4`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.4) -> [`pr/u8path.5`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.5), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.4..pr/u8path.5)) fixing review comment about bad spelling, and fixing error in multiprocess build https://cirrus-ci.com/task/4610801555210240?logs=ci#L3269\r\n\r\n",
      "created_at" : "2021-09-14T14:38:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-919214950",
      "id" : 919214950,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842yhtm",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-14T14:38:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/919214950",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've managed to make functional tests pass on Windows (MSVC build) in the [combined branch](https://github.com/hebasto/bitcoin/commits/pr22937-0914-COMBINED).\r\n\r\nAnd the following [patch](https://github.com/hebasto/bitcoin/commit/90c02435d1d92502afc354efe02ebbcad8f58548) was required:\r\n```diff\r\n--- a/src/addrdb.cpp\r\n+++ b/src/addrdb.cpp\r\n@@ -194,7 +194,7 @@ std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const A\r\n     } catch (const DbNotFoundError&) {\r\n         // Addrman can be in an inconsistent state after failure, reset it\r\n         addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\r\n-        LogPrintf(\"Creating peers.dat because the file was not found (%s)\\n\", path_addr);\r\n+        LogPrintf(\"Creating peers.dat because the file was not found (%s)\\n\", fs::PathToString(path_addr));\r\n         DumpPeerAddresses(args, *addrman);\r\n     } catch (const std::exception& e) {\r\n         addrman = nullptr;\r\n```\r\n\r\nCould such changes be forced by a compiler? _(some discussion [above](https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706015262))_",
      "created_at" : "2021-09-15T00:43:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-919610206",
      "id" : 919610206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII58420CNe",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-15T00:43:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/919610206",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It's so incredibly stupid that basic, straightforward, conversion functions like these are unsafe and we need to write our own replacements. Sorry, more of a C++ rant than anything elseâ¦ along with the locale handling disaster it seems like an intentional minefield sometimes.",
      "created_at" : "2021-09-15T08:46:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-919823959",
      "id" : 919823959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII584202ZX",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-15T08:46:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/919823959",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you @hebasto for debugging and fixing this! ð \r\n\r\nUpdated 650470227f9312b627b4bee3f85540f2e00f8bd7 -> 127cce3ac9d0aab6401eafbe8d4f0d2400f1ccf4 ([`pr/u8path.5`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.5) -> [`pr/u8path.6`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.6), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.5..pr/u8path.6)) with these fixes\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-919610206\r\n\r\n> I've managed to make functional tests pass on Windows (MSVC build) in the [combined branch](https://github.com/hebasto/bitcoin/commits/pr22937-0914-COMBINED).\r\n> ...\r\n> Could such changes be forced by a compiler?\r\n\r\nYes, added tinyformat override so there will be link errors.",
      "created_at" : "2021-09-16T15:56:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-921027477",
      "id" : 921027477,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII58425cOV",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-16T15:56:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921027477",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated 127cce3ac9d0aab6401eafbe8d4f0d2400f1ccf4 -> 552e87e342a670808a227653a52134661400afcc ([`pr/u8path.6`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.6) -> [`pr/u8path.7`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.7), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.6..pr/u8path.7)) fixing unintended formatting changes caused by adding PathToString calls, which made some functional tests fail\r\n",
      "created_at" : "2021-09-16T16:34:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-921056249",
      "id" : 921056249,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII58425jP5",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-16T16:34:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921056249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I did try to search for `.string()` and I got these occurrences:\r\n\r\n<details>\r\n  <summary>Search result</summary>\r\n\r\n```\r\n19 results - 11 files\r\n\r\nsrc\\dbwrapper.cpp:\r\n  117  CDBWrapper::CDBWrapper(const fs::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\r\n  118:     : m_name{path.stem().string()}\r\n  119  {\r\n\r\nsrc\\init.cpp:\r\n  1097                    \"also be data loss if bitcoin is started while in a temporary directory.\\n\",\r\n  1098:                   args.GetArg(\"-datadir\", \"\"), fs::current_path().string());\r\n  1099      }\r\n\r\nsrc\\node\\blockstorage.cpp:\r\n  70          if (fs::is_regular_file(*it) &&\r\n  71:             it->path().filename().string().length() == 12 &&\r\n  72:             it->path().filename().string().substr(8,4) == \".dat\")\r\n  73          {\r\n  74:             if (it->path().filename().string().substr(0, 3) == \"blk\") {\r\n  75:                 mapBlockFiles[it->path().filename().string().substr(3, 5)] = it->path();\r\n  76:             } else if (it->path().filename().string().substr(0, 3) == \"rev\") {\r\n  77                  remove(it->path());\r\n\r\nsrc\\test\\validation_chainstatemanager_tests.cpp:\r\n  186      BOOST_TEST_MESSAGE(\r\n  187:         \"Wrote UTXO snapshot to \" << snapshot_path.make_preferred().string() << \": \" << result.write());\r\n  188  \r\n\r\nsrc\\util\\system.cpp:\r\n  121      LOCK(cs_dir_locks);\r\n  122:     dir_locks.erase((directory / lockfile_name).string());\r\n  123  }\r\n\r\n  246      auto result = path;\r\n  247:     while (result.filename().string() == \".\") {\r\n  248          result = result.parent_path();\r\n\r\nsrc\\wallet\\bdb.cpp:\r\n  831          LOCK(cs_db); // Lock env.m_databases until insert in BerkeleyDatabase constructor\r\n  832:         std::string data_filename = data_file.filename().string();\r\n  833          std::shared_ptr<BerkeleyEnvironment> env = GetBerkeleyEnv(data_file.parent_path());\r\n  834          if (env->m_databases.count(data_filename)) {\r\n  835:             error = Untranslated(strprintf(\"Refusing to load database. Data file '%s' is already loaded.\", (env->Directory() / data_filename).string()));\r\n  836              status = DatabaseStatus::FAILED_ALREADY_LOADED;\r\n\r\nsrc\\wallet\\bdb.h:\r\n  143      /** Return path to main database filename */\r\n  144:     std::string Filename() override { return (env->Directory() / strFile).string(); }\r\n  145  \r\n\r\nsrc\\wallet\\db.cpp:\r\n  22                  it.no_push();\r\n  23:                 LogPrintf(\"%s: %s %s -- skipping.\\n\", __func__, ec.message(), it->path().string());\r\n  24              } else {\r\n  25:                 LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\r\n  26              }\r\n\r\n  53          } catch (const std::exception& e) {\r\n  54:             LogPrintf(\"%s: Error scanning %s: %s\\n\", __func__, it->path().string(), e.what());\r\n  55              it.no_push();\r\n\r\nsrc\\wallet\\test\\db_tests.cpp:\r\n  18      fs::path data_file = BDBDataFile(path);\r\n  19:     database_filename = data_file.filename().string();\r\n  20      return GetBerkeleyEnv(data_file.parent_path());\r\n\r\nsrc\\wallet\\test\\wallet_tests.cpp:\r\n  260  \r\n  261:     std::string backup_file = (gArgs.GetDataDirNet() / \"wallet.backup\").string();\r\n  262  \r\n```\r\n</details>\r\n\r\n... and I wonder whether cases like the following ones (and probably others) should use the new safe API functions (i.e. `fs::PathToString`):\r\n\r\n* https://github.com/ryanofsky/bitcoin/blob/552e87e342a670808a227653a52134661400afcc/src/init.cpp#L1098\r\n* https://github.com/ryanofsky/bitcoin/blob/552e87e342a670808a227653a52134661400afcc/src/wallet/test/wallet_tests.cpp#L261\r\n\r\nPlease correct me if I'm wrong but my understanding is that `fs::PathToString` (and other helper functions) should be used as much as possible (and if not then it should be probably commented). Am I missing something?\r\n\r\nThanks for an explanation!",
      "created_at" : "2021-09-19T15:03:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-922488054",
      "id" : 922488054,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842_Az2",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-19T15:03:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922488054",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I did try to search for `.string()` and I got these occurrences:\r\n\r\nThanks! Great idea.\r\n\r\n> Please correct me if I'm wrong but my understanding is that `fs::PathToString` (and other helper functions) should be used as much as possible (and if not then it should be probably commented). Am I missing something?\r\n\r\nNo that's right. I just didn't think to search for these, and the tests that add special characters to directory names might not have caught some of these instances because they were only encoding filenames.\r\n\r\n> Thanks for an explanation!\r\n\r\nThank you! Updated 552e87e342a670808a227653a52134661400afcc -> 8026743822c52b723c7ce1dd322fd32dfc23a79b ([`pr/u8path.7`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.7) -> [`pr/u8path.8`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.8), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.7..pr/u8path.8)) with replacements\r\n\r\n---\r\n\r\nUpdated 8026743822c52b723c7ce1dd322fd32dfc23a79b -> 6ed81b11783d5d71ebd009338fceafa0eb5ddfab ([`pr/u8path.8`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.8) -> [`pr/u8path.9`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.9), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.8..pr/u8path.9)) to try to fix quoting error https://cirrus-ci.com/task/4573928086568960?logs=functional_tests#L39\r\nUpdated 6ed81b11783d5d71ebd009338fceafa0eb5ddfab -> 5cb67e7d8be0c65afba1e4fdfb2073616a9f4fa9 ([`pr/u8path.9`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.9) -> [`pr/u8path.10`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.10), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.9..pr/u8path.10)) to fix quoting error https://cirrus-ci.com/task/6291803805581312?logs=functional_tests#L39\r\nUpdated 5cb67e7d8be0c65afba1e4fdfb2073616a9f4fa9 -> a1b9c0f2a557dce39ae83f1738b7668c586f376e ([`pr/u8path.10`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.10) -> [`pr/u8path.11`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.11), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.10..pr/u8path.11)) to fix quoting segfault https://cirrus-ci.com/task/6281822167367680?logs=functional_tests#L39",
      "created_at" : "2021-09-19T19:12:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-922522071",
      "id" : 922522071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842_JHX",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-23T02:15:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922522071",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-09-23T21:10:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-926163503",
      "id" : 926163503,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843NCIv",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-23T21:10:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926163503",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased a1b9c0f2a557dce39ae83f1738b7668c586f376e -> 8a2f979ea78c116dc586da9d18ef1697b297ef01 ([`pr/u8path.11`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.11) -> [`pr/u8path.12`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.12), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.11-rebase..pr/u8path.12)) due to conflict with #19806",
      "created_at" : "2021-09-24T21:36:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-926932776",
      "id" : 926932776,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843P98o",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-24T21:36:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926932776",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r716193935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716193935"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8a2f979ea78c116dc586da9d18ef1697b297ef01\r\n\r\nIt is unfortunate that we have to do this.\r\n\r\nAnyway, using of `boost::io::quoted` requires to include headers as follows:\r\n```diff\r\ndiff --git a/src/fs.h b/src/fs.h\r\nindex e15dc3051..56934ea29 100644\r\n--- a/src/fs.h\r\n+++ b/src/fs.h\r\n@@ -14,6 +14,13 @@\r\n #include <boost/filesystem.hpp>\r\n #include <boost/filesystem/fstream.hpp>\r\n \r\n+#include <boost/version.hpp>\r\n+#if BOOST_VERSION >= 107300\r\n+#include <boost/io/quoted.hpp>\r\n+#else\r\n+#include <boost/io/detail/quoted_manip.hpp>\r\n+#endif\r\n+\r\n /** Filesystem operations and types */\r\n namespace fs {\r\n \r\ndiff --git a/test/lint/lint-includes.sh b/test/lint/lint-includes.sh\r\nindex bf7aeb5b4..974da45b9 100755\r\n--- a/test/lint/lint-includes.sh\r\n+++ b/test/lint/lint-includes.sh\r\n@@ -56,6 +56,8 @@ EXPECTED_BOOST_INCLUDES=(\r\n     boost/date_time/posix_time/posix_time.hpp\r\n     boost/filesystem.hpp\r\n     boost/filesystem/fstream.hpp\r\n+    boost/io/detail/quoted_manip.hpp\r\n+    boost/io/quoted.hpp\r\n     boost/multi_index/hashed_index.hpp\r\n     boost/multi_index/ordered_index.hpp\r\n     boost/multi_index/sequenced_index.hpp\r\n@@ -65,6 +67,7 @@ EXPECTED_BOOST_INCLUDES=(\r\n     boost/signals2/optional_last_value.hpp\r\n     boost/signals2/signal.hpp\r\n     boost/test/unit_test.hpp\r\n+    boost/version.hpp\r\n )\r\n \r\n for BOOST_INCLUDE in $(git grep '^#include <boost/' -- \"*.cpp\" \"*.h\" | cut -f2 -d: | cut -f2 -d'<' | cut -f1 -d'>' | sort -u); do\r\n```",
      "commit_id" : "8a2f979ea78c116dc586da9d18ef1697b297ef01",
      "created_at" : "2021-09-26T12:05:18Z",
      "diff_hunk" : "@@ -15,7 +15,122 @@\n #include <boost/filesystem/fstream.hpp>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs {\n+\n+using namespace boost::filesystem;\n+\n+/**\n+ * Path class wrapper to prepare application code for transition from\n+ * boost::filesystem library to std::filesystem implementation. The main\n+ * purpose of the class is to define fs::path::u8string() and fs::u8path()\n+ * functions not present in boost. It also blocks calls to the\n+ * fs::path(std::string) implicit constructor and the fs::path::string()\n+ * method, which worked well in the boost::filesystem implementation, but have\n+ * unsafe and unpredictable behavior on Windows in the std::filesystem\n+ * implementation (see implementation note in \\ref PathToString for details).\n+ */\n+class path : public boost::filesystem::path\n+{\n+public:\n+    using boost::filesystem::path::path;\n+\n+    // Allow path objects arguments for compatibility.\n+    path(boost::filesystem::path path) : boost::filesystem::path::path(std::move(path)) {}\n+    path& operator=(boost::filesystem::path path) { boost::filesystem::path::operator=(std::move(path)); return *this; }\n+    path& operator/=(boost::filesystem::path path) { boost::filesystem::path::operator/=(std::move(path)); return *this; }\n+\n+    // Allow literal string arguments, which are safe as long as the literals are ASCII.\n+    path(const char* c) : boost::filesystem::path(c) {}\n+    path& operator=(const char* c) { boost::filesystem::path::operator=(c); return *this; }\n+    path& operator/=(const char* c) { boost::filesystem::path::operator/=(c); return *this; }\n+    path& append(const char* c) { boost::filesystem::path::append(c); return *this; }\n+\n+    // Disallow std::string arguments to avoid locale-dependent decoding on windows.\n+    path(std::string) = delete;\n+    path& operator=(std::string) = delete;\n+    path& operator/=(std::string) = delete;\n+    path& append(std::string) = delete;\n+\n+    // Disallow std::string conversion method to avoid locale-dependent encoding on windows.\n+    std::string string() const = delete;\n+\n+    // Define UTF-8 string conversion method not present in boost::filesystem but present in std::filesystem.\n+    std::string u8string() const { return boost::filesystem::path::string(); }\n+};\n+\n+// Define UTF-8 string conversion function not present in boost::filesystem but present in std::filesystem.\n+static inline path u8path(const std::string& string)\n+{\n+    return boost::filesystem::path(string);\n+}\n+\n+// Disallow implicit std::string conversion for system_complete to avoid\n+// locale-dependent encoding on windows.\n+static inline path system_complete(const path& p)\n+{\n+    return boost::filesystem::system_complete(p);\n+}\n+\n+// Allow explicit quoted stream I/O.\n+static inline auto quoted(const std::string& s)\n+{\n+    return boost::io::quoted(s, '&');",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r716193935",
      "id" : 716193935,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII584qsECP",
      "original_commit_id" : "8a2f979ea78c116dc586da9d18ef1697b297ef01",
      "original_line" : 77,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/fs.h",
      "position" : 64,
      "pull_request_review_id" : 763689637,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-26T12:05:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716193935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r716615777"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716615777"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22937#discussion_r716193935\r\n\r\n> It is unfortunate that we have to do this.\r\n\r\nWhat's unfortunate that we have to do? If you want to disallow the quoted function (by deleting this), or use a different kind of escaping (by changing this), these things would be possible in a followup. I also think boost's choice of quoting behavior is a little weird, but this PR is just acting as a pure refactoring not changing what the code is doing.\r\n\r\n> Anyway, using of boost::io::quoted requires to include headers as follows:\r\n\r\nI don't think this is true, since we are already including boost path headers, and just using the same functionality we know they use. The only potential problem I could see here is that it is making assumptions about the boost implementation. But the whole PR is doing that necessarily for a seamless transition from boost::filesystem to std::filesystem in #20744. So I don't see a practical issue, and certainly no concern after #20744.\r\n\r\nIf there is an actual include problem here, I could call `std::quoted` instead of `boost::io::quoted`, but it seemed better leave the transition from `boost` to `std` for the followup PR and keep the refactoring in this PR more straightforward.",
      "commit_id" : "371b06d77a53cd1e9ac10c9f2b0ff9c56a2d8d68",
      "created_at" : "2021-09-27T11:50:14Z",
      "diff_hunk" : "@@ -15,7 +15,122 @@\n #include <boost/filesystem/fstream.hpp>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs {\n+\n+using namespace boost::filesystem;\n+\n+/**\n+ * Path class wrapper to prepare application code for transition from\n+ * boost::filesystem library to std::filesystem implementation. The main\n+ * purpose of the class is to define fs::path::u8string() and fs::u8path()\n+ * functions not present in boost. It also blocks calls to the\n+ * fs::path(std::string) implicit constructor and the fs::path::string()\n+ * method, which worked well in the boost::filesystem implementation, but have\n+ * unsafe and unpredictable behavior on Windows in the std::filesystem\n+ * implementation (see implementation note in \\ref PathToString for details).\n+ */\n+class path : public boost::filesystem::path\n+{\n+public:\n+    using boost::filesystem::path::path;\n+\n+    // Allow path objects arguments for compatibility.\n+    path(boost::filesystem::path path) : boost::filesystem::path::path(std::move(path)) {}\n+    path& operator=(boost::filesystem::path path) { boost::filesystem::path::operator=(std::move(path)); return *this; }\n+    path& operator/=(boost::filesystem::path path) { boost::filesystem::path::operator/=(std::move(path)); return *this; }\n+\n+    // Allow literal string arguments, which are safe as long as the literals are ASCII.\n+    path(const char* c) : boost::filesystem::path(c) {}\n+    path& operator=(const char* c) { boost::filesystem::path::operator=(c); return *this; }\n+    path& operator/=(const char* c) { boost::filesystem::path::operator/=(c); return *this; }\n+    path& append(const char* c) { boost::filesystem::path::append(c); return *this; }\n+\n+    // Disallow std::string arguments to avoid locale-dependent decoding on windows.\n+    path(std::string) = delete;\n+    path& operator=(std::string) = delete;\n+    path& operator/=(std::string) = delete;\n+    path& append(std::string) = delete;\n+\n+    // Disallow std::string conversion method to avoid locale-dependent encoding on windows.\n+    std::string string() const = delete;\n+\n+    // Define UTF-8 string conversion method not present in boost::filesystem but present in std::filesystem.\n+    std::string u8string() const { return boost::filesystem::path::string(); }\n+};\n+\n+// Define UTF-8 string conversion function not present in boost::filesystem but present in std::filesystem.\n+static inline path u8path(const std::string& string)\n+{\n+    return boost::filesystem::path(string);\n+}\n+\n+// Disallow implicit std::string conversion for system_complete to avoid\n+// locale-dependent encoding on windows.\n+static inline path system_complete(const path& p)\n+{\n+    return boost::filesystem::system_complete(p);\n+}\n+\n+// Allow explicit quoted stream I/O.\n+static inline auto quoted(const std::string& s)\n+{\n+    return boost::io::quoted(s, '&');",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r716615777",
      "id" : 716615777,
      "in_reply_to_id" : 716193935,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII584qtrBh",
      "original_commit_id" : "8a2f979ea78c116dc586da9d18ef1697b297ef01",
      "original_line" : 84,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/fs.h",
      "position" : 71,
      "pull_request_review_id" : 764171850,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-27T12:32:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716615777",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I tested the combined branch (this PR + #20744) on top of the master ([16ccb3a](https://github.com/bitcoin/bitcoin/commit/16ccb3a1cd9125eb24a5b45a98099ff98660767a)), and found another implicit type conversion case which could be fixed with the following patch:\r\n\r\nAnother string bites the dust. Thanks!\r\n\r\nUpdated 8a2f979ea78c116dc586da9d18ef1697b297ef01 -> 371b06d77a53cd1e9ac10c9f2b0ff9c56a2d8d68 ([`pr/u8path.12`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.12) -> [`pr/u8path.13`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.13), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.12..pr/u8path.13)) with suggested backup file fix and `fs::exists` string protection.",
      "created_at" : "2021-09-27T12:28:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-927825620",
      "id" : 927825620,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843TX7U",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-27T12:28:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/927825620",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r716649979"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716649979"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> > Anyway, using of boost::io::quoted requires to include headers as follows:\r\n> \r\n> I don't think this is true...\r\n\r\nIt was required to compile the combined branch -- this PR + #20744.",
      "commit_id" : "371b06d77a53cd1e9ac10c9f2b0ff9c56a2d8d68",
      "created_at" : "2021-09-27T12:38:53Z",
      "diff_hunk" : "@@ -15,7 +15,122 @@\n #include <boost/filesystem/fstream.hpp>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs {\n+\n+using namespace boost::filesystem;\n+\n+/**\n+ * Path class wrapper to prepare application code for transition from\n+ * boost::filesystem library to std::filesystem implementation. The main\n+ * purpose of the class is to define fs::path::u8string() and fs::u8path()\n+ * functions not present in boost. It also blocks calls to the\n+ * fs::path(std::string) implicit constructor and the fs::path::string()\n+ * method, which worked well in the boost::filesystem implementation, but have\n+ * unsafe and unpredictable behavior on Windows in the std::filesystem\n+ * implementation (see implementation note in \\ref PathToString for details).\n+ */\n+class path : public boost::filesystem::path\n+{\n+public:\n+    using boost::filesystem::path::path;\n+\n+    // Allow path objects arguments for compatibility.\n+    path(boost::filesystem::path path) : boost::filesystem::path::path(std::move(path)) {}\n+    path& operator=(boost::filesystem::path path) { boost::filesystem::path::operator=(std::move(path)); return *this; }\n+    path& operator/=(boost::filesystem::path path) { boost::filesystem::path::operator/=(std::move(path)); return *this; }\n+\n+    // Allow literal string arguments, which are safe as long as the literals are ASCII.\n+    path(const char* c) : boost::filesystem::path(c) {}\n+    path& operator=(const char* c) { boost::filesystem::path::operator=(c); return *this; }\n+    path& operator/=(const char* c) { boost::filesystem::path::operator/=(c); return *this; }\n+    path& append(const char* c) { boost::filesystem::path::append(c); return *this; }\n+\n+    // Disallow std::string arguments to avoid locale-dependent decoding on windows.\n+    path(std::string) = delete;\n+    path& operator=(std::string) = delete;\n+    path& operator/=(std::string) = delete;\n+    path& append(std::string) = delete;\n+\n+    // Disallow std::string conversion method to avoid locale-dependent encoding on windows.\n+    std::string string() const = delete;\n+\n+    // Define UTF-8 string conversion method not present in boost::filesystem but present in std::filesystem.\n+    std::string u8string() const { return boost::filesystem::path::string(); }\n+};\n+\n+// Define UTF-8 string conversion function not present in boost::filesystem but present in std::filesystem.\n+static inline path u8path(const std::string& string)\n+{\n+    return boost::filesystem::path(string);\n+}\n+\n+// Disallow implicit std::string conversion for system_complete to avoid\n+// locale-dependent encoding on windows.\n+static inline path system_complete(const path& p)\n+{\n+    return boost::filesystem::system_complete(p);\n+}\n+\n+// Allow explicit quoted stream I/O.\n+static inline auto quoted(const std::string& s)\n+{\n+    return boost::io::quoted(s, '&');",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r716649979",
      "id" : 716649979,
      "in_reply_to_id" : 716193935,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII584qtzX7",
      "original_commit_id" : "8a2f979ea78c116dc586da9d18ef1697b297ef01",
      "original_line" : 84,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/fs.h",
      "position" : 71,
      "pull_request_review_id" : 764217994,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-27T12:38:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716649979",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r716656860"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716656860"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> It was required to compile the combined branch -- this PR + #20744.\r\n\r\nMaybe we can move the discussion to #20744 if there are continuing issues there but I think #20744 should not be calling boost::io::quoted but should switch to std::quoted instead. We can also choose to get rid of this fs::quoted function entirely in a new PR between this PR and #20744 if we are willing to changing logging behavior a little bit.",
      "commit_id" : "371b06d77a53cd1e9ac10c9f2b0ff9c56a2d8d68",
      "created_at" : "2021-09-27T12:47:17Z",
      "diff_hunk" : "@@ -15,7 +15,122 @@\n #include <boost/filesystem/fstream.hpp>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs {\n+\n+using namespace boost::filesystem;\n+\n+/**\n+ * Path class wrapper to prepare application code for transition from\n+ * boost::filesystem library to std::filesystem implementation. The main\n+ * purpose of the class is to define fs::path::u8string() and fs::u8path()\n+ * functions not present in boost. It also blocks calls to the\n+ * fs::path(std::string) implicit constructor and the fs::path::string()\n+ * method, which worked well in the boost::filesystem implementation, but have\n+ * unsafe and unpredictable behavior on Windows in the std::filesystem\n+ * implementation (see implementation note in \\ref PathToString for details).\n+ */\n+class path : public boost::filesystem::path\n+{\n+public:\n+    using boost::filesystem::path::path;\n+\n+    // Allow path objects arguments for compatibility.\n+    path(boost::filesystem::path path) : boost::filesystem::path::path(std::move(path)) {}\n+    path& operator=(boost::filesystem::path path) { boost::filesystem::path::operator=(std::move(path)); return *this; }\n+    path& operator/=(boost::filesystem::path path) { boost::filesystem::path::operator/=(std::move(path)); return *this; }\n+\n+    // Allow literal string arguments, which are safe as long as the literals are ASCII.\n+    path(const char* c) : boost::filesystem::path(c) {}\n+    path& operator=(const char* c) { boost::filesystem::path::operator=(c); return *this; }\n+    path& operator/=(const char* c) { boost::filesystem::path::operator/=(c); return *this; }\n+    path& append(const char* c) { boost::filesystem::path::append(c); return *this; }\n+\n+    // Disallow std::string arguments to avoid locale-dependent decoding on windows.\n+    path(std::string) = delete;\n+    path& operator=(std::string) = delete;\n+    path& operator/=(std::string) = delete;\n+    path& append(std::string) = delete;\n+\n+    // Disallow std::string conversion method to avoid locale-dependent encoding on windows.\n+    std::string string() const = delete;\n+\n+    // Define UTF-8 string conversion method not present in boost::filesystem but present in std::filesystem.\n+    std::string u8string() const { return boost::filesystem::path::string(); }\n+};\n+\n+// Define UTF-8 string conversion function not present in boost::filesystem but present in std::filesystem.\n+static inline path u8path(const std::string& string)\n+{\n+    return boost::filesystem::path(string);\n+}\n+\n+// Disallow implicit std::string conversion for system_complete to avoid\n+// locale-dependent encoding on windows.\n+static inline path system_complete(const path& p)\n+{\n+    return boost::filesystem::system_complete(p);\n+}\n+\n+// Allow explicit quoted stream I/O.\n+static inline auto quoted(const std::string& s)\n+{\n+    return boost::io::quoted(s, '&');",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r716656860",
      "id" : 716656860,
      "in_reply_to_id" : 716193935,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII584qt1Dc",
      "original_commit_id" : "8a2f979ea78c116dc586da9d18ef1697b297ef01",
      "original_line" : 84,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/fs.h",
      "position" : 71,
      "pull_request_review_id" : 764227020,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-27T12:47:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716656860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r716663938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716663938"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree.",
      "commit_id" : "371b06d77a53cd1e9ac10c9f2b0ff9c56a2d8d68",
      "created_at" : "2021-09-27T12:55:46Z",
      "diff_hunk" : "@@ -15,7 +15,122 @@\n #include <boost/filesystem/fstream.hpp>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs {\n+\n+using namespace boost::filesystem;\n+\n+/**\n+ * Path class wrapper to prepare application code for transition from\n+ * boost::filesystem library to std::filesystem implementation. The main\n+ * purpose of the class is to define fs::path::u8string() and fs::u8path()\n+ * functions not present in boost. It also blocks calls to the\n+ * fs::path(std::string) implicit constructor and the fs::path::string()\n+ * method, which worked well in the boost::filesystem implementation, but have\n+ * unsafe and unpredictable behavior on Windows in the std::filesystem\n+ * implementation (see implementation note in \\ref PathToString for details).\n+ */\n+class path : public boost::filesystem::path\n+{\n+public:\n+    using boost::filesystem::path::path;\n+\n+    // Allow path objects arguments for compatibility.\n+    path(boost::filesystem::path path) : boost::filesystem::path::path(std::move(path)) {}\n+    path& operator=(boost::filesystem::path path) { boost::filesystem::path::operator=(std::move(path)); return *this; }\n+    path& operator/=(boost::filesystem::path path) { boost::filesystem::path::operator/=(std::move(path)); return *this; }\n+\n+    // Allow literal string arguments, which are safe as long as the literals are ASCII.\n+    path(const char* c) : boost::filesystem::path(c) {}\n+    path& operator=(const char* c) { boost::filesystem::path::operator=(c); return *this; }\n+    path& operator/=(const char* c) { boost::filesystem::path::operator/=(c); return *this; }\n+    path& append(const char* c) { boost::filesystem::path::append(c); return *this; }\n+\n+    // Disallow std::string arguments to avoid locale-dependent decoding on windows.\n+    path(std::string) = delete;\n+    path& operator=(std::string) = delete;\n+    path& operator/=(std::string) = delete;\n+    path& append(std::string) = delete;\n+\n+    // Disallow std::string conversion method to avoid locale-dependent encoding on windows.\n+    std::string string() const = delete;\n+\n+    // Define UTF-8 string conversion method not present in boost::filesystem but present in std::filesystem.\n+    std::string u8string() const { return boost::filesystem::path::string(); }\n+};\n+\n+// Define UTF-8 string conversion function not present in boost::filesystem but present in std::filesystem.\n+static inline path u8path(const std::string& string)\n+{\n+    return boost::filesystem::path(string);\n+}\n+\n+// Disallow implicit std::string conversion for system_complete to avoid\n+// locale-dependent encoding on windows.\n+static inline path system_complete(const path& p)\n+{\n+    return boost::filesystem::system_complete(p);\n+}\n+\n+// Allow explicit quoted stream I/O.\n+static inline auto quoted(const std::string& s)\n+{\n+    return boost::io::quoted(s, '&');",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r716663938",
      "id" : 716663938,
      "in_reply_to_id" : 716193935,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII584qt2yC",
      "original_commit_id" : "8a2f979ea78c116dc586da9d18ef1697b297ef01",
      "original_line" : 84,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/fs.h",
      "position" : 71,
      "pull_request_review_id" : 764236415,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-27T12:55:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716663938",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The [CI error](https://api.cirrus-ci.com/v1/task/5093451675992064/logs/functional_tests.log) \"[WinError 10054] An existing connection was forcibly closed by the remote host\" seems unrelated to this PR changes. Job restarted.\r\n",
      "created_at" : "2021-09-27T13:16:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-927864933",
      "id" : 927864933,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843Thhl",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-27T13:16:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/927864933",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky I was looking around and I have found this function in `system.cpp`:\r\n\r\n```cpp\r\nbool RenameOver(fs::path src, fs::path dest)\r\n{\r\n#ifdef WIN32\r\n    return MoveFileExW(src.wstring().c_str(), dest.wstring().c_str(),\r\n                       MOVEFILE_REPLACE_EXISTING) != 0;\r\n#else\r\n    int rc = std::rename(src.c_str(), dest.c_str());\r\n    return (rc == 0);\r\n#endif /* WIN32 */\r\n}\r\n```\r\n(https://github.com/ryanofsky/bitcoin/blob/371b06d77a53cd1e9ac10c9f2b0ff9c56a2d8d68/src/util/system.cpp#L1064-L1073)\r\n\r\nIs `.wstring().c_str()` correct? I would expect your `fs::PathToString` fuction to be used here too ... or maybe I would expect `std::filesystem::rename` here to avoid `#ifdef` completely. (A lot of guessing on my side.)\r\n\r\nEdit: should the function be moved to `fs.h` potentially?\r\n\r\nEdit: If this concern is valid, then it is useful to search for `.wstring().c_str()`.",
      "created_at" : "2021-09-27T17:33:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-928098603",
      "id" : 928098603,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843Uakr",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-27T17:49:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/928098603",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Is `.wstring().c_str()` correct? I would expect your `fs::PathToString` fuction to be used here too\r\n\r\nThis is actually correct and calling PathToString would be wrong here. The idea behind this code is to avoid any conversion to narrow strings. The path object on windows natively uses a wide string, wstring() returns it, and \r\nMoveFileExW expects it. So there is no need for this code to change, even though it could be replaced by std::rename anytime I think if someone wanted to do that in a different PR",
      "created_at" : "2021-09-27T17:53:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-928112127",
      "id" : 928112127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843Ud3_",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-27T17:53:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/928112127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/ryanofsky/bitcoin/blob/371b06d77a53cd1e9ac10c9f2b0ff9c56a2d8d68/src/i2p.cpp#L331 - Should `fs::PathToString` be used here? ",
      "created_at" : "2021-09-27T18:23:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-928158060",
      "id" : 928158060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843UpFs",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-27T18:23:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/928158060",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> https://github.com/ryanofsky/bitcoin/blob/371b06d77a53cd1e9ac10c9f2b0ff9c56a2d8d68/src/i2p.cpp#L331 - Should `fs::PathToString` be used here?\r\n\r\nWow, great find! This should have triggered a build error, and it was a nightmare to figure out what was allowing this to succeed, but it turned out I was overloading the tinyformat `formatValue` function in an imperfect way that caused the overload to be ignored if `fs.h` was included after `tinyformat.h`, and only used when `fs.h` was included *before* `tinyformat.h`. This worked most places, but was broken in the i2p source file. I fixed this by switching `formatValue` declarations to be template specializations instead of overloads to prevent this fragility and make the check actually reliable.\r\n\r\n---\r\n\r\nUpdated 371b06d77a53cd1e9ac10c9f2b0ff9c56a2d8d68 -> b95db7a0393a4da8954f0a63371a673231c36b6e ([`pr/u8path.13`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.13) -> [`pr/u8path.14`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.14), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.13..pr/u8path.14)) to prevent a path with a locale-specific encoding from being formatted in an I2P error message on windows after #20744, and to fix a `valueFormat` overload bug that allowed this bad formatting to go undetected.",
      "created_at" : "2021-09-27T23:11:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-928419711",
      "id" : 928419711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843Vo9_",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-27T23:11:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/928419711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717427816"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717427816"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A note (not an issue).\r\nIf code contains a `formatValue` call which assumes implicit `std::string` conversion, an error will be generated by a _linker_, not a compiler.",
      "commit_id" : "b95db7a0393a4da8954f0a63371a673231c36b6e",
      "created_at" : "2021-09-28T10:10:35Z",
      "diff_hunk" : "@@ -103,4 +226,11 @@ namespace fsbridge {\n #endif // WIN32 && __GLIBCXX__\n };\n \n+// Disallow implicit std::string conversion for tinyformat to avoid\n+// locale-dependent encoding on windows.\n+namespace tinyformat {\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const boost::filesystem::path&);\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const fs::path&);\n+} // namespace tinyformat",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717427816",
      "id" : 717427816,
      "line" : 234,
      "node_id" : "PRRC_kwDOABII584qwxRo",
      "original_commit_id" : "b95db7a0393a4da8954f0a63371a673231c36b6e",
      "original_line" : 234,
      "original_position" : 143,
      "original_start_line" : 229,
      "path" : "src/fs.h",
      "position" : 143,
      "pull_request_review_id" : 765240532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : 229,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-28T10:11:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717427816",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717469791"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717469791"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n// Disallow implicit std::string conversion for tinyformat to avoid\r\n// locale-dependent encoding on windows.\r\nnamespace tinyformat {\r\ntemplate<> inline void formatValue(std::ostream&, const char*, const char*, int, const fs::path&) = delete;\r\n} // namespace tinyformat\r\n```\r\n\r\nto force a compiler to report errors?\r\n\r\nAlso the explicit template specialization with the `boost::filesystem::path` type seems redundant, no?",
      "commit_id" : "b95db7a0393a4da8954f0a63371a673231c36b6e",
      "created_at" : "2021-09-28T11:12:30Z",
      "diff_hunk" : "@@ -103,4 +226,11 @@ namespace fsbridge {\n #endif // WIN32 && __GLIBCXX__\n };\n \n+// Disallow implicit std::string conversion for tinyformat to avoid\n+// locale-dependent encoding on windows.\n+namespace tinyformat {\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const boost::filesystem::path&);\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const fs::path&);\n+} // namespace tinyformat",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717469791",
      "id" : 717469791,
      "in_reply_to_id" : 717427816,
      "line" : 234,
      "node_id" : "PRRC_kwDOABII584qw7hf",
      "original_commit_id" : "b95db7a0393a4da8954f0a63371a673231c36b6e",
      "original_line" : 234,
      "original_position" : 143,
      "original_start_line" : 229,
      "path" : "src/fs.h",
      "position" : 143,
      "pull_request_review_id" : 765297592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : 229,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-28T11:12:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717469791",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717579678"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717579678"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> to force a compiler to report errors?\r\n\r\nWow, I had no idea you could delete nonmember functions. It is much nicer to have this caught by the compiler instead of the linker. Will update.\r\n\r\n> Also the explicit template specialization with the `boost::filesystem::path` type seems redundant, no?\r\n\r\nThis is just to catch cases like `strformat(\"%s\", path1 / path2)` or whatever else might return a `std::filesystem::path` instead of an `fs::path`\r\n\r\n",
      "commit_id" : "bf9197c563cc62847a331df38c0a612433ea8beb",
      "created_at" : "2021-09-28T13:31:16Z",
      "diff_hunk" : "@@ -103,4 +226,11 @@ namespace fsbridge {\n #endif // WIN32 && __GLIBCXX__\n };\n \n+// Disallow implicit std::string conversion for tinyformat to avoid\n+// locale-dependent encoding on windows.\n+namespace tinyformat {\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const boost::filesystem::path&);\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const fs::path&);\n+} // namespace tinyformat",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717579678",
      "id" : 717579678,
      "in_reply_to_id" : 717427816,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584qxWWe",
      "original_commit_id" : "b95db7a0393a4da8954f0a63371a673231c36b6e",
      "original_line" : 234,
      "original_position" : 143,
      "original_start_line" : 229,
      "path" : "src/fs.h",
      "position" : null,
      "pull_request_review_id" : 765447598,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-28T13:46:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717579678",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717595754"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717595754"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> This is just to catch cases like `strformat(\"%s\", path1 / path2)` or whatever else might return a `std::filesystem::path` instead of an `fs::path`\r\n\r\nWe do not use the same assumption for other functions. Why just here?",
      "commit_id" : "bf9197c563cc62847a331df38c0a612433ea8beb",
      "created_at" : "2021-09-28T13:47:30Z",
      "diff_hunk" : "@@ -103,4 +226,11 @@ namespace fsbridge {\n #endif // WIN32 && __GLIBCXX__\n };\n \n+// Disallow implicit std::string conversion for tinyformat to avoid\n+// locale-dependent encoding on windows.\n+namespace tinyformat {\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const boost::filesystem::path&);\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const fs::path&);\n+} // namespace tinyformat",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717595754",
      "id" : 717595754,
      "in_reply_to_id" : 717427816,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584qxaRq",
      "original_commit_id" : "b95db7a0393a4da8954f0a63371a673231c36b6e",
      "original_line" : 234,
      "original_position" : 143,
      "original_start_line" : 229,
      "path" : "src/fs.h",
      "position" : null,
      "pull_request_review_id" : 765469720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-28T13:47:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717595754",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717605806"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717605806"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> We do not use the same assumption for other functions. Why just here?\r\n\r\nIf there are other places where it's easy to catch more encoding problems, I would be happy to add overloads. This case does work a little differently from other cases because it is template specialization not a function overload. A function overload will match when a subclass instance is passed to a parent class parameter, while template specialization will not match because type deduction won't deduce a parent type from a child type.",
      "commit_id" : "bf9197c563cc62847a331df38c0a612433ea8beb",
      "created_at" : "2021-09-28T13:57:27Z",
      "diff_hunk" : "@@ -103,4 +226,11 @@ namespace fsbridge {\n #endif // WIN32 && __GLIBCXX__\n };\n \n+// Disallow implicit std::string conversion for tinyformat to avoid\n+// locale-dependent encoding on windows.\n+namespace tinyformat {\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const boost::filesystem::path&);\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const fs::path&);\n+} // namespace tinyformat",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717605806",
      "id" : 717605806,
      "in_reply_to_id" : 717427816,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584qxcuu",
      "original_commit_id" : "b95db7a0393a4da8954f0a63371a673231c36b6e",
      "original_line" : 234,
      "original_position" : 143,
      "original_start_line" : 229,
      "path" : "src/fs.h",
      "position" : null,
      "pull_request_review_id" : 765483834,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-28T13:57:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717605806",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated b95db7a0393a4da8954f0a63371a673231c36b6e -> bf9197c563cc62847a331df38c0a612433ea8beb ([`pr/u8path.14`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.14) -> [`pr/u8path.15`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.15), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.14..pr/u8path.15)) taking hebasto's suggestion and making the tinyformat link errors into compile errors",
      "created_at" : "2021-09-28T13:58:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-929249771",
      "id" : 929249771,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843Yznr",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-28T13:58:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/929249771",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717607763"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717607763"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for an explanation!\r\n\r\nMaybe add a comment to the code?",
      "commit_id" : "bf9197c563cc62847a331df38c0a612433ea8beb",
      "created_at" : "2021-09-28T13:59:20Z",
      "diff_hunk" : "@@ -103,4 +226,11 @@ namespace fsbridge {\n #endif // WIN32 && __GLIBCXX__\n };\n \n+// Disallow implicit std::string conversion for tinyformat to avoid\n+// locale-dependent encoding on windows.\n+namespace tinyformat {\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const boost::filesystem::path&);\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const fs::path&);\n+} // namespace tinyformat",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717607763",
      "id" : 717607763,
      "in_reply_to_id" : 717427816,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584qxdNT",
      "original_commit_id" : "b95db7a0393a4da8954f0a63371a673231c36b6e",
      "original_line" : 234,
      "original_position" : 143,
      "original_start_line" : 229,
      "path" : "src/fs.h",
      "position" : null,
      "pull_request_review_id" : 765486581,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-28T14:00:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717607763",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717658284"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717658284"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If we did want to be more vigilant about possible encoding bugs, we could have a followup PR that drops public inheritance `class path : public boost::filesystem::path` and wraps a private member instead, or uses private inheritance, to make the class a whitelist of allowed functions instead of a blacklist of disallowed functions. The changes required would be a superset of changes already in this PR, and it's unclear whether any bugs this might catch would be severe enough to justify the extra maintenance burden, so I didn't try this here. But it is something that could be done later.",
      "commit_id" : "bf9197c563cc62847a331df38c0a612433ea8beb",
      "created_at" : "2021-09-28T14:47:51Z",
      "diff_hunk" : "@@ -103,4 +226,11 @@ namespace fsbridge {\n #endif // WIN32 && __GLIBCXX__\n };\n \n+// Disallow implicit std::string conversion for tinyformat to avoid\n+// locale-dependent encoding on windows.\n+namespace tinyformat {\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const boost::filesystem::path&);\n+template<> inline void formatValue(std::ostream&, const char*, const char*, int, const fs::path&);\n+} // namespace tinyformat",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717658284",
      "id" : 717658284,
      "in_reply_to_id" : 717427816,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584qxpis",
      "original_commit_id" : "b95db7a0393a4da8954f0a63371a673231c36b6e",
      "original_line" : 234,
      "original_position" : 143,
      "original_start_line" : 229,
      "path" : "src/fs.h",
      "position" : null,
      "pull_request_review_id" : 765558561,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-28T14:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717658284",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r721719370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721719370"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I find the sentence \"On windows, file paths are natively represented as unicode strings, [..]\" slightly confusing because of that \"unicode strings\". My immediate understanding is something like \"a sequence of bytes in either UTF-8, UTF-16, etc. encoding\" which makes me guess for no good reason :)\r\n\r\nAccording to https://docs.microsoft.com/en-us/cpp/standard-library/filesystem?view=msvc-160#syntax (and your [comment](https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-928112127) too), it holds that *Windows uses a null-terminated sequence of wchar_t, encoded as UTF-16 (one or more elements for each character).*\r\n\r\nSo I would expect something like \"On Windows, file paths are natively represented by wchar_t sequences, encoded as UTF-16 strings, [..]\" \r\n\r\nHopefully, I get it right.",
      "commit_id" : "bf9197c563cc62847a331df38c0a612433ea8beb",
      "created_at" : "2021-10-04T21:08:54Z",
      "diff_hunk" : "@@ -11,6 +11,26 @@\n \n BOOST_FIXTURE_TEST_SUITE(fs_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(fsbridge_pathtostring)\n+{\n+    std::string u8_str = \"fs_tests_â¿_ð\";\n+    BOOST_CHECK_EQUAL(fs::PathToString(fs::PathFromString(u8_str)), u8_str);\n+    BOOST_CHECK_EQUAL(fs::u8path(u8_str).u8string(), u8_str);\n+    BOOST_CHECK_EQUAL(fs::PathFromString(u8_str).u8string(), u8_str);\n+    BOOST_CHECK_EQUAL(fs::PathToString(fs::u8path(u8_str)), u8_str);\n+#ifndef WIN32\n+    // On non-windows systems, verify that non-UTF8 strings can be round\n+    // tripped successfully. On windows, file paths are natively represented as\n+    // unicode strings, so an invalid UTF-8 sequence that does not map to any",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r721719370",
      "id" : 721719370,
      "line" : 24,
      "node_id" : "PRRC_kwDOABII584rBJBK",
      "original_commit_id" : "bf9197c563cc62847a331df38c0a612433ea8beb",
      "original_line" : 24,
      "original_position" : 14,
      "original_start_line" : 23,
      "path" : "src/test/fs_tests.cpp",
      "position" : 14,
      "pull_request_review_id" : 770774776,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721719370/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 23,
      "start_side" : "RIGHT",
      "updated_at" : "2021-10-04T21:08:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721719370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r721734953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721734953"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I wonder if it is worth adding a test for [.stem()](https://en.cppreference.com/w/cpp/filesystem/path/stem) method too. We use it in [dbwrapper.cpp](https://github.com/bitcoin/bitcoin/pull/22937/files#diff-44bef8fa93d168379ef331d9e11d333be06ce98a8f37ec65f8a987846b90a151R118). \r\n\r\nThe test can be simply:\r\n\r\n```cpp\r\nBOOST_CHECK_EQUAL(fs::PathToString(fs::PathFromString(u8_str).stem()), u8_str);\r\n```\r\n\r\nor something like\r\n\r\n```cpp\r\nstd::string test_filename = \"fs_tests_â¿_ð.dat\";\r\nstd::string expected_stem = \"fs_tests_â¿_ð\";\r\nBOOST_CHECK_EQUAL(fs::PathToString(fs::PathFromString(u8_filename).stem()), expected_stem);\r\n```\r\n\r\nThe reasoning behind this is to have a test that tests: string -> path -> modified path -> string. So we would be more sure that there is no std::filesystem implementation that behaves in a surprising way (I'm thinking about Android std::filesystem implementation that seems to be quite new.)\r\n\r\nAnyway, it's just an idea from a category \"maybe nice to have\" and not \"must have\". Feel free to ignore.\r\n\r\nedit: or `.filename()` instead of `.stem()`.",
      "commit_id" : "bf9197c563cc62847a331df38c0a612433ea8beb",
      "created_at" : "2021-10-04T21:37:11Z",
      "diff_hunk" : "@@ -11,6 +11,26 @@\n \n BOOST_FIXTURE_TEST_SUITE(fs_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(fsbridge_pathtostring)\n+{\n+    std::string u8_str = \"fs_tests_â¿_ð\";\n+    BOOST_CHECK_EQUAL(fs::PathToString(fs::PathFromString(u8_str)), u8_str);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r721734953",
      "id" : 721734953,
      "line" : 17,
      "node_id" : "PRRC_kwDOABII584rBM0p",
      "original_commit_id" : "bf9197c563cc62847a331df38c0a612433ea8beb",
      "original_line" : 17,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/test/fs_tests.cpp",
      "position" : 7,
      "pull_request_review_id" : 770795268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721734953/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-04T21:44:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721734953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r721936281"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721936281"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I wonder if it is worth adding a test for [.stem()](https://en.cppreference.com/w/cpp/filesystem/path/stem) method too. \r\n\r\nThanks, added suggested test",
      "commit_id" : "2f4a115f4aa394323118e0b9d3569a089e280360",
      "created_at" : "2021-10-05T06:48:47Z",
      "diff_hunk" : "@@ -11,6 +11,26 @@\n \n BOOST_FIXTURE_TEST_SUITE(fs_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(fsbridge_pathtostring)\n+{\n+    std::string u8_str = \"fs_tests_â¿_ð\";\n+    BOOST_CHECK_EQUAL(fs::PathToString(fs::PathFromString(u8_str)), u8_str);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r721936281",
      "id" : 721936281,
      "in_reply_to_id" : 721734953,
      "line" : 17,
      "node_id" : "PRRC_kwDOABII584rB9-Z",
      "original_commit_id" : "bf9197c563cc62847a331df38c0a612433ea8beb",
      "original_line" : 17,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/test/fs_tests.cpp",
      "position" : 7,
      "pull_request_review_id" : 771038298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721936281/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-05T07:36:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721936281",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r721947453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721947453"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> nit: I find the sentence \"On windows, file paths are natively represented as unicode strings, [..]\" slightly confusing because of that \"unicode strings\". \r\n\r\nThanks rewrote this and replaced \"unicode strings\" with \"unicode\". The character types and encodings that windows uses internally are not really relevant here. The point is just that paths on windows are unicode and have to be encoded as bytes, while paths on posix are already bytes and do not get encoded.\r\n\r\n> My immediate understanding is something like \"a sequence of bytes in either UTF-8, UTF-16, etc. encoding\" which makes me guess for no good reason :)\r\n\r\nThis isn't actually true, see https://github.com/rust-lang/rust/issues/12056 as a starting point if you are really curious about this. But this comment is just explaining why the test is skipped on windows.\r\n\r\n> According to https://docs.microsoft.com/en-us/cpp/standard-library/filesystem?view=msvc-160#syntax (and your [comment](https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-928112127) too), it holds that _Windows uses a null-terminated sequence of wchar_t, encoded as UTF-16 (one or more elements for each character)._\r\n\r\nThis seems to be a simplification, they are wchar_t, but not strictly valid utf-16. Not too relevant to the API in this PR, though, which is just trying to preserve current behavior and use a safe string encoding.",
      "commit_id" : "2f4a115f4aa394323118e0b9d3569a089e280360",
      "created_at" : "2021-10-05T07:06:37Z",
      "diff_hunk" : "@@ -11,6 +11,26 @@\n \n BOOST_FIXTURE_TEST_SUITE(fs_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(fsbridge_pathtostring)\n+{\n+    std::string u8_str = \"fs_tests_â¿_ð\";\n+    BOOST_CHECK_EQUAL(fs::PathToString(fs::PathFromString(u8_str)), u8_str);\n+    BOOST_CHECK_EQUAL(fs::u8path(u8_str).u8string(), u8_str);\n+    BOOST_CHECK_EQUAL(fs::PathFromString(u8_str).u8string(), u8_str);\n+    BOOST_CHECK_EQUAL(fs::PathToString(fs::u8path(u8_str)), u8_str);\n+#ifndef WIN32\n+    // On non-windows systems, verify that non-UTF8 strings can be round\n+    // tripped successfully. On windows, file paths are natively represented as\n+    // unicode strings, so an invalid UTF-8 sequence that does not map to any",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r721947453",
      "id" : 721947453,
      "in_reply_to_id" : 721719370,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584rCAs9",
      "original_commit_id" : "bf9197c563cc62847a331df38c0a612433ea8beb",
      "original_line" : 24,
      "original_position" : 14,
      "original_start_line" : 23,
      "path" : "src/test/fs_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 771038298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721947453/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-10-05T07:36:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721947453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-10-05T15:09:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-934497501",
      "id" : 934497501,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843s0zd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934497501/reactions"
      },
      "updated_at" : "2021-10-05T15:09:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934497501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 2f4a115f4aa394323118e0b9d3569a089e280360 -> 6544ea5035268025207d2402db2f7d90fde947a6 ([`pr/u8path.16`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.16) -> [`pr/u8path.17`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.17), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.16-rebase..pr/u8path.17)) due to conflict with #22950",
      "created_at" : "2021-10-05T16:10:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-934552090",
      "id" : 934552090,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843tCIa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934552090/reactions"
      },
      "updated_at" : "2021-10-05T16:10:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934552090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@hebasto I compiled on my Windows 10 machine using instructions here: https://github.com/ryanofsky/bitcoin/blob/pr/u8path/build_msvc/README.md#building\r\n\r\nNote that bitcoin source files are located in folder `C:\\dev\\fs_tests_â¿_ð` on my machine.\r\n\r\nNow when I attempt to run `bitcoind.exe` with a unicode datadir (using PowerShell 7), it just stops for me saying that the directory does not exist:\r\n\r\n```\r\nPS C:\\dev\\fs_tests_â¿_ð\\bitcoin-msvs\\build_msvc\\x64\\Release> .\\bitcoind.exe -testnet -datadir=\"C:\\dev\\fs_tests_â¿_ð\\datadir\"\r\nError: Specified data directory \"C:\\dev\\fs_tests_â¿_ð\\datadir\" does not exist.\r\n\r\nPS C:\\dev\\fs_tests_â¿_ð\\bitcoin-msvs\\build_msvc\\x64\\Release> mkdir \"C:\\dev\\fs_tests_â¿_ð\\datadir\"\r\n\r\n    Directory: C:\\dev\\fs_tests_â¿_ð\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----          09.10.2021     9:51                datadir\r\n\r\nPS C:\\dev\\fs_tests_â¿_ð\\bitcoin-msvs\\build_msvc\\x64\\Release> .\\bitcoind.exe -testnet -datadir=\"C:\\dev\\fs_tests_â¿_ð\\datadir\"\r\nError: Specified data directory \"C:\\dev\\fs_tests_â¿_ð\\datadir\" does not exist.\r\n```\r\n\r\nI'm not sure if I have not made an error somewhere but it would be great to know if this is a bug or not (and whose). And if it is, then if it is replicable on other machines.",
      "created_at" : "2021-10-09T08:01:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-939252018",
      "id" : 939252018,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843-9ky",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939252018/reactions"
      },
      "updated_at" : "2021-10-09T08:01:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939252018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @hebasto I compiled on my Windows 10 machine using instructions here: https://github.com/ryanofsky/bitcoin/blob/pr/u8path/build_msvc/README.md#building\r\n\r\nWhy not using the updated build instructions?\r\n\r\nIn the Command Prompt everything works as expected:\r\n```\r\n>git fetch origin pull/22937/merge:pr22937m-1009\r\n>git switch pr22937m-1009\r\n>cd .\\build_msvc\r\n>python msvc-autogen.py\r\n>msbuild -property:Configuration=Release -maxCpuCount -verbosity:minimal bitcoin.sln\r\n>cd .\\x64\\Release\r\n>.\\bitcoind.exe -testnet -datadir=\"C:\\dev\\fs_tests_â¿_ð\\datadir\"\r\nError: Specified data directory \"C:\\dev\\fs_tests_â¿_ð\\datadir\" does not exist.\r\n\r\n\r\n>mkdir \"C:\\dev\\fs_tests_â¿_ð\\datadir\"\r\n\r\n>.\\bitcoind.exe -testnet -datadir=\"C:\\dev\\fs_tests_â¿_ð\\datadir\"\r\n2021-10-09T08:22:03Z Bitcoin Core version v22.99.0-unk (release build)\r\n2021-10-09T08:22:03Z Assuming ancestors of block 0000000000004ae2f3896ca8ecd41c460a35bf6184e145d91558cece1c688a76 have valid signatures.\r\n2021-10-09T08:22:03Z Setting nMinimumChainWork=0000000000000000000000000000000000000000000005180c3bd8290da33a1a\r\n2021-10-09T08:22:03Z Using the 'standard' SHA256 implementation\r\n2021-10-09T08:22:03Z Default data directory C:\\Users\\hebasto\\AppData\\Roaming\\Bitcoin\r\n2021-10-09T08:22:03Z Using data directory C:\\dev\\fs_tests_â¿_ð\\datadir\\testnet3\r\n...\r\n```",
      "created_at" : "2021-10-09T08:30:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-939256269",
      "id" : 939256269,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843--nN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939256269/reactions"
      },
      "updated_at" : "2021-10-09T08:30:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939256269",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Why not using the updated build instructions?\r\n\r\nI forgot they have changed. Thanks for letting me know.\r\n\r\nAnyway, I have re-compiled the source code (with merged master) and now it works for me with `C:\\dev\\fs_tests_â¿_ð\\datadir` path. So it looks good. (I'm not entirely sure what was wrong the first time. Sorry for confusion.)",
      "created_at" : "2021-10-09T09:56:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-939268870",
      "id" : 939268870,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843_BsG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939268870/reactions"
      },
      "updated_at" : "2021-10-09T09:56:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939268870",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 6544ea5035268025207d2402db2f7d90fde947a6",
      "created_at" : "2021-10-09T09:57:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-939268971",
      "id" : 939268971,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5843_Btr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939268971/reactions"
      },
      "updated_at" : "2021-10-09T09:57:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939268971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r726544489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726544489"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I prefer to overwrite the path constructor function and `.string()` to make it compatible with UTF-8 and remain the implicit conversion function. Because `u8string()` would return `std::u8string` in C++20 and I don't think it is a nice idea to handle another type of string. There is no simple way to convert between `std::string` and `std::u8string`. \r\n\r\nIf we want to avoid `std::u8string` showing in the code when we bump to C++20, the C++ standard behavior must change anyway. Isn't it be simpler to modify the path constructor and `.string()` function? Also, we don't have to change that many codes.",
      "commit_id" : "6544ea5035268025207d2402db2f7d90fde947a6",
      "created_at" : "2021-10-11T20:18:37Z",
      "diff_hunk" : "@@ -15,7 +15,55 @@\n #include <boost/filesystem/fstream.hpp>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs {\n+\n+using namespace boost::filesystem;\n+\n+/**\n+ * Path class wrapper to prepare application code for transition from\n+ * boost::filesystem::path to std::filesystem::path.\n+ *\n+ * The new std::filesystem::path class lacks imbue functionality boost provided\n+ * to make implicit path/string functionality work safely on windows, so this\n+ * class hides the unsafe methods, and provides explicit PathToString /\n+ * PathFromString functions which be needed after the transition from boost to\n+ * convert to native path strings, and explicit u8string / u8path functions to\n+ * convert to UTF-8 strings. See\n+ * https://github.com/bitcoin/bitcoin/pull/20744#issuecomment-916627496 for more\n+ * information about the boost path transition and windows encoding ambiguities.\n+ */\n+class path : public boost::filesystem::path\n+{\n+public:\n+    using boost::filesystem::path::path;\n+    path(boost::filesystem::path path) : boost::filesystem::path::path(std::move(path)) {}\n+    path(const std::string& string) = delete;\n+    path& operator=(std::string&) = delete;\n+    std::string string() const = delete;\n+    std::string u8string() const { return boost::filesystem::path::string(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r726544489",
      "id" : 726544489,
      "in_reply_to_id" : 707217372,
      "line" : 59,
      "node_id" : "PRRC_kwDOABII584rTjBp",
      "original_commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "original_line" : 59,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/fs.h",
      "position" : 48,
      "pull_request_review_id" : 776621473,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726544489/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-11T21:05:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726544489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r726678503"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726678503"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22937#discussion_r726544489\r\n\r\n> I prefer to overwrite the path constructor function and `.string()` to make it compatible with UTF-8 and remain the implicit conversion function. \r\n\r\nI think allowing implicit conversion will probably be a good idea a few years in the future when we can require the UTF-8 code page on windows, but right now in October 2021 implicit conversion is unsafe. The fact that it took 5 developers 1 month and 93 comments on this PR to discover all the unsafe implicit conversions that would happen after dropping `imbue` in  #20744 is good evidence that implicit conversions are not safe right now. I think the history of all your past fixes in #15468, #14192, #14128, #13888, #13886, #13883, #13878, #13877, #13866, #13787, and #13734 are another lesson on why we should not silently convert unicode objects to and from strings using the windows code page.\r\n\r\nThis PR does not get in the way of enabling implicit conversions in the future. The C++ standard authors obviously think that implicit conversions can be safe, and I'd agree with them as long as implicit conversions use some variant of UTF-8 instead of the current windows code page. The boost developers also thought implicit conversions were safe, but unlike the C++ standard `path` class, the boost `path` class actually provided a way to control the implicit conversions using `imbue`.\r\n\r\nWe could also go the opposite direction on implicit conversions the future and limit them even more, see https://github.com/bitcoin/bitcoin/pull/22937#discussion_r717658284. But this PR is just trying to take a middle path and fix existing bugs that would happen with `imbue` dropped, while providing a good margin of safety to prevent new bugs being introduced.\r\n\r\n> Because `u8string()` would return `std::u8string` in C++20 and I don't think it is a nice idea to handle another type of string. There is no simple way to convert between `std::string` and `std::u8string`.\r\n> \r\n> If we want to avoid `std::u8string` showing in the code when we bump to C++20, the C++ standard behavior must change anyway. Isn't it be simpler to modify the path constructor and `.string()` function? Also, we don't have to change that many codes.\r\n\r\nI don't think these comments about the `u8string()` method are related to whether implicit conversion should be allowed. This PR is just defining the `u8string()` method temporarily because boost path class doesn't provide one, and this will be dropped in #20744 because the standard path class does provides one.\r\n\r\nThis PR does add 7 calls to the `u8string()` method (only in Qt and RPC code) and these calls should be able to take advantage of the new `std::u8string` type whenever that update happens.",
      "commit_id" : "6544ea5035268025207d2402db2f7d90fde947a6",
      "created_at" : "2021-10-12T00:41:15Z",
      "diff_hunk" : "@@ -15,7 +15,55 @@\n #include <boost/filesystem/fstream.hpp>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs {\n+\n+using namespace boost::filesystem;\n+\n+/**\n+ * Path class wrapper to prepare application code for transition from\n+ * boost::filesystem::path to std::filesystem::path.\n+ *\n+ * The new std::filesystem::path class lacks imbue functionality boost provided\n+ * to make implicit path/string functionality work safely on windows, so this\n+ * class hides the unsafe methods, and provides explicit PathToString /\n+ * PathFromString functions which be needed after the transition from boost to\n+ * convert to native path strings, and explicit u8string / u8path functions to\n+ * convert to UTF-8 strings. See\n+ * https://github.com/bitcoin/bitcoin/pull/20744#issuecomment-916627496 for more\n+ * information about the boost path transition and windows encoding ambiguities.\n+ */\n+class path : public boost::filesystem::path\n+{\n+public:\n+    using boost::filesystem::path::path;\n+    path(boost::filesystem::path path) : boost::filesystem::path::path(std::move(path)) {}\n+    path(const std::string& string) = delete;\n+    path& operator=(std::string&) = delete;\n+    std::string string() const = delete;\n+    std::string u8string() const { return boost::filesystem::path::string(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r726678503",
      "id" : 726678503,
      "in_reply_to_id" : 707217372,
      "line" : 59,
      "node_id" : "PRRC_kwDOABII584rUDvn",
      "original_commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "original_line" : 59,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/fs.h",
      "position" : 48,
      "pull_request_review_id" : 776793089,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726678503/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-12T00:44:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726678503",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 5b7210c8745d9572fe94620f848d4ee1304c91a7<br>(master) | commit 143235bb9e8bdae1f06c73bb40432a5dcef7fed5<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`c79a21dc3da6e71b...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/SHA256SUMS.part) | [`b983ebfb72b583d8...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/SHA256SUMS.part) |\n| *-aarch64-linux-gnu-debug.tar.gz | [`108b2ef989bd0d35...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-aarch64-linux-gnu-debug.tar.gz) | [`3898376d7605da5d...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-aarch64-linux-gnu-debug.tar.gz) |\n| *-aarch64-linux-gnu.tar.gz | [`a5bacdca50e2c3f0...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-aarch64-linux-gnu.tar.gz) | [`8a95a295c0788b6a...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-aarch64-linux-gnu.tar.gz) |\n| *-arm-linux-gnueabihf-debug.tar.gz | [`b21f70b81f75b1f6...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-arm-linux-gnueabihf-debug.tar.gz) | [`2a6531d4ec7722d0...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-arm-linux-gnueabihf-debug.tar.gz) |\n| *-arm-linux-gnueabihf.tar.gz | [`6c79c07aa1d2df22...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-arm-linux-gnueabihf.tar.gz) | [`08265d99eab44622...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-arm-linux-gnueabihf.tar.gz) |\n| *-osx-unsigned.dmg | [`e15275439c514402...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-osx-unsigned.dmg) | [`fe44836857a69d76...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-osx-unsigned.dmg) |\n| *-osx-unsigned.tar.gz | [`23080798bd4790d0...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-osx-unsigned.tar.gz) | [`54e7d3c2230ef7bd...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-osx-unsigned.tar.gz) |\n| *-osx64.tar.gz | [`f4afcac2e217616d...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-osx64.tar.gz) | [`9cbeb8b52d026dee...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-osx64.tar.gz) |\n| *-powerpc64-linux-gnu-debug.tar.gz | [`7bb92bb01f337a75...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-powerpc64-linux-gnu-debug.tar.gz) | [`7995f70142a230c2...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-powerpc64-linux-gnu-debug.tar.gz) |\n| *-powerpc64-linux-gnu.tar.gz | [`085787f59f3c1a58...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-powerpc64-linux-gnu.tar.gz) | [`dad8aef36d96bec4...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-powerpc64-linux-gnu.tar.gz) |\n| *-powerpc64le-linux-gnu-debug.tar.gz | [`2732fa036e1ba621...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-powerpc64le-linux-gnu-debug.tar.gz) | [`1cae331b80b8d374...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-powerpc64le-linux-gnu-debug.tar.gz) |\n| *-powerpc64le-linux-gnu.tar.gz | [`495e1c10d8950c1a...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-powerpc64le-linux-gnu.tar.gz) | [`30347fbdb5a1f1de...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-powerpc64le-linux-gnu.tar.gz) |\n| *-riscv64-linux-gnu-debug.tar.gz | [`82c896f2e942879b...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-riscv64-linux-gnu-debug.tar.gz) | [`39b532b2edc99221...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-riscv64-linux-gnu-debug.tar.gz) |\n| *-riscv64-linux-gnu.tar.gz | [`ebc9d158e7fe286e...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-riscv64-linux-gnu.tar.gz) | [`8f76c93958777a8d...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-riscv64-linux-gnu.tar.gz) |\n| *-win-unsigned.tar.gz | [`4a871e218e240ccb...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-win-unsigned.tar.gz) | [`70f7493a26b2abd0...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-win-unsigned.tar.gz) |\n| *-win64-debug.zip | [`0ac6d7beea9e7a67...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-win64-debug.zip) | [`f108c4ac98fb6df1...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-win64-debug.zip) |\n| *-win64-setup-unsigned.exe | [`73d5ba8460a67851...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-win64-setup-unsigned.exe) | [`be36ccc82ed58c0b...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-win64-setup-unsigned.exe) |\n| *-win64.zip | [`104adfb4cd021131...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-win64.zip) | [`1e316e8ba80be236...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-win64.zip) |\n| *-x86_64-linux-gnu-debug.tar.gz | [`896c0ecaefff84eb...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-x86_64-linux-gnu-debug.tar.gz) | [`baab942104ce73f7...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-x86_64-linux-gnu-debug.tar.gz) |\n| *-x86_64-linux-gnu.tar.gz | [`9cc9de13c910b2a4...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d-x86_64-linux-gnu.tar.gz) | [`ad1c11a6bd713e48...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b-x86_64-linux-gnu.tar.gz) |\n| *.tar.gz | [`0d51a99bd81f38ec...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/bitcoin-5b7210c8745d.tar.gz) | [`eba1905c58e6ac72...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/bitcoin-143235bb9e8b.tar.gz) |\n| guix_build.log | [`463c2d4bbaa53638...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/guix_build.log) | [`3df07f1a2625978b...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/guix_build.log) |\n| guix_build.log.diff |  | [`e06b14caa048bdb8...`](https://drahtbot.space/guix/bitcoin/bitcoin/143235bb9e8bdae1f06c73bb40432a5dcef7fed5/guix_build.log.diff) |\n\n",
      "created_at" : "2021-10-14T14:56:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-943439492",
      "id" : 943439492,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5844O76E",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/943439492/reactions"
      },
      "updated_at" : "2021-10-14T14:56:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/943439492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK 6544ea5035268025207d2402db2f7d90fde947a6",
      "created_at" : "2021-10-15T08:01:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-944083301",
      "id" : 944083301,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5844RZFl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/944083301/reactions"
      },
      "updated_at" : "2021-10-15T08:01:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/944083301",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
