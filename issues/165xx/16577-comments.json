[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r312697097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697097"
         }
      },
      "author_association" : "MEMBER",
      "body" : "NACK this hunk, it only changes formatting.",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-08-10T09:26:34Z",
      "diff_hunk" : "@@ -734,17 +734,21 @@ class CBufferedFile\n             return false;\n         size_t nBytes = fread((void*)&vchBuf[pos], 1, readNow, src);\n         if (nBytes == 0) {\n-            throw std::ios_base::failure(feof(src) ? \"CBufferedFile::Fill: end of file\" : \"CBufferedFile::Fill: fread failed\");\n-        } else {\n-            nSrcPos += nBytes;\n-            return true;\n+            throw std::ios_base::failure(feof(src) ?",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r312697097",
      "id" : 312697097,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5NzA5Nw==",
      "original_commit_id" : "b1aee230574a7eb72ca5101458fc9ef4a957d626",
      "original_position" : 8,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 273418979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T13:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697097",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r312697122"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697122"
         }
      },
      "author_association" : "MEMBER",
      "body" : "NACK this hunk, only splits the line in 2 lines.",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-08-10T09:27:36Z",
      "diff_hunk" : "@@ -734,17 +734,21 @@ class CBufferedFile\n             return false;\n         size_t nBytes = fread((void*)&vchBuf[pos], 1, readNow, src);\n         if (nBytes == 0) {\n-            throw std::ios_base::failure(feof(src) ? \"CBufferedFile::Fill: end of file\" : \"CBufferedFile::Fill: fread failed\");\n-        } else {\n-            nSrcPos += nBytes;\n-            return true;\n+            throw std::ios_base::failure(feof(src) ?\n+                \"CBufferedFile::Fill: end of file\" :\n+                \"CBufferedFile::Fill: fread failed\");\n         }\n+        nSrcPos += nBytes;\n+        return true;\n     }\n \n public:\n     CBufferedFile(FILE *fileIn, uint64_t nBufSize, uint64_t nRewindIn, int nTypeIn, int nVersionIn) :\n-        nType(nTypeIn), nVersion(nVersionIn), nSrcPos(0), nReadPos(0), nReadLimit(std::numeric_limits<uint64_t>::max()), nRewind(nRewindIn), vchBuf(nBufSize, 0)\n+        nType(nTypeIn), nVersion(nVersionIn), nSrcPos(0), nReadPos(0),\n+        nReadLimit(std::numeric_limits<uint64_t>::max()), nRewind(nRewindIn), vchBuf(nBufSize, 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r312697122",
      "id" : 312697122,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5NzEyMg==",
      "original_commit_id" : "b1aee230574a7eb72ca5101458fc9ef4a957d626",
      "original_position" : 20,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 273418979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T13:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697122",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r312697302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697302"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd keep `else`s.",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-08-10T09:35:07Z",
      "diff_hunk" : "@@ -802,16 +804,19 @@ class CBufferedFile\n \n     //! rewind to a given reading position\n     bool SetPos(uint64_t nPos) {\n-        nReadPos = nPos;\n-        if (nReadPos + nRewind < nSrcPos) {\n-            nReadPos = nSrcPos - nRewind;\n+        size_t bufsize = vchBuf.size();\n+        if (nSrcPos > bufsize && nPos < nSrcPos - bufsize) {\n+            // rewinding too far, rewind as far as possible\n+            nReadPos = nSrcPos - bufsize;\n             return false;\n-        } else if (nReadPos > nSrcPos) {\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r312697302",
      "id" : 312697302,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5NzMwMg==",
      "original_commit_id" : "b1aee230574a7eb72ca5101458fc9ef4a957d626",
      "original_position" : 49,
      "path" : "src/streams.h",
      "position" : 43,
      "pull_request_review_id" : 273418979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T13:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697302",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r312697551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697551"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is wrong, `vchBuf.size()` if constant and the actual read position is obtained from `nReadPos % vchBuf.size()` - it's a ring buffer.",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-08-10T09:44:54Z",
      "diff_hunk" : "@@ -802,16 +804,19 @@ class CBufferedFile\n \n     //! rewind to a given reading position\n     bool SetPos(uint64_t nPos) {\n-        nReadPos = nPos;\n-        if (nReadPos + nRewind < nSrcPos) {\n-            nReadPos = nSrcPos - nRewind;\n+        size_t bufsize = vchBuf.size();\n+        if (nSrcPos > bufsize && nPos < nSrcPos - bufsize) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r312697551",
      "id" : 312697551,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5NzU1MQ==",
      "original_commit_id" : "b1aee230574a7eb72ca5101458fc9ef4a957d626",
      "original_position" : 44,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 273418979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T13:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697551",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r312790825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312790825"
         }
      },
      "author_association" : "NONE",
      "body" : "I checked this carefully, and I'm pretty sure it's right, please check again. I did simplify it slightly (without changing the behavior) in the second commit; it's now like this:\r\n```\r\nif (nPos + bufsize < nSrcPos) {\r\n```\r\nThis says that the distance from the new (requested) read position, `nPos`, to the source pointer, `nSrcPos` must be no greater than `bufsize`. If `nPos` is further back than that, it will be pointing to bytes from a _later_ write pass across the buffer and will get data that's too new. Maybe a small example will help. Suppose the file consists of `a b c d e f g ...` and the buffer is 5 bytes. After reading `g` (total of 7 bytes) from the file into the ring buffer, the buffer looks like this:\r\n```\r\n[ f g c d e ]\r\n      ^\r\n      nSrcPos = 7\r\n```\r\nThe `nReadPos` (file read position) can be in the range 2 through 7 and we will get correct data. If `nReadPos` is _less_ than 2, let's say it's 1, then reading at that position should return `b` but will instead will return `g`, which is incorrect (`g` is too new). The smallest `nReadPos` can be is 2, which is 7 - 5 (`nSrcPos` - `bufsize`).\r\n\r\nThe existing `SetPos()` is wrong; it should not depend on `nRewind`. That variable is only needed during filling, and prevents `nSrcPos` from getting too far ahead of `nReadPos`, because if that happens, then `nReadPos` can't back up. So, in this little example,  if `nRewind` is 2, then `Fill()` will not let `nSrcPos` to get more than 5 (buffer size - rewind size) ahead of `nReadPos`. But, again, `nRewind` has no relevance to `SetPos()`.",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-08-12T06:32:32Z",
      "diff_hunk" : "@@ -802,16 +804,19 @@ class CBufferedFile\n \n     //! rewind to a given reading position\n     bool SetPos(uint64_t nPos) {\n-        nReadPos = nPos;\n-        if (nReadPos + nRewind < nSrcPos) {\n-            nReadPos = nSrcPos - nRewind;\n+        size_t bufsize = vchBuf.size();\n+        if (nSrcPos > bufsize && nPos < nSrcPos - bufsize) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r312790825",
      "id" : 312790825,
      "in_reply_to_id" : 312697551,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjc5MDgyNQ==",
      "original_commit_id" : "b1aee230574a7eb72ca5101458fc9ef4a957d626",
      "original_position" : 44,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 273523795,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T13:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312790825",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "The second commit also adds a randomized test. It's pretty common for the kind of code under scrutiny here (the `CBufferedFile` object) to have subtle off-by-one and boundary condition bugs. A functional unit test like the one in the first commit is good, but it's hard to be sure the test covers all possible strange conditions. A random test will try many weird things that no person would ever think of. \r\n\r\nI ran this random test several million iterations, which makes me extremely confident that the code under test is correct. Of course, whether the test code itself is correct is very crucial! So please review the test code, thanks.",
      "created_at" : "2019-08-12T06:39:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#issuecomment-520312788",
      "id" : 520312788,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMDMxMjc4OA==",
      "updated_at" : "2019-08-12T06:39:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/520312788",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@LarryRuane I haven't looked at your changes yet but wanted to mention that you might want to check using `contrib/devtools/test_deterministic_coverage.sh` that the unit test is line coverage deterministic after this change.\r\n\r\nLine coverage determinism is a necessary condition for meaningful line coverage measuring :-)",
      "created_at" : "2019-08-12T12:11:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#issuecomment-520399374",
      "id" : 520399374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMDM5OTM3NA==",
      "updated_at" : "2019-08-12T12:11:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/520399374",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@practicalswift, thanks, I don't understand that script yet, but you reminded me that I have a question about the random test I wrote. It can trivially be made deterministic by seeding the random number generator at the beginning of the test. Would that be desirable, or not? It seems to me there are advantages either way. If the test is deterministic, then every time CI runs, it's not testing anything new; there could be a bug that by chance isn't uncovered (but would be by a different seed). On the other hand, if the test is non-deterministic, it's possible that a CI run would randomly fail for reasons having nothing to do with the PR that's causing CI to run. That would be very mysterious (at least until investigated).\r\n\r\nIf I had to decide, I'd say it's better for the test to be deterministic. But I don't know what the conventions are here. (Apologies in advance if this is documented somewhere.)\r\n\r\nI'll also try to understand the coverage tool, looks very interesting, thank you.",
      "created_at" : "2019-08-12T14:32:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#issuecomment-520450065",
      "id" : 520450065,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMDQ1MDA2NQ==",
      "updated_at" : "2019-08-12T14:32:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/520450065",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r313742947"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/313742947"
         }
      },
      "author_association" : "MEMBER",
      "body" : "When testing this I encountered the following UBSan warning:\r\n\r\n```\r\ntest/streams_tests.cpp:396:29: runtime error: implicit conversion from type 'size_t' (aka 'unsigned long') of value 132 (64-bit, unsigned) to type 'char' changed the value to -124 (8-bit, signed)\r\n```",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-08-14T07:43:42Z",
      "diff_hunk" : "@@ -202,4 +203,224 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n             std::string(ds.begin(), ds.end()));\n }\n \n+BOOST_AUTO_TEST_CASE(streams_buffered_file)\n+{\n+    FILE *file = fsbridge::fopen(\"streams_test_tmp\", \"w+b\");\n+    // The value at each offset is the offset.\n+    for (uint8_t i = 0; i < 40; ++i) {\n+        fwrite(&i, 1, 1, file);\n+    }\n+    rewind(file);\n+\n+    // The buffer is 25 bytes, allow rewinding 10 bytes.\n+    CBufferedFile bf(file, 25, 10, 222, 333);\n+    BOOST_CHECK(!bf.eof());\n+\n+    // These two members have no functional effect.\n+    BOOST_CHECK_EQUAL(bf.GetType(), 222);\n+    BOOST_CHECK_EQUAL(bf.GetVersion(), 333);\n+\n+    uint8_t i;\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 0);\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 1);\n+\n+    // After reading bytes 0 and 1, we're positioned at 2.\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 2);\n+\n+    // Rewind to offset 0, ok (within the 10 byte window).\n+    BOOST_CHECK(bf.SetPos(0));\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 0);\n+\n+    // We can go forward to where we've been, but beyond may fail.\n+    BOOST_CHECK(bf.SetPos(2));\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 2);\n+\n+    // If you know the maximum number of bytes that should be\n+    // read to deserialize the variable, you can limit the read\n+    // extent. The current file offset is 3, so the following\n+    // SetLimit() allows zero bytes to be read.\n+    BOOST_CHECK(bf.SetLimit(3));\n+    try {\n+        bf >> i;\n+        BOOST_CHECK(false);\n+    } catch (const std::exception& e) {\n+        BOOST_CHECK(strstr(e.what(),\n+            \"Read attempted past buffer limit\") != nullptr);\n+    }\n+    // The default argument removes the limit completely.\n+    BOOST_CHECK(bf.SetLimit());\n+    // The read position should still be at 3 (no change).\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 3);\n+\n+    // Read from current offset, 3, forward until position 10.\n+    for (i = 3; i < 10; ++i) {\n+        bf >> i;\n+        BOOST_CHECK_EQUAL(i, i);\n+    }\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 10);\n+\n+    // We're guaranteed (just barely) to be able to rewind to zero.\n+    BOOST_CHECK(bf.SetPos(0));\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 0);\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 0);\n+\n+    // We can set the position forward again up to the farthest\n+    // into the stream we've been, but no farther. (Attempting\n+    // to go farther may succeed, but it's not guaranteed.)\n+    BOOST_CHECK(bf.SetPos(10));\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 10);\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 11);\n+\n+    // Now it's only guaranteed that we can rewind to offset 1\n+    // (current read position, 11, minus rewind amount, 10).\n+    BOOST_CHECK(bf.SetPos(1));\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 1);\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 1);\n+\n+    // We can stream into large variables, even larger than\n+    // the buffer size.\n+    BOOST_CHECK(bf.SetPos(11));\n+    {\n+        uint8_t a[40-11];\n+        bf >> a;\n+        for (size_t j = 0; j < sizeof(a); ++j) {\n+            BOOST_CHECK_EQUAL(a[j], 11+j);\n+        }\n+    }\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 40);\n+\n+    // We've read the entire file, the next read should throw.\n+    try {\n+        bf >> i;\n+        BOOST_CHECK(false);\n+    } catch (const std::exception& e) {\n+        BOOST_CHECK(strstr(e.what(),\n+            \"CBufferedFile::Fill: end of file\") != nullptr);\n+    }\n+    // Attempting to read beyond the end sets the EOF indicator.\n+    BOOST_CHECK(bf.eof());\n+\n+    // Still at offset 40, we can go back 10, to 30.\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 40);\n+    BOOST_CHECK(bf.SetPos(30));\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 30);\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 31);\n+\n+    // We can explicitly close the file, or the destructor will do it.\n+    bf.fclose();\n+\n+    fs::remove(\"streams_test_tmp\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n+{\n+    // fixed seed (reproducible test)\n+    SeedInsecureRand(true);\n+\n+    for (int rep = 0; rep < 50; ++rep) {\n+        FILE *file = fsbridge::fopen(\"streams_test_tmp\", \"w+b\");\n+        size_t fileSize = InsecureRandRange(256);\n+        for (uint8_t i = 0; i < fileSize; ++i) {\n+            fwrite(&i, 1, 1, file);\n+        }\n+        rewind(file);\n+\n+        size_t bufSize = InsecureRandRange(300)+1;\n+        size_t rewindSize = InsecureRandRange(bufSize);\n+        CBufferedFile bf(file, bufSize, rewindSize, 222, 333);\n+        size_t currentOffset = 0;\n+        size_t maxOffset = 0;\n+        for (int step = 0; step < 100; ++step) {\n+            if (currentOffset >= fileSize)\n+                break;\n+\n+            // We haven't read to the end of the file yet.\n+            BOOST_CHECK(!bf.eof());\n+            BOOST_CHECK_EQUAL(bf.GetPos(), currentOffset);\n+\n+            // The file consists of a series of objects of varying\n+            // sizes; the boundaries of the objects can interact\n+            // arbitrarily with the CBufferFile's internal buffer.\n+            // These first three cases simulate objects of various\n+            // sizes (1, 2, 5 bytes).\n+            switch (InsecureRandRange(5)) {\n+            case 0: {\n+                uint8_t a[1];\n+                if (currentOffset + 1 > fileSize)\n+                    continue;\n+                bf.SetLimit(currentOffset + 1);\n+                bf >> a;\n+                for (uint8_t i = 0; i < 1; ++i) {\n+                    BOOST_CHECK_EQUAL(a[i], currentOffset);\n+                    currentOffset++;\n+                }\n+                break;\n+            }\n+            case 1: {\n+                uint8_t a[2];\n+                if (currentOffset + 2 > fileSize)\n+                    continue;\n+                bf.SetLimit(currentOffset + 2);\n+                bf >> a;\n+                for (uint8_t i = 0; i < 2; ++i) {\n+                    BOOST_CHECK_EQUAL(a[i], currentOffset);\n+                    currentOffset++;\n+                }\n+                break;\n+            }\n+            case 2: {\n+                uint8_t a[5];\n+                if (currentOffset + 5 > fileSize)\n+                    continue;\n+                bf.SetLimit(currentOffset + 5);\n+                bf >> a;\n+                for (uint8_t i = 0; i < 5; ++i) {\n+                    BOOST_CHECK_EQUAL(a[i], currentOffset);\n+                    currentOffset++;\n+                }\n+                break;\n+            }\n+            case 3: {\n+                // Find a byte value (that is at or ahead of the current position).\n+                size_t find = currentOffset + InsecureRandRange(8);\n+                if (find >= fileSize)\n+                    find = fileSize - 1;\n+                bf.FindByte(find);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r313742947",
      "id" : 313742947,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzc0Mjk0Nw==",
      "original_commit_id" : "3c874f592183743c91e91ee9f4f14002b0c06d3f",
      "original_position" : 202,
      "path" : "src/test/streams_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 274715874,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T13:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/313742947",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It can trivially be made deterministic by seeding the random number generator at the beginning of the test. Would that be desirable, or not?\r\n\r\nDeterministic tests are preferred in this project. No one really investigates individual random CI failures because there tends to be a lot of spurious failures that have nothing to do with the code, but with unreliability of the Travis platform such as timeouts.",
      "created_at" : "2019-08-14T11:12:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#issuecomment-521203575",
      "id" : 521203575,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTIwMzU3NQ==",
      "updated_at" : "2019-08-14T11:12:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521203575",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think you have two options:\r\n\r\n* Pick a random seed, print/log it at the beginning of the test in some way\r\n* Pick a constant as the seed",
      "created_at" : "2019-08-14T11:43:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#issuecomment-521212158",
      "id" : 521212158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTIxMjE1OA==",
      "updated_at" : "2019-08-14T11:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521212158",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r314506490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314506490"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Does this test for an identity? Did you mean to use a different variable as  loop counter?",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-08-15T21:28:24Z",
      "diff_hunk" : "@@ -202,4 +202,167 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n             std::string(ds.begin(), ds.end()));\n }\n \n+BOOST_AUTO_TEST_CASE(streams_buffered_file)\n+{\n+    FILE *file = fsbridge::fopen(\"streams_test_tmp\", \"w+\");\n+    for (uint8_t i = 0; i < 80; ++i) {\n+        fwrite(&i, 1, 1, file);\n+    }\n+    rewind(file);\n+\n+    // The buffer is 25 bytes, allow rewinding 10 bytes.\n+    CBufferedFile bf(file, 25, 10, 222, 333);\n+    BOOST_CHECK(!bf.eof());\n+\n+    // These two members have no functional effect.\n+    BOOST_CHECK_EQUAL(bf.GetType(), 222);\n+    BOOST_CHECK_EQUAL(bf.GetVersion(), 333);\n+\n+    uint8_t i;\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 0);\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 1);\n+\n+    // We have read bytes 0 and 1, positioned at 2.\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 2);\n+\n+    // Rewind to offset 0, ok (within the 10 byte window.\n+    BOOST_CHECK(bf.SetPos(0));\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 0);\n+\n+    // We can go forward to where we've been, but beyond may fail.\n+    BOOST_CHECK(bf.SetPos(2));\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 2);\n+\n+    // Read from current offset, 3, forward until the buffer is full\n+    // (based on our knowledge of the object's internals).\n+    for (i = 3; i < 10; ++i) {\n+        bf >> i;\n+        BOOST_CHECK_EQUAL(i, i);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r314506490",
      "id" : 314506490,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDUwNjQ5MA==",
      "original_commit_id" : "b1aee230574a7eb72ca5101458fc9ef4a957d626",
      "original_position" : 43,
      "path" : "src/test/streams_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 275679980,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T13:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314506490",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hi, I am currently trying to understand `CBufferedFile` and the tests, both confuse me still :smiley:. Seems like substantial parts of `streams_buffered_file` test are added first and removed again in a later commit. Could you squash commits that fix errors in earlier ones?",
      "created_at" : "2019-08-15T21:30:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#issuecomment-521804558",
      "id" : 521804558,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTgwNDU1OA==",
      "updated_at" : "2019-08-15T21:30:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521804558",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r314892832"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314892832"
         }
      },
      "author_association" : "NONE",
      "body" : "@mzumsande, good catch, very silly of me! Fixed in the latest commit, 166358663eff37ea59ce1ec2f74685a46187e926.",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-08-16T21:16:36Z",
      "diff_hunk" : "@@ -202,4 +202,167 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n             std::string(ds.begin(), ds.end()));\n }\n \n+BOOST_AUTO_TEST_CASE(streams_buffered_file)\n+{\n+    FILE *file = fsbridge::fopen(\"streams_test_tmp\", \"w+\");\n+    for (uint8_t i = 0; i < 80; ++i) {\n+        fwrite(&i, 1, 1, file);\n+    }\n+    rewind(file);\n+\n+    // The buffer is 25 bytes, allow rewinding 10 bytes.\n+    CBufferedFile bf(file, 25, 10, 222, 333);\n+    BOOST_CHECK(!bf.eof());\n+\n+    // These two members have no functional effect.\n+    BOOST_CHECK_EQUAL(bf.GetType(), 222);\n+    BOOST_CHECK_EQUAL(bf.GetVersion(), 333);\n+\n+    uint8_t i;\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 0);\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 1);\n+\n+    // We have read bytes 0 and 1, positioned at 2.\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 2);\n+\n+    // Rewind to offset 0, ok (within the 10 byte window.\n+    BOOST_CHECK(bf.SetPos(0));\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 0);\n+\n+    // We can go forward to where we've been, but beyond may fail.\n+    BOOST_CHECK(bf.SetPos(2));\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 2);\n+\n+    // Read from current offset, 3, forward until the buffer is full\n+    // (based on our knowledge of the object's internals).\n+    for (i = 3; i < 10; ++i) {\n+        bf >> i;\n+        BOOST_CHECK_EQUAL(i, i);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r314892832",
      "id" : 314892832,
      "in_reply_to_id" : 314506490,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDg5MjgzMg==",
      "original_commit_id" : "b1aee230574a7eb72ca5101458fc9ef4a957d626",
      "original_position" : 43,
      "path" : "src/test/streams_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 276173610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T13:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314892832",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Could you squash commits that fix errors in earlier ones?\r\n\r\nYes, I ended up squashing down to a single commit, because there really are no phases or stages to this PR. Thanks for reviewing.",
      "created_at" : "2019-08-16T21:19:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#issuecomment-522154700",
      "id" : 522154700,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjE1NDcwMA==",
      "updated_at" : "2019-08-16T21:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522154700",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r315253054"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315253054"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please keep the `{}`, according to the [coding style](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c): \r\n\"If an if only has a single-statement then-clause, it can appear on the same line as the if, without braces. In every other case, braces are required, and the then and else clauses must appear correctly indented on a new line.\"\r\n(some cases below, too)",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-08-19T14:51:00Z",
      "diff_hunk" : "@@ -733,18 +733,18 @@ class CBufferedFile\n         if (readNow == 0)\n             return false;\n         size_t nBytes = fread((void*)&vchBuf[pos], 1, readNow, src);\n-        if (nBytes == 0) {\n+        if (nBytes == 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r315253054",
      "id" : 315253054,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTI1MzA1NA==",
      "original_commit_id" : "166358663eff37ea59ce1ec2f74685a46187e926",
      "original_position" : 5,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 276613237,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T13:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315253054",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r315269060"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315269060"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I also think that the first check in `SetPos()` is incorrect. This does not lead to problems in production thanks to the initialization values of `CBufferedFile` `vchBuf.size()=2*MAX_BLOCK_SERIALIZED_SIZE=8000000` and `nRewind=MAX_BLOCK_SERIALIZED_SIZE+8=4000008` in `LoadExternalBlockFile()`.\r\n\r\nAccordingly, `nSrcPos = vchBuf.size() - nRewind = 3999992 < nRewind` after the first buffer fill and  the (erroneous) condition `nReadPos + nRewind < nSrcPos` in `SetPos()` is never `true`.\r\n\r\nWhen I change  `LoadExternalBlockFile()` slightly by initializing CBufferedFile with `nRewind= MAX_BLOCK_SERIALIZED_SIZE-8` instead of `MAX_BLOCK_SERIALIZED_SIZE+8`, the functional test `feature_reindex` fails because now above condition can be `true`. Since all blocks in this test are much smaller than the maximum block size, this shouldn't happen.",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-08-19T15:20:20Z",
      "diff_hunk" : "@@ -802,16 +804,19 @@ class CBufferedFile\n \n     //! rewind to a given reading position\n     bool SetPos(uint64_t nPos) {\n-        nReadPos = nPos;\n-        if (nReadPos + nRewind < nSrcPos) {\n-            nReadPos = nSrcPos - nRewind;\n+        size_t bufsize = vchBuf.size();\n+        if (nSrcPos > bufsize && nPos < nSrcPos - bufsize) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r315269060",
      "id" : 315269060,
      "in_reply_to_id" : 312697551,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTI2OTA2MA==",
      "original_commit_id" : "b1aee230574a7eb72ca5101458fc9ef4a957d626",
      "original_position" : 44,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 276633272,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T13:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315269060",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r315273058"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315273058"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would be nice to have a test case for \"rewinding too far\" in the test `streams_buffered_file` as well, since this code was changed.",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-08-19T15:27:45Z",
      "diff_hunk" : "@@ -802,16 +800,19 @@ class CBufferedFile\n \n     //! rewind to a given reading position\n     bool SetPos(uint64_t nPos) {\n-        nReadPos = nPos;\n-        if (nReadPos + nRewind < nSrcPos) {\n-            nReadPos = nSrcPos - nRewind;\n+        size_t bufsize = vchBuf.size();\n+        if (nPos + bufsize < nSrcPos) {\n+            // rewinding too far, rewind as far as possible\n+            nReadPos = nSrcPos - bufsize;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r315273058",
      "id" : 315273058,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTI3MzA1OA==",
      "original_commit_id" : "166358663eff37ea59ce1ec2f74685a46187e926",
      "original_position" : 43,
      "path" : "src/streams.h",
      "position" : 40,
      "pull_request_review_id" : 276638256,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T13:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315273058",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for squashing - I agree that this fixes a bug, which hasn't lead to errors because of how `CBufferedFile` is initialized in `LoadExternalBlockFile()` (see comment above). Tests look good to me, will look at them in more detail (and also perform a reindex on testnet) in the next days.",
      "created_at" : "2019-08-19T15:33:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#issuecomment-522630832",
      "id" : 522630832,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjYzMDgzMg==",
      "updated_at" : "2019-08-19T15:33:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522630832",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r315408084"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315408084"
         }
      },
      "author_association" : "NONE",
      "body" : "Done, https://github.com/bitcoin/bitcoin/pull/16577/commits/723baf279ecf42c42c4c73378e6bc175ae07b631.",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-08-19T20:56:55Z",
      "diff_hunk" : "@@ -802,16 +800,19 @@ class CBufferedFile\n \n     //! rewind to a given reading position\n     bool SetPos(uint64_t nPos) {\n-        nReadPos = nPos;\n-        if (nReadPos + nRewind < nSrcPos) {\n-            nReadPos = nSrcPos - nRewind;\n+        size_t bufsize = vchBuf.size();\n+        if (nPos + bufsize < nSrcPos) {\n+            // rewinding too far, rewind as far as possible\n+            nReadPos = nSrcPos - bufsize;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r315408084",
      "id" : 315408084,
      "in_reply_to_id" : 315273058,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTQwODA4NA==",
      "original_commit_id" : "166358663eff37ea59ce1ec2f74685a46187e926",
      "original_position" : 43,
      "path" : "src/streams.h",
      "position" : 40,
      "pull_request_review_id" : 276810490,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T13:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315408084",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r315459818"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315459818"
         }
      },
      "author_association" : "NONE",
      "body" : "@mzumsande, it's broken even with the current production initialization values.  I made a temporary branch, https://github.com/LarryRuane/bitcoin/commit/bc9c987300782a7881edaabf7b7c5463a7688041, that simulates, after reading each block (during reindexing), what would happen if we really did need to rewind. (This temp branch doesn't include the changes from this PR.) `bitcoind --reindex` failed pretty quickly (at line 4405). \r\n\r\nThe temp branch actually verifies two things, (1) the call to `SetPos()` returns `true` (the production code doesn't look at the return value), which means that the requested position was accommodated (as it should always be in the current context), and, (2), after rewinding, we get the expected data (by reading one byte).\r\n\r\nI ran the same test with the code in the current PR's branch, and it doesn't fail.\r\n\r\nI think the easiest way to understand why the current code is broken is to note that `Fill()` can push `nSrcPos` far ahead of `nReadPos`. For best efficiency,`Fill()` always reads as much as it can from the file in a single read, so if there's a lot of \"runway\" ahead of it (lots of space to the end of the buffer), it will read a lot. It may not go quite to the end of the buffer, if doing so would violate the rewind guarantee, but it can go much farther ahead of `nReadPos` than the rewind amount. Now look again at the current `SetPos()`:\r\n```\r\nif (nReadPos + nRewind < nSrcPos) {\r\n    nReadPos = nSrcPos - nRewind;\r\n    return false;\r\n}\r\n```\r\nThis condition could easily be true if `nSrcPos` has gotten far ahead of `nReadPos`. But that doesn't mean that `nReadPos` needs to be adjusted. Actually, this code could move `nReadPos` beyond the maximum position it's ever had, meaning that it's skipping data! You're at the farthest position you've ever reached, say, offset 40, and you request to rewind to position 35, and you end up at position 45! The condition is just wrong.",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-08-20T00:01:07Z",
      "diff_hunk" : "@@ -802,16 +804,19 @@ class CBufferedFile\n \n     //! rewind to a given reading position\n     bool SetPos(uint64_t nPos) {\n-        nReadPos = nPos;\n-        if (nReadPos + nRewind < nSrcPos) {\n-            nReadPos = nSrcPos - nRewind;\n+        size_t bufsize = vchBuf.size();\n+        if (nSrcPos > bufsize && nPos < nSrcPos - bufsize) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r315459818",
      "id" : 315459818,
      "in_reply_to_id" : 312697551,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTQ1OTgxOA==",
      "original_commit_id" : "b1aee230574a7eb72ca5101458fc9ef4a957d626",
      "original_position" : 44,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 276873001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T13:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315459818",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2019-08-24T05:49:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#issuecomment-524523033",
      "id" : 524523033,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDUyMzAzMw==",
      "updated_at" : "2019-08-25T14:44:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524523033",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Looks good to me, thanks for adding the extensive testing.\r\n\r\nACK ~after squash.~ efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-09-10T08:55:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#issuecomment-529840837",
      "id" : 529840837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyOTg0MDgzNw==",
      "updated_at" : "2019-09-10T18:06:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529840837",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r322981079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322981079"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You are right, I was more trying to understand why reindexing currently works in spite of the wrong condition. With different initialization values even no-rewind uses of `SetPos` like `SetPos(current_position)` could fail.",
      "commit_id" : "efd2474d17098c754367b844ec646ebececc7c74",
      "created_at" : "2019-09-10T21:58:17Z",
      "diff_hunk" : "@@ -802,16 +804,19 @@ class CBufferedFile\n \n     //! rewind to a given reading position\n     bool SetPos(uint64_t nPos) {\n-        nReadPos = nPos;\n-        if (nReadPos + nRewind < nSrcPos) {\n-            nReadPos = nSrcPos - nRewind;\n+        size_t bufsize = vchBuf.size();\n+        if (nSrcPos > bufsize && nPos < nSrcPos - bufsize) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#discussion_r322981079",
      "id" : 322981079,
      "in_reply_to_id" : 312697551,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjk4MTA3OQ==",
      "original_commit_id" : "b1aee230574a7eb72ca5101458fc9ef4a957d626",
      "original_position" : 44,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 286458997,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577",
      "updated_at" : "2019-09-10T21:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322981079",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I had intended to follow up earlier on my last comment, ACK efd2474d17098c754367b844ec646ebececc7c74. I reviewed the code, ran tests and did a successful reindex on testnet with this branch.",
      "created_at" : "2019-09-10T22:00:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577#issuecomment-530137395",
      "id" : 530137395,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMDEzNzM5NQ==",
      "updated_at" : "2019-09-10T22:00:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/530137395",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   }
]
