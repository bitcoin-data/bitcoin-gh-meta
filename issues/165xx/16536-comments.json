[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310204441"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310204441"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could keep the first line and replace the rest with `...`?\r\n```suggestion\r\n...\r\n```",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T16:22:08Z",
      "diff_hunk" : "@@ -2,54 +2,131 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts\n+benchmarking\n+\n+    make -C src bench_bitcoin\n+\n After compiling bitcoin-core, the benchmarks can be run with:\n \n     src/bench/bench_bitcoin\n \n The output will look similar to:\n ```\n # Benchmark, evals, iterations, total, min, max, median\n-Base58CheckEncode, 5, 320000, 120.772, 7.49351e-05, 7.59374e-05, 7.54759e-05\n-Base58Decode, 5, 800000, 122.833, 3.0467e-05, 3.11732e-05, 3.06304e-05\n-Base58Encode, 5, 470000, 137.094, 5.81061e-05, 5.85109e-05, 5.84462e-05\n-BenchLockedPool, 5, 530, 34.2023, 0.0128247, 0.0129613, 0.0129026\n-CCheckQueueSpeedPrevectorJob, 5, 1400, 26.1762, 0.00365048, 0.00388629, 0.00367108\n-CCoinsCaching, 5, 170000, 48.1074, 5.60229e-05, 5.72316e-05, 5.66214e-05\n-CoinSelection, 5, 650, 34.6426, 0.0105801, 0.0107699, 0.010664\n-DeserializeAndCheckBlockTest, 5, 160, 39.2084, 0.0483662, 0.0494199, 0.0490138\n-DeserializeBlockTest, 5, 130, 23.8129, 0.0357731, 0.0373763, 0.0365858\n-FastRandom_1bit, 5, 440000000, 38.1609, 1.72974e-08, 1.73882e-08, 1.73478e-08\n-FastRandom_32bit, 5, 110000000, 72.8237, 1.29992e-07, 1.37014e-07, 1.30115e-07\n-MempoolEviction, 5, 41000, 89.8883, 0.000432748, 0.000446857, 0.000438483\n-PrevectorClear, 5, 5600, 47.9229, 0.00169952, 0.0017455, 0.00170315\n-PrevectorDestructor, 5, 5700, 44.5498, 0.0015561, 0.00156977, 0.00156469\n-RIPEMD160, 5, 440, 135.988, 0.0615496, 0.062268, 0.0617779\n-RollingBloom, 5, 1500000, 36.5109, 4.80961e-06, 4.97463e-06, 4.85811e-06\n-SHA1, 5, 570, 51.808, 0.018065, 0.0182623, 0.0181865\n-SHA256, 5, 340, 8.31841, 0.00483231, 0.00499803, 0.00485486\n-SHA256_32b, 5, 4700000, 10.469, 4.43441e-07, 4.47611e-07, 4.45223e-07\n-SHA512, 5, 330, 33.3408, 0.02017, 0.0202554, 0.0201921\n-SipHash_32b, 5, 40000000, 38.7088, 1.91103e-07, 1.96998e-07, 1.93792e-07\n-Sleep100ms, 5, 10, 5.01062, 0.100131, 0.100368, 0.100147\n-Trig, 5, 12000000, 5.95494, 9.78115e-08, 1.04354e-07, 9.80682e-08\n-VerifyScriptBench, 5, 6300, 9.02493, 0.000285566, 0.000288433, 0.000286175\n+AssembleBlock, 5, 700, 1.79954, 0.000510913, 0.000517018, 0.000514497\n+Base58CheckEncode, 5, 320000, 4.92458, 3.06687e-06, 3.08925e-06, 3.07813e-06",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310204441",
      "id" : 310204441,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIwNDQ0MQ==",
      "original_commit_id" : "49803e878ba21eb9f9299241f5e131c185f6aff3",
      "original_position" : 48,
      "path" : "doc/benchmarking.md",
      "position" : null,
      "pull_request_review_id" : 270274149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310204441",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310204841"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310204841"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here. This will just end up being outdated in two weeks",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T16:23:14Z",
      "diff_hunk" : "@@ -2,54 +2,131 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts\n+benchmarking\n+\n+    make -C src bench_bitcoin\n+\n After compiling bitcoin-core, the benchmarks can be run with:\n \n     src/bench/bench_bitcoin\n \n The output will look similar to:\n ```\n # Benchmark, evals, iterations, total, min, max, median\n-Base58CheckEncode, 5, 320000, 120.772, 7.49351e-05, 7.59374e-05, 7.54759e-05\n-Base58Decode, 5, 800000, 122.833, 3.0467e-05, 3.11732e-05, 3.06304e-05\n-Base58Encode, 5, 470000, 137.094, 5.81061e-05, 5.85109e-05, 5.84462e-05\n-BenchLockedPool, 5, 530, 34.2023, 0.0128247, 0.0129613, 0.0129026\n-CCheckQueueSpeedPrevectorJob, 5, 1400, 26.1762, 0.00365048, 0.00388629, 0.00367108\n-CCoinsCaching, 5, 170000, 48.1074, 5.60229e-05, 5.72316e-05, 5.66214e-05\n-CoinSelection, 5, 650, 34.6426, 0.0105801, 0.0107699, 0.010664\n-DeserializeAndCheckBlockTest, 5, 160, 39.2084, 0.0483662, 0.0494199, 0.0490138\n-DeserializeBlockTest, 5, 130, 23.8129, 0.0357731, 0.0373763, 0.0365858\n-FastRandom_1bit, 5, 440000000, 38.1609, 1.72974e-08, 1.73882e-08, 1.73478e-08\n-FastRandom_32bit, 5, 110000000, 72.8237, 1.29992e-07, 1.37014e-07, 1.30115e-07\n-MempoolEviction, 5, 41000, 89.8883, 0.000432748, 0.000446857, 0.000438483\n-PrevectorClear, 5, 5600, 47.9229, 0.00169952, 0.0017455, 0.00170315\n-PrevectorDestructor, 5, 5700, 44.5498, 0.0015561, 0.00156977, 0.00156469\n-RIPEMD160, 5, 440, 135.988, 0.0615496, 0.062268, 0.0617779\n-RollingBloom, 5, 1500000, 36.5109, 4.80961e-06, 4.97463e-06, 4.85811e-06\n-SHA1, 5, 570, 51.808, 0.018065, 0.0182623, 0.0181865\n-SHA256, 5, 340, 8.31841, 0.00483231, 0.00499803, 0.00485486\n-SHA256_32b, 5, 4700000, 10.469, 4.43441e-07, 4.47611e-07, 4.45223e-07\n-SHA512, 5, 330, 33.3408, 0.02017, 0.0202554, 0.0201921\n-SipHash_32b, 5, 40000000, 38.7088, 1.91103e-07, 1.96998e-07, 1.93792e-07\n-Sleep100ms, 5, 10, 5.01062, 0.100131, 0.100368, 0.100147\n-Trig, 5, 12000000, 5.95494, 9.78115e-08, 1.04354e-07, 9.80682e-08\n-VerifyScriptBench, 5, 6300, 9.02493, 0.000285566, 0.000288433, 0.000286175\n+AssembleBlock, 5, 700, 1.79954, 0.000510913, 0.000517018, 0.000514497\n+Base58CheckEncode, 5, 320000, 4.92458, 3.06687e-06, 3.08925e-06, 3.07813e-06\n+Base58Decode, 5, 800000, 3.77396, 9.23524e-07, 9.78809e-07, 9.42672e-07\n+Base58Encode, 5, 470000, 4.94039, 2.07767e-06, 2.17538e-06, 2.08682e-06\n+Bech32Decode, 5, 800000, 1.66329, 4.03116e-07, 4.29066e-07, 4.16342e-07\n+Bech32Encode, 5, 800000, 2.37073, 5.86742e-07, 6.05737e-07, 5.90172e-07\n+BenchLockedPool, 5, 1300, 5.16786, 0.000767743, 0.000820994, 0.000801707\n+BenchTimeDeprecated, 5, 100000000, 1.7484, 3.4032e-09, 3.69593e-09, 3.47569e-09\n+BenchTimeMillis, 5, 6000000, 14.512, 4.7145e-07, 4.90552e-07, 4.8602e-07\n+BenchTimeMillisSys, 5, 6000000, 14.8951, 4.83961e-07, 5.20829e-07, 4.91119e-07\n+BenchTimeMock, 5, 300000000, 2.72094, 1.7495e-09, 1.92734e-09, 1.80875e-09\n+BnBExhaustion, 5, 650, 2.81436, 0.000827714, 0.000905112, 0.000864779\n+CCheckQueueSpeedPrevectorJob, 5, 1400, 4.28412, 0.000601681, 0.000626467, 0.000612864\n+CCoinsCaching, 5, 170000, 0.490528, 5.6494e-07, 5.88475e-07, 5.78702e-07\n+CHACHA20_1MB, 5, 340, 3.13235, 0.00182921, 0.0018584, 0.00183901\n+CHACHA20_256BYTES, 5, 250000, 0.5768, 4.49957e-07, 4.69972e-07, 4.6095e-07\n+CHACHA20_64BYTES, 5, 500000, 0.303038, 1.19385e-07, 1.24242e-07, 1.20308e-07\n+CoinSelection, 5, 650, 0.598248, 0.000181658, 0.000186455, 0.000183747\n+ConstructGCSFilter, 5, 1000, 7.32203, 0.00144979, 0.00148185, 0.00146336\n+DeserializeAndCheckBlockTest, 5, 160, 4.29198, 0.0053258, 0.00538844, 0.00537442\n+DeserializeBlockTest, 5, 130, 2.91054, 0.00438062, 0.00461992, 0.0044176\n+DuplicateInputs, 5, 10, 0.349838, 0.00681664, 0.0071578, 0.00699272\n+FastRandom_1bit, 5, 440000000, 3.55037, 1.60107e-09, 1.63897e-09, 1.60388e-09\n+FastRandom_32bit, 5, 110000000, 4.66069, 8.43174e-09, 8.50173e-09, 8.47942e-09\n+MatchGCSFilter, 5, 50000, 5.29045, 2.10328e-05, 2.12565e-05, 2.11911e-05\n+MempoolEviction, 5, 41000, 3.02568, 1.46642e-05, 1.49587e-05, 1.47037e-05\n+MerkleRoot, 5, 800, 4.55175, 0.00113359, 0.00114235, 0.00113847\n+POLY1305_1MB, 5, 340, 1.20259, 0.000703508, 0.000711726, 0.000707535\n+POLY1305_256BYTES, 5, 250000, 0.240919, 1.87676e-07, 2.0346e-07, 1.9024e-07\n+POLY1305_64BYTES, 5, 500000, 0.14503, 5.73722e-08, 5.9313e-08, 5.78021e-08\n+PrePadded, 5, 10000, 0.0105583, 2.08606e-07, 2.16661e-07, 2.10247e-07\n+PrevectorClearNontrivial, 5, 28300, 9.74354, 6.7409e-05, 7.11888e-05, 6.83039e-05\n+PrevectorClearTrivial, 5, 88600, 19.8132, 4.43881e-05, 4.52573e-05, 4.46334e-05\n+PrevectorDeserializeNontrivial, 5, 6800, 2.48919, 7.19162e-05, 7.49433e-05, 7.2365e-05\n+PrevectorDeserializeTrivial, 5, 52000, 2.75915, 1.04626e-05, 1.07667e-05, 1.06177e-05\n+PrevectorDestructorNontrivial, 5, 28800, 9.03402, 6.1415e-05, 6.52106e-05, 6.16662e-05\n+PrevectorDestructorTrivial, 5, 88900, 18.6047, 4.16076e-05, 4.21505e-05, 4.18157e-05\n+PrevectorResizeNontrivial, 5, 28900, 2.88001, 1.98667e-05, 2.00179e-05, 1.98966e-05\n+PrevectorResizeTrivial, 5, 90300, 3.24412, 7.16336e-06, 7.25998e-06, 7.16659e-06\n+RIPEMD160, 5, 440, 4.88606, 0.00220545, 0.00225396, 0.00221235\n+RegularPadded, 5, 10000, 0.0211132, 4.07576e-07, 4.53654e-07, 4.11425e-07\n+RollingBloom, 5, 1500000, 3.65431, 4.76011e-07, 5.10435e-07, 4.80835e-07\n+RollingBloomReset, 5, 20000, 5.59406, 5.52469e-05, 5.76053e-05, 5.57199e-05\n+RpcMempool, 5, 40, 3.17675, 0.0158117, 0.0160428, 0.0158462\n+SHA1, 5, 570, 4.70379, 0.0016439, 0.0016631, 0.00164822\n+SHA256, 5, 340, 4.74761, 0.00277871, 0.00280425, 0.00279286\n+SHA256D64_1024, 5, 7400, 4.57789, 0.000118055, 0.000130664, 0.000122628\n+SHA256_32b, 5, 4700000, 4.74901, 1.98897e-07, 2.05686e-07, 2.01991e-07\n+SHA512, 5, 330, 4.56722, 0.00273604, 0.00279254, 0.00276721\n+SipHash_32b, 5, 40000000, 5.00388, 2.46464e-08, 2.55899e-08, 2.48747e-08\n+Sleep100ms, 5, 10, 5.01005, 0.100187, 0.10021, 0.100201\n+Trig, 5, 12000000, 1.72352, 2.60512e-08, 3.09944e-08, 2.8639e-08\n+VerifyScriptBench, 5, 6300, 4.28922, 0.000132975, 0.000143875, 0.000133716\n+WalletBalanceClean, 5, 8000, 2.32476, 5.75268e-05, 5.96201e-05, 5.77432e-05\n+WalletBalanceDirty, 5, 2500, 3.20313, 0.000255601, 0.000256807, 0.000256311\n+WalletBalanceMine, 5, 16000, 2.2409, 2.78764e-05, 2.81732e-05, 2.8009e-05\n+WalletBalanceWatch, 5, 8000, 2.29993, 5.73364e-05, 5.77806e-05, 5.74599e-05\n ```\n \n Help\n ---------------------\n-`-?` will print a list of options and exit:\n+```\n+$ src/bench/bench_bitcoin -?\n+\n+Options:\n+\n+  -?\n+       Print this help message and exit\n+\n+  -evals=<n>\n+       Number of measurement evaluations to perform. (default: 5)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310204841",
      "id" : 310204841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIwNDg0MQ==",
      "original_commit_id" : "49803e878ba21eb9f9299241f5e131c185f6aff3",
      "original_position" : 118,
      "path" : "doc/benchmarking.md",
      "position" : null,
      "pull_request_review_id" : 270274664,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310204841",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310213765"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310213765"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps `-help` should be recommended instead of `-?`. `-?` could be interpreted as shell wildcard :-)",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T16:48:19Z",
      "diff_hunk" : "@@ -2,54 +2,131 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts\n+benchmarking\n+\n+    make -C src bench_bitcoin\n+\n After compiling bitcoin-core, the benchmarks can be run with:\n \n     src/bench/bench_bitcoin\n \n The output will look similar to:\n ```\n # Benchmark, evals, iterations, total, min, max, median\n-Base58CheckEncode, 5, 320000, 120.772, 7.49351e-05, 7.59374e-05, 7.54759e-05\n-Base58Decode, 5, 800000, 122.833, 3.0467e-05, 3.11732e-05, 3.06304e-05\n-Base58Encode, 5, 470000, 137.094, 5.81061e-05, 5.85109e-05, 5.84462e-05\n-BenchLockedPool, 5, 530, 34.2023, 0.0128247, 0.0129613, 0.0129026\n-CCheckQueueSpeedPrevectorJob, 5, 1400, 26.1762, 0.00365048, 0.00388629, 0.00367108\n-CCoinsCaching, 5, 170000, 48.1074, 5.60229e-05, 5.72316e-05, 5.66214e-05\n-CoinSelection, 5, 650, 34.6426, 0.0105801, 0.0107699, 0.010664\n-DeserializeAndCheckBlockTest, 5, 160, 39.2084, 0.0483662, 0.0494199, 0.0490138\n-DeserializeBlockTest, 5, 130, 23.8129, 0.0357731, 0.0373763, 0.0365858\n-FastRandom_1bit, 5, 440000000, 38.1609, 1.72974e-08, 1.73882e-08, 1.73478e-08\n-FastRandom_32bit, 5, 110000000, 72.8237, 1.29992e-07, 1.37014e-07, 1.30115e-07\n-MempoolEviction, 5, 41000, 89.8883, 0.000432748, 0.000446857, 0.000438483\n-PrevectorClear, 5, 5600, 47.9229, 0.00169952, 0.0017455, 0.00170315\n-PrevectorDestructor, 5, 5700, 44.5498, 0.0015561, 0.00156977, 0.00156469\n-RIPEMD160, 5, 440, 135.988, 0.0615496, 0.062268, 0.0617779\n-RollingBloom, 5, 1500000, 36.5109, 4.80961e-06, 4.97463e-06, 4.85811e-06\n-SHA1, 5, 570, 51.808, 0.018065, 0.0182623, 0.0181865\n-SHA256, 5, 340, 8.31841, 0.00483231, 0.00499803, 0.00485486\n-SHA256_32b, 5, 4700000, 10.469, 4.43441e-07, 4.47611e-07, 4.45223e-07\n-SHA512, 5, 330, 33.3408, 0.02017, 0.0202554, 0.0201921\n-SipHash_32b, 5, 40000000, 38.7088, 1.91103e-07, 1.96998e-07, 1.93792e-07\n-Sleep100ms, 5, 10, 5.01062, 0.100131, 0.100368, 0.100147\n-Trig, 5, 12000000, 5.95494, 9.78115e-08, 1.04354e-07, 9.80682e-08\n-VerifyScriptBench, 5, 6300, 9.02493, 0.000285566, 0.000288433, 0.000286175\n+AssembleBlock, 5, 700, 1.79954, 0.000510913, 0.000517018, 0.000514497\n+Base58CheckEncode, 5, 320000, 4.92458, 3.06687e-06, 3.08925e-06, 3.07813e-06\n+Base58Decode, 5, 800000, 3.77396, 9.23524e-07, 9.78809e-07, 9.42672e-07\n+Base58Encode, 5, 470000, 4.94039, 2.07767e-06, 2.17538e-06, 2.08682e-06\n+Bech32Decode, 5, 800000, 1.66329, 4.03116e-07, 4.29066e-07, 4.16342e-07\n+Bech32Encode, 5, 800000, 2.37073, 5.86742e-07, 6.05737e-07, 5.90172e-07\n+BenchLockedPool, 5, 1300, 5.16786, 0.000767743, 0.000820994, 0.000801707\n+BenchTimeDeprecated, 5, 100000000, 1.7484, 3.4032e-09, 3.69593e-09, 3.47569e-09\n+BenchTimeMillis, 5, 6000000, 14.512, 4.7145e-07, 4.90552e-07, 4.8602e-07\n+BenchTimeMillisSys, 5, 6000000, 14.8951, 4.83961e-07, 5.20829e-07, 4.91119e-07\n+BenchTimeMock, 5, 300000000, 2.72094, 1.7495e-09, 1.92734e-09, 1.80875e-09\n+BnBExhaustion, 5, 650, 2.81436, 0.000827714, 0.000905112, 0.000864779\n+CCheckQueueSpeedPrevectorJob, 5, 1400, 4.28412, 0.000601681, 0.000626467, 0.000612864\n+CCoinsCaching, 5, 170000, 0.490528, 5.6494e-07, 5.88475e-07, 5.78702e-07\n+CHACHA20_1MB, 5, 340, 3.13235, 0.00182921, 0.0018584, 0.00183901\n+CHACHA20_256BYTES, 5, 250000, 0.5768, 4.49957e-07, 4.69972e-07, 4.6095e-07\n+CHACHA20_64BYTES, 5, 500000, 0.303038, 1.19385e-07, 1.24242e-07, 1.20308e-07\n+CoinSelection, 5, 650, 0.598248, 0.000181658, 0.000186455, 0.000183747\n+ConstructGCSFilter, 5, 1000, 7.32203, 0.00144979, 0.00148185, 0.00146336\n+DeserializeAndCheckBlockTest, 5, 160, 4.29198, 0.0053258, 0.00538844, 0.00537442\n+DeserializeBlockTest, 5, 130, 2.91054, 0.00438062, 0.00461992, 0.0044176\n+DuplicateInputs, 5, 10, 0.349838, 0.00681664, 0.0071578, 0.00699272\n+FastRandom_1bit, 5, 440000000, 3.55037, 1.60107e-09, 1.63897e-09, 1.60388e-09\n+FastRandom_32bit, 5, 110000000, 4.66069, 8.43174e-09, 8.50173e-09, 8.47942e-09\n+MatchGCSFilter, 5, 50000, 5.29045, 2.10328e-05, 2.12565e-05, 2.11911e-05\n+MempoolEviction, 5, 41000, 3.02568, 1.46642e-05, 1.49587e-05, 1.47037e-05\n+MerkleRoot, 5, 800, 4.55175, 0.00113359, 0.00114235, 0.00113847\n+POLY1305_1MB, 5, 340, 1.20259, 0.000703508, 0.000711726, 0.000707535\n+POLY1305_256BYTES, 5, 250000, 0.240919, 1.87676e-07, 2.0346e-07, 1.9024e-07\n+POLY1305_64BYTES, 5, 500000, 0.14503, 5.73722e-08, 5.9313e-08, 5.78021e-08\n+PrePadded, 5, 10000, 0.0105583, 2.08606e-07, 2.16661e-07, 2.10247e-07\n+PrevectorClearNontrivial, 5, 28300, 9.74354, 6.7409e-05, 7.11888e-05, 6.83039e-05\n+PrevectorClearTrivial, 5, 88600, 19.8132, 4.43881e-05, 4.52573e-05, 4.46334e-05\n+PrevectorDeserializeNontrivial, 5, 6800, 2.48919, 7.19162e-05, 7.49433e-05, 7.2365e-05\n+PrevectorDeserializeTrivial, 5, 52000, 2.75915, 1.04626e-05, 1.07667e-05, 1.06177e-05\n+PrevectorDestructorNontrivial, 5, 28800, 9.03402, 6.1415e-05, 6.52106e-05, 6.16662e-05\n+PrevectorDestructorTrivial, 5, 88900, 18.6047, 4.16076e-05, 4.21505e-05, 4.18157e-05\n+PrevectorResizeNontrivial, 5, 28900, 2.88001, 1.98667e-05, 2.00179e-05, 1.98966e-05\n+PrevectorResizeTrivial, 5, 90300, 3.24412, 7.16336e-06, 7.25998e-06, 7.16659e-06\n+RIPEMD160, 5, 440, 4.88606, 0.00220545, 0.00225396, 0.00221235\n+RegularPadded, 5, 10000, 0.0211132, 4.07576e-07, 4.53654e-07, 4.11425e-07\n+RollingBloom, 5, 1500000, 3.65431, 4.76011e-07, 5.10435e-07, 4.80835e-07\n+RollingBloomReset, 5, 20000, 5.59406, 5.52469e-05, 5.76053e-05, 5.57199e-05\n+RpcMempool, 5, 40, 3.17675, 0.0158117, 0.0160428, 0.0158462\n+SHA1, 5, 570, 4.70379, 0.0016439, 0.0016631, 0.00164822\n+SHA256, 5, 340, 4.74761, 0.00277871, 0.00280425, 0.00279286\n+SHA256D64_1024, 5, 7400, 4.57789, 0.000118055, 0.000130664, 0.000122628\n+SHA256_32b, 5, 4700000, 4.74901, 1.98897e-07, 2.05686e-07, 2.01991e-07\n+SHA512, 5, 330, 4.56722, 0.00273604, 0.00279254, 0.00276721\n+SipHash_32b, 5, 40000000, 5.00388, 2.46464e-08, 2.55899e-08, 2.48747e-08\n+Sleep100ms, 5, 10, 5.01005, 0.100187, 0.10021, 0.100201\n+Trig, 5, 12000000, 1.72352, 2.60512e-08, 3.09944e-08, 2.8639e-08\n+VerifyScriptBench, 5, 6300, 4.28922, 0.000132975, 0.000143875, 0.000133716\n+WalletBalanceClean, 5, 8000, 2.32476, 5.75268e-05, 5.96201e-05, 5.77432e-05\n+WalletBalanceDirty, 5, 2500, 3.20313, 0.000255601, 0.000256807, 0.000256311\n+WalletBalanceMine, 5, 16000, 2.2409, 2.78764e-05, 2.81732e-05, 2.8009e-05\n+WalletBalanceWatch, 5, 8000, 2.29993, 5.73364e-05, 5.77806e-05, 5.74599e-05\n ```\n \n Help\n ---------------------\n-`-?` will print a list of options and exit:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310213765",
      "id" : 310213765,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIxMzc2NQ==",
      "original_commit_id" : "49803e878ba21eb9f9299241f5e131c185f6aff3",
      "original_position" : 108,
      "path" : "doc/benchmarking.md",
      "position" : 53,
      "pull_request_review_id" : 270285969,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310213765",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 49803e878ba21eb9f9299241f5e131c185f6aff3 modulo nits above",
      "created_at" : "2019-08-02T16:49:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#issuecomment-517770848",
      "id" : 517770848,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNzc3MDg0OA==",
      "updated_at" : "2019-08-02T16:49:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517770848",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310214617"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310214617"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not adding the `bench_bitcoin` options ? Was thinking it's good to see options without compiling binary",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T16:50:44Z",
      "diff_hunk" : "@@ -2,54 +2,131 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts\n+benchmarking\n+\n+    make -C src bench_bitcoin\n+\n After compiling bitcoin-core, the benchmarks can be run with:\n \n     src/bench/bench_bitcoin\n \n The output will look similar to:\n ```\n # Benchmark, evals, iterations, total, min, max, median\n-Base58CheckEncode, 5, 320000, 120.772, 7.49351e-05, 7.59374e-05, 7.54759e-05\n-Base58Decode, 5, 800000, 122.833, 3.0467e-05, 3.11732e-05, 3.06304e-05\n-Base58Encode, 5, 470000, 137.094, 5.81061e-05, 5.85109e-05, 5.84462e-05\n-BenchLockedPool, 5, 530, 34.2023, 0.0128247, 0.0129613, 0.0129026\n-CCheckQueueSpeedPrevectorJob, 5, 1400, 26.1762, 0.00365048, 0.00388629, 0.00367108\n-CCoinsCaching, 5, 170000, 48.1074, 5.60229e-05, 5.72316e-05, 5.66214e-05\n-CoinSelection, 5, 650, 34.6426, 0.0105801, 0.0107699, 0.010664\n-DeserializeAndCheckBlockTest, 5, 160, 39.2084, 0.0483662, 0.0494199, 0.0490138\n-DeserializeBlockTest, 5, 130, 23.8129, 0.0357731, 0.0373763, 0.0365858\n-FastRandom_1bit, 5, 440000000, 38.1609, 1.72974e-08, 1.73882e-08, 1.73478e-08\n-FastRandom_32bit, 5, 110000000, 72.8237, 1.29992e-07, 1.37014e-07, 1.30115e-07\n-MempoolEviction, 5, 41000, 89.8883, 0.000432748, 0.000446857, 0.000438483\n-PrevectorClear, 5, 5600, 47.9229, 0.00169952, 0.0017455, 0.00170315\n-PrevectorDestructor, 5, 5700, 44.5498, 0.0015561, 0.00156977, 0.00156469\n-RIPEMD160, 5, 440, 135.988, 0.0615496, 0.062268, 0.0617779\n-RollingBloom, 5, 1500000, 36.5109, 4.80961e-06, 4.97463e-06, 4.85811e-06\n-SHA1, 5, 570, 51.808, 0.018065, 0.0182623, 0.0181865\n-SHA256, 5, 340, 8.31841, 0.00483231, 0.00499803, 0.00485486\n-SHA256_32b, 5, 4700000, 10.469, 4.43441e-07, 4.47611e-07, 4.45223e-07\n-SHA512, 5, 330, 33.3408, 0.02017, 0.0202554, 0.0201921\n-SipHash_32b, 5, 40000000, 38.7088, 1.91103e-07, 1.96998e-07, 1.93792e-07\n-Sleep100ms, 5, 10, 5.01062, 0.100131, 0.100368, 0.100147\n-Trig, 5, 12000000, 5.95494, 9.78115e-08, 1.04354e-07, 9.80682e-08\n-VerifyScriptBench, 5, 6300, 9.02493, 0.000285566, 0.000288433, 0.000286175\n+AssembleBlock, 5, 700, 1.79954, 0.000510913, 0.000517018, 0.000514497\n+Base58CheckEncode, 5, 320000, 4.92458, 3.06687e-06, 3.08925e-06, 3.07813e-06\n+Base58Decode, 5, 800000, 3.77396, 9.23524e-07, 9.78809e-07, 9.42672e-07\n+Base58Encode, 5, 470000, 4.94039, 2.07767e-06, 2.17538e-06, 2.08682e-06\n+Bech32Decode, 5, 800000, 1.66329, 4.03116e-07, 4.29066e-07, 4.16342e-07\n+Bech32Encode, 5, 800000, 2.37073, 5.86742e-07, 6.05737e-07, 5.90172e-07\n+BenchLockedPool, 5, 1300, 5.16786, 0.000767743, 0.000820994, 0.000801707\n+BenchTimeDeprecated, 5, 100000000, 1.7484, 3.4032e-09, 3.69593e-09, 3.47569e-09\n+BenchTimeMillis, 5, 6000000, 14.512, 4.7145e-07, 4.90552e-07, 4.8602e-07\n+BenchTimeMillisSys, 5, 6000000, 14.8951, 4.83961e-07, 5.20829e-07, 4.91119e-07\n+BenchTimeMock, 5, 300000000, 2.72094, 1.7495e-09, 1.92734e-09, 1.80875e-09\n+BnBExhaustion, 5, 650, 2.81436, 0.000827714, 0.000905112, 0.000864779\n+CCheckQueueSpeedPrevectorJob, 5, 1400, 4.28412, 0.000601681, 0.000626467, 0.000612864\n+CCoinsCaching, 5, 170000, 0.490528, 5.6494e-07, 5.88475e-07, 5.78702e-07\n+CHACHA20_1MB, 5, 340, 3.13235, 0.00182921, 0.0018584, 0.00183901\n+CHACHA20_256BYTES, 5, 250000, 0.5768, 4.49957e-07, 4.69972e-07, 4.6095e-07\n+CHACHA20_64BYTES, 5, 500000, 0.303038, 1.19385e-07, 1.24242e-07, 1.20308e-07\n+CoinSelection, 5, 650, 0.598248, 0.000181658, 0.000186455, 0.000183747\n+ConstructGCSFilter, 5, 1000, 7.32203, 0.00144979, 0.00148185, 0.00146336\n+DeserializeAndCheckBlockTest, 5, 160, 4.29198, 0.0053258, 0.00538844, 0.00537442\n+DeserializeBlockTest, 5, 130, 2.91054, 0.00438062, 0.00461992, 0.0044176\n+DuplicateInputs, 5, 10, 0.349838, 0.00681664, 0.0071578, 0.00699272\n+FastRandom_1bit, 5, 440000000, 3.55037, 1.60107e-09, 1.63897e-09, 1.60388e-09\n+FastRandom_32bit, 5, 110000000, 4.66069, 8.43174e-09, 8.50173e-09, 8.47942e-09\n+MatchGCSFilter, 5, 50000, 5.29045, 2.10328e-05, 2.12565e-05, 2.11911e-05\n+MempoolEviction, 5, 41000, 3.02568, 1.46642e-05, 1.49587e-05, 1.47037e-05\n+MerkleRoot, 5, 800, 4.55175, 0.00113359, 0.00114235, 0.00113847\n+POLY1305_1MB, 5, 340, 1.20259, 0.000703508, 0.000711726, 0.000707535\n+POLY1305_256BYTES, 5, 250000, 0.240919, 1.87676e-07, 2.0346e-07, 1.9024e-07\n+POLY1305_64BYTES, 5, 500000, 0.14503, 5.73722e-08, 5.9313e-08, 5.78021e-08\n+PrePadded, 5, 10000, 0.0105583, 2.08606e-07, 2.16661e-07, 2.10247e-07\n+PrevectorClearNontrivial, 5, 28300, 9.74354, 6.7409e-05, 7.11888e-05, 6.83039e-05\n+PrevectorClearTrivial, 5, 88600, 19.8132, 4.43881e-05, 4.52573e-05, 4.46334e-05\n+PrevectorDeserializeNontrivial, 5, 6800, 2.48919, 7.19162e-05, 7.49433e-05, 7.2365e-05\n+PrevectorDeserializeTrivial, 5, 52000, 2.75915, 1.04626e-05, 1.07667e-05, 1.06177e-05\n+PrevectorDestructorNontrivial, 5, 28800, 9.03402, 6.1415e-05, 6.52106e-05, 6.16662e-05\n+PrevectorDestructorTrivial, 5, 88900, 18.6047, 4.16076e-05, 4.21505e-05, 4.18157e-05\n+PrevectorResizeNontrivial, 5, 28900, 2.88001, 1.98667e-05, 2.00179e-05, 1.98966e-05\n+PrevectorResizeTrivial, 5, 90300, 3.24412, 7.16336e-06, 7.25998e-06, 7.16659e-06\n+RIPEMD160, 5, 440, 4.88606, 0.00220545, 0.00225396, 0.00221235\n+RegularPadded, 5, 10000, 0.0211132, 4.07576e-07, 4.53654e-07, 4.11425e-07\n+RollingBloom, 5, 1500000, 3.65431, 4.76011e-07, 5.10435e-07, 4.80835e-07\n+RollingBloomReset, 5, 20000, 5.59406, 5.52469e-05, 5.76053e-05, 5.57199e-05\n+RpcMempool, 5, 40, 3.17675, 0.0158117, 0.0160428, 0.0158462\n+SHA1, 5, 570, 4.70379, 0.0016439, 0.0016631, 0.00164822\n+SHA256, 5, 340, 4.74761, 0.00277871, 0.00280425, 0.00279286\n+SHA256D64_1024, 5, 7400, 4.57789, 0.000118055, 0.000130664, 0.000122628\n+SHA256_32b, 5, 4700000, 4.74901, 1.98897e-07, 2.05686e-07, 2.01991e-07\n+SHA512, 5, 330, 4.56722, 0.00273604, 0.00279254, 0.00276721\n+SipHash_32b, 5, 40000000, 5.00388, 2.46464e-08, 2.55899e-08, 2.48747e-08\n+Sleep100ms, 5, 10, 5.01005, 0.100187, 0.10021, 0.100201\n+Trig, 5, 12000000, 1.72352, 2.60512e-08, 3.09944e-08, 2.8639e-08\n+VerifyScriptBench, 5, 6300, 4.28922, 0.000132975, 0.000143875, 0.000133716\n+WalletBalanceClean, 5, 8000, 2.32476, 5.75268e-05, 5.96201e-05, 5.77432e-05\n+WalletBalanceDirty, 5, 2500, 3.20313, 0.000255601, 0.000256807, 0.000256311\n+WalletBalanceMine, 5, 16000, 2.2409, 2.78764e-05, 2.81732e-05, 2.8009e-05\n+WalletBalanceWatch, 5, 8000, 2.29993, 5.73364e-05, 5.77806e-05, 5.74599e-05\n ```\n \n Help\n ---------------------\n-`-?` will print a list of options and exit:\n+```\n+$ src/bench/bench_bitcoin -?\n+\n+Options:\n+\n+  -?\n+       Print this help message and exit\n+\n+  -evals=<n>\n+       Number of measurement evaluations to perform. (default: 5)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310214617",
      "id" : 310214617,
      "in_reply_to_id" : 310204841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIxNDYxNw==",
      "original_commit_id" : "49803e878ba21eb9f9299241f5e131c185f6aff3",
      "original_position" : 118,
      "path" : "doc/benchmarking.md",
      "position" : null,
      "pull_request_review_id" : 270287063,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310214617",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310216325"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310216325"
         }
      },
      "author_association" : "MEMBER",
      "body" : "They just get outdated and incorrect information is worse than none, no?",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T16:55:34Z",
      "diff_hunk" : "@@ -2,54 +2,131 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts\n+benchmarking\n+\n+    make -C src bench_bitcoin\n+\n After compiling bitcoin-core, the benchmarks can be run with:\n \n     src/bench/bench_bitcoin\n \n The output will look similar to:\n ```\n # Benchmark, evals, iterations, total, min, max, median\n-Base58CheckEncode, 5, 320000, 120.772, 7.49351e-05, 7.59374e-05, 7.54759e-05\n-Base58Decode, 5, 800000, 122.833, 3.0467e-05, 3.11732e-05, 3.06304e-05\n-Base58Encode, 5, 470000, 137.094, 5.81061e-05, 5.85109e-05, 5.84462e-05\n-BenchLockedPool, 5, 530, 34.2023, 0.0128247, 0.0129613, 0.0129026\n-CCheckQueueSpeedPrevectorJob, 5, 1400, 26.1762, 0.00365048, 0.00388629, 0.00367108\n-CCoinsCaching, 5, 170000, 48.1074, 5.60229e-05, 5.72316e-05, 5.66214e-05\n-CoinSelection, 5, 650, 34.6426, 0.0105801, 0.0107699, 0.010664\n-DeserializeAndCheckBlockTest, 5, 160, 39.2084, 0.0483662, 0.0494199, 0.0490138\n-DeserializeBlockTest, 5, 130, 23.8129, 0.0357731, 0.0373763, 0.0365858\n-FastRandom_1bit, 5, 440000000, 38.1609, 1.72974e-08, 1.73882e-08, 1.73478e-08\n-FastRandom_32bit, 5, 110000000, 72.8237, 1.29992e-07, 1.37014e-07, 1.30115e-07\n-MempoolEviction, 5, 41000, 89.8883, 0.000432748, 0.000446857, 0.000438483\n-PrevectorClear, 5, 5600, 47.9229, 0.00169952, 0.0017455, 0.00170315\n-PrevectorDestructor, 5, 5700, 44.5498, 0.0015561, 0.00156977, 0.00156469\n-RIPEMD160, 5, 440, 135.988, 0.0615496, 0.062268, 0.0617779\n-RollingBloom, 5, 1500000, 36.5109, 4.80961e-06, 4.97463e-06, 4.85811e-06\n-SHA1, 5, 570, 51.808, 0.018065, 0.0182623, 0.0181865\n-SHA256, 5, 340, 8.31841, 0.00483231, 0.00499803, 0.00485486\n-SHA256_32b, 5, 4700000, 10.469, 4.43441e-07, 4.47611e-07, 4.45223e-07\n-SHA512, 5, 330, 33.3408, 0.02017, 0.0202554, 0.0201921\n-SipHash_32b, 5, 40000000, 38.7088, 1.91103e-07, 1.96998e-07, 1.93792e-07\n-Sleep100ms, 5, 10, 5.01062, 0.100131, 0.100368, 0.100147\n-Trig, 5, 12000000, 5.95494, 9.78115e-08, 1.04354e-07, 9.80682e-08\n-VerifyScriptBench, 5, 6300, 9.02493, 0.000285566, 0.000288433, 0.000286175\n+AssembleBlock, 5, 700, 1.79954, 0.000510913, 0.000517018, 0.000514497\n+Base58CheckEncode, 5, 320000, 4.92458, 3.06687e-06, 3.08925e-06, 3.07813e-06\n+Base58Decode, 5, 800000, 3.77396, 9.23524e-07, 9.78809e-07, 9.42672e-07\n+Base58Encode, 5, 470000, 4.94039, 2.07767e-06, 2.17538e-06, 2.08682e-06\n+Bech32Decode, 5, 800000, 1.66329, 4.03116e-07, 4.29066e-07, 4.16342e-07\n+Bech32Encode, 5, 800000, 2.37073, 5.86742e-07, 6.05737e-07, 5.90172e-07\n+BenchLockedPool, 5, 1300, 5.16786, 0.000767743, 0.000820994, 0.000801707\n+BenchTimeDeprecated, 5, 100000000, 1.7484, 3.4032e-09, 3.69593e-09, 3.47569e-09\n+BenchTimeMillis, 5, 6000000, 14.512, 4.7145e-07, 4.90552e-07, 4.8602e-07\n+BenchTimeMillisSys, 5, 6000000, 14.8951, 4.83961e-07, 5.20829e-07, 4.91119e-07\n+BenchTimeMock, 5, 300000000, 2.72094, 1.7495e-09, 1.92734e-09, 1.80875e-09\n+BnBExhaustion, 5, 650, 2.81436, 0.000827714, 0.000905112, 0.000864779\n+CCheckQueueSpeedPrevectorJob, 5, 1400, 4.28412, 0.000601681, 0.000626467, 0.000612864\n+CCoinsCaching, 5, 170000, 0.490528, 5.6494e-07, 5.88475e-07, 5.78702e-07\n+CHACHA20_1MB, 5, 340, 3.13235, 0.00182921, 0.0018584, 0.00183901\n+CHACHA20_256BYTES, 5, 250000, 0.5768, 4.49957e-07, 4.69972e-07, 4.6095e-07\n+CHACHA20_64BYTES, 5, 500000, 0.303038, 1.19385e-07, 1.24242e-07, 1.20308e-07\n+CoinSelection, 5, 650, 0.598248, 0.000181658, 0.000186455, 0.000183747\n+ConstructGCSFilter, 5, 1000, 7.32203, 0.00144979, 0.00148185, 0.00146336\n+DeserializeAndCheckBlockTest, 5, 160, 4.29198, 0.0053258, 0.00538844, 0.00537442\n+DeserializeBlockTest, 5, 130, 2.91054, 0.00438062, 0.00461992, 0.0044176\n+DuplicateInputs, 5, 10, 0.349838, 0.00681664, 0.0071578, 0.00699272\n+FastRandom_1bit, 5, 440000000, 3.55037, 1.60107e-09, 1.63897e-09, 1.60388e-09\n+FastRandom_32bit, 5, 110000000, 4.66069, 8.43174e-09, 8.50173e-09, 8.47942e-09\n+MatchGCSFilter, 5, 50000, 5.29045, 2.10328e-05, 2.12565e-05, 2.11911e-05\n+MempoolEviction, 5, 41000, 3.02568, 1.46642e-05, 1.49587e-05, 1.47037e-05\n+MerkleRoot, 5, 800, 4.55175, 0.00113359, 0.00114235, 0.00113847\n+POLY1305_1MB, 5, 340, 1.20259, 0.000703508, 0.000711726, 0.000707535\n+POLY1305_256BYTES, 5, 250000, 0.240919, 1.87676e-07, 2.0346e-07, 1.9024e-07\n+POLY1305_64BYTES, 5, 500000, 0.14503, 5.73722e-08, 5.9313e-08, 5.78021e-08\n+PrePadded, 5, 10000, 0.0105583, 2.08606e-07, 2.16661e-07, 2.10247e-07\n+PrevectorClearNontrivial, 5, 28300, 9.74354, 6.7409e-05, 7.11888e-05, 6.83039e-05\n+PrevectorClearTrivial, 5, 88600, 19.8132, 4.43881e-05, 4.52573e-05, 4.46334e-05\n+PrevectorDeserializeNontrivial, 5, 6800, 2.48919, 7.19162e-05, 7.49433e-05, 7.2365e-05\n+PrevectorDeserializeTrivial, 5, 52000, 2.75915, 1.04626e-05, 1.07667e-05, 1.06177e-05\n+PrevectorDestructorNontrivial, 5, 28800, 9.03402, 6.1415e-05, 6.52106e-05, 6.16662e-05\n+PrevectorDestructorTrivial, 5, 88900, 18.6047, 4.16076e-05, 4.21505e-05, 4.18157e-05\n+PrevectorResizeNontrivial, 5, 28900, 2.88001, 1.98667e-05, 2.00179e-05, 1.98966e-05\n+PrevectorResizeTrivial, 5, 90300, 3.24412, 7.16336e-06, 7.25998e-06, 7.16659e-06\n+RIPEMD160, 5, 440, 4.88606, 0.00220545, 0.00225396, 0.00221235\n+RegularPadded, 5, 10000, 0.0211132, 4.07576e-07, 4.53654e-07, 4.11425e-07\n+RollingBloom, 5, 1500000, 3.65431, 4.76011e-07, 5.10435e-07, 4.80835e-07\n+RollingBloomReset, 5, 20000, 5.59406, 5.52469e-05, 5.76053e-05, 5.57199e-05\n+RpcMempool, 5, 40, 3.17675, 0.0158117, 0.0160428, 0.0158462\n+SHA1, 5, 570, 4.70379, 0.0016439, 0.0016631, 0.00164822\n+SHA256, 5, 340, 4.74761, 0.00277871, 0.00280425, 0.00279286\n+SHA256D64_1024, 5, 7400, 4.57789, 0.000118055, 0.000130664, 0.000122628\n+SHA256_32b, 5, 4700000, 4.74901, 1.98897e-07, 2.05686e-07, 2.01991e-07\n+SHA512, 5, 330, 4.56722, 0.00273604, 0.00279254, 0.00276721\n+SipHash_32b, 5, 40000000, 5.00388, 2.46464e-08, 2.55899e-08, 2.48747e-08\n+Sleep100ms, 5, 10, 5.01005, 0.100187, 0.10021, 0.100201\n+Trig, 5, 12000000, 1.72352, 2.60512e-08, 3.09944e-08, 2.8639e-08\n+VerifyScriptBench, 5, 6300, 4.28922, 0.000132975, 0.000143875, 0.000133716\n+WalletBalanceClean, 5, 8000, 2.32476, 5.75268e-05, 5.96201e-05, 5.77432e-05\n+WalletBalanceDirty, 5, 2500, 3.20313, 0.000255601, 0.000256807, 0.000256311\n+WalletBalanceMine, 5, 16000, 2.2409, 2.78764e-05, 2.81732e-05, 2.8009e-05\n+WalletBalanceWatch, 5, 8000, 2.29993, 5.73364e-05, 5.77806e-05, 5.74599e-05\n ```\n \n Help\n ---------------------\n-`-?` will print a list of options and exit:\n+```\n+$ src/bench/bench_bitcoin -?\n+\n+Options:\n+\n+  -?\n+       Print this help message and exit\n+\n+  -evals=<n>\n+       Number of measurement evaluations to perform. (default: 5)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310216325",
      "id" : 310216325,
      "in_reply_to_id" : 310204841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIxNjMyNQ==",
      "original_commit_id" : "49803e878ba21eb9f9299241f5e131c185f6aff3",
      "original_position" : 118,
      "path" : "doc/benchmarking.md",
      "position" : null,
      "pull_request_review_id" : 270289148,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310216325",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310218545"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310218545"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree a lot with this one, `--help` is just that much more intuitive! ",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T17:01:55Z",
      "diff_hunk" : "@@ -2,54 +2,131 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts\n+benchmarking\n+\n+    make -C src bench_bitcoin\n+\n After compiling bitcoin-core, the benchmarks can be run with:\n \n     src/bench/bench_bitcoin\n \n The output will look similar to:\n ```\n # Benchmark, evals, iterations, total, min, max, median\n-Base58CheckEncode, 5, 320000, 120.772, 7.49351e-05, 7.59374e-05, 7.54759e-05\n-Base58Decode, 5, 800000, 122.833, 3.0467e-05, 3.11732e-05, 3.06304e-05\n-Base58Encode, 5, 470000, 137.094, 5.81061e-05, 5.85109e-05, 5.84462e-05\n-BenchLockedPool, 5, 530, 34.2023, 0.0128247, 0.0129613, 0.0129026\n-CCheckQueueSpeedPrevectorJob, 5, 1400, 26.1762, 0.00365048, 0.00388629, 0.00367108\n-CCoinsCaching, 5, 170000, 48.1074, 5.60229e-05, 5.72316e-05, 5.66214e-05\n-CoinSelection, 5, 650, 34.6426, 0.0105801, 0.0107699, 0.010664\n-DeserializeAndCheckBlockTest, 5, 160, 39.2084, 0.0483662, 0.0494199, 0.0490138\n-DeserializeBlockTest, 5, 130, 23.8129, 0.0357731, 0.0373763, 0.0365858\n-FastRandom_1bit, 5, 440000000, 38.1609, 1.72974e-08, 1.73882e-08, 1.73478e-08\n-FastRandom_32bit, 5, 110000000, 72.8237, 1.29992e-07, 1.37014e-07, 1.30115e-07\n-MempoolEviction, 5, 41000, 89.8883, 0.000432748, 0.000446857, 0.000438483\n-PrevectorClear, 5, 5600, 47.9229, 0.00169952, 0.0017455, 0.00170315\n-PrevectorDestructor, 5, 5700, 44.5498, 0.0015561, 0.00156977, 0.00156469\n-RIPEMD160, 5, 440, 135.988, 0.0615496, 0.062268, 0.0617779\n-RollingBloom, 5, 1500000, 36.5109, 4.80961e-06, 4.97463e-06, 4.85811e-06\n-SHA1, 5, 570, 51.808, 0.018065, 0.0182623, 0.0181865\n-SHA256, 5, 340, 8.31841, 0.00483231, 0.00499803, 0.00485486\n-SHA256_32b, 5, 4700000, 10.469, 4.43441e-07, 4.47611e-07, 4.45223e-07\n-SHA512, 5, 330, 33.3408, 0.02017, 0.0202554, 0.0201921\n-SipHash_32b, 5, 40000000, 38.7088, 1.91103e-07, 1.96998e-07, 1.93792e-07\n-Sleep100ms, 5, 10, 5.01062, 0.100131, 0.100368, 0.100147\n-Trig, 5, 12000000, 5.95494, 9.78115e-08, 1.04354e-07, 9.80682e-08\n-VerifyScriptBench, 5, 6300, 9.02493, 0.000285566, 0.000288433, 0.000286175\n+AssembleBlock, 5, 700, 1.79954, 0.000510913, 0.000517018, 0.000514497\n+Base58CheckEncode, 5, 320000, 4.92458, 3.06687e-06, 3.08925e-06, 3.07813e-06\n+Base58Decode, 5, 800000, 3.77396, 9.23524e-07, 9.78809e-07, 9.42672e-07\n+Base58Encode, 5, 470000, 4.94039, 2.07767e-06, 2.17538e-06, 2.08682e-06\n+Bech32Decode, 5, 800000, 1.66329, 4.03116e-07, 4.29066e-07, 4.16342e-07\n+Bech32Encode, 5, 800000, 2.37073, 5.86742e-07, 6.05737e-07, 5.90172e-07\n+BenchLockedPool, 5, 1300, 5.16786, 0.000767743, 0.000820994, 0.000801707\n+BenchTimeDeprecated, 5, 100000000, 1.7484, 3.4032e-09, 3.69593e-09, 3.47569e-09\n+BenchTimeMillis, 5, 6000000, 14.512, 4.7145e-07, 4.90552e-07, 4.8602e-07\n+BenchTimeMillisSys, 5, 6000000, 14.8951, 4.83961e-07, 5.20829e-07, 4.91119e-07\n+BenchTimeMock, 5, 300000000, 2.72094, 1.7495e-09, 1.92734e-09, 1.80875e-09\n+BnBExhaustion, 5, 650, 2.81436, 0.000827714, 0.000905112, 0.000864779\n+CCheckQueueSpeedPrevectorJob, 5, 1400, 4.28412, 0.000601681, 0.000626467, 0.000612864\n+CCoinsCaching, 5, 170000, 0.490528, 5.6494e-07, 5.88475e-07, 5.78702e-07\n+CHACHA20_1MB, 5, 340, 3.13235, 0.00182921, 0.0018584, 0.00183901\n+CHACHA20_256BYTES, 5, 250000, 0.5768, 4.49957e-07, 4.69972e-07, 4.6095e-07\n+CHACHA20_64BYTES, 5, 500000, 0.303038, 1.19385e-07, 1.24242e-07, 1.20308e-07\n+CoinSelection, 5, 650, 0.598248, 0.000181658, 0.000186455, 0.000183747\n+ConstructGCSFilter, 5, 1000, 7.32203, 0.00144979, 0.00148185, 0.00146336\n+DeserializeAndCheckBlockTest, 5, 160, 4.29198, 0.0053258, 0.00538844, 0.00537442\n+DeserializeBlockTest, 5, 130, 2.91054, 0.00438062, 0.00461992, 0.0044176\n+DuplicateInputs, 5, 10, 0.349838, 0.00681664, 0.0071578, 0.00699272\n+FastRandom_1bit, 5, 440000000, 3.55037, 1.60107e-09, 1.63897e-09, 1.60388e-09\n+FastRandom_32bit, 5, 110000000, 4.66069, 8.43174e-09, 8.50173e-09, 8.47942e-09\n+MatchGCSFilter, 5, 50000, 5.29045, 2.10328e-05, 2.12565e-05, 2.11911e-05\n+MempoolEviction, 5, 41000, 3.02568, 1.46642e-05, 1.49587e-05, 1.47037e-05\n+MerkleRoot, 5, 800, 4.55175, 0.00113359, 0.00114235, 0.00113847\n+POLY1305_1MB, 5, 340, 1.20259, 0.000703508, 0.000711726, 0.000707535\n+POLY1305_256BYTES, 5, 250000, 0.240919, 1.87676e-07, 2.0346e-07, 1.9024e-07\n+POLY1305_64BYTES, 5, 500000, 0.14503, 5.73722e-08, 5.9313e-08, 5.78021e-08\n+PrePadded, 5, 10000, 0.0105583, 2.08606e-07, 2.16661e-07, 2.10247e-07\n+PrevectorClearNontrivial, 5, 28300, 9.74354, 6.7409e-05, 7.11888e-05, 6.83039e-05\n+PrevectorClearTrivial, 5, 88600, 19.8132, 4.43881e-05, 4.52573e-05, 4.46334e-05\n+PrevectorDeserializeNontrivial, 5, 6800, 2.48919, 7.19162e-05, 7.49433e-05, 7.2365e-05\n+PrevectorDeserializeTrivial, 5, 52000, 2.75915, 1.04626e-05, 1.07667e-05, 1.06177e-05\n+PrevectorDestructorNontrivial, 5, 28800, 9.03402, 6.1415e-05, 6.52106e-05, 6.16662e-05\n+PrevectorDestructorTrivial, 5, 88900, 18.6047, 4.16076e-05, 4.21505e-05, 4.18157e-05\n+PrevectorResizeNontrivial, 5, 28900, 2.88001, 1.98667e-05, 2.00179e-05, 1.98966e-05\n+PrevectorResizeTrivial, 5, 90300, 3.24412, 7.16336e-06, 7.25998e-06, 7.16659e-06\n+RIPEMD160, 5, 440, 4.88606, 0.00220545, 0.00225396, 0.00221235\n+RegularPadded, 5, 10000, 0.0211132, 4.07576e-07, 4.53654e-07, 4.11425e-07\n+RollingBloom, 5, 1500000, 3.65431, 4.76011e-07, 5.10435e-07, 4.80835e-07\n+RollingBloomReset, 5, 20000, 5.59406, 5.52469e-05, 5.76053e-05, 5.57199e-05\n+RpcMempool, 5, 40, 3.17675, 0.0158117, 0.0160428, 0.0158462\n+SHA1, 5, 570, 4.70379, 0.0016439, 0.0016631, 0.00164822\n+SHA256, 5, 340, 4.74761, 0.00277871, 0.00280425, 0.00279286\n+SHA256D64_1024, 5, 7400, 4.57789, 0.000118055, 0.000130664, 0.000122628\n+SHA256_32b, 5, 4700000, 4.74901, 1.98897e-07, 2.05686e-07, 2.01991e-07\n+SHA512, 5, 330, 4.56722, 0.00273604, 0.00279254, 0.00276721\n+SipHash_32b, 5, 40000000, 5.00388, 2.46464e-08, 2.55899e-08, 2.48747e-08\n+Sleep100ms, 5, 10, 5.01005, 0.100187, 0.10021, 0.100201\n+Trig, 5, 12000000, 1.72352, 2.60512e-08, 3.09944e-08, 2.8639e-08\n+VerifyScriptBench, 5, 6300, 4.28922, 0.000132975, 0.000143875, 0.000133716\n+WalletBalanceClean, 5, 8000, 2.32476, 5.75268e-05, 5.96201e-05, 5.77432e-05\n+WalletBalanceDirty, 5, 2500, 3.20313, 0.000255601, 0.000256807, 0.000256311\n+WalletBalanceMine, 5, 16000, 2.2409, 2.78764e-05, 2.81732e-05, 2.8009e-05\n+WalletBalanceWatch, 5, 8000, 2.29993, 5.73364e-05, 5.77806e-05, 5.74599e-05\n ```\n \n Help\n ---------------------\n-`-?` will print a list of options and exit:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310218545",
      "id" : 310218545,
      "in_reply_to_id" : 310213765,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIxODU0NQ==",
      "original_commit_id" : "49803e878ba21eb9f9299241f5e131c185f6aff3",
      "original_position" : 108,
      "path" : "doc/benchmarking.md",
      "position" : 53,
      "pull_request_review_id" : 270291951,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310218545",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated with nits at 9a4b366 with link to how to do flame graph.",
      "created_at" : "2019-08-02T17:02:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#issuecomment-517775247",
      "id" : 517775247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNzc3NTI0Nw==",
      "updated_at" : "2019-08-02T17:02:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517775247",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 9a4b3665baa996bd88c34fa9710c8cd1907c6204",
      "created_at" : "2019-08-02T17:06:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#issuecomment-517776607",
      "id" : 517776607,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNzc3NjYwNw==",
      "updated_at" : "2019-08-02T17:06:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517776607",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK for shameless bitcoinperf plug.",
      "created_at" : "2019-08-02T17:08:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#issuecomment-517777165",
      "id" : 517777165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNzc3NzE2NQ==",
      "updated_at" : "2019-08-02T17:08:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517777165",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310220805"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310220805"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Extra before `:`?",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T17:09:10Z",
      "diff_hunk" : "@@ -2,54 +2,46 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts\n+benchmarking\n+\n+    make -C src bench_bitcoin\n+\n After compiling bitcoin-core, the benchmarks can be run with:\n \n     src/bench/bench_bitcoin\n \n The output will look similar to:\n ```\n # Benchmark, evals, iterations, total, min, max, median\n-Base58CheckEncode, 5, 320000, 120.772, 7.49351e-05, 7.59374e-05, 7.54759e-05\n-Base58Decode, 5, 800000, 122.833, 3.0467e-05, 3.11732e-05, 3.06304e-05\n-Base58Encode, 5, 470000, 137.094, 5.81061e-05, 5.85109e-05, 5.84462e-05\n-BenchLockedPool, 5, 530, 34.2023, 0.0128247, 0.0129613, 0.0129026\n-CCheckQueueSpeedPrevectorJob, 5, 1400, 26.1762, 0.00365048, 0.00388629, 0.00367108\n-CCoinsCaching, 5, 170000, 48.1074, 5.60229e-05, 5.72316e-05, 5.66214e-05\n-CoinSelection, 5, 650, 34.6426, 0.0105801, 0.0107699, 0.010664\n-DeserializeAndCheckBlockTest, 5, 160, 39.2084, 0.0483662, 0.0494199, 0.0490138\n-DeserializeBlockTest, 5, 130, 23.8129, 0.0357731, 0.0373763, 0.0365858\n-FastRandom_1bit, 5, 440000000, 38.1609, 1.72974e-08, 1.73882e-08, 1.73478e-08\n-FastRandom_32bit, 5, 110000000, 72.8237, 1.29992e-07, 1.37014e-07, 1.30115e-07\n-MempoolEviction, 5, 41000, 89.8883, 0.000432748, 0.000446857, 0.000438483\n-PrevectorClear, 5, 5600, 47.9229, 0.00169952, 0.0017455, 0.00170315\n-PrevectorDestructor, 5, 5700, 44.5498, 0.0015561, 0.00156977, 0.00156469\n-RIPEMD160, 5, 440, 135.988, 0.0615496, 0.062268, 0.0617779\n-RollingBloom, 5, 1500000, 36.5109, 4.80961e-06, 4.97463e-06, 4.85811e-06\n-SHA1, 5, 570, 51.808, 0.018065, 0.0182623, 0.0181865\n-SHA256, 5, 340, 8.31841, 0.00483231, 0.00499803, 0.00485486\n-SHA256_32b, 5, 4700000, 10.469, 4.43441e-07, 4.47611e-07, 4.45223e-07\n-SHA512, 5, 330, 33.3408, 0.02017, 0.0202554, 0.0201921\n-SipHash_32b, 5, 40000000, 38.7088, 1.91103e-07, 1.96998e-07, 1.93792e-07\n-Sleep100ms, 5, 10, 5.01062, 0.100131, 0.100368, 0.100147\n-Trig, 5, 12000000, 5.95494, 9.78115e-08, 1.04354e-07, 9.80682e-08\n-VerifyScriptBench, 5, 6300, 9.02493, 0.000285566, 0.000288433, 0.000286175\n+AssembleBlock, 5, 700, 1.79954, 0.000510913, 0.000517018, 0.000514497\n+...\n ```\n \n Help\n ---------------------\n-`-?` will print a list of options and exit:\n \n-    src/bench/bench_bitcoin -?\n+    src/bench/bench_bitcoin --help\n+\n+Print you options like scaling factor or per-benchmark filter.\n \n Notes\n ---------------------\n More benchmarks are needed for, in no particular order:\n - Script Validation\n-- CCoinDBView caching\n - Coins database\n - Memory pool\n-- Wallet coin selection\n+- Cuckoo Cache\n+\n+Going Further\n+--------------------\n+\n+If you want to monitor Bitcoin Core performance more in depth (like reindex or IBD) : https://github.com/chaincodelabs/bitcoinperf",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310220805",
      "id" : 310220805,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIyMDgwNQ==",
      "original_commit_id" : "9a4b3665baa996bd88c34fa9710c8cd1907c6204",
      "original_position" : 73,
      "path" : "doc/benchmarking.md",
      "position" : null,
      "pull_request_review_id" : 270295000,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310220805",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310220891"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310220891"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Extra before `:`?",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T17:09:27Z",
      "diff_hunk" : "@@ -2,54 +2,46 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts\n+benchmarking\n+\n+    make -C src bench_bitcoin\n+\n After compiling bitcoin-core, the benchmarks can be run with:\n \n     src/bench/bench_bitcoin\n \n The output will look similar to:\n ```\n # Benchmark, evals, iterations, total, min, max, median\n-Base58CheckEncode, 5, 320000, 120.772, 7.49351e-05, 7.59374e-05, 7.54759e-05\n-Base58Decode, 5, 800000, 122.833, 3.0467e-05, 3.11732e-05, 3.06304e-05\n-Base58Encode, 5, 470000, 137.094, 5.81061e-05, 5.85109e-05, 5.84462e-05\n-BenchLockedPool, 5, 530, 34.2023, 0.0128247, 0.0129613, 0.0129026\n-CCheckQueueSpeedPrevectorJob, 5, 1400, 26.1762, 0.00365048, 0.00388629, 0.00367108\n-CCoinsCaching, 5, 170000, 48.1074, 5.60229e-05, 5.72316e-05, 5.66214e-05\n-CoinSelection, 5, 650, 34.6426, 0.0105801, 0.0107699, 0.010664\n-DeserializeAndCheckBlockTest, 5, 160, 39.2084, 0.0483662, 0.0494199, 0.0490138\n-DeserializeBlockTest, 5, 130, 23.8129, 0.0357731, 0.0373763, 0.0365858\n-FastRandom_1bit, 5, 440000000, 38.1609, 1.72974e-08, 1.73882e-08, 1.73478e-08\n-FastRandom_32bit, 5, 110000000, 72.8237, 1.29992e-07, 1.37014e-07, 1.30115e-07\n-MempoolEviction, 5, 41000, 89.8883, 0.000432748, 0.000446857, 0.000438483\n-PrevectorClear, 5, 5600, 47.9229, 0.00169952, 0.0017455, 0.00170315\n-PrevectorDestructor, 5, 5700, 44.5498, 0.0015561, 0.00156977, 0.00156469\n-RIPEMD160, 5, 440, 135.988, 0.0615496, 0.062268, 0.0617779\n-RollingBloom, 5, 1500000, 36.5109, 4.80961e-06, 4.97463e-06, 4.85811e-06\n-SHA1, 5, 570, 51.808, 0.018065, 0.0182623, 0.0181865\n-SHA256, 5, 340, 8.31841, 0.00483231, 0.00499803, 0.00485486\n-SHA256_32b, 5, 4700000, 10.469, 4.43441e-07, 4.47611e-07, 4.45223e-07\n-SHA512, 5, 330, 33.3408, 0.02017, 0.0202554, 0.0201921\n-SipHash_32b, 5, 40000000, 38.7088, 1.91103e-07, 1.96998e-07, 1.93792e-07\n-Sleep100ms, 5, 10, 5.01062, 0.100131, 0.100368, 0.100147\n-Trig, 5, 12000000, 5.95494, 9.78115e-08, 1.04354e-07, 9.80682e-08\n-VerifyScriptBench, 5, 6300, 9.02493, 0.000285566, 0.000288433, 0.000286175\n+AssembleBlock, 5, 700, 1.79954, 0.000510913, 0.000517018, 0.000514497\n+...\n ```\n \n Help\n ---------------------\n-`-?` will print a list of options and exit:\n \n-    src/bench/bench_bitcoin -?\n+    src/bench/bench_bitcoin --help\n+\n+Print you options like scaling factor or per-benchmark filter.\n \n Notes\n ---------------------\n More benchmarks are needed for, in no particular order:\n - Script Validation\n-- CCoinDBView caching\n - Coins database\n - Memory pool\n-- Wallet coin selection\n+- Cuckoo Cache\n+\n+Going Further\n+--------------------\n+\n+If you want to monitor Bitcoin Core performance more in depth (like reindex or IBD) : https://github.com/chaincodelabs/bitcoinperf\n+\n+If you want to generate Flame Graphs for Bitcoin Core : https://github.com/eklitzke/bitcoin/blob/flamegraphs/doc/flamegraphs.md",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310220891",
      "id" : 310220891,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIyMDg5MQ==",
      "original_commit_id" : "9a4b3665baa996bd88c34fa9710c8cd1907c6204",
      "original_position" : 75,
      "path" : "doc/benchmarking.md",
      "position" : null,
      "pull_request_review_id" : 270295124,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310220891",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 9a4b3665baa996bd88c34fa9710c8cd1907c6204 modulo nits",
      "created_at" : "2019-08-02T17:09:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#issuecomment-517777603",
      "id" : 517777603,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNzc3NzYwMw==",
      "updated_at" : "2019-08-02T17:09:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517777603",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310221967"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310221967"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "s/you/[your|out]/? Not sure which word you meant to write here but this isn't right.",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T17:12:52Z",
      "diff_hunk" : "@@ -2,54 +2,46 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts\n+benchmarking\n+\n+    make -C src bench_bitcoin\n+\n After compiling bitcoin-core, the benchmarks can be run with:\n \n     src/bench/bench_bitcoin\n \n The output will look similar to:\n ```\n # Benchmark, evals, iterations, total, min, max, median\n-Base58CheckEncode, 5, 320000, 120.772, 7.49351e-05, 7.59374e-05, 7.54759e-05\n-Base58Decode, 5, 800000, 122.833, 3.0467e-05, 3.11732e-05, 3.06304e-05\n-Base58Encode, 5, 470000, 137.094, 5.81061e-05, 5.85109e-05, 5.84462e-05\n-BenchLockedPool, 5, 530, 34.2023, 0.0128247, 0.0129613, 0.0129026\n-CCheckQueueSpeedPrevectorJob, 5, 1400, 26.1762, 0.00365048, 0.00388629, 0.00367108\n-CCoinsCaching, 5, 170000, 48.1074, 5.60229e-05, 5.72316e-05, 5.66214e-05\n-CoinSelection, 5, 650, 34.6426, 0.0105801, 0.0107699, 0.010664\n-DeserializeAndCheckBlockTest, 5, 160, 39.2084, 0.0483662, 0.0494199, 0.0490138\n-DeserializeBlockTest, 5, 130, 23.8129, 0.0357731, 0.0373763, 0.0365858\n-FastRandom_1bit, 5, 440000000, 38.1609, 1.72974e-08, 1.73882e-08, 1.73478e-08\n-FastRandom_32bit, 5, 110000000, 72.8237, 1.29992e-07, 1.37014e-07, 1.30115e-07\n-MempoolEviction, 5, 41000, 89.8883, 0.000432748, 0.000446857, 0.000438483\n-PrevectorClear, 5, 5600, 47.9229, 0.00169952, 0.0017455, 0.00170315\n-PrevectorDestructor, 5, 5700, 44.5498, 0.0015561, 0.00156977, 0.00156469\n-RIPEMD160, 5, 440, 135.988, 0.0615496, 0.062268, 0.0617779\n-RollingBloom, 5, 1500000, 36.5109, 4.80961e-06, 4.97463e-06, 4.85811e-06\n-SHA1, 5, 570, 51.808, 0.018065, 0.0182623, 0.0181865\n-SHA256, 5, 340, 8.31841, 0.00483231, 0.00499803, 0.00485486\n-SHA256_32b, 5, 4700000, 10.469, 4.43441e-07, 4.47611e-07, 4.45223e-07\n-SHA512, 5, 330, 33.3408, 0.02017, 0.0202554, 0.0201921\n-SipHash_32b, 5, 40000000, 38.7088, 1.91103e-07, 1.96998e-07, 1.93792e-07\n-Sleep100ms, 5, 10, 5.01062, 0.100131, 0.100368, 0.100147\n-Trig, 5, 12000000, 5.95494, 9.78115e-08, 1.04354e-07, 9.80682e-08\n-VerifyScriptBench, 5, 6300, 9.02493, 0.000285566, 0.000288433, 0.000286175\n+AssembleBlock, 5, 700, 1.79954, 0.000510913, 0.000517018, 0.000514497\n+...\n ```\n \n Help\n ---------------------\n-`-?` will print a list of options and exit:\n \n-    src/bench/bench_bitcoin -?\n+    src/bench/bench_bitcoin --help\n+\n+Print you options like scaling factor or per-benchmark filter.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310221967",
      "id" : 310221967,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIyMTk2Nw==",
      "original_commit_id" : "9a4b3665baa996bd88c34fa9710c8cd1907c6204",
      "original_position" : 58,
      "path" : "doc/benchmarking.md",
      "position" : null,
      "pull_request_review_id" : 270296552,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310221967",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310222699"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310222699"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: for brevity s/If you want to/To/",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T17:14:47Z",
      "diff_hunk" : "@@ -2,54 +2,46 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts\n+benchmarking\n+\n+    make -C src bench_bitcoin\n+\n After compiling bitcoin-core, the benchmarks can be run with:\n \n     src/bench/bench_bitcoin\n \n The output will look similar to:\n ```\n # Benchmark, evals, iterations, total, min, max, median\n-Base58CheckEncode, 5, 320000, 120.772, 7.49351e-05, 7.59374e-05, 7.54759e-05\n-Base58Decode, 5, 800000, 122.833, 3.0467e-05, 3.11732e-05, 3.06304e-05\n-Base58Encode, 5, 470000, 137.094, 5.81061e-05, 5.85109e-05, 5.84462e-05\n-BenchLockedPool, 5, 530, 34.2023, 0.0128247, 0.0129613, 0.0129026\n-CCheckQueueSpeedPrevectorJob, 5, 1400, 26.1762, 0.00365048, 0.00388629, 0.00367108\n-CCoinsCaching, 5, 170000, 48.1074, 5.60229e-05, 5.72316e-05, 5.66214e-05\n-CoinSelection, 5, 650, 34.6426, 0.0105801, 0.0107699, 0.010664\n-DeserializeAndCheckBlockTest, 5, 160, 39.2084, 0.0483662, 0.0494199, 0.0490138\n-DeserializeBlockTest, 5, 130, 23.8129, 0.0357731, 0.0373763, 0.0365858\n-FastRandom_1bit, 5, 440000000, 38.1609, 1.72974e-08, 1.73882e-08, 1.73478e-08\n-FastRandom_32bit, 5, 110000000, 72.8237, 1.29992e-07, 1.37014e-07, 1.30115e-07\n-MempoolEviction, 5, 41000, 89.8883, 0.000432748, 0.000446857, 0.000438483\n-PrevectorClear, 5, 5600, 47.9229, 0.00169952, 0.0017455, 0.00170315\n-PrevectorDestructor, 5, 5700, 44.5498, 0.0015561, 0.00156977, 0.00156469\n-RIPEMD160, 5, 440, 135.988, 0.0615496, 0.062268, 0.0617779\n-RollingBloom, 5, 1500000, 36.5109, 4.80961e-06, 4.97463e-06, 4.85811e-06\n-SHA1, 5, 570, 51.808, 0.018065, 0.0182623, 0.0181865\n-SHA256, 5, 340, 8.31841, 0.00483231, 0.00499803, 0.00485486\n-SHA256_32b, 5, 4700000, 10.469, 4.43441e-07, 4.47611e-07, 4.45223e-07\n-SHA512, 5, 330, 33.3408, 0.02017, 0.0202554, 0.0201921\n-SipHash_32b, 5, 40000000, 38.7088, 1.91103e-07, 1.96998e-07, 1.93792e-07\n-Sleep100ms, 5, 10, 5.01062, 0.100131, 0.100368, 0.100147\n-Trig, 5, 12000000, 5.95494, 9.78115e-08, 1.04354e-07, 9.80682e-08\n-VerifyScriptBench, 5, 6300, 9.02493, 0.000285566, 0.000288433, 0.000286175\n+AssembleBlock, 5, 700, 1.79954, 0.000510913, 0.000517018, 0.000514497\n+...\n ```\n \n Help\n ---------------------\n-`-?` will print a list of options and exit:\n \n-    src/bench/bench_bitcoin -?\n+    src/bench/bench_bitcoin --help\n+\n+Print you options like scaling factor or per-benchmark filter.\n \n Notes\n ---------------------\n More benchmarks are needed for, in no particular order:\n - Script Validation\n-- CCoinDBView caching\n - Coins database\n - Memory pool\n-- Wallet coin selection\n+- Cuckoo Cache\n+\n+Going Further\n+--------------------\n+\n+If you want to monitor Bitcoin Core performance more in depth (like reindex or IBD) : https://github.com/chaincodelabs/bitcoinperf\n+\n+If you want to generate Flame Graphs for Bitcoin Core : https://github.com/eklitzke/bitcoin/blob/flamegraphs/doc/flamegraphs.md",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310222699",
      "id" : 310222699,
      "in_reply_to_id" : 310220891,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIyMjY5OQ==",
      "original_commit_id" : "9a4b3665baa996bd88c34fa9710c8cd1907c6204",
      "original_position" : 75,
      "path" : "doc/benchmarking.md",
      "position" : null,
      "pull_request_review_id" : 270296552,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310222699",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310222758"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310222758"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: for brevity s/If you want to/To/",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T17:15:00Z",
      "diff_hunk" : "@@ -2,54 +2,46 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts\n+benchmarking\n+\n+    make -C src bench_bitcoin\n+\n After compiling bitcoin-core, the benchmarks can be run with:\n \n     src/bench/bench_bitcoin\n \n The output will look similar to:\n ```\n # Benchmark, evals, iterations, total, min, max, median\n-Base58CheckEncode, 5, 320000, 120.772, 7.49351e-05, 7.59374e-05, 7.54759e-05\n-Base58Decode, 5, 800000, 122.833, 3.0467e-05, 3.11732e-05, 3.06304e-05\n-Base58Encode, 5, 470000, 137.094, 5.81061e-05, 5.85109e-05, 5.84462e-05\n-BenchLockedPool, 5, 530, 34.2023, 0.0128247, 0.0129613, 0.0129026\n-CCheckQueueSpeedPrevectorJob, 5, 1400, 26.1762, 0.00365048, 0.00388629, 0.00367108\n-CCoinsCaching, 5, 170000, 48.1074, 5.60229e-05, 5.72316e-05, 5.66214e-05\n-CoinSelection, 5, 650, 34.6426, 0.0105801, 0.0107699, 0.010664\n-DeserializeAndCheckBlockTest, 5, 160, 39.2084, 0.0483662, 0.0494199, 0.0490138\n-DeserializeBlockTest, 5, 130, 23.8129, 0.0357731, 0.0373763, 0.0365858\n-FastRandom_1bit, 5, 440000000, 38.1609, 1.72974e-08, 1.73882e-08, 1.73478e-08\n-FastRandom_32bit, 5, 110000000, 72.8237, 1.29992e-07, 1.37014e-07, 1.30115e-07\n-MempoolEviction, 5, 41000, 89.8883, 0.000432748, 0.000446857, 0.000438483\n-PrevectorClear, 5, 5600, 47.9229, 0.00169952, 0.0017455, 0.00170315\n-PrevectorDestructor, 5, 5700, 44.5498, 0.0015561, 0.00156977, 0.00156469\n-RIPEMD160, 5, 440, 135.988, 0.0615496, 0.062268, 0.0617779\n-RollingBloom, 5, 1500000, 36.5109, 4.80961e-06, 4.97463e-06, 4.85811e-06\n-SHA1, 5, 570, 51.808, 0.018065, 0.0182623, 0.0181865\n-SHA256, 5, 340, 8.31841, 0.00483231, 0.00499803, 0.00485486\n-SHA256_32b, 5, 4700000, 10.469, 4.43441e-07, 4.47611e-07, 4.45223e-07\n-SHA512, 5, 330, 33.3408, 0.02017, 0.0202554, 0.0201921\n-SipHash_32b, 5, 40000000, 38.7088, 1.91103e-07, 1.96998e-07, 1.93792e-07\n-Sleep100ms, 5, 10, 5.01062, 0.100131, 0.100368, 0.100147\n-Trig, 5, 12000000, 5.95494, 9.78115e-08, 1.04354e-07, 9.80682e-08\n-VerifyScriptBench, 5, 6300, 9.02493, 0.000285566, 0.000288433, 0.000286175\n+AssembleBlock, 5, 700, 1.79954, 0.000510913, 0.000517018, 0.000514497\n+...\n ```\n \n Help\n ---------------------\n-`-?` will print a list of options and exit:\n \n-    src/bench/bench_bitcoin -?\n+    src/bench/bench_bitcoin --help\n+\n+Print you options like scaling factor or per-benchmark filter.\n \n Notes\n ---------------------\n More benchmarks are needed for, in no particular order:\n - Script Validation\n-- CCoinDBView caching\n - Coins database\n - Memory pool\n-- Wallet coin selection\n+- Cuckoo Cache\n+\n+Going Further\n+--------------------\n+\n+If you want to monitor Bitcoin Core performance more in depth (like reindex or IBD) : https://github.com/chaincodelabs/bitcoinperf",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310222758",
      "id" : 310222758,
      "in_reply_to_id" : 310220805,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIyMjc1OA==",
      "original_commit_id" : "9a4b3665baa996bd88c34fa9710c8cd1907c6204",
      "original_position" : 73,
      "path" : "doc/benchmarking.md",
      "position" : null,
      "pull_request_review_id" : 270296552,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310222758",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310223393"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310223393"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Grammar error: s/to configure/of configuring/",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T17:16:48Z",
      "diff_hunk" : "@@ -2,54 +2,46 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310223393",
      "id" : 310223393,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIyMzM5Mw==",
      "original_commit_id" : "9a4b3665baa996bd88c34fa9710c8cd1907c6204",
      "original_position" : 11,
      "path" : "doc/benchmarking.md",
      "position" : null,
      "pull_request_review_id" : 270296552,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310223393",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310224204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310224204"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could you describe how/why omitting the `--enable-debug` argument would impact benchmarking?\r\n\r\nNit: missing punctuation at end of sentence.",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T17:19:14Z",
      "diff_hunk" : "@@ -2,54 +2,46 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts\n+benchmarking",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310224204",
      "id" : 310224204,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIyNDIwNA==",
      "original_commit_id" : "9a4b3665baa996bd88c34fa9710c8cd1907c6204",
      "original_position" : 12,
      "path" : "doc/benchmarking.md",
      "position" : null,
      "pull_request_review_id" : 270296552,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310224204",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310224750"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310224750"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "s/it impacts/this would impact/",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T17:20:50Z",
      "diff_hunk" : "@@ -2,54 +2,46 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310224750",
      "id" : 310224750,
      "in_reply_to_id" : 310223393,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIyNDc1MA==",
      "original_commit_id" : "9a4b3665baa996bd88c34fa9710c8cd1907c6204",
      "original_position" : 11,
      "path" : "doc/benchmarking.md",
      "position" : null,
      "pull_request_review_id" : 270300118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310224750",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated at 05fdb97, thanks all for the super-fast reviews!",
      "created_at" : "2019-08-02T17:32:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#issuecomment-517784587",
      "id" : 517784587,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNzc4NDU4Nw==",
      "updated_at" : "2019-08-02T17:33:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517784587",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310234968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310234968"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I would say main point is lock analysis, updated",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T17:49:48Z",
      "diff_hunk" : "@@ -2,54 +2,46 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware to configure without `--enable-debug` as it impacts\n+benchmarking",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310234968",
      "id" : 310234968,
      "in_reply_to_id" : 310224204,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDIzNDk2OA==",
      "original_commit_id" : "9a4b3665baa996bd88c34fa9710c8cd1907c6204",
      "original_position" : 12,
      "path" : "doc/benchmarking.md",
      "position" : null,
      "pull_request_review_id" : 270313303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-02T17:49:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310234968",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-02T17:50:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#issuecomment-517790015",
      "id" : 517790015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNzc5MDAxNQ==",
      "updated_at" : "2019-08-02T17:50:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517790015",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310366868"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310366868"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shouldn't this be `make -C src bench/bench_bitcoin` ? \r\nI think that would be clearer given all the following commands all use `src/bench/bench_bitcoin`",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-04T01:09:03Z",
      "diff_hunk" : "@@ -2,54 +2,47 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware of configuring without `--enable-debug` as this would impact\n+benchmarking by unlatching log printers and lock analysis.\n+\n+    make -C src bench_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310366868",
      "id" : 310366868,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM2Njg2OA==",
      "original_commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "original_position" : 14,
      "path" : "doc/benchmarking.md",
      "position" : 14,
      "pull_request_review_id" : 270477140,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-04T01:09:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310366868",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310372910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310372910"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Well in fact no.  I was surprised but `make -C src bench/bench_bitcoin` doesn't work. Maybe makefile target needs to be updated somewhere..",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-04T06:50:39Z",
      "diff_hunk" : "@@ -2,54 +2,47 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware of configuring without `--enable-debug` as this would impact\n+benchmarking by unlatching log printers and lock analysis.\n+\n+    make -C src bench_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310372910",
      "id" : 310372910,
      "in_reply_to_id" : 310366868,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM3MjkxMA==",
      "original_commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "original_position" : 14,
      "path" : "doc/benchmarking.md",
      "position" : 14,
      "pull_request_review_id" : 270483300,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-04T06:50:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310372910",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, I want to give a try to flame graph and beef it up, will bring it in at this point. Like soon.",
      "created_at" : "2019-08-04T06:53:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#issuecomment-517978985",
      "id" : 517978985,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNzk3ODk4NQ==",
      "updated_at" : "2019-08-04T06:53:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517978985",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310373010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310373010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thatâs confusing, it worked for me when I tested it earlier?",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-04T06:53:51Z",
      "diff_hunk" : "@@ -2,54 +2,47 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware of configuring without `--enable-debug` as this would impact\n+benchmarking by unlatching log printers and lock analysis.\n+\n+    make -C src bench_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310373010",
      "id" : 310373010,
      "in_reply_to_id" : 310366868,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM3MzAxMA==",
      "original_commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "original_position" : 14,
      "path" : "doc/benchmarking.md",
      "position" : 14,
      "pull_request_review_id" : 270483408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-04T06:53:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310373010",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310373302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310373302"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Dunno but I tested it again on my Debian and doesn't work. Should some configure flags be set correctly ?",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-04T07:00:44Z",
      "diff_hunk" : "@@ -2,54 +2,47 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware of configuring without `--enable-debug` as this would impact\n+benchmarking by unlatching log printers and lock analysis.\n+\n+    make -C src bench_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310373302",
      "id" : 310373302,
      "in_reply_to_id" : 310366868,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM3MzMwMg==",
      "original_commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "original_position" : 14,
      "path" : "doc/benchmarking.md",
      "position" : 14,
      "pull_request_review_id" : 270483661,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-04T07:00:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310373302",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310373746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310373746"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm just doing:\r\n```bash\r\ncd bitcoin\r\n./autogen.sh\r\n./configure\r\nmake -C src bench/bench_bitcoin\r\nsrc/bench/bench_bitcoin --help\r\n```",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-04T07:14:31Z",
      "diff_hunk" : "@@ -2,54 +2,47 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware of configuring without `--enable-debug` as this would impact\n+benchmarking by unlatching log printers and lock analysis.\n+\n+    make -C src bench_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310373746",
      "id" : 310373746,
      "in_reply_to_id" : 310366868,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM3Mzc0Ng==",
      "original_commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "original_position" : 14,
      "path" : "doc/benchmarking.md",
      "position" : 14,
      "pull_request_review_id" : 270484120,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-04T07:14:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310373746",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310374672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310374672"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Tried same and got a classic makefile error:\r\n\r\n```\r\nmake: Entering directory '/home/user/Bitcoin/bitcoin/src'\r\nmake: *** No rule to make target 'bench/bitcoin_bench'.  Stop.\r\nmake: Leaving directory '/home/user/Bitcoin/bitcoin/src",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-04T07:39:40Z",
      "diff_hunk" : "@@ -2,54 +2,47 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware of configuring without `--enable-debug` as this would impact\n+benchmarking by unlatching log printers and lock analysis.\n+\n+    make -C src bench_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310374672",
      "id" : 310374672,
      "in_reply_to_id" : 310366868,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM3NDY3Mg==",
      "original_commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "original_position" : 14,
      "path" : "doc/benchmarking.md",
      "position" : 14,
      "pull_request_review_id" : 270485072,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-04T07:39:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310374672",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310566453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310566453"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```sh\r\n$ make -j 9 -C src bench/bench_bitcoin\r\nmake: Entering directory '/home/marco/workspace/btc_bitcoin_core/src'\r\nmake[1]: Entering directory '/home/marco/workspace/btc_bitcoin_core'\r\nmake[1]: Leaving directory '/home/marco/workspace/btc_bitcoin_core'\r\nmake: Leaving directory '/home/marco/workspace/btc_bitcoin_core/src'\r\n\r\n$ make -j 9 -C src bench_bitcoin\r\nmake: Entering directory '/home/marco/workspace/btc_bitcoin_core/src'\r\nmake: *** No rule to make target 'bench_bitcoin'.  Stop.\r\nmake: Leaving directory '/home/marco/workspace/btc_bitcoin_core/src'\r\n",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-05T11:53:01Z",
      "diff_hunk" : "@@ -2,54 +2,47 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware of configuring without `--enable-debug` as this would impact\n+benchmarking by unlatching log printers and lock analysis.\n+\n+    make -C src bench_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310566453",
      "id" : 310566453,
      "in_reply_to_id" : 310366868,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDU2NjQ1Mw==",
      "original_commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "original_position" : 14,
      "path" : "doc/benchmarking.md",
      "position" : 14,
      "pull_request_review_id" : 270718036,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-05T11:53:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310566453",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310566500"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310566500"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What version of debian are you using?",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-05T11:53:11Z",
      "diff_hunk" : "@@ -2,54 +2,47 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware of configuring without `--enable-debug` as this would impact\n+benchmarking by unlatching log printers and lock analysis.\n+\n+    make -C src bench_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310566500",
      "id" : 310566500,
      "in_reply_to_id" : 310366868,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDU2NjUwMA==",
      "original_commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "original_position" : 14,
      "path" : "doc/benchmarking.md",
      "position" : 14,
      "pull_request_review_id" : 270718099,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-05T11:53:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310566500",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310594894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310594894"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```\r\nmake -j 9 -C src bench_bitcoin\r\nsrc/bench/bench_bitcoin --help\r\n```\r\nfrom root this works for me on Debian 4.19.37-5 (2019-06-19) x86_64.",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-05T13:07:34Z",
      "diff_hunk" : "@@ -2,54 +2,47 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware of configuring without `--enable-debug` as this would impact\n+benchmarking by unlatching log printers and lock analysis.\n+\n+    make -C src bench_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310594894",
      "id" : 310594894,
      "in_reply_to_id" : 310366868,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDU5NDg5NA==",
      "original_commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "original_position" : 14,
      "path" : "doc/benchmarking.md",
      "position" : 14,
      "pull_request_review_id" : 270754030,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-05T13:07:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310594894",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310784064"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310784064"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Debian 9.9. This one works too for me.",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-05T20:44:20Z",
      "diff_hunk" : "@@ -2,54 +2,47 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware of configuring without `--enable-debug` as this would impact\n+benchmarking by unlatching log printers and lock analysis.\n+\n+    make -C src bench_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310784064",
      "id" : 310784064,
      "in_reply_to_id" : 310366868,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDc4NDA2NA==",
      "original_commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "original_position" : 14,
      "path" : "doc/benchmarking.md",
      "position" : 14,
      "pull_request_review_id" : 270995527,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-05T20:44:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310784064",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310798416"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310798416"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Huh, in a fresh docker of debian 9.9 I get:\r\n\r\n\r\n```\r\n# lsb_release -d && make -j 16 -C src bench_bitcoin\r\nDescription:\tDebian GNU/Linux 9.9 (stretch)\r\nmake: Entering directory '/bitcoin/src'\r\nmake: *** No rule to make target 'bench_bitcoin'.  Stop.\r\nmake: Leaving directory '/bitcoin/src'\r\n\r\n",
      "commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "created_at" : "2019-08-05T21:24:48Z",
      "diff_hunk" : "@@ -2,54 +2,47 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware of configuring without `--enable-debug` as this would impact\n+benchmarking by unlatching log printers and lock analysis.\n+\n+    make -C src bench_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16536#discussion_r310798416",
      "id" : 310798416,
      "in_reply_to_id" : 310366868,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDc5ODQxNg==",
      "original_commit_id" : "05fdb97df46d0a0675b93e9791bd5d498e5e5117",
      "original_position" : 14,
      "path" : "doc/benchmarking.md",
      "position" : 14,
      "pull_request_review_id" : 271013526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16536",
      "updated_at" : "2019-08-05T21:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310798416",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
