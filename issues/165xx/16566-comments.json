[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nThanks for cleaning this up.\r\n\r\nWill review the code.\r\n\r\n> I don't think the optimization that the pre-refactor state gave warrants the unwieldy usage.\r\n\r\nVery much so. (Also unclear if the pre-refactor state is a meaningful optimisation in practice.)",
      "created_at" : "2019-08-08T07:26:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#issuecomment-519401846",
      "id" : 519401846,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16566",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxOTQwMTg0Ng==",
      "updated_at" : "2019-08-08T20:18:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519401846",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK for improved readability and usability.",
      "created_at" : "2019-08-08T08:33:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#issuecomment-519423777",
      "id" : 519423777,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16566",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxOTQyMzc3Nw==",
      "updated_at" : "2019-08-08T08:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519423777",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK having these as functions seems better than doing the transformation in-place\r\n\r\n> Additionally, it clarifies that the locale independency of the case functions is a feature and not a limitation\r\n\r\nYes, please do not ever add any locale dependent code to `bitcoind`. Deterministic behavior is the most important thing there (it's okay for `bitcoin-qt` but only for UI purposes). ",
      "created_at" : "2019-08-08T09:43:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#issuecomment-519448017",
      "id" : 519448017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16566",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxOTQ0ODAxNw==",
      "updated_at" : "2019-08-08T09:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519448017",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r311965823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311965823"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could reserve, same below.",
      "commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "created_at" : "2019-08-08T10:31:56Z",
      "diff_hunk" : "@@ -546,9 +546,18 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n     return true;\n }\n \n-void Downcase(std::string& str)\n+std::string ToLower(const std::string& str)\n {\n-    std::transform(str.begin(), str.end(), str.begin(), [](char c){return ToLower(c);});\n+    std::string r;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r311965823",
      "id" : 311965823,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTk2NTgyMw==",
      "original_commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "original_position" : 8,
      "path" : "src/util/strencodings.cpp",
      "position" : 8,
      "pull_request_review_id" : 272482198,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566",
      "updated_at" : "2019-08-08T10:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311965823",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r311966782"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311966782"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could be `net = ToLower(net)` and avoid changing the signature? Both are fine though.",
      "commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "created_at" : "2019-08-08T10:34:32Z",
      "diff_hunk" : "@@ -37,8 +37,8 @@ bool fNameLookup = DEFAULT_NAME_LOOKUP;\n static const int SOCKS5_RECV_TIMEOUT = 20 * 1000;\n static std::atomic<bool> interruptSocks5Recv(false);\n \n-enum Network ParseNetwork(std::string net) {\n-    Downcase(net);\n+enum Network ParseNetwork(const std::string& net_in) {\n+    std::string net = ToLower(net_in);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r311966782",
      "id" : 311966782,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTk2Njc4Mg==",
      "original_commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "original_position" : 7,
      "path" : "src/netbase.cpp",
      "position" : 7,
      "pull_request_review_id" : 272482198,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566",
      "updated_at" : "2019-08-08T10:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311966782",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r311977205"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311977205"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changing the signature is an improvement here IMO",
      "commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "created_at" : "2019-08-08T11:04:21Z",
      "diff_hunk" : "@@ -37,8 +37,8 @@ bool fNameLookup = DEFAULT_NAME_LOOKUP;\n static const int SOCKS5_RECV_TIMEOUT = 20 * 1000;\n static std::atomic<bool> interruptSocks5Recv(false);\n \n-enum Network ParseNetwork(std::string net) {\n-    Downcase(net);\n+enum Network ParseNetwork(const std::string& net_in) {\n+    std::string net = ToLower(net_in);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r311977205",
      "id" : 311977205,
      "in_reply_to_id" : 311966782,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTk3NzIwNQ==",
      "original_commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "original_position" : 7,
      "path" : "src/netbase.cpp",
      "position" : 7,
      "pull_request_review_id" : 272496905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566",
      "updated_at" : "2019-08-08T11:04:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311977205",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312042876"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312042876"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What does that mean?",
      "commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "created_at" : "2019-08-08T13:45:10Z",
      "diff_hunk" : "@@ -546,9 +546,18 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n     return true;\n }\n \n-void Downcase(std::string& str)\n+std::string ToLower(const std::string& str)\n {\n-    std::transform(str.begin(), str.end(), str.begin(), [](char c){return ToLower(c);});\n+    std::string r;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312042876",
      "id" : 312042876,
      "in_reply_to_id" : 311965823,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjA0Mjg3Ng==",
      "original_commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "original_position" : 8,
      "path" : "src/util/strencodings.cpp",
      "position" : 8,
      "pull_request_review_id" : 272581073,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566",
      "updated_at" : "2019-08-08T13:45:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312042876",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312045441"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312045441"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See http://www.cplusplus.com/reference/string/string/reserve/.",
      "commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "created_at" : "2019-08-08T13:49:59Z",
      "diff_hunk" : "@@ -546,9 +546,18 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n     return true;\n }\n \n-void Downcase(std::string& str)\n+std::string ToLower(const std::string& str)\n {\n-    std::transform(str.begin(), str.end(), str.begin(), [](char c){return ToLower(c);});\n+    std::string r;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312045441",
      "id" : 312045441,
      "in_reply_to_id" : 311965823,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjA0NTQ0MQ==",
      "original_commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "original_position" : 8,
      "path" : "src/util/strencodings.cpp",
      "position" : 8,
      "pull_request_review_id" : 272584372,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566",
      "updated_at" : "2019-08-08T13:49:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312045441",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "While there are cases where `Downcase` was unwieldy used, I don't think it is unwieldy as a rule, and there's no real reason to go out of the way to make things less efficient. The new functions can be added without making other code worse.",
      "created_at" : "2019-08-08T16:00:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#issuecomment-519580760",
      "id" : 519580760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16566",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxOTU4MDc2MA==",
      "updated_at" : "2019-08-08T16:00:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519580760",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312149643"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312149643"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : ">  I don't think the optimization that the pre-refactor state gave warrants the unwieldy usage.\r\n\r\nIt seems to me that the usage of the refactored function is more unwieldy than the pre-refactor state. \r\n\r\n`Downcase(net)` straightforwardly downcases the string. The refactored-state needs two variables (`const std::string& net_in`, `std::string net`) and an assignment to achieve the same result.",
      "commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "created_at" : "2019-08-08T17:16:09Z",
      "diff_hunk" : "@@ -37,8 +37,8 @@ bool fNameLookup = DEFAULT_NAME_LOOKUP;\n static const int SOCKS5_RECV_TIMEOUT = 20 * 1000;\n static std::atomic<bool> interruptSocks5Recv(false);\n \n-enum Network ParseNetwork(std::string net) {\n-    Downcase(net);\n+enum Network ParseNetwork(const std::string& net_in) {\n+    std::string net = ToLower(net_in);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312149643",
      "id" : 312149643,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjE0OTY0Mw==",
      "original_commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "original_position" : 7,
      "path" : "src/netbase.cpp",
      "position" : 7,
      "pull_request_review_id" : 272717958,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566",
      "updated_at" : "2019-08-08T18:52:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312149643",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13120787?v=4",
         "events_url" : "https://api.github.com/users/l2a5b1/events{/privacy}",
         "followers_url" : "https://api.github.com/users/l2a5b1/followers",
         "following_url" : "https://api.github.com/users/l2a5b1/following{/other_user}",
         "gists_url" : "https://api.github.com/users/l2a5b1/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/l2a5b1",
         "id" : 13120787,
         "login" : "l2a5b1",
         "node_id" : "MDQ6VXNlcjEzMTIwNzg3",
         "organizations_url" : "https://api.github.com/users/l2a5b1/orgs",
         "received_events_url" : "https://api.github.com/users/l2a5b1/received_events",
         "repos_url" : "https://api.github.com/users/l2a5b1/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/l2a5b1/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/l2a5b1"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312152510"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312152510"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What is the significant developer benefit of this change and why is the required in preparation for #11413? This function is called at just two call sites and the pre-refactor state expects that the argument is directly transformed.",
      "commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "created_at" : "2019-08-08T17:23:07Z",
      "diff_hunk" : "@@ -546,9 +546,18 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n     return true;\n }\n \n-void Downcase(std::string& str)\n+std::string ToLower(const std::string& str)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312152510",
      "id" : 312152510,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjE1MjUxMA==",
      "original_commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "original_position" : 5,
      "path" : "src/util/strencodings.cpp",
      "position" : 5,
      "pull_request_review_id" : 272717958,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566",
      "updated_at" : "2019-08-08T18:52:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312152510",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13120787?v=4",
         "events_url" : "https://api.github.com/users/l2a5b1/events{/privacy}",
         "followers_url" : "https://api.github.com/users/l2a5b1/followers",
         "following_url" : "https://api.github.com/users/l2a5b1/following{/other_user}",
         "gists_url" : "https://api.github.com/users/l2a5b1/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/l2a5b1",
         "id" : 13120787,
         "login" : "l2a5b1",
         "node_id" : "MDQ6VXNlcjEzMTIwNzg3",
         "organizations_url" : "https://api.github.com/users/l2a5b1/orgs",
         "received_events_url" : "https://api.github.com/users/l2a5b1/received_events",
         "repos_url" : "https://api.github.com/users/l2a5b1/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/l2a5b1/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/l2a5b1"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312186110"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312186110"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Pre-refactor this would just be `Downcase(key)`.",
      "commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "created_at" : "2019-08-08T18:37:46Z",
      "diff_hunk" : "@@ -388,7 +388,7 @@ bool ArgsManager::ParseParameters(int argc, const char* const argv[], std::strin\n             key.erase(is_index);\n         }\n #ifdef WIN32\n-        std::transform(key.begin(), key.end(), key.begin(), ToLower);\n+        key = ToLower(key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312186110",
      "id" : 312186110,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjE4NjExMA==",
      "original_commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "original_position" : 5,
      "path" : "src/util/system.cpp",
      "position" : 5,
      "pull_request_review_id" : 272717958,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566",
      "updated_at" : "2019-08-08T18:52:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312186110",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13120787?v=4",
         "events_url" : "https://api.github.com/users/l2a5b1/events{/privacy}",
         "followers_url" : "https://api.github.com/users/l2a5b1/followers",
         "following_url" : "https://api.github.com/users/l2a5b1/following{/other_user}",
         "gists_url" : "https://api.github.com/users/l2a5b1/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/l2a5b1",
         "id" : 13120787,
         "login" : "l2a5b1",
         "node_id" : "MDQ6VXNlcjEzMTIwNzg3",
         "organizations_url" : "https://api.github.com/users/l2a5b1/orgs",
         "received_events_url" : "https://api.github.com/users/l2a5b1/received_events",
         "repos_url" : "https://api.github.com/users/l2a5b1/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/l2a5b1/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/l2a5b1"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312231493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312231493"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@promag I don't think using `r.reserve(str.size());` necessarily results in faster execution here. I think it depends on the SSO implementation and the length of `str`.\r\n\r\nIf `str.size() <= 15`  I think **not** using `reserve` is faster when using libstdc++ or MSVC. And `str.size() <= 22` for libc++.",
      "commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "created_at" : "2019-08-08T20:36:08Z",
      "diff_hunk" : "@@ -546,9 +546,18 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n     return true;\n }\n \n-void Downcase(std::string& str)\n+std::string ToLower(const std::string& str)\n {\n-    std::transform(str.begin(), str.end(), str.begin(), [](char c){return ToLower(c);});\n+    std::string r;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312231493",
      "id" : 312231493,
      "in_reply_to_id" : 311965823,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjIzMTQ5Mw==",
      "original_commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "original_position" : 8,
      "path" : "src/util/strencodings.cpp",
      "position" : 8,
      "pull_request_review_id" : 272823175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566",
      "updated_at" : "2019-08-08T20:46:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312231493",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312236376"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312236376"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right, but I'm not particularly worried about performance, i think it improves the code.",
      "commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "created_at" : "2019-08-08T20:48:51Z",
      "diff_hunk" : "@@ -546,9 +546,18 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n     return true;\n }\n \n-void Downcase(std::string& str)\n+std::string ToLower(const std::string& str)\n {\n-    std::transform(str.begin(), str.end(), str.begin(), [](char c){return ToLower(c);});\n+    std::string r;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312236376",
      "id" : 312236376,
      "in_reply_to_id" : 311965823,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjIzNjM3Ng==",
      "original_commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "original_position" : 8,
      "path" : "src/util/strencodings.cpp",
      "position" : 8,
      "pull_request_review_id" : 272829501,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566",
      "updated_at" : "2019-08-08T20:48:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312236376",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think we should create a ToLower that returns the result when we actually need it (and even then - as in boost for example - it could make sense to have both functions).\r\n\r\nHaving two sets of uppercase/lowercase functions would be overkill, especially given how little they are used. Efficiency isn't a point, either, because where they are used only, like, a single time per invocation of the executable, for argument processing.\r\n\r\nReturning their result is the normal, surprise-free way for functions to work. Changing things in-place is an optimization, unnecessary in this case. The new way is imo not more unwieldy, definitely not if you need to keep the old string.\r\n\r\nEven with that, even if performance mattered\r\n```c++\r\n+ enum Network ParseNetwork(std::string net) {\r\n+    Downcase(net);\r\n- enum Network ParseNetwork(const std::string& net_in) {\r\n-    std::string net = ToLower(net_in);\r\n```\r\nIs not an overall loss of efficiency. In the old case, `net` is copied as input argument then transformed in place. In the new case (=1 string allocation), in the new case the function takes the argument as reference but `ToLower` creates and returns a new string with the uppercase data (=1 string allocation).\r\n",
      "created_at" : "2019-08-08T22:36:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#issuecomment-519712083",
      "id" : 519712083,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16566",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxOTcxMjA4Mw==",
      "updated_at" : "2019-08-08T22:36:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519712083",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj thanks, appreciate the feedback.\r\n\r\n>  Having two sets of uppercase/lowercase functions would be overkill, especially given how little they are used.\r\n\r\nThere are no two sets of uppercase/lowercase functions and it is also not what I did propose.\r\n\r\n> The new way is imo not more unwieldy, definitely not if you need to keep the old string.\r\n\r\nThe code at the call sites does **not** need to keep the old string.\r\n\r\nAs far as performance or efficiency argument is concerned, I didn't mention that in my feedback.\r\n\r\nWhat I do argue is that there don't seem to be any benefits to refactoring `Downcase`:\r\n- It is not required for #11413;\r\n- There are no significant developer benefits, because the call sites don't need the lower cased string to be returned;\r\n- Use of the refactored function at the two call sites is more unwieldy than with the `Downcase` equivalent, because with `ToLower` you need to do more to achieve the same result.\r\n\r\nHence:\r\n> I think we should create a ToLower that returns the result when we actually need it",
      "created_at" : "2019-08-08T23:46:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#issuecomment-519726458",
      "id" : 519726458,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16566",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxOTcyNjQ1OA==",
      "updated_at" : "2019-08-08T23:46:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519726458",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13120787?v=4",
         "events_url" : "https://api.github.com/users/l2a5b1/events{/privacy}",
         "followers_url" : "https://api.github.com/users/l2a5b1/followers",
         "following_url" : "https://api.github.com/users/l2a5b1/following{/other_user}",
         "gists_url" : "https://api.github.com/users/l2a5b1/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/l2a5b1",
         "id" : 13120787,
         "login" : "l2a5b1",
         "node_id" : "MDQ6VXNlcjEzMTIwNzg3",
         "organizations_url" : "https://api.github.com/users/l2a5b1/orgs",
         "received_events_url" : "https://api.github.com/users/l2a5b1/received_events",
         "repos_url" : "https://api.github.com/users/l2a5b1/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/l2a5b1/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/l2a5b1"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Right, okay, I'm not going to argue this any further\r\n\r\nACK 0481fa25844dc6ec9f6c3fac8428d874d34b0ad0 from me",
      "created_at" : "2019-08-08T23:56:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#issuecomment-519728153",
      "id" : 519728153,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16566",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxOTcyODE1Mw==",
      "updated_at" : "2019-08-08T23:56:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519728153",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312296087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312296087"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Reserving seems sensible. It would actually slow down the code, @practicalswift ? Crazy. \r\nI would have never expected that. I'm indifferent on this, though, and opinions are mixed so leaving as is for now.",
      "commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "created_at" : "2019-08-09T00:47:59Z",
      "diff_hunk" : "@@ -546,9 +546,18 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n     return true;\n }\n \n-void Downcase(std::string& str)\n+std::string ToLower(const std::string& str)\n {\n-    std::transform(str.begin(), str.end(), str.begin(), [](char c){return ToLower(c);});\n+    std::string r;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r312296087",
      "id" : 312296087,
      "in_reply_to_id" : 311965823,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjI5NjA4Nw==",
      "original_commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "original_position" : 8,
      "path" : "src/util/strencodings.cpp",
      "position" : 8,
      "pull_request_review_id" : 272902637,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566",
      "updated_at" : "2019-08-09T00:47:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312296087",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@l2a5b1 \r\n\r\nThanks for your feedback. The function (`Downcase()`) is used in one single place, and its behavior is not as anyone would expect, because someone at some point thought in-place replacement would be an optimization worthy of going for. I disagree, and as you can see, others here disagree as well.\r\n\r\nGenerally speaking, if you have a choice between straight-forward/expected behavior and unexpected-but-optimized behavior, you usually wanna go for the former, unless the code is in some way performance critical (e.g. it slows things down significantly).\r\n\r\nSeeing as `ParseNetwork`, the only function using the `Downcase` function in the code, is called one single time in `init.cpp`, it makes no sense to keep a non-intuitive optimization around.\r\n\r\nI am changing it in preparation for #11413 because I need the uppercase variant, and having one `void Downcase(std::string& str)` function which performs in-place replacement, and one `std::string ToUpper(const std::string& str)` function which does not, would be bloody confusing for everybody.\r\n\r\n@luke-jr Honestly, this function is called one single time. Let's not keep things confusing on purpose.\r\n",
      "created_at" : "2019-08-09T00:56:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#issuecomment-519738508",
      "id" : 519738508,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16566",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxOTczODUwOA==",
      "updated_at" : "2019-08-09T00:56:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519738508",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 0481fa25844dc6ec9f6c3fac8428d874d34b0ad0 -- diff looks correct\r\n\r\nAgree fully with @kallewoof and @laanwj regarding the choice between \"straight-forward/expected\" vs \"unexpected-but-optimized\" for code paths that are not performance critical.",
      "created_at" : "2019-08-09T07:21:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#issuecomment-519810331",
      "id" : 519810331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16566",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxOTgxMDMzMQ==",
      "updated_at" : "2019-08-09T07:21:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519810331",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@kallewoof thanks! :)\r\n\r\nACK 0481fa2 - Although, I think @luke-jr's [feedback](https://github.com/bitcoin/bitcoin/pull/16566#issuecomment-519580760) is spot on; `Downcase` is just an artifact of `ParseNetwork`, which has been happily downcasing `net` via a string argument for over 7 years; and I do recommend to add `ToLower` *when* somebody actually needs it in new work, there is no point in keeping a trivial utility function if it is not appreciated.",
      "created_at" : "2019-08-09T16:20:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#issuecomment-519979739",
      "id" : 519979739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16566",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxOTk3OTczOQ==",
      "updated_at" : "2019-08-09T16:20:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519979739",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13120787?v=4",
         "events_url" : "https://api.github.com/users/l2a5b1/events{/privacy}",
         "followers_url" : "https://api.github.com/users/l2a5b1/followers",
         "following_url" : "https://api.github.com/users/l2a5b1/following{/other_user}",
         "gists_url" : "https://api.github.com/users/l2a5b1/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/l2a5b1",
         "id" : 13120787,
         "login" : "l2a5b1",
         "node_id" : "MDQ6VXNlcjEzMTIwNzg3",
         "organizations_url" : "https://api.github.com/users/l2a5b1/orgs",
         "received_events_url" : "https://api.github.com/users/l2a5b1/received_events",
         "repos_url" : "https://api.github.com/users/l2a5b1/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/l2a5b1/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/l2a5b1"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r314049604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314049604"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@kallewoof You can test this using the following Google Benchmark snippet:\r\n\r\n```\r\n#include <algorithm>\r\n#include <string>\r\n\r\nconstexpr char ToLower(char c) {\r\n    return (c >= 'A' && c <= 'Z' ? (c - 'A') + 'a' : c);\r\n}\r\n\r\nstd::string ToLower_1(const std::string& str) {\r\n    std::string r;\r\n    for (auto ch : str) {\r\n        r += ToLower((unsigned char)ch);\r\n    }\r\n    return r;\r\n}\r\n\r\nstd::string ToLower_2(const std::string& str) {\r\n    std::string r;\r\n    r.reserve(str.size());\r\n    for (auto ch : str) {\r\n        r += ToLower((unsigned char)ch);\r\n    }\r\n    return r;\r\n}\r\n\r\nstatic void BenchToLower_1(benchmark::State& state) {\r\n  for (auto _ : state) {\r\n    const std::string s1{\"HELLO\"};\r\n    benchmark::DoNotOptimize(s1);\r\n    const std::string s2 = ToLower_1(s1);\r\n    benchmark::DoNotOptimize(s2);\r\n  }\r\n}\r\nBENCHMARK(BenchToLower_1);\r\n\r\nstatic void BenchToLower_2(benchmark::State& state) {\r\n  for (auto _ : state) {\r\n    const std::string s1{\"HELLO\"};\r\n    benchmark::DoNotOptimize(s1);\r\n    const std::string s2 = ToLower_2(s1);\r\n    benchmark::DoNotOptimize(s2);\r\n  }\r\n}\r\nBENCHMARK(BenchToLower_2);\r\n```\r\n\r\nNotice that `ToLower_1` which doesn't `reserve` is slightly faster for strings up to 15 chars for libstdc++ and MSVC and up to 22 chars for libc++.",
      "commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "created_at" : "2019-08-14T19:40:58Z",
      "diff_hunk" : "@@ -546,9 +546,18 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n     return true;\n }\n \n-void Downcase(std::string& str)\n+std::string ToLower(const std::string& str)\n {\n-    std::transform(str.begin(), str.end(), str.begin(), [](char c){return ToLower(c);});\n+    std::string r;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r314049604",
      "id" : 314049604,
      "in_reply_to_id" : 311965823,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDA0OTYwNA==",
      "original_commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "original_position" : 8,
      "path" : "src/util/strencodings.cpp",
      "position" : 8,
      "pull_request_review_id" : 275107658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566",
      "updated_at" : "2019-08-14T19:40:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314049604",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r314189528"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314189528"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@practicalswift Thanks for that! Very educational. Memory allocations are tricky to optimize, I guess. :)",
      "commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "created_at" : "2019-08-15T06:36:35Z",
      "diff_hunk" : "@@ -546,9 +546,18 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n     return true;\n }\n \n-void Downcase(std::string& str)\n+std::string ToLower(const std::string& str)\n {\n-    std::transform(str.begin(), str.end(), str.begin(), [](char c){return ToLower(c);});\n+    std::string r;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16566#discussion_r314189528",
      "id" : 314189528,
      "in_reply_to_id" : 311965823,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDE4OTUyOA==",
      "original_commit_id" : "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "original_position" : 8,
      "path" : "src/util/strencodings.cpp",
      "position" : 8,
      "pull_request_review_id" : 275279048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16566",
      "updated_at" : "2019-08-15T06:36:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314189528",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   }
]
