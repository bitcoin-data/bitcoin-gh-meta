{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "The `CBufferedFile` object guarantees its user is able to \"rewind\" the data stream (that's being read from a file) up to a certain number of bytes, as specified by the user in the constructor. This guarantee is not honored due to a bug in the `SetPos` method. \r\n\r\nSuch rewinding is done in `LoadExternalBlockFile()` (currently the only user of this object), which deserializes a series of `CBlock` objects. If that function encounters something unexpected in the data stream, which is coming from a `blocks/blk00???.dat` file, it \"rewinds\" to an earlier position in the stream to try to get in sync again. The `CBufferedFile` object does not actually rewind its file offset; it simply repositions its internal offset, `nReadPos`, to an earlier position within the object's private buffer; this is why there's a limit to how far the user may rewind.\r\n\r\nIf `LoadExternalBlockFile()` needs to rewind (call `blkdat.SetPos()`), the stream may not be positioned as it should be, causing errors in deserialization. This need to rewind is probably rare, which is likely why this bug hasn't been noticed already. But if this object is used elsewhere in the future, this could be a serious problem, especially as, due to the nature of the bug, the `SetPos()` _sometimes_ works.\r\n\r\nThis PR adds a unit test for `CBufferedFile` that fails due to this bug. (Until now it has had no unit tests.) The unit test provides good documentation and examples for developers trying to understand `LoadExternalBlockFile()` and for future users of this object.\r\n\r\nThis PR also adds code to throw an exception from the constructor if the rewind argument is not less than the buffer size (since that doesn't make any sense).\r\n\r\nFinally, I discovered that the object is too restrictive in one respect: When the deserialization methods call this object's `read` method, a check ensures that the number of bytes being requested is less than the size of the buffer (adjusting for the rewind size), else it throws an exception. This restriction is unnecessary; the object being deserialized can be larger than the buffer because multiple reads from disk can satisfy the request.",
   "closed_at" : "2019-09-26T11:39:17Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 11,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577/comments",
   "created_at" : "2019-08-09T18:58:28Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577",
   "id" : 479123842,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      },
      {
         "color" : "5319e7",
         "default" : false,
         "id" : 241832923,
         "name" : "Utils/log/libs",
         "node_id" : "MDU6TGFiZWwyNDE4MzI5MjM=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MzA2MTAxOTYx",
   "number" : 16577,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/16577.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16577",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/16577.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16577"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "util: CBufferedFile fixes and unit test",
   "updated_at" : "2019-09-26T11:39:17Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16577",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
      "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
      "followers_url" : "https://api.github.com/users/LarryRuane/followers",
      "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/LarryRuane",
      "id" : 8321330,
      "login" : "LarryRuane",
      "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
      "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
      "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
      "repos_url" : "https://api.github.com/users/LarryRuane/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/LarryRuane"
   }
}
