[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@theuni @dongcarl @hebasto @achow101 @fanquake (not that I have to tag fanquake) may be interested or know more about this",
      "created_at" : "2020-05-08T15:27:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18915#issuecomment-625870345",
      "id" : 625870345,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18915",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTg3MDM0NQ==",
      "updated_at" : "2020-05-08T15:27:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625870345",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky I'm a little unclear on the specific question you have here, but would very much like to get to the bottom of it :relaxed:\r\n\r\n-----\r\n\r\n> It seems strange that linux host definition in depends just calls the native system compiler with -m32/-m64 flags, instead of supporting cross compilers and that it doesn't use a -sysroot value to prevent picking up system libraries:\r\n>\r\n> [https://github.com/bitcoin/bitcoin/blob/master/depends/hosts/linux.mk](https://github.com/bitcoin/bitcoin/blob/master/depends/hosts/linux.mk?rgh-link-date=2020-05-08T14%3A12%3A50Z)\r\n> \r\n> This is pretty different than the other windows/darwin/android hosts defined in the same directory, and seems like it would prevent `make HOST=x86_64-pc-linux-gnu` from working on anything other than a matching native platform.\r\n\r\nI'm not 100% sure what you mean here.\r\n\r\n- The only host we use a `-sysroot` value for is darwin\r\n- I believe the `Makefile` logic in `default.mk` and `linux.mk` works (but can most likely be improved) for cross compiling. In the specific case you mentioned, this is the current behaviour:\r\n\t```bash\r\n\t$ make BUILD=riscv64-linux-gnu HOST=x86_64-pc-linux-gnu print-{build,host}{,_CC,_CXX}\r\n\tbuild = riscv64-unknown-linux-gnu\r\n\thost = x86_64-pc-linux-gnu\r\n\tbuild_CC = gcc\r\n\thost_CC = x86_64-pc-linux-gnu-gcc -m64\r\n\tbuild_CXX = g++\r\n\thost_CXX = x86_64-pc-linux-gnu-g++ -m64\r\n\r\n\t``` \r\n\r\nI can see what you're talking about w/re the sysroot situation. I think the situation currently is:\r\n\r\n1. For HOST=BUILD native builds, we rely on unprefixed-`gcc`'s search/library path detection routine, which _will definitely_ pick up system libraries:\r\n\thttps://github.com/bitcoin/bitcoin/blob/1bc8e8eae2dc4b47ef67afc6880ea48b8e84a086/depends/hosts/default.mk#L1-L13\r\n2. For cross builds, we either invoke `$(HOST)-gcc`, or in the case of i686/x86_64 crosses, specify the `-m32/64` multilib. This _should_ indicate to gcc's detection routine to only look for library/headers matching the desired architecture, but it is possible that the user has installed \"cross-compiling development\" system headers/libraries (other than libc and gang) that get picked up. \r\n\r\nI think it is a worthwhile goal to make sure that we pick up the system headers/libraries that we _do_ want (libc, libgcc, libstdc++, kernel headers etc.) and not pick up the system headers/libraries that we _don't_ want (the system bdb, for example). The macOS SDK allows us to do that very nicely, however, it is difficult on Linux distros to separate the two.\r\n\r\nI'll do some more investigation around this, and feel free to clarify your question if I understood it wrong. Will follow up tomorrow...",
      "created_at" : "2020-08-17T21:54:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18915#issuecomment-675134254",
      "id" : 675134254,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18915",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NTEzNDI1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-17T21:54:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675134254",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! I think that answers my questions.\r\n\r\nIIUC, you're saying it might make sense in theory to `-sysroot` when `host_CC` is the local system compiler (`gcc`/`clang`) instead of a cross-compiler `$(default_host_CC)`. Using `-sysroot` in this case would avoid unintentionally picking up libraries and headers that happen to be installed locally. But things are messy so this doesn't work well in practice, and we aren't doing it right now on linux. We are for macos.\r\n\r\nWe could probably also use `-sysroot` when `host_CC` is set to a cross-compiler `$(default_host_CC)` rather than the local system compiler. But we don't because cross-compilers already know to look in their own toolchains and ignore local libraries and headers, so it would be mostly redundant and only serve to avoid picking up \"cross-compiling development\" libraries.\r\n\r\nThe other thing I was confused by is `hosts/linux.mk` choosing the native compiler instead of the cross compiler in cases where using the native compiler would be wrong. You're right to point out that it actually does choose the cross compiler in the linux->linux case:\r\n\r\n```\r\n$ make BUILD=riscv64-linux-gnu HOST=x86_64-pc-linux-gnu print-host_CC\r\nhost_CC = x86_64-pc-linux-gnu-gcc -m64\r\n```\r\n\r\nBut I was thinking more about nonlinux->linux cases:\r\n\r\n```\r\n$ make BUILD=x86_64-apple-darwin16 HOST=x86_64-pc-linux-gnu print-host_CC\r\nhost_CC = gcc -m64\r\n\r\n$ make BUILD=x86_64-w64-mingw32 HOST=x86_64-pc-linux-gnu print-host_CC\r\nmake: *** No rule to make target 'builders/mingw32.mk'.  Stop.\r\n```\r\n\r\nBut I guess these cases are so broken there'd be no point trying to set the variables more correctly",
      "created_at" : "2020-10-27T18:19:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18915#issuecomment-717432635",
      "id" : 717432635,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18915",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNzQzMjYzNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-27T18:19:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717432635",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/issues/18915#issue-614768292\r\n\r\n> > [19:57:12] <achow101> when I build with the depends system, is it supposed to fallback to my system libs if the depends build misses a dependendency?\r\n\r\nJust to link a related issue, #21629 seems to add a way of reliably not falling back to system BDB",
      "created_at" : "2021-06-02T19:38:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18915#issuecomment-853331782",
      "id" : 853331782,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18915",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MzMzMTc4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-02T19:38:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853331782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
