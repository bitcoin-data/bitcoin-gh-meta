{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "This PR proposes to introduce a new subsystem aiming towards anomaly detection and notifications of those for corrective behaviors. It showcases a proof-of-concept laying out design of such new system with a blank heuristic.\r\n\r\nEclipse-attacks or network partitions are highly severe for application security and user funds.  Until now, beyond fork detection and obvious protocol misbehavior, Bitcoin Core doesn't implement any active anomalies detection. Such vulnerabilities may be even more dramatic for time-sensitive protocol with harder [security assumptions](https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-December/002369.html), requiring real-time block processing with regards to honest majority network. Implementing such active detection at the base-layer, where events are the most available to take reasonable measure may be used two folds:\r\n\r\na) By an application, like a payment system or a LN node, cutting its deposit flow or closing its channels in reaction or stopping HTLCs processing, therefore limiting exposure.\r\nb) By an internal Core module, triggering rescue header-fetching. See AltNet subsystem proposal as an example of internal consumer usage.\r\n\r\nEven if notifications must be interpreted according to application requirements, such _automatic_ reactions, well-implemented, would be a positive increase for their security.\r\n\r\nDetection may rely on a wide range of cross-layers heuristics among them local clock, packets RTT, ASN distribution among addrman, abnormal peer rotation, stalling or delayed block issuance, mempool congestion, bandwidth consumption surges. You may combine heuristics to increase confidence, but due to the p2p nature of the network or Poisson block interval false positives must be held into account. Ideally consumer would be able to fine-tune their false-positives exposure with regards to application security and reaction cost.\r\n\r\nCurrent design adds a new module (`CWatchdog`), with low-reliance on other modules beyond synchronous events harvestng (`LogHeader`). Anomalie detections (`ScanAnomalie`), which may reveal heavy, is scheduled each `SCAN_ANOMALIES_INTERVAL` on its own thread. Integration is done with `NodeContext`, making module accessible to future rpc. A subscription interface (`CWatchdogInterface`) is added, on the model of `CValidationInterface`. It may host the actual fork detection in the future after refactoring `CheckForkWarningConditions`.\r\n\r\nSuch new module, less intertwined with current code can be disabled by default, and only activated with `--enable-watchdog` by node operators willingly to use it.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18987/comments",
   "created_at" : "2020-05-16T10:49:51Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18987/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/18987",
   "id" : 619442419,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      },
      {
         "color" : "006b75",
         "default" : false,
         "description" : null,
         "id" : 98298007,
         "name" : "P2P",
         "node_id" : "MDU6TGFiZWw5ODI5ODAwNw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18987/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NDE4OTUwNjg1",
   "number" : 18987,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/18987.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18987",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/18987.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18987"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "RFC: Introducing Watchdog, a cross-layer anomaly detection module",
   "updated_at" : "2020-05-16T11:25:18Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18987",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
      "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
      "followers_url" : "https://api.github.com/users/ariard/followers",
      "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/ariard",
      "id" : 23310655,
      "login" : "ariard",
      "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
      "organizations_url" : "https://api.github.com/users/ariard/orgs",
      "received_events_url" : "https://api.github.com/users/ariard/received_events",
      "repos_url" : "https://api.github.com/users/ariard/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/ariard"
   }
}
