{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Beginning with Ubuntu `19.10`, it's packaged GCC now has some additional hardening options enabled by default (in addition to existing defaults like `-fstack-protector-strong` and reducing the minimum ssp buffer size). The new additions are`-fcf-protection=full` and `-fstack-clash-protection`.\r\n\r\n> -fcf-protection=[full|branch|return|none]\r\n> Enable code instrumentation of control-flow transfers to increase program security by checking that target addresses of control-flow transfer instructions (such as indirect function call, function return, indirect jump) are valid. This prevents diverting the flow of control to an unexpected target. This is intended to protect against such threats as Return-oriented Programming (ROP), and similarly call/jmp-oriented programming (COP/JOP).\r\n\r\n> -fstack-clash-protection\r\n> Generate code to prevent stack clash style attacks. When this option is enabled, the compiler will only allocate one page of stack space at a time and each page is accessed immediately after allocation. Thus, it prevents allocations from jumping over any stack guard page provided by the operating system.\r\n\r\nIf your interested you can grab `gcc-9_9.3.0-10ubuntu2.debian.tar.xz` from https://packages.ubuntu.com/focal/g++-9. The relevant changes are part of the `gcc-distro-specs` patches, along with the relevant additions to the gcc manages:\r\n\r\n> NOTE: In Ubuntu 19.10 and later versions, -fcf-protection is enabled by default for C, C++, ObjC, ObjC++, if none of -fno-cf-protection nor -fcf-protection=* are found.\r\n\r\n> NOTE: In Ubuntu 19.10 and later versions, -fstack-clash-protection is enabled by default for C, C++, ObjC, ObjC++, unless -fno-stack-clash-protection is found.\r\n\r\nSo, if you're C++ using GCC on Ubuntu 19.10 or later, these options will be active unless you explicitly opt out. This can be observed with a small test:\r\n\r\n```c++\r\nint main() { return 0; }\r\n```\r\n\r\n```bash\r\ng++ --version \r\ng++ (Ubuntu 9.3.0-10ubuntu2) 9.3.0\r\n\r\ng++ test.cpp\r\n\r\nobjdump -dC a.out\r\n..\r\n0000000000001129 <main>:\r\n    1129:\tf3 0f 1e fa          \tendbr64 \r\n    112d:\t55                   \tpush   %rbp\r\n    112e:\t48 89 e5             \tmov    %rsp,%rbp\r\n    1131:\tb8 00 00 00 00       \tmov    $0x0,%eax\r\n    1136:\t5d                   \tpop    %rbp\r\n    1137:\tc3                   \tretq   \r\n    1138:\t0f 1f 84 00 00 00 00 \tnopl   0x0(%rax,%rax,1)\r\n    113f:\t00\r\n\r\n\r\n# recompile opting out of control flow protection\r\ng++ test.cpp -fcf-protection=none\r\n\r\nobjdump -dC a.out\r\n...\r\n0000000000001129 <main>:\r\n    1129:\t55                   \tpush   %rbp\r\n    112a:\t48 89 e5             \tmov    %rsp,%rbp\r\n    112d:\tb8 00 00 00 00       \tmov    $0x0,%eax\r\n    1132:\t5d                   \tpop    %rbp\r\n    1133:\tc3                   \tretq   \r\n    1134:\t66 2e 0f 1f 84 00 00 \tnopw   %cs:0x0(%rax,%rax,1)\r\n    113b:\t00 00 00 \r\n    113e:\t66 90                \txchg   %ax,%ax\r\n```\r\n\r\nNote the insertion of an `endbr64` instruction when compiling and _not_ opting out. This instruction is part of the Intel Control-flow Enforcement Technology [spec](https://software.intel.com/sites/default/files/managed/4d/2a/control-flow-enforcement-technology-preview.pdf), which the GCC control flow implementation is based on.\r\n\r\nIf we're still doing gitian builds for the `0.21.0` and `0.22.0` releases, we'd likely update the gitian image to Ubuntu Focal, which would mean that the GCC used for gitian builds would also be using these options by default. So we should decide whether we want to explicitly turn these options on as part of our hardening options (although not just for this reason), or, we should be opting-out.\r\n\r\nGCC has supported both options since 8.0.0. Clang has supported `-fcf-protection` from 7.0.0 and will support `-fstack-clash-protection` in it's upcoming [11.0.0 release](https://clang.llvm.org/docs/ReleaseNotes.html#id6). ",
   "closed_at" : "2020-08-29T11:44:13Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 13,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18921/comments",
   "created_at" : "2020-05-09T11:28:15Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18921/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/18921",
   "id" : 615155236,
   "labels" : [
      {
         "color" : "ebd775",
         "default" : false,
         "description" : null,
         "id" : 64584,
         "name" : "Brainstorming",
         "node_id" : "MDU6TGFiZWw2NDU4NA==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming"
      },
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18921/labels{/name}",
   "locked" : false,
   "milestone" : {
      "closed_at" : null,
      "closed_issues" : 42,
      "created_at" : "2019-12-09T08:39:58Z",
      "creator" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      },
      "description" : "",
      "due_on" : null,
      "html_url" : "https://github.com/bitcoin/bitcoin/milestone/45",
      "id" : 4914019,
      "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
      "node_id" : "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
      "number" : 45,
      "open_issues" : 18,
      "state" : "open",
      "title" : "0.21.0",
      "updated_at" : "2020-08-29T11:44:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/45"
   },
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NDE1NTYxMjMy",
   "number" : 18921,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/18921.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18921",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/18921.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18921"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "build: add stack-clash and control-flow protection options to hardening flags",
   "updated_at" : "2020-08-29T11:44:13Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18921",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
