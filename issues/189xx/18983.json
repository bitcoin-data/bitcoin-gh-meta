{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Steps to reproduce:\r\n\r\n```\r\n   0 apk --no-cache --update add autoconf automake g++ gcc git libtool make pkgconfig python3 boost-dev libevent-dev zeromq-dev qt5-qtbase-dev qt5-qttools-dev ccache clang valgrind\r\n   1 git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core\r\n   2 cd bitcoin-core\r\n   3 ./autogen.sh \r\n   4 ./configure --enable-c++17 --enable-fuzz --with-sanitizers=fuzzer CC=clang CXX=clang++\r\n```\r\n\r\noutput:\r\n\r\n```\r\nchecking build system type... x86_64-pc-linux-musl\r\nchecking host system type... x86_64-pc-linux-musl\r\nchecking for a BSD-compatible install... /usr/bin/install -c\r\nchecking whether build environment is sane... yes\r\nchecking for a thread-safe mkdir -p... build-aux/install-sh -c -d\r\nchecking for gawk... no\r\nchecking for mawk... no\r\nchecking for nawk... no\r\nchecking for awk... awk\r\nchecking whether make sets $(MAKE)... yes\r\nchecking whether make supports nested variables... yes\r\nchecking whether to enable maintainer-specific portions of Makefiles... yes\r\nchecking whether make supports nested variables... (cached) yes\r\nchecking whether the C++ compiler works... yes\r\nchecking for C++ compiler default output file name... a.out\r\nchecking for suffix of executables... \r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether we are using the GNU C++ compiler... yes\r\nchecking whether clang++ accepts -g... yes\r\nchecking whether make supports the include directive... yes (GNU style)\r\nchecking dependency style of clang++... gcc3\r\nchecking whether clang++ supports C++17 features with -std=c++17... yes\r\nchecking whether std::atomic can be used without link library... yes\r\nchecking whether we are using the GNU Objective C++ compiler... yes\r\nchecking whether clang++ -std=c++17 accepts -g... yes\r\nchecking dependency style of clang++ -std=c++17... gcc3\r\nchecking how to print strings... printf\r\nchecking for gcc... clang\r\nchecking whether we are using the GNU C compiler... yes\r\nchecking whether clang accepts -g... yes\r\nchecking for clang option to accept ISO C89... none needed\r\nchecking whether clang understands -c and -o together... yes\r\nchecking dependency style of clang... gcc3\r\nchecking for a sed that does not truncate output... /bin/sed\r\nchecking for grep that handles long lines and -e... /bin/grep\r\nchecking for egrep... /bin/grep -E\r\nchecking for fgrep... /bin/grep -F\r\nchecking for ld used by clang... /usr/bin/ld\r\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\r\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\r\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\r\nchecking whether ln -s works... yes\r\nchecking the maximum length of command line arguments... 98304\r\nchecking how to convert x86_64-pc-linux-musl file names to x86_64-pc-linux-musl format... func_convert_file_noop\r\nchecking how to convert x86_64-pc-linux-musl file names to toolchain format... func_convert_file_noop\r\nchecking for /usr/bin/ld option to reload object files... -r\r\nchecking for objdump... objdump\r\nchecking how to recognize dependent libraries... pass_all\r\nchecking for dlltool... no\r\nchecking how to associate runtime and link libraries... printf %s\\n\r\nchecking for ar... ar\r\nchecking for archiver @FILE support... @\r\nchecking for strip... strip\r\nchecking for ranlib... ranlib\r\nchecking command to parse /usr/bin/nm -B output from clang object... ok\r\nchecking for sysroot... no\r\nchecking for a working dd... /bin/dd\r\nchecking how to truncate binary pipes... /bin/dd bs=4096 count=1\r\n./configure: line 1: /usr/bin/file: not found\r\nchecking for mt... no\r\nchecking if : is a manifest tool... no\r\nchecking how to run the C preprocessor... clang -E\r\nchecking for ANSI C header files... yes\r\nchecking for sys/types.h... yes\r\nchecking for sys/stat.h... yes\r\nchecking for stdlib.h... yes\r\nchecking for string.h... yes\r\nchecking for memory.h... yes\r\nchecking for strings.h... yes\r\nchecking for inttypes.h... yes\r\nchecking for stdint.h... yes\r\nchecking for unistd.h... yes\r\nchecking for dlfcn.h... yes\r\nchecking for objdir... .libs\r\nchecking if clang supports -fno-rtti -fno-exceptions... yes\r\nchecking for clang option to produce PIC... -fPIC -DPIC\r\nchecking if clang PIC flag -fPIC -DPIC works... yes\r\nchecking if clang static flag -static works... yes\r\nchecking if clang supports -c -o file.o... yes\r\nchecking if clang supports -c -o file.o... (cached) yes\r\nchecking whether the clang linker (/usr/bin/ld) supports shared libraries... yes\r\nchecking whether -lc should be explicitly linked in... no\r\nchecking dynamic linker characteristics... GNU/Linux ld.so\r\nchecking how to hardcode library paths into programs... immediate\r\nchecking whether stripping libraries is possible... yes\r\nchecking if libtool supports shared libraries... yes\r\nchecking whether to build shared libraries... yes\r\nchecking whether to build static libraries... yes\r\nchecking how to run the C++ preprocessor... clang++ -std=c++17 -E\r\nchecking for ld used by clang++ -std=c++17... /usr/bin/ld\r\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\r\nchecking whether the clang++ -std=c++17 linker (/usr/bin/ld) supports shared libraries... yes\r\nchecking for clang++ -std=c++17 option to produce PIC... -fPIC -DPIC\r\nchecking if clang++ -std=c++17 PIC flag -fPIC -DPIC works... yes\r\nchecking if clang++ -std=c++17 static flag -static works... yes\r\nchecking if clang++ -std=c++17 supports -c -o file.o... yes\r\nchecking if clang++ -std=c++17 supports -c -o file.o... (cached) yes\r\nchecking whether the clang++ -std=c++17 linker (/usr/bin/ld) supports shared libraries... yes\r\nchecking dynamic linker characteristics... (cached) GNU/Linux ld.so\r\nchecking how to hardcode library paths into programs... immediate\r\nchecking for ar... /usr/bin/ar\r\nchecking for ranlib... /usr/bin/ranlib\r\nchecking for strip... /usr/bin/strip\r\nchecking for gcov... /usr/bin/gcov\r\nchecking for lcov... no\r\nchecking for python3.5... no\r\nchecking for python3.6... no\r\nchecking for python3.7... no\r\nchecking for python3.8... /usr/bin/python3.8\r\nchecking for genhtml... no\r\nchecking for git... /usr/bin/git\r\nchecking for ccache... /usr/bin/ccache\r\nchecking for xgettext... /usr/bin/xgettext\r\nchecking for hexdump... /usr/bin/hexdump\r\nchecking for readelf... /usr/bin/readelf\r\nchecking for c++filt... /usr/bin/c++filt\r\nchecking for objcopy... /usr/bin/objcopy\r\nchecking for doxygen... no\r\nconfigure: WARNING: Doxygen not found\r\nchecking whether C++ compiler accepts -Werror... yes\r\nchecking whether the linker accepts -Wl,--fatal-warnings... yes\r\nchecking whether C++ compiler accepts -fsanitize=fuzzer... yes\r\nchecking whether the linker accepts -fsanitize=fuzzer... no\r\nconfigure: error: linker did not accept requested flags, you are missing required libraries\r\n```",
   "closed_at" : "2020-05-15T17:29:30Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18983/comments",
   "created_at" : "2020-05-15T16:32:18Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18983/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/18983",
   "id" : 619099111,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "description" : null,
         "id" : 64585,
         "name" : "Bug",
         "node_id" : "MDU6TGFiZWw2NDU4NQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      },
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      },
      {
         "color" : "bfd4f2",
         "default" : false,
         "description" : null,
         "id" : 159815356,
         "name" : "Upstream",
         "node_id" : "MDU6TGFiZWwxNTk4MTUzNTY=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Upstream"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18983/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU2MTkwOTkxMTE=",
   "number" : 18983,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "compiling --with-sanitizers=fuzzer on Alpine Linux fails to link",
   "updated_at" : "2020-05-15T17:29:30Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18983",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   }
}
