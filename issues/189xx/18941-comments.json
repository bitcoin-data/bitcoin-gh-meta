[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18637 (coins: allow cache resize after init by jamesob)\n* #10443 (Add fee_est tool for debugging fee estimation code by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-11T07:47:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-626532576",
      "id" : 626532576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18941",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjUzMjU3Ng==",
      "updated_at" : "2020-05-28T22:41:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626532576",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Motivated by https://github.com/bitcoin/bitcoin/pull/15218#issuecomment-456558815\r\n> we wanted to make the cache actually more useful on startup (something I've thought we should do for a while)",
      "created_at" : "2020-05-12T03:28:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-627086019",
      "id" : 627086019,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18941",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzA4NjAxOQ==",
      "updated_at" : "2020-05-12T03:28:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627086019",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm not sure this is useful.\r\n\r\nMy information is several years old, so take this with a grain of salt. Actual benchmarks would of course be better.\r\n\r\nI experimented with several different designs for partial flushing, where some data remained in the cache at the time it was flushed, and surprisingly, they were invariably all slower than just wiping everything every time. The reason is that our cache isn't really a cache but a buffer: its performance gains come from the fact that it (dramatically) reduces disk writes (it also reduces disk reads, but the impact of those is far less). The reason is that most UTXOs get created and spent within a short time frame, and if they happen within a cache window, without flush in between, the created UTXO is deleted from memory, without ever hitting disk. At least on the systems I tested on, reserving a portion of the cache as \"flushed but still cached\" was never better than just using that area as additional write-saving buffer.",
      "created_at" : "2020-05-12T03:41:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-627089592",
      "id" : 627089592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18941",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzA4OTU5Mg==",
      "updated_at" : "2020-05-12T03:41:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627089592",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa I'm having trouble reconciling your above comment with the one you made [here](https://github.com/bitcoin/bitcoin/pull/15218#issuecomment-457434328)\r\n\r\n>@andrewtoth The problem is that right now, causing a flush when exiting IBD will (temporarily) kill your performance right before finishing the sync (because it leaves you with an empty cache). If instead it was a non-clearing flush, there would be no such downside.\r\n\r\nEither having data already in the cache is desirable, or we always want a clear cache so we can write as much as possible.\r\n\r\nOr perhaps I haven't made the motivation clear. This does not do a partial flush. It just warms up the cache after a restart. Say you have 100 MB in the cache but you need to reboot. Upon startup you will have an empty cache, which you say above will temporarily kill your performance.\n\nI suppose I should benchmark connecting a block with an empty cache and one with a full cache to measure the read benefit.",
      "created_at" : "2020-05-12T03:58:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-627093687",
      "id" : 627093687,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18941",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzA5MzY4Nw==",
      "updated_at" : "2020-05-12T04:11:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627093687",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've put together some benchmarks. TL;DR running with the entire utxo set in memory can shave off several hundred milliseconds in ConnectBlock.\r\n\r\nI benchmarked with [this patch](https://github.com/andrewtoth/bitcoin/commit/405faf362ae8084b524b043db0c27255fab3e1a6) that records the ConnectBlock time and whenever a flush happens. I ran with `-dbcache=20000 -persistcoinscache=1 -reindex-chainstate -stopatheight=600000`. For a baseline I ran with an [earlier commmit](https://github.com/bitcoin/bitcoin/commit/11f466b8d1e1fd5c61dfc231e1cdb76d73317606) which blocks the main thread until the cache is fully loaded, and ran with `-dbcache=20000 -persistcoinscache=1`. I then ran the same from block 600000 with [this patch](https://github.com/andrewtoth/bitcoin/commit/33228749736932aee84ad15f303ccd5aa8ef13de) to always flush the coins cache so it would always be empty. This gave me the connect block times for a cache with the entire utxo set, and an empty cache on each block connection. I also ran with default dbcache for comparison. Below is a plot of the time deltas between block connection in milliseconds. Orange is the delta between empty cache and full cache, and red is the delta between default cache and full cache with blue dots plotting the times the cache was flushed. I also capped the delta to 400 ms so it would be easier to read.\r\n\r\n![connectblockchart-av](https://user-images.githubusercontent.com/237213/82836745-b409d080-9eb6-11ea-9933-2a8e7ac104ca.png)\r\n\r\nThere's some noise after the assumevalid block, so to account for that I reran all three with `-assumevalid=0`:\r\n\r\n![connectblockchart-noav](https://user-images.githubusercontent.com/237213/82836788-cab02780-9eb6-11ea-9a56-8dddea4d2906.png)\r\n\r\nI also plotted the 20 block rolling average of deltas to reduce noise:\r\n\r\n![connectblockchart-rollingaverage](https://user-images.githubusercontent.com/237213/82836823-dd2a6100-9eb6-11ea-92ff-f1bf71b16e94.png)\r\n\r\nThis shows performance degradation at points where the cache is cleared. The above tests were using an internal SSD. I reran the tests with an external HDD, but the results are much more noisy. Here's the 20 block rolling average results:\r\n\r\n![connectblockchart-hdd](https://user-images.githubusercontent.com/237213/82836857-f6cba880-9eb6-11ea-9db5-8d10e19cefb6.png)\r\n\r\nIt seems running with an empty cache can have a performance penalty of several hundred milliseconds in many cases. #14387 and #14397 were attempting to improve the performance of ConnectBlock by [much less](https://github.com/bitcoin/bitcoin/pull/14387#discussion_r222908232) but were closed because they were too complex. I believe running in the configuration enabled by this PR could be useful to users who wish to connect blocks as fast as possible, as pointed out by [these](https://github.com/bitcoin/bitcoin/pull/14387#issuecomment-442748969) [comments](https://github.com/bitcoin/bitcoin/pull/15218#issuecomment-523587757). [This comment](https://github.com/bitcoin/bitcoin/pull/15265#issuecomment-457792904) also suggests that an empty cache is harmful to performance:\r\n\r\n> I suspect the periodic flushes are by far the biggest source of blockacceptance/gbt latency though, so it's one which would almost certainly have a big payoff.\r\n\r\n\r\n",
      "created_at" : "2020-05-25T18:55:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-633684774",
      "id" : 633684774,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18941",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMzY4NDc3NA==",
      "updated_at" : "2020-05-27T22:31:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/633684774",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ". @andrewtoth I think that you can solve some of these problems more 'cleanly' (no new files) if you have a parallel cache-warming strategy for connect block that attempts to asynchronously load all the required inputs before rolling through the block.",
      "created_at" : "2020-06-04T01:52:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-638553680",
      "id" : 638553680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18941",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzODU1MzY4MA==",
      "updated_at" : "2020-06-04T01:52:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638553680",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@JeremyRubin interesting, thanks. So you are suggesting to have the cache warming thread begin to access coins of the inputs in a block in, say, `ProcessNewBlock`, before it gets to `ActivateBestChainStep`?",
      "created_at" : "2020-06-04T14:23:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-638882183",
      "id" : 638882183,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18941",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzODg4MjE4Mw==",
      "updated_at" : "2020-06-04T14:23:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638882183",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yep. As soon as some basic checks pass (probably just PoW?) you may as well begin to warm the coins.",
      "created_at" : "2020-06-04T19:35:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-639072581",
      "id" : 639072581,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18941",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTA3MjU4MQ==",
      "updated_at" : "2020-06-04T19:35:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639072581",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Closing as this doesn't appear to have attracted any interest and is unlikely to be merged.",
      "created_at" : "2020-06-18T01:29:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-645714064",
      "id" : 645714064,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18941",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTcxNDA2NA==",
      "updated_at" : "2020-06-18T01:29:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645714064",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "NONE",
      "body" : ">On startup this file is used to warm the cache so it doesn't get cold between restarts.\r\n\r\nAs a user I just use a simple trick: `cat BTC_DATA/chainstate/* > /dev/null`.\r\n\r\nRelated: #14904, #19742 ",
      "created_at" : "2020-08-17T07:22:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-674710229",
      "id" : 674710229,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18941",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDcxMDIyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-17T07:22:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674710229",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I don't care whether the cache could be warmed as quickly as possible. What I care is very simple: keep the UTXO job totally in RAM, without touching the hard drive (esp. like a DM-SMR HDD) once again.\r\n\r\nI think this should be shown in GUI, together with `blocksdir`. I think radio buttons with fancy words like \"turbo, heavy mode\" vs \"agile, light mode\" can let the user to choose how the cache should behave - the former sacrifices crash tolerance and fast starting/shutting down for better performance and less hard drive wearing.\r\n\r\nI think it is very important to guide a newbie by pointing to where the typical performance bottleneck lies. I was once stuck on this point for a ridiculously long time, like, two weeks. I know the pain, helplessness that just watching the hard drive to wear, while the progress walks like snail.",
      "created_at" : "2020-08-17T07:32:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-674714401",
      "id" : 674714401,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18941",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDcxNDQwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-17T07:34:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674714401",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "You may laugh at my ignorance, but I thought I knew what \"cache\" is - I installed something like PrimoCache, in hope that such a \"cache\" can relieve the problem - now I think such idea is just dumb.\r\n\r\nMaybe it's actually not as dumb as I currently think? I don't know. I just think it's too cruel for a newbie trying to sync a full node without knowing where the typical bottleneck lies - the chainstate, or UTXO set.",
      "created_at" : "2020-08-17T07:46:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-674720226",
      "id" : 674720226,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18941",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDcyMDIyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-17T07:46:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674720226",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   }
]
