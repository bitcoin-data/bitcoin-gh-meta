[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16279](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16279.html) (Return the AcceptBlock CValidationState directly in ProcessNewBlock by TheBlueMatt)\n* [#16197](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16197.html) (net: Use mockable time for tx download by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-02-28T21:31:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-468446603",
      "id" : 468446603,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODQ0NjYwMw==",
      "updated_at" : "2019-07-19T20:09:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468446603",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261411613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261411613"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems like this could be a lot more succinct with [`vector::erase`](https://en.cppreference.com/w/cpp/container/vector/erase) - is there some reason to do it this way?",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-02-28T22:31:05Z",
      "diff_hunk" : "@@ -821,7 +836,21 @@ void PeerLogicValidation::FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTim\n     g_outbound_peers_with_protect_from_disconnect -= state->m_chain_sync.m_protect;\n     assert(g_outbound_peers_with_protect_from_disconnect >= 0);\n \n-    g_outbound_peers.erase(nodeid);\n+    // Remove entry from g_outbound_peers, if present.\n+    size_t peer_loc = g_outbound_peers.size();\n+    for (size_t i=0; i<g_outbound_peers.size(); ++i) {\n+        if (g_outbound_peers[i] == nodeid) {\n+            peer_loc = i;\n+        }\n+    }\n+    if (peer_loc != g_outbound_peers.size()) {\n+        // We found the peer's location in the outbound peer set\n+        if (peer_loc != g_outbound_peers.size()-1) {\n+            // Swap this peer with the last one\n+            g_outbound_peers[peer_loc] = g_outbound_peers.back();\n+        }\n+        g_outbound_peers.pop_back();\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261411613",
      "id" : 261411613,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTQxMTYxMw==",
      "original_commit_id" : "059e04c03c8bc8069a0d03505a5aebb4a335c179",
      "original_position" : 75,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209345860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261411613",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261425941"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261425941"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This comment seems outdated",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-02-28T23:18:02Z",
      "diff_hunk" : "@@ -338,6 +352,11 @@ struct CNodeState {\n      *   peers.\n      */\n     struct TxDownloadState {\n+        /* Notifications of NOTFOUND transactions (from other peers) which\n+         * this peer has recently announced. txid->time in micros",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261425941",
      "id" : 261425941,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTQyNTk0MQ==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 43,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209362697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261425941",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261501879"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261501879"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This `state` shadows the `state` in the outer scope.",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T07:29:53Z",
      "diff_hunk" : "@@ -3081,8 +3156,46 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     }\n \n     if (strCommand == NetMsgType::NOTFOUND) {\n-        // We do not care about the NOTFOUND message, but logging an Unknown Command\n-        // message would be undesirable as we transmit it ourselves.\n+        // Remove the NOTFOUND transactions from the peer\n+        LOCK(cs_main);\n+        CNodeState *state = State(pfrom->GetId());\n+        std::vector<CInv> vInv;\n+        vRecv >> vInv;\n+        if (vInv.size() <= MAX_INV_SZ) {\n+            for (CInv &inv : vInv) {\n+                if (inv.type == MSG_TX || inv.type == MSG_WITNESS_TX) {\n+                    state->m_tx_download.m_tx_announced.erase(inv.hash);\n+                    auto in_flight_it = state->m_tx_download.m_tx_in_flight.find(inv.hash);\n+                    if (in_flight_it == state->m_tx_download.m_tx_in_flight.end()) {\n+                        // Ignore NOTFOUND messages unless we requested the\n+                        // transaction from the peer, to prevent misbehaving peers from\n+                        // polluting the NOTFOUND queues or triggering multiple\n+                        // concurrent downloads of the same transactions\n+                        continue;\n+                    }\n+                    state->m_tx_download.m_tx_in_flight.erase(inv.hash);\n+                    EraseTxRequest(inv.hash);\n+                    // If we don't already have this transaction, check to see\n+                    // if any of our outbound peers have offered it to us, and\n+                    // if so signal them to try to request immediately. This avoids\n+                    // waiting for the download timeout to expire before\n+                    // re-requesting a transaction.\n+                    if (!AlreadyHave(inv)) {\n+                        for (auto it = g_outbound_peers.begin(); it != g_outbound_peers.end(); ++it) {\n+                            if (*it == pfrom->GetId()) continue;\n+                            CNodeState *state = State(*it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261501879",
      "id" : 261501879,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTUwMTg3OQ==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 178,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209453717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261501879",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261502066"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261502066"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've got an important nessage for you: this should be \"message\".",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T07:31:03Z",
      "diff_hunk" : "@@ -724,6 +744,41 @@ void RequestTx(CNodeState* state, const uint256& txid, int64_t nNow) EXCLUSIVE_L\n     peer_download_state.m_tx_process_time.emplace(process_time, txid);\n }\n \n+// Given a txid and a peer that we'd like to consider downloading a transaction\n+// from: add an appropriate INV nessage to get_data if it is time to request",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261502066",
      "id" : 261502066,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTUwMjA2Ng==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 63,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209453980,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261502066",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261637907"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261637907"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice doc. To get [doxygen](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-doxygen-compatible-comments) to pick this up, you'll have to do\r\n```cpp\r\n//! this\r\n/// or this\r\n/**\r\n * or this\r\n */\r\n```",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T15:09:27Z",
      "diff_hunk" : "@@ -724,6 +744,41 @@ void RequestTx(CNodeState* state, const uint256& txid, int64_t nNow) EXCLUSIVE_L\n     peer_download_state.m_tx_process_time.emplace(process_time, txid);\n }\n \n+// Given a txid and a peer that we'd like to consider downloading a transaction\n+// from: add an appropriate INV nessage to get_data if it is time to request\n+// the transaction from the peer, and update the appropriate tx download state\n+// (both the global state and the peer's state). Send a getdata message if the\n+// get_data vector grows too large.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261637907",
      "id" : 261637907,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTYzNzkwNw==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 66,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209628650,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261637907",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261641756"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261641756"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is just a style/readability thing, but you can avoid indenting the next ~23 lines by changing this to \r\n```cpp\r\nif (inv.type != MSG_TX && inv.type != MSG_WITNESS_TX) {\r\n    continue;\r\n}\r\n```",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T15:19:05Z",
      "diff_hunk" : "@@ -3081,8 +3156,46 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     }\n \n     if (strCommand == NetMsgType::NOTFOUND) {\n-        // We do not care about the NOTFOUND message, but logging an Unknown Command\n-        // message would be undesirable as we transmit it ourselves.\n+        // Remove the NOTFOUND transactions from the peer\n+        LOCK(cs_main);\n+        CNodeState *state = State(pfrom->GetId());\n+        std::vector<CInv> vInv;\n+        vRecv >> vInv;\n+        if (vInv.size() <= MAX_INV_SZ) {\n+            for (CInv &inv : vInv) {\n+                if (inv.type == MSG_TX || inv.type == MSG_WITNESS_TX) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261641756",
      "id" : 261641756,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTY0MTc1Ng==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 158,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209628650,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261641756",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261646342"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261646342"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Aid for fellow reviewers: `NOTFOUND` messages are assembled [here](https://github.com/bitcoin/bitcoin/blob/master/src/net_processing.cpp#L1458-L1468) and their structure exactly resembles `INV`s, which is why we can deserialize using `cInv` below.",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T15:29:52Z",
      "diff_hunk" : "@@ -3081,8 +3156,46 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     }\n \n     if (strCommand == NetMsgType::NOTFOUND) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261646342",
      "id" : 261646342,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTY0NjM0Mg==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 148,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209628650,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261646342",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261647081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261647081"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I guess I have an aversion to vector::erase because it requires moving all the other entries.  Possibly that concern doesn't make sense for such a small vector?\r\n\r\nBut the bigger issue here is why this is a vector at all -- originally I had this as a set, but then I changed it to be a vector in order to make the logic around when to drain the notfound queue for each peer make sense.  In short, I wanted to uniformly at random assign a notfound transaction to an outbound peer that announced it, but I didn't have a good way to do that, so instead I assign it to all peers, but then have a (hacky) counter in SendMessages and each outbound peer will check that counter to decide when to drain its notfound queue.\r\n\r\n(I'm hoping that reviewers will give me a better idea of how to implement that logic than what I've got so far...)",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T15:31:47Z",
      "diff_hunk" : "@@ -821,7 +836,21 @@ void PeerLogicValidation::FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTim\n     g_outbound_peers_with_protect_from_disconnect -= state->m_chain_sync.m_protect;\n     assert(g_outbound_peers_with_protect_from_disconnect >= 0);\n \n-    g_outbound_peers.erase(nodeid);\n+    // Remove entry from g_outbound_peers, if present.\n+    size_t peer_loc = g_outbound_peers.size();\n+    for (size_t i=0; i<g_outbound_peers.size(); ++i) {\n+        if (g_outbound_peers[i] == nodeid) {\n+            peer_loc = i;\n+        }\n+    }\n+    if (peer_loc != g_outbound_peers.size()) {\n+        // We found the peer's location in the outbound peer set\n+        if (peer_loc != g_outbound_peers.size()-1) {\n+            // Swap this peer with the last one\n+            g_outbound_peers[peer_loc] = g_outbound_peers.back();\n+        }\n+        g_outbound_peers.pop_back();\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261647081",
      "id" : 261647081,
      "in_reply_to_id" : 261411613,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTY0NzA4MQ==",
      "original_commit_id" : "059e04c03c8bc8069a0d03505a5aebb4a335c179",
      "original_position" : 75,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209640560,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261647081",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the nits; I'll address them later, but in the meantime I'm open to suggestions on how to better implement the random assignment of notfound transactions to the outbound peers that have announced them (I think the logic I have here should work, but it's a bit gross).",
      "created_at" : "2019-03-01T15:32:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-468704486",
      "id" : 468704486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODcwNDQ4Ng==",
      "updated_at" : "2019-03-01T15:32:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468704486",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261656447"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261656447"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IMO more clearly written as\r\n```cpp\r\nif (!state->m_tx_download.m_tx_in_flight.count(inv.hash)) {\r\n...\r\n}\r\n```",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T15:55:31Z",
      "diff_hunk" : "@@ -3081,8 +3156,46 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     }\n \n     if (strCommand == NetMsgType::NOTFOUND) {\n-        // We do not care about the NOTFOUND message, but logging an Unknown Command\n-        // message would be undesirable as we transmit it ourselves.\n+        // Remove the NOTFOUND transactions from the peer\n+        LOCK(cs_main);\n+        CNodeState *state = State(pfrom->GetId());\n+        std::vector<CInv> vInv;\n+        vRecv >> vInv;\n+        if (vInv.size() <= MAX_INV_SZ) {\n+            for (CInv &inv : vInv) {\n+                if (inv.type == MSG_TX || inv.type == MSG_WITNESS_TX) {\n+                    state->m_tx_download.m_tx_announced.erase(inv.hash);\n+                    auto in_flight_it = state->m_tx_download.m_tx_in_flight.find(inv.hash);\n+                    if (in_flight_it == state->m_tx_download.m_tx_in_flight.end()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261656447",
      "id" : 261656447,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTY1NjQ0Nw==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 161,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209628650,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261656447",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261664629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261664629"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Correct me if I'm wrong here, but isn't this equivalent to doing something like\r\n```cpp\r\nif (GetRandInt(/* nMax= */g_outbound_peers.size()) == 0) {\r\n...\r\n}\r\n```\r\n?\r\n\r\nIf you think the potential performance difference (which IMO is probably negligible when shoulder-to-shoulder with network IO) is okay, just doing something like that would allow you to keep `g_outbound_peers` a set and preserve the algorithm.",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T16:15:55Z",
      "diff_hunk" : "@@ -3879,39 +3992,35 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n+        // First check to see if there's anything in our notfound queue to request.\n+        static uint64_t not_found_counter = 0;\n+        ++not_found_counter;\n+        if (!state.m_tx_download.m_not_found.empty()) {\n+            // Check to see if it's our turn to drain the NOTFOUND queue.\n+            // The idea is that we would like to randomly assign NOTFOUND\n+            // transactions' next download request uniformly at random to our\n+            // outbound peers, even though we don't necessarily know which ones\n+            // will have the transaction available to download and not be up\n+            // against their in-flight limit (or any other future restrictions\n+            // we might impose).\n+            // Our algorithm is to keep a global SendMessages() counter and\n+            // every outbound peer gets to drain its notfound queue when the\n+            // counter matches its location.\n+            assert(g_outbound_peers.size() > 0);\n+            if (g_outbound_peers[not_found_counter % g_outbound_peers.size()] == pto->GetId()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261664629",
      "id" : 261664629,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTY2NDYyOQ==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 213,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209628650,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261664629",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261679609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261679609"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Doing a 1 in N draw each time would introduce a bias to peers that are earlier in the loop, versus ones that are later in the loop.  Imagine if N=2, and we have two peers, peer0 and peer1.  peer0 would be selected with probability 1/2 + 1/8 + 1/32 + ... = 2/3.  If N=8, I think the first peer would have a 19% chance of being selected.",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T16:55:01Z",
      "diff_hunk" : "@@ -3879,39 +3992,35 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n+        // First check to see if there's anything in our notfound queue to request.\n+        static uint64_t not_found_counter = 0;\n+        ++not_found_counter;\n+        if (!state.m_tx_download.m_not_found.empty()) {\n+            // Check to see if it's our turn to drain the NOTFOUND queue.\n+            // The idea is that we would like to randomly assign NOTFOUND\n+            // transactions' next download request uniformly at random to our\n+            // outbound peers, even though we don't necessarily know which ones\n+            // will have the transaction available to download and not be up\n+            // against their in-flight limit (or any other future restrictions\n+            // we might impose).\n+            // Our algorithm is to keep a global SendMessages() counter and\n+            // every outbound peer gets to drain its notfound queue when the\n+            // counter matches its location.\n+            assert(g_outbound_peers.size() > 0);\n+            if (g_outbound_peers[not_found_counter % g_outbound_peers.size()] == pto->GetId()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261679609",
      "id" : 261679609,
      "in_reply_to_id" : 261664629,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTY3OTYwOQ==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 213,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209683060,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261679609",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261682428"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261682428"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I just realized that my hacky implementation here is broken too -- the `not_found_counter` will basically increment by the number of peers we have, so if the number of peers we have is equal the number of outbound peers we have (a common state for non-listening nodes) then we'll always be requesting notfound's from the first peer.",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T17:03:11Z",
      "diff_hunk" : "@@ -3879,39 +3992,35 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n+        // First check to see if there's anything in our notfound queue to request.\n+        static uint64_t not_found_counter = 0;\n+        ++not_found_counter;\n+        if (!state.m_tx_download.m_not_found.empty()) {\n+            // Check to see if it's our turn to drain the NOTFOUND queue.\n+            // The idea is that we would like to randomly assign NOTFOUND\n+            // transactions' next download request uniformly at random to our\n+            // outbound peers, even though we don't necessarily know which ones\n+            // will have the transaction available to download and not be up\n+            // against their in-flight limit (or any other future restrictions\n+            // we might impose).\n+            // Our algorithm is to keep a global SendMessages() counter and\n+            // every outbound peer gets to drain its notfound queue when the\n+            // counter matches its location.\n+            assert(g_outbound_peers.size() > 0);\n+            if (g_outbound_peers[not_found_counter % g_outbound_peers.size()] == pto->GetId()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261682428",
      "id" : 261682428,
      "in_reply_to_id" : 261664629,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTY4MjQyOA==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 213,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209686798,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261682428",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261696397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261696397"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure I see how there's any bias based on the ordering of peers - the `GetRandInt` thing is an independent trial across peers, though of course we may end up draining multiple peers' `m_not_found` per single [`ThreadMessageHandler` loop](https://github.com/bitcoin/bitcoin/blob/master/src/net.cpp#L1954-L1978) if two peers both get `1/num_outbounds` lucky. Is there a reason we'd want to avoid that?\r\n\r\nIt seems like there might be a bias based upon [which peer we select to queue the `m_not_found` message on](https://github.com/bitcoin/bitcoin/pull/15505/files#diff-eff7adeaec73a769788bb78858815c91R3184) (peers earlier in `g_outbound_peers` will get selected first more often), but I'm not sure how the order in which we *flush* `m_not_found` makes a difference.",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T17:46:40Z",
      "diff_hunk" : "@@ -3879,39 +3992,35 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n+        // First check to see if there's anything in our notfound queue to request.\n+        static uint64_t not_found_counter = 0;\n+        ++not_found_counter;\n+        if (!state.m_tx_download.m_not_found.empty()) {\n+            // Check to see if it's our turn to drain the NOTFOUND queue.\n+            // The idea is that we would like to randomly assign NOTFOUND\n+            // transactions' next download request uniformly at random to our\n+            // outbound peers, even though we don't necessarily know which ones\n+            // will have the transaction available to download and not be up\n+            // against their in-flight limit (or any other future restrictions\n+            // we might impose).\n+            // Our algorithm is to keep a global SendMessages() counter and\n+            // every outbound peer gets to drain its notfound queue when the\n+            // counter matches its location.\n+            assert(g_outbound_peers.size() > 0);\n+            if (g_outbound_peers[not_found_counter % g_outbound_peers.size()] == pto->GetId()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261696397",
      "id" : 261696397,
      "in_reply_to_id" : 261664629,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTY5NjM5Nw==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 213,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209704848,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261696397",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261745805"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261745805"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T20:21:45Z",
      "diff_hunk" : "@@ -338,6 +352,11 @@ struct CNodeState {\n      *   peers.\n      */\n     struct TxDownloadState {\n+        /* Notifications of NOTFOUND transactions (from other peers) which\n+         * this peer has recently announced. txid->time in micros",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261745805",
      "id" : 261745805,
      "in_reply_to_id" : 261425941,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTc0NTgwNQ==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 43,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209768446,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261745805",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261745982"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261745982"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T20:22:25Z",
      "diff_hunk" : "@@ -3081,8 +3156,46 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     }\n \n     if (strCommand == NetMsgType::NOTFOUND) {\n-        // We do not care about the NOTFOUND message, but logging an Unknown Command\n-        // message would be undesirable as we transmit it ourselves.\n+        // Remove the NOTFOUND transactions from the peer\n+        LOCK(cs_main);\n+        CNodeState *state = State(pfrom->GetId());\n+        std::vector<CInv> vInv;\n+        vRecv >> vInv;\n+        if (vInv.size() <= MAX_INV_SZ) {\n+            for (CInv &inv : vInv) {\n+                if (inv.type == MSG_TX || inv.type == MSG_WITNESS_TX) {\n+                    state->m_tx_download.m_tx_announced.erase(inv.hash);\n+                    auto in_flight_it = state->m_tx_download.m_tx_in_flight.find(inv.hash);\n+                    if (in_flight_it == state->m_tx_download.m_tx_in_flight.end()) {\n+                        // Ignore NOTFOUND messages unless we requested the\n+                        // transaction from the peer, to prevent misbehaving peers from\n+                        // polluting the NOTFOUND queues or triggering multiple\n+                        // concurrent downloads of the same transactions\n+                        continue;\n+                    }\n+                    state->m_tx_download.m_tx_in_flight.erase(inv.hash);\n+                    EraseTxRequest(inv.hash);\n+                    // If we don't already have this transaction, check to see\n+                    // if any of our outbound peers have offered it to us, and\n+                    // if so signal them to try to request immediately. This avoids\n+                    // waiting for the download timeout to expire before\n+                    // re-requesting a transaction.\n+                    if (!AlreadyHave(inv)) {\n+                        for (auto it = g_outbound_peers.begin(); it != g_outbound_peers.end(); ++it) {\n+                            if (*it == pfrom->GetId()) continue;\n+                            CNodeState *state = State(*it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261745982",
      "id" : 261745982,
      "in_reply_to_id" : 261501879,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTc0NTk4Mg==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 178,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209768686,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261745982",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261746003"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261746003"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T20:22:32Z",
      "diff_hunk" : "@@ -724,6 +744,41 @@ void RequestTx(CNodeState* state, const uint256& txid, int64_t nNow) EXCLUSIVE_L\n     peer_download_state.m_tx_process_time.emplace(process_time, txid);\n }\n \n+// Given a txid and a peer that we'd like to consider downloading a transaction\n+// from: add an appropriate INV nessage to get_data if it is time to request",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261746003",
      "id" : 261746003,
      "in_reply_to_id" : 261502066,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTc0NjAwMw==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 63,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209768719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261746003",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261746079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261746079"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T20:22:49Z",
      "diff_hunk" : "@@ -724,6 +744,41 @@ void RequestTx(CNodeState* state, const uint256& txid, int64_t nNow) EXCLUSIVE_L\n     peer_download_state.m_tx_process_time.emplace(process_time, txid);\n }\n \n+// Given a txid and a peer that we'd like to consider downloading a transaction\n+// from: add an appropriate INV nessage to get_data if it is time to request\n+// the transaction from the peer, and update the appropriate tx download state\n+// (both the global state and the peer's state). Send a getdata message if the\n+// get_data vector grows too large.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261746079",
      "id" : 261746079,
      "in_reply_to_id" : 261637907,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTc0NjA3OQ==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 66,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209768827,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261746079",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261746119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261746119"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Will leave as-is -- in this case I like being able to tell that the code block exactly matches the if condition, rather than matching the opposite of an if condition above it that would have caused the loop iteration to be skipped.",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T20:22:58Z",
      "diff_hunk" : "@@ -3081,8 +3156,46 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     }\n \n     if (strCommand == NetMsgType::NOTFOUND) {\n-        // We do not care about the NOTFOUND message, but logging an Unknown Command\n-        // message would be undesirable as we transmit it ourselves.\n+        // Remove the NOTFOUND transactions from the peer\n+        LOCK(cs_main);\n+        CNodeState *state = State(pfrom->GetId());\n+        std::vector<CInv> vInv;\n+        vRecv >> vInv;\n+        if (vInv.size() <= MAX_INV_SZ) {\n+            for (CInv &inv : vInv) {\n+                if (inv.type == MSG_TX || inv.type == MSG_WITNESS_TX) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261746119",
      "id" : 261746119,
      "in_reply_to_id" : 261641756,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTc0NjExOQ==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 158,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209768887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261746119",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261746168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261746168"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, I meant to use the iterator in the erase() call, saving an extra map lookup.  Just did that in the latest commit.",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T20:23:11Z",
      "diff_hunk" : "@@ -3081,8 +3156,46 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     }\n \n     if (strCommand == NetMsgType::NOTFOUND) {\n-        // We do not care about the NOTFOUND message, but logging an Unknown Command\n-        // message would be undesirable as we transmit it ourselves.\n+        // Remove the NOTFOUND transactions from the peer\n+        LOCK(cs_main);\n+        CNodeState *state = State(pfrom->GetId());\n+        std::vector<CInv> vInv;\n+        vRecv >> vInv;\n+        if (vInv.size() <= MAX_INV_SZ) {\n+            for (CInv &inv : vInv) {\n+                if (inv.type == MSG_TX || inv.type == MSG_WITNESS_TX) {\n+                    state->m_tx_download.m_tx_announced.erase(inv.hash);\n+                    auto in_flight_it = state->m_tx_download.m_tx_in_flight.find(inv.hash);\n+                    if (in_flight_it == state->m_tx_download.m_tx_in_flight.end()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261746168",
      "id" : 261746168,
      "in_reply_to_id" : 261656447,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTc0NjE2OA==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 161,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209768954,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261746168",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261746278"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261746278"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok I redid this to be (hopefully) better, thanks.",
      "commit_id" : "753883512aab5ec8fedef8723c96c91fe4822b5b",
      "created_at" : "2019-03-01T20:23:36Z",
      "diff_hunk" : "@@ -3879,39 +3992,35 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n+        // First check to see if there's anything in our notfound queue to request.\n+        static uint64_t not_found_counter = 0;\n+        ++not_found_counter;\n+        if (!state.m_tx_download.m_not_found.empty()) {\n+            // Check to see if it's our turn to drain the NOTFOUND queue.\n+            // The idea is that we would like to randomly assign NOTFOUND\n+            // transactions' next download request uniformly at random to our\n+            // outbound peers, even though we don't necessarily know which ones\n+            // will have the transaction available to download and not be up\n+            // against their in-flight limit (or any other future restrictions\n+            // we might impose).\n+            // Our algorithm is to keep a global SendMessages() counter and\n+            // every outbound peer gets to drain its notfound queue when the\n+            // counter matches its location.\n+            assert(g_outbound_peers.size() > 0);\n+            if (g_outbound_peers[not_found_counter % g_outbound_peers.size()] == pto->GetId()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#discussion_r261746278",
      "id" : 261746278,
      "in_reply_to_id" : 261664629,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTc0NjI3OA==",
      "original_commit_id" : "0f4ceef38955c8a841f1c6d6a164ac53d7f10754",
      "original_position" : 213,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 209769100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15505",
      "updated_at" : "2019-06-16T18:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261746278",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jamesob Thanks for the helpful suggestions.  I rewrote this with `g_outbound_peers` being a set, and moving the global sequence number needed for peer selection to be in the interface between net and net_processing.  (It seems to me like the idea of having synchronization between loop iterations in ThreadMessageHandler is something that is occasionally useful in net_processing, so I hope the interface change there is acceptable.)",
      "created_at" : "2019-03-01T20:25:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-468800182",
      "id" : 468800182,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODgwMDE4Mg==",
      "updated_at" : "2019-03-01T20:25:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468800182",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I must be misunderstanding something.\r\n\r\nImagine we have 2 peers:\r\n[p1, p2]\r\nStart with seq_num = 1\r\n\r\nSendMessages(p1, 1 % 2 = 1): false\r\nSendMessages(p2, 1 % 2 = 1): false\r\n\r\nSendMessages(p1, 2 % 2 = 0): true\r\nSendMessages(p2, 2 % 2 = 0): true\r\n\r\nSo, p1 will be always called before p2 (and much likely to request something from p1)?",
      "created_at" : "2019-03-01T21:56:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-468825799",
      "id" : 468825799,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODgyNTc5OQ==",
      "updated_at" : "2019-03-01T21:56:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468825799",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs it's not the result of the modulus that is evaluated to determine whether to `notfound` flush for a given peer; `sequence_number % num_outbounds` is used as an index into the set of outbounds which then determines the peer whose turn it is to flush.",
      "created_at" : "2019-03-01T22:02:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-468827382",
      "id" : 468827382,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODgyNzM4Mg==",
      "updated_at" : "2019-03-01T22:02:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468827382",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Let's say we have 2 peers, p1 and p2 in `g_outbound_peers`, and let's assume the `std::set` comparator puts them in that order when iterating through `g_outbound_peers`.  Let's also say both of them have something in their respective notfound queues.\r\n\r\nWhen the sequence number is 1, then 1 % 2 == 1, so we look at g_outbound_peers.begin() + 1, and we get p2's nodeid.  When we call SendMessage on p1, the nodeid will not match, so its queue will not be drained.  When we call SendMessages on p2, the condition will be true, and we'll drain the notfound queue.   On the next loop iteration, the conditions flip.\r\n\r\n(I'm open to simpler logic that accomplishes the same thing!)",
      "created_at" : "2019-03-01T22:04:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-468827897",
      "id" : 468827897,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODgyNzg5Nw==",
      "updated_at" : "2019-03-01T22:04:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468827897",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sdaftuar @jamesob I see, you're right, thanks.\r\n\r\nI was not a big fan of extra sequence_numbers, but based on the discussion above and some thinking I don't see a cleaner way to select a peer in a fair way. This sequence_number is also likely to be useful somewhere else in future.\r\n\r\nutACK",
      "created_at" : "2019-03-01T22:07:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-468828466",
      "id" : 468828466,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODgyODQ2Ng==",
      "updated_at" : "2019-03-01T22:07:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468828466",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK https://github.com/bitcoin/bitcoin/pull/15505/commits/f5dbb49c8922cb26d05862b7aacf161bde8ffc5a\r\n\r\nI was going to write a functional test for this, but I'm not sure there's a sensible way to do that given that it looks like we can't force `P2PDataStore` clients to be outbound connections for nodes under test. (see also: https://github.com/bitcoin/bitcoin/issues/14210)\r\n\r\nIf anyone can think of a good manual test plan, I'm happy to carry it out.",
      "created_at" : "2019-03-05T19:41:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-469829789",
      "id" : 469829789,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTgyOTc4OQ==",
      "updated_at" : "2019-03-05T19:42:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469829789",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-05-04T10:54:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-489316471",
      "id" : 489316471,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTMxNjQ3MQ==",
      "updated_at" : "2019-05-04T10:54:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489316471",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing for now.",
      "created_at" : "2019-06-05T15:16:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-499128040",
      "id" : 499128040,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5OTEyODA0MA==",
      "updated_at" : "2019-06-05T15:16:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499128040",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Seems like not much interest here, closing for now.",
      "created_at" : "2019-07-22T14:28:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-513815553",
      "id" : 513815553,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMzgxNTU1Mw==",
      "updated_at" : "2019-07-22T14:28:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513815553",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Rather than using a sequence number to determine which peer's notfound queue to drain, would the following work?\r\n\r\n1. When a `notfound` message is received, add each transaction to the notfound queue of a random peer selected from those that have announced the transaction.\r\n1. Unconditionally drain each peer's notfound queue.\r\n\r\nThis would avoid the added complexity of a sequence number. It would also ensure that each transaction is requested from only one peer.",
      "created_at" : "2019-07-30T23:41:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-516636613",
      "id" : 516636613,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNjYzNjYxMw==",
      "updated_at" : "2019-07-30T23:41:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516636613",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-10-29T19:35:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-547593695",
      "id" : 547593695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzU5MzY5NQ==",
      "updated_at" : "2019-10-29T19:35:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547593695",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar what do you think about @jkczyz's suggestion for randomly selecting which peer to request the tx from? Conceptually, I think I prefer it to the sequence counter in the net/net_processing interface.",
      "created_at" : "2019-11-13T20:13:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-553581678",
      "id" : 553581678,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MzU4MTY3OA==",
      "updated_at" : "2019-11-13T20:13:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/553581678",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Rather than using a sequence number to determine which peer's notfound queue to drain, would the following work?\r\n> \r\n> 1. When a `notfound` message is received, add each transaction to the notfound queue of a random peer selected from those that have announced the transaction.\r\n> 2. Unconditionally drain each peer's notfound queue.\r\n\r\nThe reason I tend to avoid an approach like this is because the logic for whether we actually send a message to a peer is very complex; there are many reasons why we might call SendMessages() on a peer and then ultimately not be able to send a getdata to it (maybe we have too many getdataâs in flight to them, or maybe weâre processing block requests for them, or maybe their send buffer is full blocking communication for a while, etc).  Since thereâs no good way to tell whether a getdata would be sent if assigned to a given peer, I think itâs more robust to just signal all of them and let each peer individually figure out if they can make the request.",
      "created_at" : "2019-11-14T20:28:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-554065417",
      "id" : 554065417,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NDA2NTQxNw==",
      "updated_at" : "2019-11-14T20:28:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/554065417",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar Are you still working on this to get it rebased or would you prefer some to take it over?",
      "created_at" : "2019-11-15T19:39:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-554499665",
      "id" : 554499665,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NDQ5OTY2NQ==",
      "updated_at" : "2019-11-15T19:39:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/554499665",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Please consider this up for grabs.",
      "created_at" : "2019-11-15T20:07:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-554509350",
      "id" : 554509350,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NDUwOTM1MA==",
      "updated_at" : "2019-11-15T20:07:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/554509350",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Going to close. @naumenkogs you might be interested in following up here?",
      "created_at" : "2020-01-05T03:30:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15505#issuecomment-570847699",
      "id" : 570847699,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15505",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MDg0NzY5OQ==",
      "updated_at" : "2020-01-05T03:30:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570847699",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
