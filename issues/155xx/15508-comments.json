[
   {
      "author_association" : "MEMBER",
      "body" : "[Travis](https://travis-ci.org/bitcoin/bitcoin/jobs/500229801):\r\n```\r\nA new circular dependency in the form of \"core_io -> psbt -> core_io\" appears to have been introduced.\r\n^---- failure generated from test/lint/lint-circular-dependencies.sh\r\n```",
      "created_at" : "2019-03-01T08:42:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-468588433",
      "id" : 468588433,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODU4ODQzMw==",
      "updated_at" : "2019-03-01T08:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468588433",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, that's not great, is it. I guess I forgot to run lint-all, sorry. (I have to raise the file descriptor limit before running, or it crashes on my mac, so it's easy to forget...)\r\n\r\nI am a little confused about this lint, because it appears I didn't introduce a circular header dependency -- rather, core_io.h (the interface) depends on psbt.h, but psbt._cpp_ (the implementation) depends on core_io.h. This doesn't seem especially offensive to me, since it's not actually circular? Is it intentional that the lint flags this situation?",
      "created_at" : "2019-03-01T19:50:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-468789900",
      "id" : 468789900,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODc4OTkwMA==",
      "updated_at" : "2019-03-01T19:50:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468789900",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "... but apparently the dependency was no longer needed anyway, so I don't need to litigate this. ;-) Fixed!",
      "created_at" : "2019-03-01T19:54:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-468791189",
      "id" : 468791189,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODc5MTE4OQ==",
      "updated_at" : "2019-03-01T19:54:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468791189",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261832564"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261832564"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The scope of `input` could be reduced here without any change in behaviour, right?",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-02T16:26:20Z",
      "diff_hunk" : "@@ -325,3 +330,139 @@ TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector\n \n     return TransactionError::OK;\n }\n+\n+std::string PSBTRoleName(PSBTRole role) {\n+    switch (role) {\n+        case PSBTRole::UPDATER:   return \"updater\";\n+        case PSBTRole::SIGNER:    return \"signer\";\n+        case PSBTRole::FINALIZER: return \"finalizer\";\n+        case PSBTRole::EXTRACTOR: return \"extractor\";\n+    }\n+}\n+\n+PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n+{\n+    // Go through each input and build status\n+    PSBTAnalysis result;\n+\n+    bool calc_fee = true;\n+    bool all_final = true;\n+    bool only_missing_sigs = true;\n+    bool only_missing_final = false;\n+    CAmount in_amt = 0;\n+\n+    result.inputs.resize(psbtx.tx->vin.size());\n+\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        PSBTInput& input = psbtx.inputs[i];\n+        PSBTInputAnalysis& input_analysis = result.inputs[i];\n+\n+        // Check for a UTXO\n+        CTxOut utxo;\n+        if (psbtx.GetInputUTXO(utxo, i)) {\n+            in_amt += utxo.nValue;\n+            input_analysis.has_utxo = true;\n+        } else {\n+            input_analysis.has_utxo = false;\n+            input_analysis.is_final = false;\n+            input_analysis.next = PSBTRole::UPDATER;\n+            calc_fee = false;\n+        }\n+\n+        // Check if it is final\n+        if (!utxo.IsNull() && !PSBTInputSigned(input)) {\n+            input_analysis.is_final = false;\n+            all_final = false;\n+\n+            // Figure out what is missing\n+            SignatureData outdata;\n+            bool complete = SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, &outdata);\n+\n+            // Things are missing\n+            if (!complete) {\n+                input_analysis.missing_pubkeys = outdata.missing_pubkeys;\n+                input_analysis.missing_redeem_script = outdata.missing_redeem_script;\n+                input_analysis.missing_witness_script = outdata.missing_witness_script;\n+                input_analysis.missing_sigs = outdata.missing_sigs;\n+\n+                // If we are only missing signatures and nothing else, then next is signer\n+                if (outdata.missing_pubkeys.empty() && outdata.missing_redeem_script.IsNull() && outdata.missing_witness_script.IsNull() && !outdata.missing_sigs.empty()) {\n+                    input_analysis.next = PSBTRole::SIGNER;\n+                } else {\n+                    only_missing_sigs = false;\n+                    input_analysis.next = PSBTRole::UPDATER;\n+                }\n+            } else {\n+                only_missing_final = true;\n+                input_analysis.next = PSBTRole::FINALIZER;\n+            }\n+        } else if (!utxo.IsNull()){\n+            input_analysis.is_final = true;\n+        }\n+    }\n+\n+    if (all_final) {\n+        only_missing_sigs = false;\n+        result.next = PSBTRole::EXTRACTOR;\n+    }\n+    if (calc_fee) {\n+        // Get the output amount\n+        CAmount out_amt = std::accumulate(psbtx.tx->vout.begin(), psbtx.tx->vout.end(), 0,\n+            [](int a, const CTxOut& b) {\n+                return a += b.nValue;\n+            }\n+        );\n+\n+        // Get the fee\n+        CAmount fee = in_amt - out_amt;\n+\n+        // Estimate the size\n+        CMutableTransaction mtx(*psbtx.tx);\n+        CCoinsView view_dummy;\n+        CCoinsViewCache view(&view_dummy);\n+        bool success = true;\n+\n+        for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+            PSBTInput& input = psbtx.inputs[i];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261832564",
      "id" : 261832564,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTgzMjU2NA==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 121,
      "path" : "src/psbt.cpp",
      "position" : 122,
      "pull_request_review_id" : 209873918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261832564",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261844857"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261844857"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, that's true -- would you prefer I did? I normally agree about \"less scope is better\", but here that instinct is clashing with my instinct to keep parallel things together, and definitions at the top of the relevant block.",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-02T22:42:17Z",
      "diff_hunk" : "@@ -325,3 +330,139 @@ TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector\n \n     return TransactionError::OK;\n }\n+\n+std::string PSBTRoleName(PSBTRole role) {\n+    switch (role) {\n+        case PSBTRole::UPDATER:   return \"updater\";\n+        case PSBTRole::SIGNER:    return \"signer\";\n+        case PSBTRole::FINALIZER: return \"finalizer\";\n+        case PSBTRole::EXTRACTOR: return \"extractor\";\n+    }\n+}\n+\n+PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n+{\n+    // Go through each input and build status\n+    PSBTAnalysis result;\n+\n+    bool calc_fee = true;\n+    bool all_final = true;\n+    bool only_missing_sigs = true;\n+    bool only_missing_final = false;\n+    CAmount in_amt = 0;\n+\n+    result.inputs.resize(psbtx.tx->vin.size());\n+\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        PSBTInput& input = psbtx.inputs[i];\n+        PSBTInputAnalysis& input_analysis = result.inputs[i];\n+\n+        // Check for a UTXO\n+        CTxOut utxo;\n+        if (psbtx.GetInputUTXO(utxo, i)) {\n+            in_amt += utxo.nValue;\n+            input_analysis.has_utxo = true;\n+        } else {\n+            input_analysis.has_utxo = false;\n+            input_analysis.is_final = false;\n+            input_analysis.next = PSBTRole::UPDATER;\n+            calc_fee = false;\n+        }\n+\n+        // Check if it is final\n+        if (!utxo.IsNull() && !PSBTInputSigned(input)) {\n+            input_analysis.is_final = false;\n+            all_final = false;\n+\n+            // Figure out what is missing\n+            SignatureData outdata;\n+            bool complete = SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, &outdata);\n+\n+            // Things are missing\n+            if (!complete) {\n+                input_analysis.missing_pubkeys = outdata.missing_pubkeys;\n+                input_analysis.missing_redeem_script = outdata.missing_redeem_script;\n+                input_analysis.missing_witness_script = outdata.missing_witness_script;\n+                input_analysis.missing_sigs = outdata.missing_sigs;\n+\n+                // If we are only missing signatures and nothing else, then next is signer\n+                if (outdata.missing_pubkeys.empty() && outdata.missing_redeem_script.IsNull() && outdata.missing_witness_script.IsNull() && !outdata.missing_sigs.empty()) {\n+                    input_analysis.next = PSBTRole::SIGNER;\n+                } else {\n+                    only_missing_sigs = false;\n+                    input_analysis.next = PSBTRole::UPDATER;\n+                }\n+            } else {\n+                only_missing_final = true;\n+                input_analysis.next = PSBTRole::FINALIZER;\n+            }\n+        } else if (!utxo.IsNull()){\n+            input_analysis.is_final = true;\n+        }\n+    }\n+\n+    if (all_final) {\n+        only_missing_sigs = false;\n+        result.next = PSBTRole::EXTRACTOR;\n+    }\n+    if (calc_fee) {\n+        // Get the output amount\n+        CAmount out_amt = std::accumulate(psbtx.tx->vout.begin(), psbtx.tx->vout.end(), 0,\n+            [](int a, const CTxOut& b) {\n+                return a += b.nValue;\n+            }\n+        );\n+\n+        // Get the fee\n+        CAmount fee = in_amt - out_amt;\n+\n+        // Estimate the size\n+        CMutableTransaction mtx(*psbtx.tx);\n+        CCoinsView view_dummy;\n+        CCoinsViewCache view(&view_dummy);\n+        bool success = true;\n+\n+        for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+            PSBTInput& input = psbtx.inputs[i];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261844857",
      "id" : 261844857,
      "in_reply_to_id" : 261832564,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTg0NDg1Nw==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 121,
      "path" : "src/psbt.cpp",
      "position" : 122,
      "pull_request_review_id" : 209886957,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261844857",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261858584"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261858584"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for the explanation. Makes sense!",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-03T09:28:28Z",
      "diff_hunk" : "@@ -325,3 +330,139 @@ TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector\n \n     return TransactionError::OK;\n }\n+\n+std::string PSBTRoleName(PSBTRole role) {\n+    switch (role) {\n+        case PSBTRole::UPDATER:   return \"updater\";\n+        case PSBTRole::SIGNER:    return \"signer\";\n+        case PSBTRole::FINALIZER: return \"finalizer\";\n+        case PSBTRole::EXTRACTOR: return \"extractor\";\n+    }\n+}\n+\n+PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n+{\n+    // Go through each input and build status\n+    PSBTAnalysis result;\n+\n+    bool calc_fee = true;\n+    bool all_final = true;\n+    bool only_missing_sigs = true;\n+    bool only_missing_final = false;\n+    CAmount in_amt = 0;\n+\n+    result.inputs.resize(psbtx.tx->vin.size());\n+\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        PSBTInput& input = psbtx.inputs[i];\n+        PSBTInputAnalysis& input_analysis = result.inputs[i];\n+\n+        // Check for a UTXO\n+        CTxOut utxo;\n+        if (psbtx.GetInputUTXO(utxo, i)) {\n+            in_amt += utxo.nValue;\n+            input_analysis.has_utxo = true;\n+        } else {\n+            input_analysis.has_utxo = false;\n+            input_analysis.is_final = false;\n+            input_analysis.next = PSBTRole::UPDATER;\n+            calc_fee = false;\n+        }\n+\n+        // Check if it is final\n+        if (!utxo.IsNull() && !PSBTInputSigned(input)) {\n+            input_analysis.is_final = false;\n+            all_final = false;\n+\n+            // Figure out what is missing\n+            SignatureData outdata;\n+            bool complete = SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, &outdata);\n+\n+            // Things are missing\n+            if (!complete) {\n+                input_analysis.missing_pubkeys = outdata.missing_pubkeys;\n+                input_analysis.missing_redeem_script = outdata.missing_redeem_script;\n+                input_analysis.missing_witness_script = outdata.missing_witness_script;\n+                input_analysis.missing_sigs = outdata.missing_sigs;\n+\n+                // If we are only missing signatures and nothing else, then next is signer\n+                if (outdata.missing_pubkeys.empty() && outdata.missing_redeem_script.IsNull() && outdata.missing_witness_script.IsNull() && !outdata.missing_sigs.empty()) {\n+                    input_analysis.next = PSBTRole::SIGNER;\n+                } else {\n+                    only_missing_sigs = false;\n+                    input_analysis.next = PSBTRole::UPDATER;\n+                }\n+            } else {\n+                only_missing_final = true;\n+                input_analysis.next = PSBTRole::FINALIZER;\n+            }\n+        } else if (!utxo.IsNull()){\n+            input_analysis.is_final = true;\n+        }\n+    }\n+\n+    if (all_final) {\n+        only_missing_sigs = false;\n+        result.next = PSBTRole::EXTRACTOR;\n+    }\n+    if (calc_fee) {\n+        // Get the output amount\n+        CAmount out_amt = std::accumulate(psbtx.tx->vout.begin(), psbtx.tx->vout.end(), 0,\n+            [](int a, const CTxOut& b) {\n+                return a += b.nValue;\n+            }\n+        );\n+\n+        // Get the fee\n+        CAmount fee = in_amt - out_amt;\n+\n+        // Estimate the size\n+        CMutableTransaction mtx(*psbtx.tx);\n+        CCoinsView view_dummy;\n+        CCoinsViewCache view(&view_dummy);\n+        bool success = true;\n+\n+        for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+            PSBTInput& input = psbtx.inputs[i];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261858584",
      "id" : 261858584,
      "in_reply_to_id" : 261832564,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTg1ODU4NA==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 121,
      "path" : "src/psbt.cpp",
      "position" : 122,
      "pull_request_review_id" : 209901579,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261858584",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261874030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261874030"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`const PartiallySignedTransaction& psbtx`?",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-03T16:10:09Z",
      "diff_hunk" : "@@ -580,4 +610,12 @@ bool FinalizeAndExtractPSBT(PartiallySignedTransaction& psbtx, CMutableTransacti\n  */\n NODISCARD TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector<PartiallySignedTransaction>& psbtxs);\n \n+/**\n+ * Provides helpful miscellaneous information about where a PSBT is in the signing workflow.\n+ *\n+ * @param[in] psbtx the PSBT to analyze\n+ * @return A PSBTAnalysis with information about the provided PSBT.\n+ */\n+PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261874030",
      "id" : 261874030,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTg3NDAzMA==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 57,
      "path" : "src/psbt.h",
      "position" : 63,
      "pull_request_review_id" : 209889054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261874030",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261874105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261874105"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could move this after `GetInputUTXO()`?",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-03T16:12:25Z",
      "diff_hunk" : "@@ -325,3 +330,139 @@ TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector\n \n     return TransactionError::OK;\n }\n+\n+std::string PSBTRoleName(PSBTRole role) {\n+    switch (role) {\n+        case PSBTRole::UPDATER:   return \"updater\";\n+        case PSBTRole::SIGNER:    return \"signer\";\n+        case PSBTRole::FINALIZER: return \"finalizer\";\n+        case PSBTRole::EXTRACTOR: return \"extractor\";\n+    }\n+}\n+\n+PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n+{\n+    // Go through each input and build status\n+    PSBTAnalysis result;\n+\n+    bool calc_fee = true;\n+    bool all_final = true;\n+    bool only_missing_sigs = true;\n+    bool only_missing_final = false;\n+    CAmount in_amt = 0;\n+\n+    result.inputs.resize(psbtx.tx->vin.size());\n+\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        PSBTInput& input = psbtx.inputs[i];\n+        PSBTInputAnalysis& input_analysis = result.inputs[i];\n+\n+        // Check for a UTXO\n+        CTxOut utxo;\n+        if (psbtx.GetInputUTXO(utxo, i)) {\n+            in_amt += utxo.nValue;\n+            input_analysis.has_utxo = true;\n+        } else {\n+            input_analysis.has_utxo = false;\n+            input_analysis.is_final = false;\n+            input_analysis.next = PSBTRole::UPDATER;\n+            calc_fee = false;\n+        }\n+\n+        // Check if it is final\n+        if (!utxo.IsNull() && !PSBTInputSigned(input)) {\n+            input_analysis.is_final = false;\n+            all_final = false;\n+\n+            // Figure out what is missing\n+            SignatureData outdata;\n+            bool complete = SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, &outdata);\n+\n+            // Things are missing\n+            if (!complete) {\n+                input_analysis.missing_pubkeys = outdata.missing_pubkeys;\n+                input_analysis.missing_redeem_script = outdata.missing_redeem_script;\n+                input_analysis.missing_witness_script = outdata.missing_witness_script;\n+                input_analysis.missing_sigs = outdata.missing_sigs;\n+\n+                // If we are only missing signatures and nothing else, then next is signer\n+                if (outdata.missing_pubkeys.empty() && outdata.missing_redeem_script.IsNull() && outdata.missing_witness_script.IsNull() && !outdata.missing_sigs.empty()) {\n+                    input_analysis.next = PSBTRole::SIGNER;\n+                } else {\n+                    only_missing_sigs = false;\n+                    input_analysis.next = PSBTRole::UPDATER;\n+                }\n+            } else {\n+                only_missing_final = true;\n+                input_analysis.next = PSBTRole::FINALIZER;\n+            }\n+        } else if (!utxo.IsNull()){\n+            input_analysis.is_final = true;\n+        }\n+    }\n+\n+    if (all_final) {\n+        only_missing_sigs = false;\n+        result.next = PSBTRole::EXTRACTOR;\n+    }\n+    if (calc_fee) {\n+        // Get the output amount\n+        CAmount out_amt = std::accumulate(psbtx.tx->vout.begin(), psbtx.tx->vout.end(), 0,\n+            [](int a, const CTxOut& b) {\n+                return a += b.nValue;\n+            }\n+        );\n+\n+        // Get the fee\n+        CAmount fee = in_amt - out_amt;\n+\n+        // Estimate the size\n+        CMutableTransaction mtx(*psbtx.tx);\n+        CCoinsView view_dummy;\n+        CCoinsViewCache view(&view_dummy);\n+        bool success = true;\n+\n+        for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+            PSBTInput& input = psbtx.inputs[i];\n+            if (SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, nullptr, true)) {\n+                mtx.vin[i].scriptSig = input.final_script_sig;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261874105",
      "id" : 261874105,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTg3NDEwNQ==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 123,
      "path" : "src/psbt.cpp",
      "position" : 129,
      "pull_request_review_id" : 209889054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261874105",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261874253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261874253"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we align `case` with `switch`. nit, I'd ignore `return`s alignment.",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-03T16:15:57Z",
      "diff_hunk" : "@@ -325,3 +330,139 @@ TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector\n \n     return TransactionError::OK;\n }\n+\n+std::string PSBTRoleName(PSBTRole role) {\n+    switch (role) {\n+        case PSBTRole::UPDATER:   return \"updater\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261874253",
      "id" : 261874253,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTg3NDI1Mw==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 31,
      "path" : "src/psbt.cpp",
      "position" : null,
      "pull_request_review_id" : 209889054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261874253",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261962916"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261962916"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I tried, but I had to back it out, because of the pattern of using \"SignPSBTInput(DUMMY_SIGNING_PROVIDER, ...)\" to get signature data without modifying the PSBT. So we either have to take the psbt by value, or by non-const reference.\r\n\r\nWe could get around this with a const cast, but I'm against it unless we think the cost of copying a PartiallySignedTransaction is truly unacceptable.",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-04T08:45:53Z",
      "diff_hunk" : "@@ -580,4 +610,12 @@ bool FinalizeAndExtractPSBT(PartiallySignedTransaction& psbtx, CMutableTransacti\n  */\n NODISCARD TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector<PartiallySignedTransaction>& psbtxs);\n \n+/**\n+ * Provides helpful miscellaneous information about where a PSBT is in the signing workflow.\n+ *\n+ * @param[in] psbtx the PSBT to analyze\n+ * @return A PSBTAnalysis with information about the provided PSBT.\n+ */\n+PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r261962916",
      "id" : 261962916,
      "in_reply_to_id" : 261874030,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTk2MjkxNg==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 57,
      "path" : "src/psbt.h",
      "position" : 63,
      "pull_request_review_id" : 210023201,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261962916",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, I seem to have introduced a linker problem that does not happen on OS X. I will get around to looking at it in a Linux VM, but if someone could look at it and go \"oh, I know what you did wrong\", I'm sure it would save me a bunch of time. ;-)",
      "created_at" : "2019-03-04T08:48:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-469167491",
      "id" : 469167491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTE2NzQ5MQ==",
      "updated_at" : "2019-03-04T08:48:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469167491",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "psbt.cpp is in libbitcoin_common, and consensus/tx_verify.cpp is in libbitcoin_server. libbitcoin_common in linked into `bitcoin-tx`, but libbitcoin_server isn't.",
      "created_at" : "2019-03-04T08:58:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-469170746",
      "id" : 469170746,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTE3MDc0Ng==",
      "updated_at" : "2019-03-04T08:59:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469170746",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @sipa.\r\n\r\nThe easiest solution seems -- after whipping out a linux machine and doing a lot of repeatedly fiddling with Makefile.am and rebuilding everything from scratch -- to be moving psbt.cpp from libbitcoin_common to libbitcoin_server. LMK what you think of that plan.\r\n\r\nUnfortunately the tree of dependencies from AnalyzePSBT into libbitcoin_server runs very deep. The chain of dependencies is mostly fake -- of the form \"X coincidentally exists in the same file as something that depends on Y\" -- but still seems annoying to break.\r\n\r\nThe actual issue is not with _most_ of the functionality of AnalyzePSBT, but just with the ancillary bit at the end which computes the size of a transaction, in order to compute the feerate. So one other option would be to break that bit out into a separate function and throw it into libbitcoin_server somewhere.",
      "created_at" : "2019-03-06T03:11:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-469950688",
      "id" : 469950688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTk1MDY4OA==",
      "updated_at" : "2019-03-06T03:11:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469950688",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r262779087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262779087"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd be happy to, but I'm not sure I understand why? Can you elaborate?",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-06T03:18:38Z",
      "diff_hunk" : "@@ -325,3 +330,139 @@ TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector\n \n     return TransactionError::OK;\n }\n+\n+std::string PSBTRoleName(PSBTRole role) {\n+    switch (role) {\n+        case PSBTRole::UPDATER:   return \"updater\";\n+        case PSBTRole::SIGNER:    return \"signer\";\n+        case PSBTRole::FINALIZER: return \"finalizer\";\n+        case PSBTRole::EXTRACTOR: return \"extractor\";\n+    }\n+}\n+\n+PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n+{\n+    // Go through each input and build status\n+    PSBTAnalysis result;\n+\n+    bool calc_fee = true;\n+    bool all_final = true;\n+    bool only_missing_sigs = true;\n+    bool only_missing_final = false;\n+    CAmount in_amt = 0;\n+\n+    result.inputs.resize(psbtx.tx->vin.size());\n+\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        PSBTInput& input = psbtx.inputs[i];\n+        PSBTInputAnalysis& input_analysis = result.inputs[i];\n+\n+        // Check for a UTXO\n+        CTxOut utxo;\n+        if (psbtx.GetInputUTXO(utxo, i)) {\n+            in_amt += utxo.nValue;\n+            input_analysis.has_utxo = true;\n+        } else {\n+            input_analysis.has_utxo = false;\n+            input_analysis.is_final = false;\n+            input_analysis.next = PSBTRole::UPDATER;\n+            calc_fee = false;\n+        }\n+\n+        // Check if it is final\n+        if (!utxo.IsNull() && !PSBTInputSigned(input)) {\n+            input_analysis.is_final = false;\n+            all_final = false;\n+\n+            // Figure out what is missing\n+            SignatureData outdata;\n+            bool complete = SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, &outdata);\n+\n+            // Things are missing\n+            if (!complete) {\n+                input_analysis.missing_pubkeys = outdata.missing_pubkeys;\n+                input_analysis.missing_redeem_script = outdata.missing_redeem_script;\n+                input_analysis.missing_witness_script = outdata.missing_witness_script;\n+                input_analysis.missing_sigs = outdata.missing_sigs;\n+\n+                // If we are only missing signatures and nothing else, then next is signer\n+                if (outdata.missing_pubkeys.empty() && outdata.missing_redeem_script.IsNull() && outdata.missing_witness_script.IsNull() && !outdata.missing_sigs.empty()) {\n+                    input_analysis.next = PSBTRole::SIGNER;\n+                } else {\n+                    only_missing_sigs = false;\n+                    input_analysis.next = PSBTRole::UPDATER;\n+                }\n+            } else {\n+                only_missing_final = true;\n+                input_analysis.next = PSBTRole::FINALIZER;\n+            }\n+        } else if (!utxo.IsNull()){\n+            input_analysis.is_final = true;\n+        }\n+    }\n+\n+    if (all_final) {\n+        only_missing_sigs = false;\n+        result.next = PSBTRole::EXTRACTOR;\n+    }\n+    if (calc_fee) {\n+        // Get the output amount\n+        CAmount out_amt = std::accumulate(psbtx.tx->vout.begin(), psbtx.tx->vout.end(), 0,\n+            [](int a, const CTxOut& b) {\n+                return a += b.nValue;\n+            }\n+        );\n+\n+        // Get the fee\n+        CAmount fee = in_amt - out_amt;\n+\n+        // Estimate the size\n+        CMutableTransaction mtx(*psbtx.tx);\n+        CCoinsView view_dummy;\n+        CCoinsViewCache view(&view_dummy);\n+        bool success = true;\n+\n+        for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+            PSBTInput& input = psbtx.inputs[i];\n+            if (SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, nullptr, true)) {\n+                mtx.vin[i].scriptSig = input.final_script_sig;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r262779087",
      "id" : 262779087,
      "in_reply_to_id" : 261874105,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mjc3OTA4Nw==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 123,
      "path" : "src/psbt.cpp",
      "position" : 129,
      "pull_request_review_id" : 211028226,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262779087",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r262781610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262781610"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-06T03:36:49Z",
      "diff_hunk" : "@@ -325,3 +330,139 @@ TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector\n \n     return TransactionError::OK;\n }\n+\n+std::string PSBTRoleName(PSBTRole role) {\n+    switch (role) {\n+        case PSBTRole::UPDATER:   return \"updater\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r262781610",
      "id" : 262781610,
      "in_reply_to_id" : 261874253,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mjc4MTYxMA==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 31,
      "path" : "src/psbt.cpp",
      "position" : null,
      "pull_request_review_id" : 211031313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262781610",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r263205743"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263205743"
         }
      },
      "author_association" : "MEMBER",
      "body" : "consider nit, just one loop exit:\r\n```cpp\r\nif (!SignPSBTInput(...) || !psbtx.GetInputUTXO(...)) {\r\n     success = false\r\n     break;\r\n}\r\n```",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-07T01:24:41Z",
      "diff_hunk" : "@@ -325,3 +330,139 @@ TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector\n \n     return TransactionError::OK;\n }\n+\n+std::string PSBTRoleName(PSBTRole role) {\n+    switch (role) {\n+        case PSBTRole::UPDATER:   return \"updater\";\n+        case PSBTRole::SIGNER:    return \"signer\";\n+        case PSBTRole::FINALIZER: return \"finalizer\";\n+        case PSBTRole::EXTRACTOR: return \"extractor\";\n+    }\n+}\n+\n+PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n+{\n+    // Go through each input and build status\n+    PSBTAnalysis result;\n+\n+    bool calc_fee = true;\n+    bool all_final = true;\n+    bool only_missing_sigs = true;\n+    bool only_missing_final = false;\n+    CAmount in_amt = 0;\n+\n+    result.inputs.resize(psbtx.tx->vin.size());\n+\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        PSBTInput& input = psbtx.inputs[i];\n+        PSBTInputAnalysis& input_analysis = result.inputs[i];\n+\n+        // Check for a UTXO\n+        CTxOut utxo;\n+        if (psbtx.GetInputUTXO(utxo, i)) {\n+            in_amt += utxo.nValue;\n+            input_analysis.has_utxo = true;\n+        } else {\n+            input_analysis.has_utxo = false;\n+            input_analysis.is_final = false;\n+            input_analysis.next = PSBTRole::UPDATER;\n+            calc_fee = false;\n+        }\n+\n+        // Check if it is final\n+        if (!utxo.IsNull() && !PSBTInputSigned(input)) {\n+            input_analysis.is_final = false;\n+            all_final = false;\n+\n+            // Figure out what is missing\n+            SignatureData outdata;\n+            bool complete = SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, &outdata);\n+\n+            // Things are missing\n+            if (!complete) {\n+                input_analysis.missing_pubkeys = outdata.missing_pubkeys;\n+                input_analysis.missing_redeem_script = outdata.missing_redeem_script;\n+                input_analysis.missing_witness_script = outdata.missing_witness_script;\n+                input_analysis.missing_sigs = outdata.missing_sigs;\n+\n+                // If we are only missing signatures and nothing else, then next is signer\n+                if (outdata.missing_pubkeys.empty() && outdata.missing_redeem_script.IsNull() && outdata.missing_witness_script.IsNull() && !outdata.missing_sigs.empty()) {\n+                    input_analysis.next = PSBTRole::SIGNER;\n+                } else {\n+                    only_missing_sigs = false;\n+                    input_analysis.next = PSBTRole::UPDATER;\n+                }\n+            } else {\n+                only_missing_final = true;\n+                input_analysis.next = PSBTRole::FINALIZER;\n+            }\n+        } else if (!utxo.IsNull()){\n+            input_analysis.is_final = true;\n+        }\n+    }\n+\n+    if (all_final) {\n+        only_missing_sigs = false;\n+        result.next = PSBTRole::EXTRACTOR;\n+    }\n+    if (calc_fee) {\n+        // Get the output amount\n+        CAmount out_amt = std::accumulate(psbtx.tx->vout.begin(), psbtx.tx->vout.end(), 0,\n+            [](int a, const CTxOut& b) {\n+                return a += b.nValue;\n+            }\n+        );\n+\n+        // Get the fee\n+        CAmount fee = in_amt - out_amt;\n+\n+        // Estimate the size\n+        CMutableTransaction mtx(*psbtx.tx);\n+        CCoinsView view_dummy;\n+        CCoinsViewCache view(&view_dummy);\n+        bool success = true;\n+\n+        for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+            PSBTInput& input = psbtx.inputs[i];\n+            if (SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, nullptr, true)) {\n+                mtx.vin[i].scriptSig = input.final_script_sig;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r263205743",
      "id" : 263205743,
      "in_reply_to_id" : 261874105,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzIwNTc0Mw==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 123,
      "path" : "src/psbt.cpp",
      "position" : 129,
      "pull_request_review_id" : 211560905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263205743",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r263441412"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263441412"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Makes sense to keep by value. The code could be refactored but at the end each input would have to be copied to be able to call `FillSignatureData()` and `FromSignatureData`.",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-07T15:45:20Z",
      "diff_hunk" : "@@ -580,4 +610,12 @@ bool FinalizeAndExtractPSBT(PartiallySignedTransaction& psbtx, CMutableTransacti\n  */\n NODISCARD TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector<PartiallySignedTransaction>& psbtxs);\n \n+/**\n+ * Provides helpful miscellaneous information about where a PSBT is in the signing workflow.\n+ *\n+ * @param[in] psbtx the PSBT to analyze\n+ * @return A PSBTAnalysis with information about the provided PSBT.\n+ */\n+PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r263441412",
      "id" : 263441412,
      "in_reply_to_id" : 261874030,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzQ0MTQxMg==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 57,
      "path" : "src/psbt.h",
      "position" : 63,
      "pull_request_review_id" : 211858066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263441412",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15638](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15638.html) (Move-only: Pull wallet code out of libbitcoin_server by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-03-09T07:10:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-471153340",
      "id" : 471153340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MTE1MzM0MA==",
      "updated_at" : "2019-04-01T22:24:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/471153340",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r264843308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264843308"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It'd be nice to have some documentation for these structs. There could be a comment saying struct fields correspond to fields returned by the `analyzepsbt` method, if you didn't want to just copy the documentation from `analyzepsbt`",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-12T19:15:37Z",
      "diff_hunk" : "@@ -548,8 +550,36 @@ struct PartiallySignedTransaction\n     }\n };\n \n+enum class PSBTRole {\n+    UPDATER,\n+    SIGNER,\n+    FINALIZER,\n+    EXTRACTOR\n+};\n+\n+struct PSBTInputAnalysis {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r264843308",
      "id" : 264843308,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDg0MzMwOA==",
      "original_commit_id" : "5f96bf29225d7943314d68e10e19ee2fe3ccf3f3",
      "original_position" : 20,
      "path" : "src/psbt.h",
      "position" : 23,
      "pull_request_review_id" : 213598209,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264843308",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r264919438"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264919438"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nah, thanks, this is a good point, I may as well document them properly.",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-12T23:07:36Z",
      "diff_hunk" : "@@ -548,8 +550,36 @@ struct PartiallySignedTransaction\n     }\n };\n \n+enum class PSBTRole {\n+    UPDATER,\n+    SIGNER,\n+    FINALIZER,\n+    EXTRACTOR\n+};\n+\n+struct PSBTInputAnalysis {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r264919438",
      "id" : 264919438,
      "in_reply_to_id" : 264843308,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDkxOTQzOA==",
      "original_commit_id" : "5f96bf29225d7943314d68e10e19ee2fe3ccf3f3",
      "original_position" : 20,
      "path" : "src/psbt.h",
      "position" : 23,
      "pull_request_review_id" : 213693398,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264919438",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r264919526"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264919526"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-12T23:07:58Z",
      "diff_hunk" : "@@ -325,3 +330,139 @@ TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector\n \n     return TransactionError::OK;\n }\n+\n+std::string PSBTRoleName(PSBTRole role) {\n+    switch (role) {\n+        case PSBTRole::UPDATER:   return \"updater\";\n+        case PSBTRole::SIGNER:    return \"signer\";\n+        case PSBTRole::FINALIZER: return \"finalizer\";\n+        case PSBTRole::EXTRACTOR: return \"extractor\";\n+    }\n+}\n+\n+PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n+{\n+    // Go through each input and build status\n+    PSBTAnalysis result;\n+\n+    bool calc_fee = true;\n+    bool all_final = true;\n+    bool only_missing_sigs = true;\n+    bool only_missing_final = false;\n+    CAmount in_amt = 0;\n+\n+    result.inputs.resize(psbtx.tx->vin.size());\n+\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        PSBTInput& input = psbtx.inputs[i];\n+        PSBTInputAnalysis& input_analysis = result.inputs[i];\n+\n+        // Check for a UTXO\n+        CTxOut utxo;\n+        if (psbtx.GetInputUTXO(utxo, i)) {\n+            in_amt += utxo.nValue;\n+            input_analysis.has_utxo = true;\n+        } else {\n+            input_analysis.has_utxo = false;\n+            input_analysis.is_final = false;\n+            input_analysis.next = PSBTRole::UPDATER;\n+            calc_fee = false;\n+        }\n+\n+        // Check if it is final\n+        if (!utxo.IsNull() && !PSBTInputSigned(input)) {\n+            input_analysis.is_final = false;\n+            all_final = false;\n+\n+            // Figure out what is missing\n+            SignatureData outdata;\n+            bool complete = SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, &outdata);\n+\n+            // Things are missing\n+            if (!complete) {\n+                input_analysis.missing_pubkeys = outdata.missing_pubkeys;\n+                input_analysis.missing_redeem_script = outdata.missing_redeem_script;\n+                input_analysis.missing_witness_script = outdata.missing_witness_script;\n+                input_analysis.missing_sigs = outdata.missing_sigs;\n+\n+                // If we are only missing signatures and nothing else, then next is signer\n+                if (outdata.missing_pubkeys.empty() && outdata.missing_redeem_script.IsNull() && outdata.missing_witness_script.IsNull() && !outdata.missing_sigs.empty()) {\n+                    input_analysis.next = PSBTRole::SIGNER;\n+                } else {\n+                    only_missing_sigs = false;\n+                    input_analysis.next = PSBTRole::UPDATER;\n+                }\n+            } else {\n+                only_missing_final = true;\n+                input_analysis.next = PSBTRole::FINALIZER;\n+            }\n+        } else if (!utxo.IsNull()){\n+            input_analysis.is_final = true;\n+        }\n+    }\n+\n+    if (all_final) {\n+        only_missing_sigs = false;\n+        result.next = PSBTRole::EXTRACTOR;\n+    }\n+    if (calc_fee) {\n+        // Get the output amount\n+        CAmount out_amt = std::accumulate(psbtx.tx->vout.begin(), psbtx.tx->vout.end(), 0,\n+            [](int a, const CTxOut& b) {\n+                return a += b.nValue;\n+            }\n+        );\n+\n+        // Get the fee\n+        CAmount fee = in_amt - out_amt;\n+\n+        // Estimate the size\n+        CMutableTransaction mtx(*psbtx.tx);\n+        CCoinsView view_dummy;\n+        CCoinsViewCache view(&view_dummy);\n+        bool success = true;\n+\n+        for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+            PSBTInput& input = psbtx.inputs[i];\n+            if (SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, nullptr, true)) {\n+                mtx.vin[i].scriptSig = input.final_script_sig;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r264919526",
      "id" : 264919526,
      "in_reply_to_id" : 261874105,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDkxOTUyNg==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 123,
      "path" : "src/psbt.cpp",
      "position" : 129,
      "pull_request_review_id" : 213693500,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264919526",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok, added documentation, and did the refactor requested by @promag. Sorry @ryanofsky, if you wouldn't mind glancing at the minor code change and re-acking. I am convinced it does not change behavior.\r\n\r\nOh, and rebased -- I picked up @sipa 's fix from #15582 .",
      "created_at" : "2019-03-12T23:52:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-472225300",
      "id" : 472225300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MjIyNTMwMA==",
      "updated_at" : "2019-03-12T23:53:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472225300",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r264931650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264931650"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, could drop `else {` block or invert conditions:\r\n```cpp\r\nfor (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\r\n    PSBTInput& input = psbtx.inputs[i];\r\n    Coin newcoin;\r\n\r\n    if (SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, nullptr, true) && psbtx.GetInputUTXO(newcoin.out, i)) {\r\n        mtx.vin[i].scriptSig = input.final_script_sig;\r\n        mtx.vin[i].scriptWitness = input.final_script_witness;\r\n        newcoin.nHeight = 1;\r\n        view.AddCoin(psbtx.tx->vin[i].prevout, std::move(newcoin), true);\r\n    } else {\r\n        success = false;\r\n        break;\r\n    }\r\n}\r\n```",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-13T00:03:41Z",
      "diff_hunk" : "@@ -325,3 +330,139 @@ TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector\n \n     return TransactionError::OK;\n }\n+\n+std::string PSBTRoleName(PSBTRole role) {\n+    switch (role) {\n+        case PSBTRole::UPDATER:   return \"updater\";\n+        case PSBTRole::SIGNER:    return \"signer\";\n+        case PSBTRole::FINALIZER: return \"finalizer\";\n+        case PSBTRole::EXTRACTOR: return \"extractor\";\n+    }\n+}\n+\n+PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n+{\n+    // Go through each input and build status\n+    PSBTAnalysis result;\n+\n+    bool calc_fee = true;\n+    bool all_final = true;\n+    bool only_missing_sigs = true;\n+    bool only_missing_final = false;\n+    CAmount in_amt = 0;\n+\n+    result.inputs.resize(psbtx.tx->vin.size());\n+\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        PSBTInput& input = psbtx.inputs[i];\n+        PSBTInputAnalysis& input_analysis = result.inputs[i];\n+\n+        // Check for a UTXO\n+        CTxOut utxo;\n+        if (psbtx.GetInputUTXO(utxo, i)) {\n+            in_amt += utxo.nValue;\n+            input_analysis.has_utxo = true;\n+        } else {\n+            input_analysis.has_utxo = false;\n+            input_analysis.is_final = false;\n+            input_analysis.next = PSBTRole::UPDATER;\n+            calc_fee = false;\n+        }\n+\n+        // Check if it is final\n+        if (!utxo.IsNull() && !PSBTInputSigned(input)) {\n+            input_analysis.is_final = false;\n+            all_final = false;\n+\n+            // Figure out what is missing\n+            SignatureData outdata;\n+            bool complete = SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, &outdata);\n+\n+            // Things are missing\n+            if (!complete) {\n+                input_analysis.missing_pubkeys = outdata.missing_pubkeys;\n+                input_analysis.missing_redeem_script = outdata.missing_redeem_script;\n+                input_analysis.missing_witness_script = outdata.missing_witness_script;\n+                input_analysis.missing_sigs = outdata.missing_sigs;\n+\n+                // If we are only missing signatures and nothing else, then next is signer\n+                if (outdata.missing_pubkeys.empty() && outdata.missing_redeem_script.IsNull() && outdata.missing_witness_script.IsNull() && !outdata.missing_sigs.empty()) {\n+                    input_analysis.next = PSBTRole::SIGNER;\n+                } else {\n+                    only_missing_sigs = false;\n+                    input_analysis.next = PSBTRole::UPDATER;\n+                }\n+            } else {\n+                only_missing_final = true;\n+                input_analysis.next = PSBTRole::FINALIZER;\n+            }\n+        } else if (!utxo.IsNull()){\n+            input_analysis.is_final = true;\n+        }\n+    }\n+\n+    if (all_final) {\n+        only_missing_sigs = false;\n+        result.next = PSBTRole::EXTRACTOR;\n+    }\n+    if (calc_fee) {\n+        // Get the output amount\n+        CAmount out_amt = std::accumulate(psbtx.tx->vout.begin(), psbtx.tx->vout.end(), 0,\n+            [](int a, const CTxOut& b) {\n+                return a += b.nValue;\n+            }\n+        );\n+\n+        // Get the fee\n+        CAmount fee = in_amt - out_amt;\n+\n+        // Estimate the size\n+        CMutableTransaction mtx(*psbtx.tx);\n+        CCoinsView view_dummy;\n+        CCoinsViewCache view(&view_dummy);\n+        bool success = true;\n+\n+        for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+            PSBTInput& input = psbtx.inputs[i];\n+            if (SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, nullptr, true)) {\n+                mtx.vin[i].scriptSig = input.final_script_sig;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r264931650",
      "id" : 264931650,
      "in_reply_to_id" : 261874105,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDkzMTY1MA==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 123,
      "path" : "src/psbt.cpp",
      "position" : 129,
      "pull_request_review_id" : 213707791,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264931650",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r264933519"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264933519"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "At this point I think I better leave it as Future Work.",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-13T00:13:37Z",
      "diff_hunk" : "@@ -325,3 +330,139 @@ TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector\n \n     return TransactionError::OK;\n }\n+\n+std::string PSBTRoleName(PSBTRole role) {\n+    switch (role) {\n+        case PSBTRole::UPDATER:   return \"updater\";\n+        case PSBTRole::SIGNER:    return \"signer\";\n+        case PSBTRole::FINALIZER: return \"finalizer\";\n+        case PSBTRole::EXTRACTOR: return \"extractor\";\n+    }\n+}\n+\n+PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n+{\n+    // Go through each input and build status\n+    PSBTAnalysis result;\n+\n+    bool calc_fee = true;\n+    bool all_final = true;\n+    bool only_missing_sigs = true;\n+    bool only_missing_final = false;\n+    CAmount in_amt = 0;\n+\n+    result.inputs.resize(psbtx.tx->vin.size());\n+\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        PSBTInput& input = psbtx.inputs[i];\n+        PSBTInputAnalysis& input_analysis = result.inputs[i];\n+\n+        // Check for a UTXO\n+        CTxOut utxo;\n+        if (psbtx.GetInputUTXO(utxo, i)) {\n+            in_amt += utxo.nValue;\n+            input_analysis.has_utxo = true;\n+        } else {\n+            input_analysis.has_utxo = false;\n+            input_analysis.is_final = false;\n+            input_analysis.next = PSBTRole::UPDATER;\n+            calc_fee = false;\n+        }\n+\n+        // Check if it is final\n+        if (!utxo.IsNull() && !PSBTInputSigned(input)) {\n+            input_analysis.is_final = false;\n+            all_final = false;\n+\n+            // Figure out what is missing\n+            SignatureData outdata;\n+            bool complete = SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, &outdata);\n+\n+            // Things are missing\n+            if (!complete) {\n+                input_analysis.missing_pubkeys = outdata.missing_pubkeys;\n+                input_analysis.missing_redeem_script = outdata.missing_redeem_script;\n+                input_analysis.missing_witness_script = outdata.missing_witness_script;\n+                input_analysis.missing_sigs = outdata.missing_sigs;\n+\n+                // If we are only missing signatures and nothing else, then next is signer\n+                if (outdata.missing_pubkeys.empty() && outdata.missing_redeem_script.IsNull() && outdata.missing_witness_script.IsNull() && !outdata.missing_sigs.empty()) {\n+                    input_analysis.next = PSBTRole::SIGNER;\n+                } else {\n+                    only_missing_sigs = false;\n+                    input_analysis.next = PSBTRole::UPDATER;\n+                }\n+            } else {\n+                only_missing_final = true;\n+                input_analysis.next = PSBTRole::FINALIZER;\n+            }\n+        } else if (!utxo.IsNull()){\n+            input_analysis.is_final = true;\n+        }\n+    }\n+\n+    if (all_final) {\n+        only_missing_sigs = false;\n+        result.next = PSBTRole::EXTRACTOR;\n+    }\n+    if (calc_fee) {\n+        // Get the output amount\n+        CAmount out_amt = std::accumulate(psbtx.tx->vout.begin(), psbtx.tx->vout.end(), 0,\n+            [](int a, const CTxOut& b) {\n+                return a += b.nValue;\n+            }\n+        );\n+\n+        // Get the fee\n+        CAmount fee = in_amt - out_amt;\n+\n+        // Estimate the size\n+        CMutableTransaction mtx(*psbtx.tx);\n+        CCoinsView view_dummy;\n+        CCoinsViewCache view(&view_dummy);\n+        bool success = true;\n+\n+        for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+            PSBTInput& input = psbtx.inputs[i];\n+            if (SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, nullptr, true)) {\n+                mtx.vin[i].scriptSig = input.final_script_sig;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r264933519",
      "id" : 264933519,
      "in_reply_to_id" : 261874105,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDkzMzUxOQ==",
      "original_commit_id" : "3a426fd7ce98daf06fef4d4d6cfd4078612b8c3c",
      "original_position" : 123,
      "path" : "src/psbt.cpp",
      "position" : 129,
      "pull_request_review_id" : 213710050,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264933519",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Travis failure is weird:\r\n\r\n```Downloading archive: https://language-archives.travis-ci.com/python/binaries/ubuntu/16.04/x86_64/python-3.5.tar.bz2\r\n0.20s$ curl -sSf -o python-3.5.tar.bz2 ${archive_url}\r\ncurl: (22) The requested URL returned error: 403 Forbidden\r\nUnable to download 3.5 archive. The archive may not exist. Please consider a different version.\r\n```",
      "created_at" : "2019-03-13T00:14:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-472230102",
      "id" : 472230102,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MjIzMDEwMg==",
      "updated_at" : "2019-03-13T00:14:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472230102",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It's really unfortunate that the PSBT code needs to be in libbitcoin_server. I'm thinking of creating a separate PSBT signer tool using the signer/psbt source code, but with it in libbitcoin_server, that tool will need to include the whole networking, RPC, and validation logic.\r\n\r\nIs it depending on anything more than `GetVirtualTransactionSize`? If not, I would suggest just moving `GetTransactionWeight` and friends from src/consensus/validation.h, and `GetVirtualTransactionSize` and friends from src/policy/policy.{h,cpp} to src/primitives/{transaction,block} respectively.",
      "created_at" : "2019-03-13T00:21:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-472231368",
      "id" : 472231368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MjIzMTM2OA==",
      "updated_at" : "2019-03-13T00:21:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472231368",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa I'm happy to give it a shot.\r\n\r\nFrom my notes, there were two offenders:\r\n- GetVirtualTransactionSize, as noted, which lives in policy.cpp\r\n- GetTransactionSigOpCost, which lives in consensus/tx_verify.cpp\r\n\r\nThe former seems easy to deal with -- it's just a small amount of math involving a couple of constants. \r\n\r\nThe latter might also be relatively standalone -- the file it's in has deeper dependencies spidering into libbitcoin_server, but I couldn't tell if they were real dependencies of GetTransactionSigOpCost or if they were coincidentally being dragged in by something else.\r\n\r\nDo you have a proposed place to move GetTransactionSigOpCost?",
      "created_at" : "2019-03-13T01:39:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-472245896",
      "id" : 472245896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MjI0NTg5Ng==",
      "updated_at" : "2019-03-13T01:39:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472245896",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "(The other option would be to remove the size and feerate calculations from AnalyzePSBT, or move just those elsewhere. They're pretty standalone.)",
      "created_at" : "2019-03-13T01:39:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-472245975",
      "id" : 472245975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MjI0NTk3NQ==",
      "updated_at" : "2019-03-13T01:39:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472245975",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I have a simpler solution: replace the `GetTransactionSigOpCost()` call with `0` (which means the whole call can just become `GetVirtualTransactionSize(ctx)`, and only that function needs to move elsewhere).\r\n\r\nTo explain why this is safe: reason why GetVirtualTransactionSize takes in a sigop count as argument is because in the mempool/feerate/mining code we use vsize = max(actual_vsize(tx), sigops(tx)*someconstant). This brings everything to a single unit we can optimize for, but still guarantees that transactions with excessively high amount of signature validation operations won't cause the block-wide sigops limit to be exceeded.\r\n\r\nHowever, the wallet/signing/psbt side of things doesn't need to care about this. They will never deal with transactions where the sigop side of that max dominates (it would require more signature checks than 1 per 20 bytes of witness data, implying that every signature is verified on average more than 3 times). Such transactions are almost certainly pathologically constructed, and certainly not something `SignPSBTInput` could deal with anyway.\r\n\r\nEDIT: This also lets you drop the whole `CCoinsViewCache` view object and construction thereof. ",
      "created_at" : "2019-03-13T01:52:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-472248294",
      "id" : 472248294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MjI0ODI5NA==",
      "updated_at" : "2019-03-13T02:19:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472248294",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ok, my apologies to @ryanofsky and I appreciate your patience, this version has exactly two changes:\r\n\r\n- Rebase over #15559, which changes the format of the estimated feerate from a string to an integer in the RPC output (does not affect the output of the AnalyzePSBT function itself, only how it's formatted in the wrapper in rpc/rawtransaction.cpp)\r\n- Per @sipa 's request, revert the move into libbitcoin_server, putting psbt.cpp back in libbitcoin_common. Fingers crossed that Travis likes this, but it appears experimentally that moving the PSBT-related functions from core_io into psbt is enough to satisfy the linker, without actually moving PSBT around.\r\n\r\n(This does not quite actually solve his problem; the reason the linker accepts this is that bitcoin-tx has no dependency on psbt.cpp, and the corresponding object file is now being dropped from the link, so the fact that it has in turn a broken dependency never comes up. Actually _using_ psbt without linking bitcoin_server will still give a link error. However, it will be _much_ easier to fix this once the code that is using psbt actually exists, because right now it's very hard to get the linker not to optimize out the problem, so it's really hard to confidently fix it.)",
      "created_at" : "2019-03-14T00:29:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-472657865",
      "id" : 472657865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MjY1Nzg2NQ==",
      "updated_at" : "2019-03-14T00:29:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472657865",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Definitely hoping to get this merged soon. @sipa  or @promag, maybe take a look and see if you have anything further? :-)",
      "created_at" : "2019-03-20T01:41:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-474650347",
      "id" : 474650347,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NDY1MDM0Nw==",
      "updated_at" : "2019-03-20T01:41:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/474650347",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269340219"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269340219"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this means you can remove the `#include <psbt.h>` from this file.",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-26T22:24:32Z",
      "diff_hunk" : "@@ -177,33 +177,6 @@ bool DecodeHexBlk(CBlock& block, const std::string& strHexBlk)\n     return true;\n }\n \n-bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269340219",
      "id" : 269340219,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM0MDIxOQ==",
      "original_commit_id" : "078994ad4a3a6216f48370f4fd961de67354acfb",
      "original_position" : 4,
      "path" : "src/core_read.cpp",
      "position" : 12,
      "pull_request_review_id" : 219190808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269340219",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269340343"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269340343"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this means you can remove the `struct PartiallySignedBitcoinTransaction` forward declare from this file.",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-26T22:25:00Z",
      "diff_hunk" : "@@ -37,11 +37,6 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269340343",
      "id" : 269340343,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM0MDM0Mw==",
      "original_commit_id" : "078994ad4a3a6216f48370f4fd961de67354acfb",
      "original_position" : 4,
      "path" : "src/core_io.h",
      "position" : 12,
      "pull_request_review_id" : 219190808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269340343",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269340830"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269340830"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`const auto& input` to avoid copies.",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-26T22:26:48Z",
      "diff_hunk" : "@@ -1895,148 +1895,56 @@ UniValue analyzepsbt(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed %s\", error));\n     }\n \n-    // Go through each input and build status\n+    PSBTAnalysis psbta = AnalyzePSBT(psbtx);\n+\n     UniValue result(UniValue::VOBJ);\n     UniValue inputs_result(UniValue::VARR);\n-    bool calc_fee = true;\n-    bool all_final = true;\n-    bool only_missing_sigs = true;\n-    bool only_missing_final = false;\n-    CAmount in_amt = 0;\n-    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n-        PSBTInput& input = psbtx.inputs[i];\n+    for (auto input : psbta.inputs) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269340830",
      "id" : 269340830,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM0MDgzMA==",
      "original_commit_id" : "e01983a9f062ce339af8aab3eabca247df17b03c",
      "original_position" : 16,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 219190808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269340830",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269341847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269341847"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this int cast necessary?",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-26T22:30:40Z",
      "diff_hunk" : "@@ -1895,148 +1895,56 @@ UniValue analyzepsbt(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed %s\", error));\n     }\n \n-    // Go through each input and build status\n+    PSBTAnalysis psbta = AnalyzePSBT(psbtx);\n+\n     UniValue result(UniValue::VOBJ);\n     UniValue inputs_result(UniValue::VARR);\n-    bool calc_fee = true;\n-    bool all_final = true;\n-    bool only_missing_sigs = true;\n-    bool only_missing_final = false;\n-    CAmount in_amt = 0;\n-    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n-        PSBTInput& input = psbtx.inputs[i];\n+    for (auto input : psbta.inputs) {\n         UniValue input_univ(UniValue::VOBJ);\n         UniValue missing(UniValue::VOBJ);\n \n-        // Check for a UTXO\n-        CTxOut utxo;\n-        if (psbtx.GetInputUTXO(utxo, i)) {\n-            in_amt += utxo.nValue;\n-            input_univ.pushKV(\"has_utxo\", true);\n-        } else {\n-            input_univ.pushKV(\"has_utxo\", false);\n-            input_univ.pushKV(\"is_final\", false);\n-            input_univ.pushKV(\"next\", \"updater\");\n-            calc_fee = false;\n-        }\n+        input_univ.pushKV(\"has_utxo\", input.has_utxo);\n+        input_univ.pushKV(\"is_final\", input.is_final);\n+        input_univ.pushKV(\"next\", PSBTRoleName(input.next));\n \n-        // Check if it is final\n-        if (!utxo.IsNull() && !PSBTInputSigned(input)) {\n-            input_univ.pushKV(\"is_final\", false);\n-            all_final = false;\n-\n-            // Figure out what is missing\n-            SignatureData outdata;\n-            bool complete = SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, &outdata);\n-\n-            // Things are missing\n-            if (!complete) {\n-                if (!outdata.missing_pubkeys.empty()) {\n-                    // Missing pubkeys\n-                    UniValue missing_pubkeys_univ(UniValue::VARR);\n-                    for (const CKeyID& pubkey : outdata.missing_pubkeys) {\n-                        missing_pubkeys_univ.push_back(HexStr(pubkey));\n-                    }\n-                    missing.pushKV(\"pubkeys\", missing_pubkeys_univ);\n-                }\n-                if (!outdata.missing_redeem_script.IsNull()) {\n-                    // Missing redeemScript\n-                    missing.pushKV(\"redeemscript\", HexStr(outdata.missing_redeem_script));\n-                }\n-                if (!outdata.missing_witness_script.IsNull()) {\n-                    // Missing witnessScript\n-                    missing.pushKV(\"witnessscript\", HexStr(outdata.missing_witness_script));\n-                }\n-                if (!outdata.missing_sigs.empty()) {\n-                    // Missing sigs\n-                    UniValue missing_sigs_univ(UniValue::VARR);\n-                    for (const CKeyID& pubkey : outdata.missing_sigs) {\n-                        missing_sigs_univ.push_back(HexStr(pubkey));\n-                    }\n-                    missing.pushKV(\"signatures\", missing_sigs_univ);\n-                }\n-                input_univ.pushKV(\"missing\", missing);\n-\n-                // If we are only missing signatures and nothing else, then next is signer\n-                if (outdata.missing_pubkeys.empty() && outdata.missing_redeem_script.IsNull() && outdata.missing_witness_script.IsNull() && !outdata.missing_sigs.empty()) {\n-                    input_univ.pushKV(\"next\", \"signer\");\n-                } else {\n-                    only_missing_sigs = false;\n-                    input_univ.pushKV(\"next\", \"updater\");\n-                }\n-            } else {\n-                only_missing_final = true;\n-                input_univ.pushKV(\"next\", \"finalizer\");\n+        if (!input.missing_pubkeys.empty()) {\n+            UniValue missing_pubkeys_univ(UniValue::VARR);\n+            for (const CKeyID& pubkey : input.missing_pubkeys) {\n+                missing_pubkeys_univ.push_back(HexStr(pubkey));\n             }\n-        } else if (!utxo.IsNull()){\n-            input_univ.pushKV(\"is_final\", true);\n+            missing.pushKV(\"pubkeys\", missing_pubkeys_univ);\n+        }\n+        if (!input.missing_redeem_script.IsNull()) {\n+            missing.pushKV(\"redeemscript\", HexStr(input.missing_redeem_script));\n+        }\n+        if (!input.missing_witness_script.IsNull()) {\n+            missing.pushKV(\"witnessscript\", HexStr(input.missing_witness_script));\n+        }\n+        if (!input.missing_sigs.empty()) {\n+            UniValue missing_sigs_univ(UniValue::VARR);\n+            for (const CKeyID& pubkey : input.missing_sigs) {\n+                missing_sigs_univ.push_back(HexStr(pubkey));\n+            }\n+            missing.pushKV(\"signatures\", missing_sigs_univ);\n+        }\n+        if (!missing.getKeys().empty()) {\n+            input_univ.pushKV(\"missing\", missing);\n         }\n         inputs_result.push_back(input_univ);\n     }\n     result.pushKV(\"inputs\", inputs_result);\n \n-    if (all_final) {\n-        only_missing_sigs = false;\n-        result.pushKV(\"next\", \"extractor\");\n+    if (psbta.estimated_vsize != nullopt) {\n+        result.pushKV(\"estimated_vsize\", (int)*psbta.estimated_vsize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269341847",
      "id" : 269341847,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM0MTg0Nw==",
      "original_commit_id" : "e01983a9f062ce339af8aab3eabca247df17b03c",
      "original_position" : 115,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 115,
      "pull_request_review_id" : 219190808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269341847",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269367894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269367894"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "According to the compiler, some cast is required:\r\n\r\n```\r\nrpc/rawtransaction.cpp:1938:16: error: call to member function 'pushKV' is ambiguous\r\n        result.pushKV(\"estimated_vsize\", *psbta.estimated_vsize);\r\n        ~~~~~~~^~~~~~\r\n./univalue/include/univalue.h:124:10: note: candidate function\r\n    bool pushKV(const std::string& key, int64_t val_) {\r\n         ^\r\n./univalue/include/univalue.h:128:10: note: candidate function\r\n    bool pushKV(const std::string& key, uint64_t val_) {\r\n         ^\r\n./univalue/include/univalue.h:132:10: note: candidate function\r\n    bool pushKV(const std::string& key, bool val_) {\r\n         ^\r\n./univalue/include/univalue.h:136:10: note: candidate function\r\n    bool pushKV(const std::string& key, int val_) {\r\n         ^\r\n./univalue/include/univalue.h:140:10: note: candidate function\r\n    bool pushKV(const std::string& key, double val_) {\r\n         ^\r\n./univalue/include/univalue.h:115:10: note: candidate function\r\n    bool pushKV(const std::string& key, const UniValue& val);\r\n```",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-27T00:33:13Z",
      "diff_hunk" : "@@ -1895,148 +1895,56 @@ UniValue analyzepsbt(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed %s\", error));\n     }\n \n-    // Go through each input and build status\n+    PSBTAnalysis psbta = AnalyzePSBT(psbtx);\n+\n     UniValue result(UniValue::VOBJ);\n     UniValue inputs_result(UniValue::VARR);\n-    bool calc_fee = true;\n-    bool all_final = true;\n-    bool only_missing_sigs = true;\n-    bool only_missing_final = false;\n-    CAmount in_amt = 0;\n-    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n-        PSBTInput& input = psbtx.inputs[i];\n+    for (auto input : psbta.inputs) {\n         UniValue input_univ(UniValue::VOBJ);\n         UniValue missing(UniValue::VOBJ);\n \n-        // Check for a UTXO\n-        CTxOut utxo;\n-        if (psbtx.GetInputUTXO(utxo, i)) {\n-            in_amt += utxo.nValue;\n-            input_univ.pushKV(\"has_utxo\", true);\n-        } else {\n-            input_univ.pushKV(\"has_utxo\", false);\n-            input_univ.pushKV(\"is_final\", false);\n-            input_univ.pushKV(\"next\", \"updater\");\n-            calc_fee = false;\n-        }\n+        input_univ.pushKV(\"has_utxo\", input.has_utxo);\n+        input_univ.pushKV(\"is_final\", input.is_final);\n+        input_univ.pushKV(\"next\", PSBTRoleName(input.next));\n \n-        // Check if it is final\n-        if (!utxo.IsNull() && !PSBTInputSigned(input)) {\n-            input_univ.pushKV(\"is_final\", false);\n-            all_final = false;\n-\n-            // Figure out what is missing\n-            SignatureData outdata;\n-            bool complete = SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, &outdata);\n-\n-            // Things are missing\n-            if (!complete) {\n-                if (!outdata.missing_pubkeys.empty()) {\n-                    // Missing pubkeys\n-                    UniValue missing_pubkeys_univ(UniValue::VARR);\n-                    for (const CKeyID& pubkey : outdata.missing_pubkeys) {\n-                        missing_pubkeys_univ.push_back(HexStr(pubkey));\n-                    }\n-                    missing.pushKV(\"pubkeys\", missing_pubkeys_univ);\n-                }\n-                if (!outdata.missing_redeem_script.IsNull()) {\n-                    // Missing redeemScript\n-                    missing.pushKV(\"redeemscript\", HexStr(outdata.missing_redeem_script));\n-                }\n-                if (!outdata.missing_witness_script.IsNull()) {\n-                    // Missing witnessScript\n-                    missing.pushKV(\"witnessscript\", HexStr(outdata.missing_witness_script));\n-                }\n-                if (!outdata.missing_sigs.empty()) {\n-                    // Missing sigs\n-                    UniValue missing_sigs_univ(UniValue::VARR);\n-                    for (const CKeyID& pubkey : outdata.missing_sigs) {\n-                        missing_sigs_univ.push_back(HexStr(pubkey));\n-                    }\n-                    missing.pushKV(\"signatures\", missing_sigs_univ);\n-                }\n-                input_univ.pushKV(\"missing\", missing);\n-\n-                // If we are only missing signatures and nothing else, then next is signer\n-                if (outdata.missing_pubkeys.empty() && outdata.missing_redeem_script.IsNull() && outdata.missing_witness_script.IsNull() && !outdata.missing_sigs.empty()) {\n-                    input_univ.pushKV(\"next\", \"signer\");\n-                } else {\n-                    only_missing_sigs = false;\n-                    input_univ.pushKV(\"next\", \"updater\");\n-                }\n-            } else {\n-                only_missing_final = true;\n-                input_univ.pushKV(\"next\", \"finalizer\");\n+        if (!input.missing_pubkeys.empty()) {\n+            UniValue missing_pubkeys_univ(UniValue::VARR);\n+            for (const CKeyID& pubkey : input.missing_pubkeys) {\n+                missing_pubkeys_univ.push_back(HexStr(pubkey));\n             }\n-        } else if (!utxo.IsNull()){\n-            input_univ.pushKV(\"is_final\", true);\n+            missing.pushKV(\"pubkeys\", missing_pubkeys_univ);\n+        }\n+        if (!input.missing_redeem_script.IsNull()) {\n+            missing.pushKV(\"redeemscript\", HexStr(input.missing_redeem_script));\n+        }\n+        if (!input.missing_witness_script.IsNull()) {\n+            missing.pushKV(\"witnessscript\", HexStr(input.missing_witness_script));\n+        }\n+        if (!input.missing_sigs.empty()) {\n+            UniValue missing_sigs_univ(UniValue::VARR);\n+            for (const CKeyID& pubkey : input.missing_sigs) {\n+                missing_sigs_univ.push_back(HexStr(pubkey));\n+            }\n+            missing.pushKV(\"signatures\", missing_sigs_univ);\n+        }\n+        if (!missing.getKeys().empty()) {\n+            input_univ.pushKV(\"missing\", missing);\n         }\n         inputs_result.push_back(input_univ);\n     }\n     result.pushKV(\"inputs\", inputs_result);\n \n-    if (all_final) {\n-        only_missing_sigs = false;\n-        result.pushKV(\"next\", \"extractor\");\n+    if (psbta.estimated_vsize != nullopt) {\n+        result.pushKV(\"estimated_vsize\", (int)*psbta.estimated_vsize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269367894",
      "id" : 269367894,
      "in_reply_to_id" : 269341847,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM2Nzg5NA==",
      "original_commit_id" : "e01983a9f062ce339af8aab3eabca247df17b03c",
      "original_position" : 115,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 115,
      "pull_request_review_id" : 219223328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269367894",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa Thanks, all your comments addressed.",
      "created_at" : "2019-03-27T00:46:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-476914376",
      "id" : 476914376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NjkxNDM3Ng==",
      "updated_at" : "2019-03-27T00:46:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/476914376",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269370237"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269370237"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-27T00:46:35Z",
      "diff_hunk" : "@@ -1895,148 +1895,56 @@ UniValue analyzepsbt(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed %s\", error));\n     }\n \n-    // Go through each input and build status\n+    PSBTAnalysis psbta = AnalyzePSBT(psbtx);\n+\n     UniValue result(UniValue::VOBJ);\n     UniValue inputs_result(UniValue::VARR);\n-    bool calc_fee = true;\n-    bool all_final = true;\n-    bool only_missing_sigs = true;\n-    bool only_missing_final = false;\n-    CAmount in_amt = 0;\n-    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n-        PSBTInput& input = psbtx.inputs[i];\n+    for (auto input : psbta.inputs) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269370237",
      "id" : 269370237,
      "in_reply_to_id" : 269340830,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM3MDIzNw==",
      "original_commit_id" : "e01983a9f062ce339af8aab3eabca247df17b03c",
      "original_position" : 16,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 219225862,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269370237",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269370251"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269370251"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "yep, done",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-27T00:46:40Z",
      "diff_hunk" : "@@ -37,11 +37,6 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269370251",
      "id" : 269370251,
      "in_reply_to_id" : 269340343,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM3MDI1MQ==",
      "original_commit_id" : "078994ad4a3a6216f48370f4fd961de67354acfb",
      "original_position" : 4,
      "path" : "src/core_io.h",
      "position" : 12,
      "pull_request_review_id" : 219225875,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269370251",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269370261"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269370261"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "yep, done",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-27T00:46:44Z",
      "diff_hunk" : "@@ -177,33 +177,6 @@ bool DecodeHexBlk(CBlock& block, const std::string& strHexBlk)\n     return true;\n }\n \n-bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269370261",
      "id" : 269370261,
      "in_reply_to_id" : 269340219,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM3MDI2MQ==",
      "original_commit_id" : "078994ad4a3a6216f48370f4fd961de67354acfb",
      "original_position" : 4,
      "path" : "src/core_read.cpp",
      "position" : 12,
      "pull_request_review_id" : 219225887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-27T00:46:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269370261",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269821652"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269821652"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like it's needed in that case.",
      "commit_id" : "892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-28T00:34:42Z",
      "diff_hunk" : "@@ -1895,148 +1895,56 @@ UniValue analyzepsbt(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed %s\", error));\n     }\n \n-    // Go through each input and build status\n+    PSBTAnalysis psbta = AnalyzePSBT(psbtx);\n+\n     UniValue result(UniValue::VOBJ);\n     UniValue inputs_result(UniValue::VARR);\n-    bool calc_fee = true;\n-    bool all_final = true;\n-    bool only_missing_sigs = true;\n-    bool only_missing_final = false;\n-    CAmount in_amt = 0;\n-    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n-        PSBTInput& input = psbtx.inputs[i];\n+    for (auto input : psbta.inputs) {\n         UniValue input_univ(UniValue::VOBJ);\n         UniValue missing(UniValue::VOBJ);\n \n-        // Check for a UTXO\n-        CTxOut utxo;\n-        if (psbtx.GetInputUTXO(utxo, i)) {\n-            in_amt += utxo.nValue;\n-            input_univ.pushKV(\"has_utxo\", true);\n-        } else {\n-            input_univ.pushKV(\"has_utxo\", false);\n-            input_univ.pushKV(\"is_final\", false);\n-            input_univ.pushKV(\"next\", \"updater\");\n-            calc_fee = false;\n-        }\n+        input_univ.pushKV(\"has_utxo\", input.has_utxo);\n+        input_univ.pushKV(\"is_final\", input.is_final);\n+        input_univ.pushKV(\"next\", PSBTRoleName(input.next));\n \n-        // Check if it is final\n-        if (!utxo.IsNull() && !PSBTInputSigned(input)) {\n-            input_univ.pushKV(\"is_final\", false);\n-            all_final = false;\n-\n-            // Figure out what is missing\n-            SignatureData outdata;\n-            bool complete = SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, 1, &outdata);\n-\n-            // Things are missing\n-            if (!complete) {\n-                if (!outdata.missing_pubkeys.empty()) {\n-                    // Missing pubkeys\n-                    UniValue missing_pubkeys_univ(UniValue::VARR);\n-                    for (const CKeyID& pubkey : outdata.missing_pubkeys) {\n-                        missing_pubkeys_univ.push_back(HexStr(pubkey));\n-                    }\n-                    missing.pushKV(\"pubkeys\", missing_pubkeys_univ);\n-                }\n-                if (!outdata.missing_redeem_script.IsNull()) {\n-                    // Missing redeemScript\n-                    missing.pushKV(\"redeemscript\", HexStr(outdata.missing_redeem_script));\n-                }\n-                if (!outdata.missing_witness_script.IsNull()) {\n-                    // Missing witnessScript\n-                    missing.pushKV(\"witnessscript\", HexStr(outdata.missing_witness_script));\n-                }\n-                if (!outdata.missing_sigs.empty()) {\n-                    // Missing sigs\n-                    UniValue missing_sigs_univ(UniValue::VARR);\n-                    for (const CKeyID& pubkey : outdata.missing_sigs) {\n-                        missing_sigs_univ.push_back(HexStr(pubkey));\n-                    }\n-                    missing.pushKV(\"signatures\", missing_sigs_univ);\n-                }\n-                input_univ.pushKV(\"missing\", missing);\n-\n-                // If we are only missing signatures and nothing else, then next is signer\n-                if (outdata.missing_pubkeys.empty() && outdata.missing_redeem_script.IsNull() && outdata.missing_witness_script.IsNull() && !outdata.missing_sigs.empty()) {\n-                    input_univ.pushKV(\"next\", \"signer\");\n-                } else {\n-                    only_missing_sigs = false;\n-                    input_univ.pushKV(\"next\", \"updater\");\n-                }\n-            } else {\n-                only_missing_final = true;\n-                input_univ.pushKV(\"next\", \"finalizer\");\n+        if (!input.missing_pubkeys.empty()) {\n+            UniValue missing_pubkeys_univ(UniValue::VARR);\n+            for (const CKeyID& pubkey : input.missing_pubkeys) {\n+                missing_pubkeys_univ.push_back(HexStr(pubkey));\n             }\n-        } else if (!utxo.IsNull()){\n-            input_univ.pushKV(\"is_final\", true);\n+            missing.pushKV(\"pubkeys\", missing_pubkeys_univ);\n+        }\n+        if (!input.missing_redeem_script.IsNull()) {\n+            missing.pushKV(\"redeemscript\", HexStr(input.missing_redeem_script));\n+        }\n+        if (!input.missing_witness_script.IsNull()) {\n+            missing.pushKV(\"witnessscript\", HexStr(input.missing_witness_script));\n+        }\n+        if (!input.missing_sigs.empty()) {\n+            UniValue missing_sigs_univ(UniValue::VARR);\n+            for (const CKeyID& pubkey : input.missing_sigs) {\n+                missing_sigs_univ.push_back(HexStr(pubkey));\n+            }\n+            missing.pushKV(\"signatures\", missing_sigs_univ);\n+        }\n+        if (!missing.getKeys().empty()) {\n+            input_univ.pushKV(\"missing\", missing);\n         }\n         inputs_result.push_back(input_univ);\n     }\n     result.pushKV(\"inputs\", inputs_result);\n \n-    if (all_final) {\n-        only_missing_sigs = false;\n-        result.pushKV(\"next\", \"extractor\");\n+    if (psbta.estimated_vsize != nullopt) {\n+        result.pushKV(\"estimated_vsize\", (int)*psbta.estimated_vsize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#discussion_r269821652",
      "id" : 269821652,
      "in_reply_to_id" : 269341847,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTgyMTY1Mg==",
      "original_commit_id" : "e01983a9f062ce339af8aab3eabca247df17b03c",
      "original_position" : 115,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 115,
      "pull_request_review_id" : 219788560,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15508",
      "updated_at" : "2019-03-28T00:34:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/269821652",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-03-28T01:27:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-477407964",
      "id" : 477407964,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NzQwNzk2NA==",
      "updated_at" : "2019-03-28T01:27:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/477407964",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Feel like reviewing, @achow101?",
      "created_at" : "2019-03-28T22:29:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-477794441",
      "id" : 477794441,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3Nzc5NDQ0MQ==",
      "updated_at" : "2019-03-28T22:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/477794441",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 892eff05f115c0b002d0e0b6ffc3ab418480d25c",
      "created_at" : "2019-04-02T22:00:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15508#issuecomment-479223582",
      "id" : 479223582,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15508",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTIyMzU4Mg==",
      "updated_at" : "2019-04-02T22:00:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479223582",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]
