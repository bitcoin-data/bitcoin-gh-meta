[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK c7ea8d3236e7c1b0c198345cc78a6754338d3724",
      "created_at" : "2019-03-04T13:28:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15522#issuecomment-469252871",
      "id" : 469252871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15522",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTI1Mjg3MQ==",
      "updated_at" : "2019-03-04T13:28:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469252871",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/295504?v=4",
         "events_url" : "https://api.github.com/users/scravy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/scravy/followers",
         "following_url" : "https://api.github.com/users/scravy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/scravy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/scravy",
         "id" : 295504,
         "login" : "scravy",
         "node_id" : "MDQ6VXNlcjI5NTUwNA==",
         "organizations_url" : "https://api.github.com/users/scravy/orgs",
         "received_events_url" : "https://api.github.com/users/scravy/received_events",
         "repos_url" : "https://api.github.com/users/scravy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/scravy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/scravy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/scravy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "~~utACK c7ea8d3236e7c1b0c198345cc78a6754338d3724~~\r\n(I don't think these are necessary assumptions, you're supposed to use `uintptr_t` if you want an integer type the same size as a pointer, but ok we do make it in practice)",
      "created_at" : "2019-03-04T15:37:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15522#issuecomment-469297830",
      "id" : 469297830,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15522",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTI5NzgzMA==",
      "updated_at" : "2019-03-05T09:57:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469297830",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@scravy @laanwj Added compiler assumptions for completeness. Please re-review :-)",
      "created_at" : "2019-03-04T19:25:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15522#issuecomment-469387365",
      "id" : 469387365,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15522",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTM4NzM2NQ==",
      "updated_at" : "2019-03-04T19:25:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469387365",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I am not sure that the C++11 assumption is needed. The assumptions in here are about the _platform_, i.e. hardware, system configuration, etc.\r\n\r\nWhether bitcoin is built using C++11 or not is pretty much up to the build system, not so much to the underlying platform (whereas I might just be able to configure/make on some alien system violating assumptions about certain types).\r\n\r\nI'm not fundamentally opposed it, but I also do not see any necessity for it.",
      "created_at" : "2019-03-04T19:40:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15522#issuecomment-469392695",
      "id" : 469392695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15522",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTM5MjY5NQ==",
      "updated_at" : "2019-03-04T19:40:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469392695",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/295504?v=4",
         "events_url" : "https://api.github.com/users/scravy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/scravy/followers",
         "following_url" : "https://api.github.com/users/scravy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/scravy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/scravy",
         "id" : 295504,
         "login" : "scravy",
         "node_id" : "MDQ6VXNlcjI5NTUwNA==",
         "organizations_url" : "https://api.github.com/users/scravy/orgs",
         "received_events_url" : "https://api.github.com/users/scravy/received_events",
         "repos_url" : "https://api.github.com/users/scravy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/scravy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/scravy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/scravy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@scravy When adding `assumptions.h` the goal was to document all tacit assumptions we make that don't follow directly from the standard used. Not specifying the standard was just an oversight from my part -- it should have been there from the beginning :-)\r\n\r\nA thought experiment that can be made when considering if an assumption should be specified explicitly:\r\n* Could it help sound static analysis or other types of formal analysis if an assumption we make was specified explicitly in `assumptions.h`?\r\n\r\nIf the answer is yes the assumption should probably be explicitly stated in `assumptions.h` :-)",
      "created_at" : "2019-03-04T20:31:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15522#issuecomment-469410076",
      "id" : 469410076,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15522",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTQxMDA3Ng==",
      "updated_at" : "2019-03-04T20:32:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469410076",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I am not sure that the C++11 assumption is needed. The assumptions in here are about the platform, i.e. hardware, system configuration, etc.\r\n\r\nI tend to agree. I like documenting specific, concrete assumptions here about platforms and environments. \r\nAsserting the C++11 macros seems too sweeping and general. Is there any specific reason bitcoind cannot be built with C++14 or 19 mode if so desired? Will this result in expected bugs besides \"we haven't tested it\"? If not, let's not include it (have retracted my ACK for now).\r\n",
      "created_at" : "2019-03-05T09:56:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15522#issuecomment-469616378",
      "id" : 469616378,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15522",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTYxNjM3OA==",
      "updated_at" : "2019-03-05T09:57:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469616378",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj I've now changed to `__cplusplus >= 201103L` to make sure the compiler supports \"at least\" the final version of C++11. This will allow for building also in say C++14 or 17 mode. Please re-review :-)",
      "created_at" : "2019-03-05T10:16:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15522#issuecomment-469623628",
      "id" : 469623628,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15522",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTYyMzYyOA==",
      "updated_at" : "2019-03-06T22:17:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469623628",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj An alternative would be to simply issue a warning if a non-C++11 (ISO/IEC 14882:2011) compiler is used:\r\n\r\n```\r\n#if __cplusplus != 201104L\r\n#warning ...\r\n#endif\r\n```\r\n\r\nWDYT? :-)",
      "created_at" : "2019-03-05T23:05:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15522#issuecomment-469895591",
      "id" : 469895591,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15522",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTg5NTU5MQ==",
      "updated_at" : "2019-03-05T23:05:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469895591",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Ping - what is your preference? :-)",
      "created_at" : "2019-03-14T08:37:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15522#issuecomment-472753428",
      "id" : 472753428,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15522",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3Mjc1MzQyOA==",
      "updated_at" : "2019-03-14T08:37:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472753428",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "FWIW: I've verified that a disassembly of the `bitcoind` binary built with this patch applied is identical to a disassembly of the `bitcoind` binary built against `master` (as expected).",
      "created_at" : "2019-03-15T16:55:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15522#issuecomment-473363638",
      "id" : 473363638,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15522",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzM2MzYzOA==",
      "updated_at" : "2019-03-15T16:55:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473363638",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is fine, let's not have an endless discussion over a pretty insignificant change like this.\r\n\r\n> FWIW: I've verified that a disassembly of the bitcoind binary built with this patch applied is identical to a disassembly of the bitcoind binary built against master (as expected).\r\n\r\nTHanks for testing, utACK",
      "created_at" : "2019-03-16T16:13:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15522#issuecomment-473558307",
      "id" : 473558307,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15522",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzU1ODMwNw==",
      "updated_at" : "2019-03-16T16:13:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473558307",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
