[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263508599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263508599"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, `int m_min_depth{0};`",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-07T18:23:20Z",
      "diff_hunk" : "@@ -36,6 +36,8 @@ class CCoinControl\n     bool m_avoid_partial_spends;\n     //! Fee estimation mode to control arguments to estimateSmartFee\n     FeeEstimateMode m_fee_mode;\n+    //! Minimum chain depth value for coin availability\n+    int m_min_depth = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263508599",
      "id" : 263508599,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUwODU5OQ==",
      "original_commit_id" : "8697b6dba91797c528c8af62bf09fc62a5f43ba6",
      "original_position" : 5,
      "path" : "src/wallet/coincontrol.h",
      "position" : null,
      "pull_request_review_id" : 211944671,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263508599",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "A slight alternative is to just nuke `totalFee` from orbit and delete all the redundant code.",
      "created_at" : "2019-03-07T18:38:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-470643646",
      "id" : 470643646,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MDY0MzY0Ng==",
      "updated_at" : "2019-03-07T18:38:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470643646",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263514125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263514125"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could have this in a function:\r\n```\r\nfeebumper::CreateTransaction(...)\r\n    if (total_fee > 0) {\r\n        return feebumper::CreateTotalBumpTransaction(...) \r\n    } else {\r\n        return feebumper::CreateRateBumpTransaction(...)\r\n    }\r\n}\r\n```",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-07T18:38:32Z",
      "diff_hunk" : "@@ -274,8 +274,13 @@ class WalletImpl : public Wallet\n         CAmount& new_fee,\n         CMutableTransaction& mtx) override\n     {\n-        return feebumper::CreateTransaction(m_wallet.get(), txid, coin_control, total_fee, errors, old_fee, new_fee, mtx) ==\n-               feebumper::Result::OK;\n+        if (total_fee > 0) {\n+            return feebumper::CreateTotalBumpTransaction(m_wallet.get(), txid, coin_control, total_fee, errors, old_fee, new_fee, mtx) ==",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263514125",
      "id" : 263514125,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUxNDEyNQ==",
      "original_commit_id" : "8697b6dba91797c528c8af62bf09fc62a5f43ba6",
      "original_position" : 7,
      "path" : "src/interfaces/wallet.cpp",
      "position" : 7,
      "pull_request_review_id" : 211944671,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263514125",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "having QT unit test issues... anyone know how that's possible given the diff?",
      "created_at" : "2019-03-07T18:41:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-470644814",
      "id" : 470644814,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MDY0NDgxNA==",
      "updated_at" : "2019-03-07T18:42:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470644814",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263515717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263515717"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`CreateTransaction` always messed with my ctags anyways because of CWallet's ... :P ",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-07T18:42:57Z",
      "diff_hunk" : "@@ -274,8 +274,13 @@ class WalletImpl : public Wallet\n         CAmount& new_fee,\n         CMutableTransaction& mtx) override\n     {\n-        return feebumper::CreateTransaction(m_wallet.get(), txid, coin_control, total_fee, errors, old_fee, new_fee, mtx) ==\n-               feebumper::Result::OK;\n+        if (total_fee > 0) {\n+            return feebumper::CreateTotalBumpTransaction(m_wallet.get(), txid, coin_control, total_fee, errors, old_fee, new_fee, mtx) ==",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263515717",
      "id" : 263515717,
      "in_reply_to_id" : 263514125,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUxNTcxNw==",
      "original_commit_id" : "8697b6dba91797c528c8af62bf09fc62a5f43ba6",
      "original_position" : 7,
      "path" : "src/interfaces/wallet.cpp",
      "position" : 7,
      "pull_request_review_id" : 211953993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263515717",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15656](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15656.html) (wallet: Keep all outputs in bumpfee by promag)\n* [#15157](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15157.html) (rpc: Bumpfee units change, satoshis to BTC by benthecarman)\n* [#14641](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14641.html) (rpc: Add min_conf option to fund transaction calls by promag)\n* [#12096](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12096.html) ([rpc] [wallet] Allow specifying the output index when using bumpfee by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-03-07T20:04:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-470673644",
      "id" : 470673644,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MDY3MzY0NA==",
      "updated_at" : "2019-04-11T14:38:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470673644",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "fixed QT issue, addressed nit",
      "created_at" : "2019-03-07T20:30:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-470681987",
      "id" : 470681987,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MDY4MTk4Nw==",
      "updated_at" : "2019-03-07T20:30:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470681987",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, including on removing `totalFee`.\r\n\r\nCan you split `CreateRateBumpTransaction` into a function that creates the transaction and one that signs it? That should make it easier to use PSBT and e.g. add `signerbumpfee` to #14912.",
      "created_at" : "2019-03-08T17:41:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-471013715",
      "id" : 471013715,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MTAxMzcxNQ==",
      "updated_at" : "2019-03-08T17:41:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/471013715",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Can you split CreateRateBumpTransaction into a function that creates the transaction and one that signs it?\r\n\r\nIt already doesn't sign anything. \r\n\r\n>  including on removing totalFee\r\n\r\nI Looked at doing this and it removes a number of test cases that I'd have to think about harder how to test with a fee-rate only solution. Still might be worth it, but I left as-is for now since testing can be bolstered then `totalFee` removed at any point after.\r\n",
      "created_at" : "2019-03-08T17:56:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-471018469",
      "id" : 471018469,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MTAxODQ2OQ==",
      "updated_at" : "2019-03-08T17:56:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/471018469",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263905277"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263905277"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you should store the change address and reuse it when present.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-08T19:42:11Z",
      "diff_hunk" : "@@ -208,6 +193,97 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                         CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(take out change outputs)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263905277",
      "id" : 263905277,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzkwNTI3Nw==",
      "original_commit_id" : "7aca983958a7b687bc53b4efa4df6b0bfcd37807",
      "original_position" : 87,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 118,
      "pull_request_review_id" : 212447007,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263905277",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263940747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263940747"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed, and added test for both bump modes.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-08T21:44:28Z",
      "diff_hunk" : "@@ -208,6 +193,97 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                         CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(take out change outputs)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263940747",
      "id" : 263940747,
      "in_reply_to_id" : 263905277,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mzk0MDc0Nw==",
      "original_commit_id" : "7aca983958a7b687bc53b4efa4df6b0bfcd37807",
      "original_position" : 87,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 118,
      "pull_request_review_id" : 212493093,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263940747",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263989563"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263989563"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be \"sufficient\" :-)",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-09T07:07:12Z",
      "diff_hunk" : "@@ -3313,7 +3312,14 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n     CAmount old_fee;\n     CAmount new_fee;\n     CMutableTransaction mtx;\n-    feebumper::Result res = feebumper::CreateTransaction(pwallet, hash, coin_control, totalFee, errors, old_fee, new_fee, mtx);\n+    feebumper::Result res;\n+    if (totalFee > 0) {\n+        // Targeting total fee bump. Requires a change output of sufficent size.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263989563",
      "id" : 263989563,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mzk4OTU2Mw==",
      "original_commit_id" : "5a9441348effd1ae1e1bbae095285cea867d00f0",
      "original_position" : 19,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 212551021,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263989563",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263989583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263989583"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: `for _ in range(12):` is more idiomatic when `_` is unused :-)",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-09T07:07:55Z",
      "diff_hunk" : "@@ -173,6 +177,29 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    # Make sure additional inputs exist\n+    rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n+    rbfid = spend_one_input(rbf_node, dest_address, Decimal(\"0.00000700\"))\n+    assert_equal(len(rbf_node.getrawtransaction(rbfid, 1)[\"vin\"]), 1)\n+    # successfully bump this transaction a dozen times, even after tossing change\n+    for i in range(12):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r263989583",
      "id" : 263989583,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mzk4OTU4Mw==",
      "original_commit_id" : "5a9441348effd1ae1e1bbae095285cea867d00f0",
      "original_position" : 28,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 212551039,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263989583",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r264000048"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264000048"
         }
      },
      "author_association" : "MEMBER",
      "body" : "using it now :)",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-09T13:53:47Z",
      "diff_hunk" : "@@ -173,6 +177,29 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    # Make sure additional inputs exist\n+    rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n+    rbfid = spend_one_input(rbf_node, dest_address, Decimal(\"0.00000700\"))\n+    assert_equal(len(rbf_node.getrawtransaction(rbfid, 1)[\"vin\"]), 1)\n+    # successfully bump this transaction a dozen times, even after tossing change\n+    for i in range(12):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r264000048",
      "id" : 264000048,
      "in_reply_to_id" : 263989583,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDAwMDA0OA==",
      "original_commit_id" : "5a9441348effd1ae1e1bbae095285cea867d00f0",
      "original_position" : 28,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 212561738,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264000048",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r264000049"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264000049"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-09T13:53:52Z",
      "diff_hunk" : "@@ -3313,7 +3312,14 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n     CAmount old_fee;\n     CAmount new_fee;\n     CMutableTransaction mtx;\n-    feebumper::Result res = feebumper::CreateTransaction(pwallet, hash, coin_control, totalFee, errors, old_fee, new_fee, mtx);\n+    feebumper::Result res;\n+    if (totalFee > 0) {\n+        // Targeting total fee bump. Requires a change output of sufficent size.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r264000049",
      "id" : 264000049,
      "in_reply_to_id" : 263989563,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDAwMDA0OQ==",
      "original_commit_id" : "5a9441348effd1ae1e1bbae095285cea867d00f0",
      "original_position" : 19,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 212561740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264000049",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r265618007"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265618007"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This huge indentation seems unnecessary.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-14T15:11:09Z",
      "diff_hunk" : "@@ -128,35 +128,20 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         walletIncrementalRelayFee = ::incrementalRelayFee;\n     }\n \n-    if (total_fee > 0) {\n-        CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + ::incrementalRelayFee.GetFee(maxNewTxSize);\n-        if (total_fee < minTotalFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee, must be at least %s (oldFee %s + incrementalFee %s)\",\n-                                                                FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxNewTxSize)), FormatMoney(::incrementalRelayFee.GetFee(maxNewTxSize))));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        CAmount requiredFee = GetRequiredFee(*wallet, maxNewTxSize);\n-        if (total_fee < requiredFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee (cannot be less than required fee %s)\",\n-                                                                FormatMoney(requiredFee)));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        new_fee = total_fee;\n-        nNewFeeRate = CFeeRate(total_fee, maxNewTxSize);\n-    } else {\n-        new_fee = GetMinimumFee(*wallet, maxNewTxSize, coin_control, nullptr /* FeeCalculation */);\n-        nNewFeeRate = CFeeRate(new_fee, maxNewTxSize);\n-\n-        // New fee rate must be at least old rate + minimum incremental relay rate\n-        // walletIncrementalRelayFee.GetFeePerK() should be exact, because it's initialized\n-        // in that unit (fee per kb).\n-        // However, nOldFeeRate is a calculated value from the tx fee/size, so\n-        // add 1 satoshi to the result, because it may have been rounded down.\n-        if (nNewFeeRate.GetFeePerK() < nOldFeeRate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK()) {\n-            nNewFeeRate = CFeeRate(nOldFeeRate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK());\n-            new_fee = nNewFeeRate.GetFee(maxNewTxSize);\n-        }\n+    CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + ::incrementalRelayFee.GetFee(maxNewTxSize);\n+    if (total_fee < minTotalFee) {\n+        errors.push_back(strprintf(\"Insufficient totalFee, must be at least %s (oldFee %s + incrementalFee %s)\",\n+                                                            FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxNewTxSize)), FormatMoney(::incrementalRelayFee.GetFee(maxNewTxSize))));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r265618007",
      "id" : 265618007,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTYxODAwNw==",
      "original_commit_id" : "9240ff641006e8c3c76721232b46d99934f8431e",
      "original_position" : 44,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 214573345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265618007",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/853468?v=4",
         "events_url" : "https://api.github.com/users/stevenroose/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stevenroose/followers",
         "following_url" : "https://api.github.com/users/stevenroose/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stevenroose/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stevenroose",
         "id" : 853468,
         "login" : "stevenroose",
         "node_id" : "MDQ6VXNlcjg1MzQ2OA==",
         "organizations_url" : "https://api.github.com/users/stevenroose/orgs",
         "received_events_url" : "https://api.github.com/users/stevenroose/received_events",
         "repos_url" : "https://api.github.com/users/stevenroose/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stevenroose/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stevenroose/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stevenroose"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r265618137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265618137"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This huge indentation seems unnecessary.\r\n",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-14T15:11:26Z",
      "diff_hunk" : "@@ -128,35 +128,20 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         walletIncrementalRelayFee = ::incrementalRelayFee;\n     }\n \n-    if (total_fee > 0) {\n-        CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + ::incrementalRelayFee.GetFee(maxNewTxSize);\n-        if (total_fee < minTotalFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee, must be at least %s (oldFee %s + incrementalFee %s)\",\n-                                                                FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxNewTxSize)), FormatMoney(::incrementalRelayFee.GetFee(maxNewTxSize))));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        CAmount requiredFee = GetRequiredFee(*wallet, maxNewTxSize);\n-        if (total_fee < requiredFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee (cannot be less than required fee %s)\",\n-                                                                FormatMoney(requiredFee)));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        new_fee = total_fee;\n-        nNewFeeRate = CFeeRate(total_fee, maxNewTxSize);\n-    } else {\n-        new_fee = GetMinimumFee(*wallet, maxNewTxSize, coin_control, nullptr /* FeeCalculation */);\n-        nNewFeeRate = CFeeRate(new_fee, maxNewTxSize);\n-\n-        // New fee rate must be at least old rate + minimum incremental relay rate\n-        // walletIncrementalRelayFee.GetFeePerK() should be exact, because it's initialized\n-        // in that unit (fee per kb).\n-        // However, nOldFeeRate is a calculated value from the tx fee/size, so\n-        // add 1 satoshi to the result, because it may have been rounded down.\n-        if (nNewFeeRate.GetFeePerK() < nOldFeeRate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK()) {\n-            nNewFeeRate = CFeeRate(nOldFeeRate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK());\n-            new_fee = nNewFeeRate.GetFee(maxNewTxSize);\n-        }\n+    CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + ::incrementalRelayFee.GetFee(maxNewTxSize);\n+    if (total_fee < minTotalFee) {\n+        errors.push_back(strprintf(\"Insufficient totalFee, must be at least %s (oldFee %s + incrementalFee %s)\",\n+                                                            FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxNewTxSize)), FormatMoney(::incrementalRelayFee.GetFee(maxNewTxSize))));\n+        return Result::INVALID_PARAMETER;\n+    }\n+    CAmount requiredFee = GetRequiredFee(*wallet, maxNewTxSize);\n+    if (total_fee < requiredFee) {\n+        errors.push_back(strprintf(\"Insufficient totalFee (cannot be less than required fee %s)\",\n+                                                            FormatMoney(requiredFee)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r265618137",
      "id" : 265618137,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTYxODEzNw==",
      "original_commit_id" : "9240ff641006e8c3c76721232b46d99934f8431e",
      "original_position" : 50,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 214573345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265618137",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/853468?v=4",
         "events_url" : "https://api.github.com/users/stevenroose/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stevenroose/followers",
         "following_url" : "https://api.github.com/users/stevenroose/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stevenroose/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stevenroose",
         "id" : 853468,
         "login" : "stevenroose",
         "node_id" : "MDQ6VXNlcjg1MzQ2OA==",
         "organizations_url" : "https://api.github.com/users/stevenroose/orgs",
         "received_events_url" : "https://api.github.com/users/stevenroose/received_events",
         "repos_url" : "https://api.github.com/users/stevenroose/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stevenroose/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stevenroose/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stevenroose"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@instagibbs have you considered using `CWallet::FundTransaction`? Maybe the reason to not use it is too obvious, what am I missing?",
      "created_at" : "2019-03-17T23:22:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-473726062",
      "id" : 473726062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzcyNjA2Mg==",
      "updated_at" : "2019-03-17T23:22:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473726062",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag well for one FundTransaction doesn't have any notion of pre-existing change outputs, so I'd still have to pre-process that information. I don't see much/any possibility for code reduction?",
      "created_at" : "2019-03-18T13:23:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-473907825",
      "id" : 473907825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzkwNzgyNQ==",
      "updated_at" : "2019-03-18T13:23:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473907825",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r266962044"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266962044"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"generalize bumpfee to add inputs when needed\" (9240ff641006e8c3c76721232b46d99934f8431e)\r\n\r\nCan you change \"If `totalFee` is given no new inputs will be selected\" to \"If `totalFee` is given, adding new inputs is not supported\"? I was confused looking at this and trying to figure out how totalFee had anything to do with adding new inputs, until I read the PR history.\r\n\r\nAlso would change \"so the change output must be big out enough\" to \"so there must be a single change output that is big enough\" since multiple change outputs in this case is still an error.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-19T15:51:48Z",
      "diff_hunk" : "@@ -3214,9 +3214,8 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n             RPCHelpMan{\"bumpfee\",\n                 \"\\nBumps the fee of an opt-in-RBF transaction T, replacing it with a new transaction B.\\n\"\n                 \"An opt-in RBF transaction with the given txid must be in the wallet.\\n\"\n-                \"The command will pay the additional fee by decreasing (or perhaps removing) its change output.\\n\"\n-                \"If the change output is not big enough to cover the increased fee, the command will currently fail\\n\"\n-                \"instead of adding new inputs to compensate. (A future implementation could improve this.)\\n\"\n+                \"The command will pay the additional fee by decreasing (or perhaps removing) its change output or adding inputs when necessary.\\n\"\n+                \"If `totalFee` is given no new inputs will be selected, so the change output must be big enough to cover the increased fee, or it will fail.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r266962044",
      "id" : 266962044,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Njk2MjA0NA==",
      "original_commit_id" : "9240ff641006e8c3c76721232b46d99934f8431e",
      "original_position" : 8,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 216250427,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266962044",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r266974971"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266974971"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"generalize bumpfee to add inputs when needed\" (9240ff641006e8c3c76721232b46d99934f8431e)\r\n\r\nWould suggest changing \"The command will pay the additional fee by decreasing (or perhaps removing) its change output or adding inputs when necessary.\" to \"The command will pay the additional fee by reducing change outputs or adding inputs when necessary. It may add a new change output if one does not already exist.\" since the requirement of having a single change output is dropped and having 0 or multiple change outputs in the original transaction no longer triggers errors.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-19T16:16:16Z",
      "diff_hunk" : "@@ -3214,9 +3214,8 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n             RPCHelpMan{\"bumpfee\",\n                 \"\\nBumps the fee of an opt-in-RBF transaction T, replacing it with a new transaction B.\\n\"\n                 \"An opt-in RBF transaction with the given txid must be in the wallet.\\n\"\n-                \"The command will pay the additional fee by decreasing (or perhaps removing) its change output.\\n\"\n-                \"If the change output is not big enough to cover the increased fee, the command will currently fail\\n\"\n-                \"instead of adding new inputs to compensate. (A future implementation could improve this.)\\n\"\n+                \"The command will pay the additional fee by decreasing (or perhaps removing) its change output or adding inputs when necessary.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r266974971",
      "id" : 266974971,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Njk3NDk3MQ==",
      "original_commit_id" : "9240ff641006e8c3c76721232b46d99934f8431e",
      "original_position" : 7,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 216250427,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266974971",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r266986927"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266986927"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"add functional tests for feerate bumpfee with adding inputs\" (a14707cb44f300dbeef94b84746fba943a5c29ba)\r\n\r\nCould remove line break since this is shorter.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-19T16:40:36Z",
      "diff_hunk" : "@@ -272,19 +303,21 @@ def test_locked_wallet_fails(rbf_node, dest_address):\n     rbf_node.walletlock()\n     assert_raises_rpc_error(-13, \"Please enter the wallet passphrase with walletpassphrase first.\",\n                             rbf_node.bumpfee, rbfid)\n+    rbf_node.walletpassphrase(WALLET_PASSPHRASE, WALLET_PASSPHRASE_TIMEOUT)\n \n \n-def spend_one_input(node, dest_address):\n+def spend_one_input(node, dest_address, change_size=Decimal(\"0.00049000\")):\n     tx_input = dict(\n         sequence=BIP125_SEQUENCE_NUMBER, **next(u for u in node.listunspent() if u[\"amount\"] == Decimal(\"0.00100000\")))\n+    destinations = {dest_address: Decimal(\"0.00050000\")}\n+    if change_size > 0:\n+        destinations[node.getrawchangeaddress()] = change_size\n     rawtx = node.createrawtransaction(\n-        [tx_input], {dest_address: Decimal(\"0.00050000\"),\n-                     node.getrawchangeaddress(): Decimal(\"0.00049000\")})\n+        [tx_input], destinations)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r266986927",
      "id" : 266986927,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Njk4NjkyNw==",
      "original_commit_id" : "a14707cb44f300dbeef94b84746fba943a5c29ba",
      "original_position" : 62,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 216250427,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266986927",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r266990904"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266990904"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"add functional tests for feerate bumpfee with adding inputs\" (a14707cb44f300dbeef94b84746fba943a5c29ba)\r\n\r\nNote: New change_size parameter doesn't actually seem to be used in this PR. Seems fine to keep though, I think it makes the code more readable.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-19T16:48:52Z",
      "diff_hunk" : "@@ -272,19 +303,21 @@ def test_locked_wallet_fails(rbf_node, dest_address):\n     rbf_node.walletlock()\n     assert_raises_rpc_error(-13, \"Please enter the wallet passphrase with walletpassphrase first.\",\n                             rbf_node.bumpfee, rbfid)\n+    rbf_node.walletpassphrase(WALLET_PASSPHRASE, WALLET_PASSPHRASE_TIMEOUT)\n \n \n-def spend_one_input(node, dest_address):\n+def spend_one_input(node, dest_address, change_size=Decimal(\"0.00049000\")):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r266990904",
      "id" : 266990904,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Njk5MDkwNA==",
      "original_commit_id" : "a14707cb44f300dbeef94b84746fba943a5c29ba",
      "original_position" : 53,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : 77,
      "pull_request_review_id" : 216250427,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266990904",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r266996556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266996556"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"wallet_bumpfee.py: add test for change key preservation\" (5cedf2295934637af451e977ed13d61762f41d0b)\r\n\r\nIf none of the outputs are change, `address` will just be set to the last output address. Probably should add `change_address = None` before the loop, `change_address = address` before the break, and use `change_address` instead of `address` below.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-19T17:00:04Z",
      "diff_hunk" : "@@ -305,6 +306,27 @@ def test_locked_wallet_fails(rbf_node, dest_address):\n                             rbf_node.bumpfee, rbfid)\n     rbf_node.walletpassphrase(WALLET_PASSPHRASE, WALLET_PASSPHRASE_TIMEOUT)\n \n+def test_change_script_match(rbf_node, dest_address):\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    unbumped_details = rbf_node.getrawtransaction(rbfid, 1)\n+    bumped_total_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 2000})\n+    total_bumped_details = rbf_node.getrawtransaction(bumped_total_tx[\"txid\"], 1)\n+    bumped_rate_tx = rbf_node.bumpfee(bumped_total_tx[\"txid\"])\n+    rate_bumped_details = rbf_node.getrawtransaction(bumped_rate_tx[\"txid\"], 1)\n+\n+    # find change from original\n+    for out in unbumped_details[\"vout\"]:\n+        address = out[\"scriptPubKey\"][\"addresses\"][0]\n+        if rbf_node.getaddressinfo(address)[\"ischange\"] == True:\n+            break\n+    assert(address is not None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r266996556",
      "id" : 266996556,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Njk5NjU1Ng==",
      "original_commit_id" : "5cedf2295934637af451e977ed13d61762f41d0b",
      "original_position" : 25,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 216250427,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266996556",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r266997693"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266997693"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"wallet_bumpfee.py: add test for change key preservation\" (5cedf2295934637af451e977ed13d61762f41d0b):\r\n\r\n`== True` is usually avoided in python (https://docs.quantifiedcode.com/python-anti-patterns/readability/comparison_to_true.html). Can just drop it here and below.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-19T17:02:16Z",
      "diff_hunk" : "@@ -305,6 +306,27 @@ def test_locked_wallet_fails(rbf_node, dest_address):\n                             rbf_node.bumpfee, rbfid)\n     rbf_node.walletpassphrase(WALLET_PASSPHRASE, WALLET_PASSPHRASE_TIMEOUT)\n \n+def test_change_script_match(rbf_node, dest_address):\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    unbumped_details = rbf_node.getrawtransaction(rbfid, 1)\n+    bumped_total_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 2000})\n+    total_bumped_details = rbf_node.getrawtransaction(bumped_total_tx[\"txid\"], 1)\n+    bumped_rate_tx = rbf_node.bumpfee(bumped_total_tx[\"txid\"])\n+    rate_bumped_details = rbf_node.getrawtransaction(bumped_rate_tx[\"txid\"], 1)\n+\n+    # find change from original\n+    for out in unbumped_details[\"vout\"]:\n+        address = out[\"scriptPubKey\"][\"addresses\"][0]\n+        if rbf_node.getaddressinfo(address)[\"ischange\"] == True:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r266997693",
      "id" : 266997693,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Njk5NzY5Mw==",
      "original_commit_id" : "5cedf2295934637af451e977ed13d61762f41d0b",
      "original_position" : 23,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 216250427,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266997693",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267008874"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267008874"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes I previously used it in tests but ended up not needing it with smarter looping checks.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-19T17:24:58Z",
      "diff_hunk" : "@@ -272,19 +303,21 @@ def test_locked_wallet_fails(rbf_node, dest_address):\n     rbf_node.walletlock()\n     assert_raises_rpc_error(-13, \"Please enter the wallet passphrase with walletpassphrase first.\",\n                             rbf_node.bumpfee, rbfid)\n+    rbf_node.walletpassphrase(WALLET_PASSPHRASE, WALLET_PASSPHRASE_TIMEOUT)\n \n \n-def spend_one_input(node, dest_address):\n+def spend_one_input(node, dest_address, change_size=Decimal(\"0.00049000\")):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267008874",
      "id" : 267008874,
      "in_reply_to_id" : 266990904,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzAwODg3NA==",
      "original_commit_id" : "a14707cb44f300dbeef94b84746fba943a5c29ba",
      "original_position" : 53,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : 77,
      "pull_request_review_id" : 216308314,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267008874",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267027760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267027760"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nevermind, re-read",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-19T18:05:12Z",
      "diff_hunk" : "@@ -3214,9 +3214,8 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n             RPCHelpMan{\"bumpfee\",\n                 \"\\nBumps the fee of an opt-in-RBF transaction T, replacing it with a new transaction B.\\n\"\n                 \"An opt-in RBF transaction with the given txid must be in the wallet.\\n\"\n-                \"The command will pay the additional fee by decreasing (or perhaps removing) its change output.\\n\"\n-                \"If the change output is not big enough to cover the increased fee, the command will currently fail\\n\"\n-                \"instead of adding new inputs to compensate. (A future implementation could improve this.)\\n\"\n+                \"The command will pay the additional fee by decreasing (or perhaps removing) its change output or adding inputs when necessary.\\n\"\n+                \"If `totalFee` is given no new inputs will be selected, so the change output must be big enough to cover the increased fee, or it will fail.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267027760",
      "id" : 267027760,
      "in_reply_to_id" : 266962044,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzAyNzc2MA==",
      "original_commit_id" : "9240ff641006e8c3c76721232b46d99934f8431e",
      "original_position" : 8,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 216331640,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267027760",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky good suggestions thanks, fixed.",
      "created_at" : "2019-03-19T18:27:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-474513548",
      "id" : 474513548,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NDUxMzU0OA==",
      "updated_at" : "2019-03-19T18:27:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/474513548",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267040633"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267040633"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"generalize bumpfee to add inputs when needed\" (d5c0e53264a7eaf72c2691e3c19ce9fc60d3acf6)\r\n\r\nI think this needs a comma after \"given\" to be grammatical (sorry to be pedantic, but I did double-check https://www.ego4u.com/en/cram-up/writing/comma?10  :bowtie:).",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-19T18:35:09Z",
      "diff_hunk" : "@@ -3214,9 +3214,8 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n             RPCHelpMan{\"bumpfee\",\n                 \"\\nBumps the fee of an opt-in-RBF transaction T, replacing it with a new transaction B.\\n\"\n                 \"An opt-in RBF transaction with the given txid must be in the wallet.\\n\"\n-                \"The command will pay the additional fee by decreasing (or perhaps removing) its change output.\\n\"\n-                \"If the change output is not big enough to cover the increased fee, the command will currently fail\\n\"\n-                \"instead of adding new inputs to compensate. (A future implementation could improve this.)\\n\"\n+                \"The command will pay the additional fee by reducing change outputs or adding inputs when necessary. It may add a new change output if one does not already exist.\\n\"\n+                \"If `totalFee` is given adding inputs is not supported, so there must be a single change output that is big enough or it will fail.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267040633",
      "id" : 267040633,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzA0MDYzMw==",
      "original_commit_id" : "d5c0e53264a7eaf72c2691e3c19ce9fc60d3acf6",
      "original_position" : 8,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 216347575,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267040633",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267045751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267045751"
         }
      },
      "author_association" : "MEMBER",
      "body" : "commas are for dweebs. fixed.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-19T18:47:00Z",
      "diff_hunk" : "@@ -3214,9 +3214,8 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n             RPCHelpMan{\"bumpfee\",\n                 \"\\nBumps the fee of an opt-in-RBF transaction T, replacing it with a new transaction B.\\n\"\n                 \"An opt-in RBF transaction with the given txid must be in the wallet.\\n\"\n-                \"The command will pay the additional fee by decreasing (or perhaps removing) its change output.\\n\"\n-                \"If the change output is not big enough to cover the increased fee, the command will currently fail\\n\"\n-                \"instead of adding new inputs to compensate. (A future implementation could improve this.)\\n\"\n+                \"The command will pay the additional fee by reducing change outputs or adding inputs when necessary. It may add a new change output if one does not already exist.\\n\"\n+                \"If `totalFee` is given adding inputs is not supported, so there must be a single change output that is big enough or it will fail.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267045751",
      "id" : 267045751,
      "in_reply_to_id" : 267040633,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzA0NTc1MQ==",
      "original_commit_id" : "d5c0e53264a7eaf72c2691e3c19ce9fc60d3acf6",
      "original_position" : 8,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 216353829,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267045751",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267522514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267522514"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If by any chance there are multiple `IsChange` outputs the last is used and the others are removed. Is this acceptable? A simple solution is to check:\r\n```cpp\r\nif (wallet->IsChange(output) && new_coin_control.destChange != CNoDestination) {\r\n    // preserve first change\r\n} else {\r\n    // add recipient\r\n}\r\n```\r\n\r\n",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-20T20:04:08Z",
      "diff_hunk" : "@@ -208,6 +193,103 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                         CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {\n+            CRecipient recipient = {output.scriptPubKey, output.nValue, false};\n+            recipients.push_back(recipient);\n+        } else {\n+            CTxDestination change_dest;\n+            ExtractDestination(output.scriptPubKey, change_dest);\n+            new_coin_control.destChange = change_dest;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267522514",
      "id" : 267522514,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzUyMjUxNA==",
      "original_commit_id" : "06155d16cbc3f96db26ecb22a35153cb87eec6b0",
      "original_position" : 96,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 124,
      "pull_request_review_id" : 216952517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267522514",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-03-21T08:25:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-475144804",
      "id" : 475144804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTE0NDgwNA==",
      "updated_at" : "2019-03-21T08:25:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475144804",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2019-03-21T11:30:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-475194822",
      "id" : 475194822,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTE5NDgyMg==",
      "updated_at" : "2019-03-21T11:30:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475194822",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267735431"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267735431"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : " In commit \"generalize bumpfee to add inputs when needed\" (ee4fc9ab67f5021c80a12d158a25e9d2bf1c0dfc)\r\n\r\nHere and one place below, s/::incrementalRelayFee/nodeIncrementalRelayFee/\r\n\r\n(Sorry about this. I need to make some build changes that will cause accesses to node globals from wallet code to result in explicit link errors: https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-213000398)",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-21T12:34:54Z",
      "diff_hunk" : "@@ -129,35 +129,20 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         walletIncrementalRelayFee = nodeIncrementalRelayFee;\n     }\n \n-    if (total_fee > 0) {\n-        CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + nodeIncrementalRelayFee.GetFee(maxNewTxSize);\n-        if (total_fee < minTotalFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee, must be at least %s (oldFee %s + incrementalFee %s)\",\n-                                                                FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxNewTxSize)), FormatMoney(nodeIncrementalRelayFee.GetFee(maxNewTxSize))));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        CAmount requiredFee = GetRequiredFee(*wallet, maxNewTxSize);\n-        if (total_fee < requiredFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee (cannot be less than required fee %s)\",\n-                                                                FormatMoney(requiredFee)));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        new_fee = total_fee;\n-        nNewFeeRate = CFeeRate(total_fee, maxNewTxSize);\n-    } else {\n-        new_fee = GetMinimumFee(*wallet, maxNewTxSize, coin_control, nullptr /* FeeCalculation */);\n-        nNewFeeRate = CFeeRate(new_fee, maxNewTxSize);\n-\n-        // New fee rate must be at least old rate + minimum incremental relay rate\n-        // walletIncrementalRelayFee.GetFeePerK() should be exact, because it's initialized\n-        // in that unit (fee per kb).\n-        // However, nOldFeeRate is a calculated value from the tx fee/size, so\n-        // add 1 satoshi to the result, because it may have been rounded down.\n-        if (nNewFeeRate.GetFeePerK() < nOldFeeRate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK()) {\n-            nNewFeeRate = CFeeRate(nOldFeeRate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK());\n-            new_fee = nNewFeeRate.GetFee(maxNewTxSize);\n-        }\n+    CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + nodeIncrementalRelayFee.GetFee(maxNewTxSize);\n+    if (total_fee < minTotalFee) {\n+        errors.push_back(strprintf(\"Insufficient totalFee, must be at least %s (oldFee %s + incrementalFee %s)\",\n+            FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxNewTxSize)), FormatMoney(::incrementalRelayFee.GetFee(maxNewTxSize))));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267735431",
      "id" : 267735431,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzczNTQzMQ==",
      "original_commit_id" : "ee4fc9ab67f5021c80a12d158a25e9d2bf1c0dfc",
      "original_position" : 44,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 217211867,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267735431",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267738382"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267738382"
         }
      },
      "author_association" : "MEMBER",
      "body" : "argh sorry for not reading more carefully. fixed.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-03-21T12:44:25Z",
      "diff_hunk" : "@@ -129,35 +129,20 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         walletIncrementalRelayFee = nodeIncrementalRelayFee;\n     }\n \n-    if (total_fee > 0) {\n-        CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + nodeIncrementalRelayFee.GetFee(maxNewTxSize);\n-        if (total_fee < minTotalFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee, must be at least %s (oldFee %s + incrementalFee %s)\",\n-                                                                FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxNewTxSize)), FormatMoney(nodeIncrementalRelayFee.GetFee(maxNewTxSize))));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        CAmount requiredFee = GetRequiredFee(*wallet, maxNewTxSize);\n-        if (total_fee < requiredFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee (cannot be less than required fee %s)\",\n-                                                                FormatMoney(requiredFee)));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        new_fee = total_fee;\n-        nNewFeeRate = CFeeRate(total_fee, maxNewTxSize);\n-    } else {\n-        new_fee = GetMinimumFee(*wallet, maxNewTxSize, coin_control, nullptr /* FeeCalculation */);\n-        nNewFeeRate = CFeeRate(new_fee, maxNewTxSize);\n-\n-        // New fee rate must be at least old rate + minimum incremental relay rate\n-        // walletIncrementalRelayFee.GetFeePerK() should be exact, because it's initialized\n-        // in that unit (fee per kb).\n-        // However, nOldFeeRate is a calculated value from the tx fee/size, so\n-        // add 1 satoshi to the result, because it may have been rounded down.\n-        if (nNewFeeRate.GetFeePerK() < nOldFeeRate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK()) {\n-            nNewFeeRate = CFeeRate(nOldFeeRate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK());\n-            new_fee = nNewFeeRate.GetFee(maxNewTxSize);\n-        }\n+    CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + nodeIncrementalRelayFee.GetFee(maxNewTxSize);\n+    if (total_fee < minTotalFee) {\n+        errors.push_back(strprintf(\"Insufficient totalFee, must be at least %s (oldFee %s + incrementalFee %s)\",\n+            FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxNewTxSize)), FormatMoney(::incrementalRelayFee.GetFee(maxNewTxSize))));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267738382",
      "id" : 267738382,
      "in_reply_to_id" : 267735431,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzczODM4Mg==",
      "original_commit_id" : "ee4fc9ab67f5021c80a12d158a25e9d2bf1c0dfc",
      "original_position" : 44,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 217215674,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267738382",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is great. Strong concept ACK.\r\n\r\nBIP125 doesn't require all the inputs in the replaced transaction to be used in the replacement transaction, but it's very important for wallets to make sure that happens. If not, it would be possible to bump a transaction A twice to A2 and A3 where A2 and A3 don't conflict (or alternatively bump A to A2 and A2 to A3 where A and A3 don't conflict). If both later get confirmed then the sender has accidentally double paid.\r\n\r\nThat would be a funds loss scenario, so I don't think it'd be overboard to add user documentation, code comments and testing:\r\n\r\n- Add a short sentence to the end of https://github.com/bitcoin/bitcoin/pull/15557/files#diff-df7d84ff2f53fcb2a0dc15a3a51e55ceR3217: \"All inputs in the original transaction will be included in the replacement transaction.\"\r\n- Expand the comment here: https://github.com/bitcoin/bitcoin/pull/15557/files#diff-e88dedfd9c5f5a3dd93b212e126aa069R266 to say that all inputs must be included to avoid creating non-conflicting replacement transactions.\r\n- Add tests to https://github.com/bitcoin/bitcoin/pull/15557/files#diff-99f59f30717393a95407e30e3451b129 to make sure that when a tx is bumped, all the inputs for the original are included in the replacement.",
      "created_at" : "2019-03-21T19:43:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-475375483",
      "id" : 475375483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTM3NTQ4Mw==",
      "updated_at" : "2019-03-21T19:43:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475375483",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> If both later get confirmed then the sender has accidentally double paid.\r\n\r\nIf there's no conflict how is it double paid?",
      "created_at" : "2019-03-22T00:51:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-475455806",
      "id" : 475455806,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTQ1NTgwNg==",
      "updated_at" : "2019-03-22T00:51:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475455806",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Conflict with respect to spent I inputs not destinations.\n\nOn Thu, Mar 21, 2019, 8:52 PM JoÃÂ£o Barbosa <notifications@github.com> wrote:\n\n> If both later get confirmed then the sender has accidentally double paid.\n>\n> If there's no conflict how is it double paid?\n>\n> Ã¢ÂÂ\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-475455806>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AFgC08m_IevYIbq5sD3pVnENIsm_ISWyks5vZClqgaJpZM4bjzhN>\n> .\n>\n",
      "created_at" : "2019-03-22T00:54:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-475456263",
      "id" : 475456263,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTQ1NjI2Mw==",
      "updated_at" : "2019-03-22T00:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475456263",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@instagibbs right, double paid, not double spent.",
      "created_at" : "2019-03-22T08:52:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-475539740",
      "id" : 475539740,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTUzOTc0MA==",
      "updated_at" : "2019-03-22T08:52:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475539740",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery Comments addressed, and paragraphed poached if that's ok :)",
      "created_at" : "2019-03-22T13:49:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-475627827",
      "id" : 475627827,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTYyNzgyNw==",
      "updated_at" : "2019-03-22T13:49:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475627827",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Also added a small note on the need for confirmed new inputs as not a bip125 requirement, but of current mempool relay policy.",
      "created_at" : "2019-03-22T13:50:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-475628006",
      "id" : 475628006,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTYyODAwNg==",
      "updated_at" : "2019-03-22T13:50:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475628006",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @instagibbs . Looks good.\r\n\r\n> Also added a small note on the need for confirmed new inputs as not a bip125 requirement, but of current mempool relay policy.\r\n\r\nMaybe I'm misunderstanding this comment, but I think this is a BIP 125 requirement (rule 2).",
      "created_at" : "2019-03-22T14:10:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-475635364",
      "id" : 475635364,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTYzNTM2NA==",
      "updated_at" : "2019-03-22T14:10:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475635364",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery Oh I'm misremembering: It's not an RBF rule, just bip125!",
      "created_at" : "2019-03-22T14:14:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-475636822",
      "id" : 475636822,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTYzNjgyMg==",
      "updated_at" : "2019-03-22T14:14:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475636822",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery fixed comment",
      "created_at" : "2019-03-22T14:15:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-475637382",
      "id" : 475637382,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTYzNzM4Mg==",
      "updated_at" : "2019-03-22T14:15:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475637382",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271397539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271397539"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: increase indentation to match movement of open-parens in line above.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-02T16:42:41Z",
      "diff_hunk" : "@@ -73,7 +73,7 @@ bool TransactionCanBeBumped(const CWallet* wallet, const uint256& txid)\n     return res == feebumper::Result::OK;\n }\n \n-Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, CAmount total_fee, std::vector<std::string>& errors,\n+Result CreateTotalBumpTransaction(const CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, CAmount total_fee, std::vector<std::string>& errors,\n                          CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271397539",
      "id" : 271397539,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTM5NzUzOQ==",
      "original_commit_id" : "8e9027bd9864c8a2c0be314bd1f799b9ed8c4085",
      "original_position" : 6,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 221776517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271397539",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271400019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271400019"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See the error text below: `the totalFee value should be at least %s or the settxfee value should be at least %s to add transaction`. Please remove the reference to `settxfee` since it's no longer used in this function (it was used in the call to `GetMinimumFee()`.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-02T16:48:52Z",
      "diff_hunk" : "@@ -129,35 +129,20 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         walletIncrementalRelayFee = nodeIncrementalRelayFee;\n     }\n \n-    if (total_fee > 0) {\n-        CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + nodeIncrementalRelayFee.GetFee(maxNewTxSize);\n-        if (total_fee < minTotalFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee, must be at least %s (oldFee %s + incrementalFee %s)\",\n-                                                                FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxNewTxSize)), FormatMoney(nodeIncrementalRelayFee.GetFee(maxNewTxSize))));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        CAmount requiredFee = GetRequiredFee(*wallet, maxNewTxSize);\n-        if (total_fee < requiredFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee (cannot be less than required fee %s)\",\n-                                                                FormatMoney(requiredFee)));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        new_fee = total_fee;\n-        nNewFeeRate = CFeeRate(total_fee, maxNewTxSize);\n-    } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271400019",
      "id" : 271400019,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTQwMDAxOQ==",
      "original_commit_id" : "8e9027bd9864c8a2c0be314bd1f799b9ed8c4085",
      "original_position" : 28,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 41,
      "pull_request_review_id" : 221776517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271400019",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271401097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271401097"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need anymore to declare `nNewFeeRate` at line 122 above. You can move the declaration and assignment down to below the `// check that fee rate is higher than mempool's ...` comment below.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-02T16:51:29Z",
      "diff_hunk" : "@@ -129,35 +129,20 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         walletIncrementalRelayFee = nodeIncrementalRelayFee;\n     }\n \n-    if (total_fee > 0) {\n-        CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + nodeIncrementalRelayFee.GetFee(maxNewTxSize);\n-        if (total_fee < minTotalFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee, must be at least %s (oldFee %s + incrementalFee %s)\",\n-                                                                FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxNewTxSize)), FormatMoney(nodeIncrementalRelayFee.GetFee(maxNewTxSize))));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        CAmount requiredFee = GetRequiredFee(*wallet, maxNewTxSize);\n-        if (total_fee < requiredFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee (cannot be less than required fee %s)\",\n-                                                                FormatMoney(requiredFee)));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        new_fee = total_fee;\n-        nNewFeeRate = CFeeRate(total_fee, maxNewTxSize);\n-    } else {\n-        new_fee = GetMinimumFee(*wallet, maxNewTxSize, coin_control, nullptr /* FeeCalculation */);\n-        nNewFeeRate = CFeeRate(new_fee, maxNewTxSize);\n-\n-        // New fee rate must be at least old rate + minimum incremental relay rate\n-        // walletIncrementalRelayFee.GetFeePerK() should be exact, because it's initialized\n-        // in that unit (fee per kb).\n-        // However, nOldFeeRate is a calculated value from the tx fee/size, so\n-        // add 1 satoshi to the result, because it may have been rounded down.\n-        if (nNewFeeRate.GetFeePerK() < nOldFeeRate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK()) {\n-            nNewFeeRate = CFeeRate(nOldFeeRate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK());\n-            new_fee = nNewFeeRate.GetFee(maxNewTxSize);\n-        }\n+    CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + nodeIncrementalRelayFee.GetFee(maxNewTxSize);\n+    if (total_fee < minTotalFee) {\n+        errors.push_back(strprintf(\"Insufficient totalFee, must be at least %s (oldFee %s + incrementalFee %s)\",\n+            FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxNewTxSize)), FormatMoney(nodeIncrementalRelayFee.GetFee(maxNewTxSize))));\n+        return Result::INVALID_PARAMETER;\n+    }\n+    CAmount requiredFee = GetRequiredFee(*wallet, maxNewTxSize);\n+    if (total_fee < requiredFee) {\n+        errors.push_back(strprintf(\"Insufficient totalFee (cannot be less than required fee %s)\",\n+            FormatMoney(requiredFee)));\n+        return Result::INVALID_PARAMETER;\n     }\n+    new_fee = total_fee;\n+    nNewFeeRate = CFeeRate(total_fee, maxNewTxSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271401097",
      "id" : 271401097,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTQwMTA5Nw==",
      "original_commit_id" : "8e9027bd9864c8a2c0be314bd1f799b9ed8c4085",
      "original_position" : 54,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 221776517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271401097",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271404078"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271404078"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This could potentially be moved to the top of the function.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-02T16:58:49Z",
      "diff_hunk" : "@@ -129,35 +129,20 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         walletIncrementalRelayFee = nodeIncrementalRelayFee;\n     }\n \n-    if (total_fee > 0) {\n-        CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + nodeIncrementalRelayFee.GetFee(maxNewTxSize);\n-        if (total_fee < minTotalFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee, must be at least %s (oldFee %s + incrementalFee %s)\",\n-                                                                FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxNewTxSize)), FormatMoney(nodeIncrementalRelayFee.GetFee(maxNewTxSize))));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        CAmount requiredFee = GetRequiredFee(*wallet, maxNewTxSize);\n-        if (total_fee < requiredFee) {\n-            errors.push_back(strprintf(\"Insufficient totalFee (cannot be less than required fee %s)\",\n-                                                                FormatMoney(requiredFee)));\n-            return Result::INVALID_PARAMETER;\n-        }\n-        new_fee = total_fee;\n-        nNewFeeRate = CFeeRate(total_fee, maxNewTxSize);\n-    } else {\n-        new_fee = GetMinimumFee(*wallet, maxNewTxSize, coin_control, nullptr /* FeeCalculation */);\n-        nNewFeeRate = CFeeRate(new_fee, maxNewTxSize);\n-\n-        // New fee rate must be at least old rate + minimum incremental relay rate\n-        // walletIncrementalRelayFee.GetFeePerK() should be exact, because it's initialized\n-        // in that unit (fee per kb).\n-        // However, nOldFeeRate is a calculated value from the tx fee/size, so\n-        // add 1 satoshi to the result, because it may have been rounded down.\n-        if (nNewFeeRate.GetFeePerK() < nOldFeeRate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK()) {\n-            nNewFeeRate = CFeeRate(nOldFeeRate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK());\n-            new_fee = nNewFeeRate.GetFee(maxNewTxSize);\n-        }\n+    CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + nodeIncrementalRelayFee.GetFee(maxNewTxSize);\n+    if (total_fee < minTotalFee) {\n+        errors.push_back(strprintf(\"Insufficient totalFee, must be at least %s (oldFee %s + incrementalFee %s)\",\n+            FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxNewTxSize)), FormatMoney(nodeIncrementalRelayFee.GetFee(maxNewTxSize))));\n+        return Result::INVALID_PARAMETER;\n+    }\n+    CAmount requiredFee = GetRequiredFee(*wallet, maxNewTxSize);\n+    if (total_fee < requiredFee) {\n+        errors.push_back(strprintf(\"Insufficient totalFee (cannot be less than required fee %s)\",\n+            FormatMoney(requiredFee)));\n+        return Result::INVALID_PARAMETER;\n     }\n+    new_fee = total_fee;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271404078",
      "id" : 271404078,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTQwNDA3OA==",
      "original_commit_id" : "8e9027bd9864c8a2c0be314bd1f799b9ed8c4085",
      "original_position" : 53,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 221776517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271404078",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271404360"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271404360"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: please align with open-parens.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-02T16:59:29Z",
      "diff_hunk" : "@@ -210,6 +195,110 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                         CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271404360",
      "id" : 271404360,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTQwNDM2MA==",
      "original_commit_id" : "8e9027bd9864c8a2c0be314bd1f799b9ed8c4085",
      "original_position" : 67,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 221776517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271404360",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271406219"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271406219"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this line should go below the comment below, since it's logically linked to the relay fee, not the feerate of the tx.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-02T17:04:30Z",
      "diff_hunk" : "@@ -210,6 +195,110 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                         CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {\n+            CRecipient recipient = {output.scriptPubKey, output.nValue, false};\n+            recipients.push_back(recipient);\n+        } else {\n+            CTxDestination change_dest;\n+            ExtractDestination(output.scriptPubKey, change_dest);\n+            new_coin_control.destChange = change_dest;\n+        }\n+    }\n+\n+    // Old transaction stuff\n+    // return old fee first\n+    old_fee = wtx.GetDebit(ISMINE_SPENDABLE) - wtx.tx->GetValueOut();\n+    int64_t txSize = GetVirtualTransactionSize(*(wtx.tx));\n+    // Feerate of thing we are bumping\n+    CFeeRate old_feerate(old_fee, txSize);\n+    CFeeRate nodeIncrementalRelayFee = wallet->chain().relayIncrementalFee();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271406219",
      "id" : 271406219,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTQwNjIxOQ==",
      "original_commit_id" : "8e9027bd9864c8a2c0be314bd1f799b9ed8c4085",
      "original_position" : 106,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 221776517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271406219",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271408222"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271408222"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason for changing this from using `nullptr` as the `feeCalc` argument? Instantiating the unused variable `fee_calc` seems unnecessary and confusing.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-02T17:09:55Z",
      "diff_hunk" : "@@ -210,6 +195,110 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                         CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {\n+            CRecipient recipient = {output.scriptPubKey, output.nValue, false};\n+            recipients.push_back(recipient);\n+        } else {\n+            CTxDestination change_dest;\n+            ExtractDestination(output.scriptPubKey, change_dest);\n+            new_coin_control.destChange = change_dest;\n+        }\n+    }\n+\n+    // Old transaction stuff\n+    // return old fee first\n+    old_fee = wtx.GetDebit(ISMINE_SPENDABLE) - wtx.tx->GetValueOut();\n+    int64_t txSize = GetVirtualTransactionSize(*(wtx.tx));\n+    // Feerate of thing we are bumping\n+    CFeeRate old_feerate(old_fee, txSize);\n+    CFeeRate nodeIncrementalRelayFee = wallet->chain().relayIncrementalFee();\n+\n+    // The wallet uses a conservative WALLET_INCREMENTAL_RELAY_FEE value to\n+    // future proof against changes to network wide policy for incremental relay\n+    // fee that our node may not be aware of.\n+    CFeeRate walletIncrementalRelayFee = CFeeRate(WALLET_INCREMENTAL_RELAY_FEE);\n+    if (nodeIncrementalRelayFee > walletIncrementalRelayFee) {\n+        walletIncrementalRelayFee = nodeIncrementalRelayFee;\n+    }\n+\n+    // Compute required fee rate / total fee to hit\n+    // We must be >= to this rate, and since tx will be as large or larger we should pass bip125 total fee check\n+    CFeeRate min_new_feerate(old_feerate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK());\n+\n+    // Feerate calculated by GetMinimumFeeRate may not actually hit bip125 requirements\n+    // so pick the larger of the two\n+    FeeCalculation fee_calc;\n+    CFeeRate block_feerate(GetMinimumFeeRate(*wallet, new_coin_control, &fee_calc));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271408222",
      "id" : 271408222,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTQwODIyMg==",
      "original_commit_id" : "8e9027bd9864c8a2c0be314bd1f799b9ed8c4085",
      "original_position" : 123,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 221776517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271408222",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271411570"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271411570"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`AvailableCoins()` could be refactored to not take an `nMinDepth` argument now that coin control has a `m_min_depth` member. Could be done in a follow-up PR.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-02T17:18:25Z",
      "diff_hunk" : "@@ -2815,7 +2815,7 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n         LOCK(cs_wallet);\n         {\n             std::vector<COutput> vAvailableCoins;\n-            AvailableCoins(*locked_chain, vAvailableCoins, true, &coin_control);\n+            AvailableCoins(*locked_chain, vAvailableCoins, true, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0, coin_control.m_min_depth);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271411570",
      "id" : 271411570,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTQxMTU3MA==",
      "original_commit_id" : "8e9027bd9864c8a2c0be314bd1f799b9ed8c4085",
      "original_position" : 5,
      "path" : "src/wallet/wallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 221776517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271411570",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271751778"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271751778"
         }
      },
      "author_association" : "MEMBER",
      "body" : "as a larger discussion(for another time), what should be in CCoinControl and what shouldn't be? It's nice to have a compact struct that describes the intent of each payment, including all known constraints by the caller.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-03T13:49:31Z",
      "diff_hunk" : "@@ -2815,7 +2815,7 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n         LOCK(cs_wallet);\n         {\n             std::vector<COutput> vAvailableCoins;\n-            AvailableCoins(*locked_chain, vAvailableCoins, true, &coin_control);\n+            AvailableCoins(*locked_chain, vAvailableCoins, true, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0, coin_control.m_min_depth);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271751778",
      "id" : 271751778,
      "in_reply_to_id" : 271411570,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTc1MTc3OA==",
      "original_commit_id" : "8e9027bd9864c8a2c0be314bd1f799b9ed8c4085",
      "original_position" : 5,
      "path" : "src/wallet/wallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 222221203,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271751778",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271751926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271751926"
         }
      },
      "author_association" : "MEMBER",
      "body" : "is there a style guide entry for this? I don't really know the convention.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-03T13:49:54Z",
      "diff_hunk" : "@@ -210,6 +195,110 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                         CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271751926",
      "id" : 271751926,
      "in_reply_to_id" : 271404360,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTc1MTkyNg==",
      "original_commit_id" : "8e9027bd9864c8a2c0be314bd1f799b9ed8c4085",
      "original_position" : 67,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 222221433,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271751926",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery comments addressed",
      "created_at" : "2019-04-03T13:53:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-479499282",
      "id" : 479499282,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTQ5OTI4Mg==",
      "updated_at" : "2019-04-03T13:53:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479499282",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271758308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271758308"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No style guide entry I don't think. I just saw that the old function had aligned arguments, and when you copied it and changed the length of the function name it unaligned it.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-03T14:03:12Z",
      "diff_hunk" : "@@ -210,6 +195,110 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                         CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271758308",
      "id" : 271758308,
      "in_reply_to_id" : 271404360,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTc1ODMwOA==",
      "original_commit_id" : "8e9027bd9864c8a2c0be314bd1f799b9ed8c4085",
      "original_position" : 67,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 222229950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271758308",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271956393"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271956393"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I haven't been able to dig into this fully, but do you need to call `CReserveKey::KeepKey()` on this reserve key to remove it from the key pool after using it?",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-03T22:25:13Z",
      "diff_hunk" : "@@ -210,6 +194,109 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                                 CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {\n+            CRecipient recipient = {output.scriptPubKey, output.nValue, false};\n+            recipients.push_back(recipient);\n+        } else {\n+            CTxDestination change_dest;\n+            ExtractDestination(output.scriptPubKey, change_dest);\n+            new_coin_control.destChange = change_dest;\n+        }\n+    }\n+\n+    // Old transaction stuff\n+    // return old fee first\n+    old_fee = wtx.GetDebit(ISMINE_SPENDABLE) - wtx.tx->GetValueOut();\n+    int64_t txSize = GetVirtualTransactionSize(*(wtx.tx));\n+    // Feerate of thing we are bumping\n+    CFeeRate old_feerate(old_fee, txSize);\n+\n+    // The wallet uses a conservative WALLET_INCREMENTAL_RELAY_FEE value to\n+    // future proof against changes to network wide policy for incremental relay\n+    // fee that our node may not be aware of.\n+    CFeeRate nodeIncrementalRelayFee = wallet->chain().relayIncrementalFee();\n+    CFeeRate walletIncrementalRelayFee = CFeeRate(WALLET_INCREMENTAL_RELAY_FEE);\n+    if (nodeIncrementalRelayFee > walletIncrementalRelayFee) {\n+        walletIncrementalRelayFee = nodeIncrementalRelayFee;\n+    }\n+\n+    // Compute required fee rate / total fee to hit\n+    // We must be >= to this rate, and since tx will be as large or larger we should pass bip125 total fee check\n+    CFeeRate min_new_feerate(old_feerate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK());\n+\n+    // Feerate calculated by GetMinimumFeeRate may not actually hit bip125 requirements\n+    // so pick the larger of the two\n+    CFeeRate block_feerate(GetMinimumFeeRate(*wallet, new_coin_control, /* feeCalc */ nullptr));\n+    if (block_feerate.GetFeePerK() > min_new_feerate.GetFeePerK()) {\n+        min_new_feerate = block_feerate;\n+    }\n+    // Finally, set required feerate.\n+    new_coin_control.m_feerate = min_new_feerate;\n+\n+    // Fill in required inputs we are double-spending(all of them)\n+    // N.B.: bip125 doesn't require all the inputs in the replaced transaction to be\n+    // used in the replacement transaction, but it's very important for wallets to make\n+    // sure that happens. If not, it would be possible to bump a transaction A twice to\n+    // A2 and A3 where A2 and A3 don't conflict (or alternatively bump A to A2 and A2\n+    // to A3 where A and A3 don't conflict). If both later get confirmed then the sender\n+    // has accidentally double paid.\n+    for (const auto& inputs : wtx.tx->vin) {\n+        new_coin_control.Select(COutPoint(inputs.prevout));\n+    }\n+    new_coin_control.fAllowOtherInputs = true;\n+\n+    // We cannot source new unconfirmed inputs(bip125 rule 2)\n+    new_coin_control.m_min_depth = 1;\n+\n+    CTransactionRef tx_new = MakeTransactionRef();\n+    CReserveKey reservekey(wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r271956393",
      "id" : 271956393,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTk1NjM5Mw==",
      "original_commit_id" : "e9f1a9f71bd5cfe6857198919e853e5ad8d05584",
      "original_position" : 173,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 170,
      "pull_request_review_id" : 222483339,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271956393",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r272314642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272314642"
         }
      },
      "author_association" : "MEMBER",
      "body" : "good catch, fixed. ",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-04T18:41:00Z",
      "diff_hunk" : "@@ -210,6 +194,109 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                                 CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {\n+            CRecipient recipient = {output.scriptPubKey, output.nValue, false};\n+            recipients.push_back(recipient);\n+        } else {\n+            CTxDestination change_dest;\n+            ExtractDestination(output.scriptPubKey, change_dest);\n+            new_coin_control.destChange = change_dest;\n+        }\n+    }\n+\n+    // Old transaction stuff\n+    // return old fee first\n+    old_fee = wtx.GetDebit(ISMINE_SPENDABLE) - wtx.tx->GetValueOut();\n+    int64_t txSize = GetVirtualTransactionSize(*(wtx.tx));\n+    // Feerate of thing we are bumping\n+    CFeeRate old_feerate(old_fee, txSize);\n+\n+    // The wallet uses a conservative WALLET_INCREMENTAL_RELAY_FEE value to\n+    // future proof against changes to network wide policy for incremental relay\n+    // fee that our node may not be aware of.\n+    CFeeRate nodeIncrementalRelayFee = wallet->chain().relayIncrementalFee();\n+    CFeeRate walletIncrementalRelayFee = CFeeRate(WALLET_INCREMENTAL_RELAY_FEE);\n+    if (nodeIncrementalRelayFee > walletIncrementalRelayFee) {\n+        walletIncrementalRelayFee = nodeIncrementalRelayFee;\n+    }\n+\n+    // Compute required fee rate / total fee to hit\n+    // We must be >= to this rate, and since tx will be as large or larger we should pass bip125 total fee check\n+    CFeeRate min_new_feerate(old_feerate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK());\n+\n+    // Feerate calculated by GetMinimumFeeRate may not actually hit bip125 requirements\n+    // so pick the larger of the two\n+    CFeeRate block_feerate(GetMinimumFeeRate(*wallet, new_coin_control, /* feeCalc */ nullptr));\n+    if (block_feerate.GetFeePerK() > min_new_feerate.GetFeePerK()) {\n+        min_new_feerate = block_feerate;\n+    }\n+    // Finally, set required feerate.\n+    new_coin_control.m_feerate = min_new_feerate;\n+\n+    // Fill in required inputs we are double-spending(all of them)\n+    // N.B.: bip125 doesn't require all the inputs in the replaced transaction to be\n+    // used in the replacement transaction, but it's very important for wallets to make\n+    // sure that happens. If not, it would be possible to bump a transaction A twice to\n+    // A2 and A3 where A2 and A3 don't conflict (or alternatively bump A to A2 and A2\n+    // to A3 where A and A3 don't conflict). If both later get confirmed then the sender\n+    // has accidentally double paid.\n+    for (const auto& inputs : wtx.tx->vin) {\n+        new_coin_control.Select(COutPoint(inputs.prevout));\n+    }\n+    new_coin_control.fAllowOtherInputs = true;\n+\n+    // We cannot source new unconfirmed inputs(bip125 rule 2)\n+    new_coin_control.m_min_depth = 1;\n+\n+    CTransactionRef tx_new = MakeTransactionRef();\n+    CReserveKey reservekey(wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r272314642",
      "id" : 272314642,
      "in_reply_to_id" : 271956393,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjMxNDY0Mg==",
      "original_commit_id" : "e9f1a9f71bd5cfe6857198919e853e5ad8d05584",
      "original_position" : 173,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 170,
      "pull_request_review_id" : 222937566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/272314642",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273180654"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273180654"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I know this code is mostly inherited from the existing `feebumper::CreateTransaction()`, but I think it can be made a lot more readable. `CFeeRate` overrides the `<` operator (so `std::max` can be used) and the `+=` operator. Do you think the following code is clearer:\r\n\r\n```c++\r\n    // Get the fee rate of the original transaction. This is calculated from\r\n    // the tx fee/vsize, so it may have been rounded down. Add 1 satoshi to the\r\n    // result.\r\n    old_fee = wtx.GetDebit(ISMINE_SPENDABLE) - wtx.tx->GetValueOut();\r\n    int64_t txSize = GetVirtualTransactionSize(*(wtx.tx));\r\n    CFeeRate feerate(old_fee, txSize);\r\n    feerate += CFeeRate(1);\r\n\r\n    // The node has a configurable incremental relay fee. Increment the fee by\r\n    // the minimum of that and the wallet's conservative\r\n    // WALLET_INCREMENTAL_RELAY_FEE value to future proof against changes to\r\n    // network wide policy for incremental relay fee that our node may not be\r\n    // aware of. This ensures we're over the over the required relay fee rate\r\n    // (BIP 125 rule 4).  The replacement tx will be at least as large as the\r\n    // original tx, so the total fee will be greater (BIP 125 rule 3)\r\n    CFeeRate node_incremental_relay_fee = wallet->chain().relayIncrementalFee();\r\n    CFeeRate wallet_incremental_relay_fee = CFeeRate(WALLET_INCREMENTAL_RELAY_FEE);\r\n    feerate += std::max(node_incremental_relay_fee, wallet_incremental_relay_fee);\r\n\r\n    // Fee rate must also be at least the wallet's GetMinimumFeeRate\r\n    CFeeRate min_feerate(GetMinimumFeeRate(*wallet, new_coin_control, /* feeCalc */ nullptr));\r\n\r\n    // Set the required fee rate for the replacement transaction in coin control.\r\n    new_coin_control.m_feerate = std::max(feerate, min_feerate);\r\n```\r\n\r\n(I also re-added the comment about adding 1 to the fee rate in case the calculated old fee rate was rounded down).",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T18:26:43Z",
      "diff_hunk" : "@@ -210,6 +194,112 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                                 CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {\n+            CRecipient recipient = {output.scriptPubKey, output.nValue, false};\n+            recipients.push_back(recipient);\n+        } else {\n+            CTxDestination change_dest;\n+            ExtractDestination(output.scriptPubKey, change_dest);\n+            new_coin_control.destChange = change_dest;\n+        }\n+    }\n+\n+    // Old transaction stuff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273180654",
      "id" : 273180654,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzE4MDY1NA==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 128,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273180654",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273180722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273180722"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This could be slightly more accurate if it said \"preserve a change destination if there is one\"",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T18:26:49Z",
      "diff_hunk" : "@@ -210,6 +194,112 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                                 CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273180722",
      "id" : 273180722,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzE4MDcyMg==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 115,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273180722",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273186642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273186642"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: prefer using named arguments when using RPCs:\r\n- makes it clear what the argument is (with positional arguments I have to guess what `True` refers to here)\r\n- you don't have to pass the empty strings for the unused arguments.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T18:41:53Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273186642",
      "id" : 273186642,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzE4NjY0Mg==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 28,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273186642",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273187375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273187375"
         }
      },
      "author_association" : "MEMBER",
      "body" : "micronit: prefer defining these subtest methods in the order they're called in the `run_test()` method.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T18:43:40Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273187375",
      "id" : 273187375,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzE4NzM3NQ==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 24,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273187375",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273190655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273190655"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Redundant line. `original_input_set` doesn't change in the loop and has already been tested.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T18:52:32Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    def input_set(tx):\n+        tx_struct = FromHex(CTransaction(), tx)\n+        input_set = set()\n+        for tx_in in tx_struct.vin:\n+            input_set.add(tx_in.prevout)\n+        return input_set\n+\n+    # Make sure additional inputs exist\n+    rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    original_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+    assert_equal(len(original_input_set), 1)\n+    original_item = list(original_input_set)[0]\n+    # Keep bumping until we out-spend change output\n+    orig_fee = 0\n+    while orig_fee < Decimal(\"0.0005\"):\n+        new_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+        new_item = list(new_input_set)[0]\n+        assert_equal(len(original_input_set), 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273190655",
      "id" : 273190655,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzE5MDY1NQ==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 50,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273190655",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273190919"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273190919"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`assert` is not a function. Remove parens",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T18:53:12Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    def input_set(tx):\n+        tx_struct = FromHex(CTransaction(), tx)\n+        input_set = set()\n+        for tx_in in tx_struct.vin:\n+            input_set.add(tx_in.prevout)\n+        return input_set\n+\n+    # Make sure additional inputs exist\n+    rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    original_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+    assert_equal(len(original_input_set), 1)\n+    original_item = list(original_input_set)[0]\n+    # Keep bumping until we out-spend change output\n+    orig_fee = 0\n+    while orig_fee < Decimal(\"0.0005\"):\n+        new_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+        new_item = list(new_input_set)[0]\n+        assert_equal(len(original_input_set), 1)\n+        assert_equal(original_item.hash, new_item.hash)\n+        assert_equal(original_item.n, new_item.n)\n+        rbfid_new_det = rbf_node.bumpfee(rbfid)\n+        rbfid_new = rbfid_new_det[\"txid\"]\n+        raw_pool = rbf_node.getrawmempool()\n+        assert(rbfid not in raw_pool)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273190919",
      "id" : 273190919,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzE5MDkxOQ==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 56,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273190919",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273191204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273191204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What does `det` mean here?",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T18:53:59Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    def input_set(tx):\n+        tx_struct = FromHex(CTransaction(), tx)\n+        input_set = set()\n+        for tx_in in tx_struct.vin:\n+            input_set.add(tx_in.prevout)\n+        return input_set\n+\n+    # Make sure additional inputs exist\n+    rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    original_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+    assert_equal(len(original_input_set), 1)\n+    original_item = list(original_input_set)[0]\n+    # Keep bumping until we out-spend change output\n+    orig_fee = 0\n+    while orig_fee < Decimal(\"0.0005\"):\n+        new_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+        new_item = list(new_input_set)[0]\n+        assert_equal(len(original_input_set), 1)\n+        assert_equal(original_item.hash, new_item.hash)\n+        assert_equal(original_item.n, new_item.n)\n+        rbfid_new_det = rbf_node.bumpfee(rbfid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273191204",
      "id" : 273191204,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzE5MTIwNA==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 53,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273191204",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273192108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273192108"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not use the verbose output of `getrawtransaction` and get the inputs directly instead of deserializing the hex tx?",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T18:56:25Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    def input_set(tx):\n+        tx_struct = FromHex(CTransaction(), tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273192108",
      "id" : 273192108,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzE5MjEwOA==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 33,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273192108",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273192482"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273192482"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: This variable gets updated, so I think `tx_fee` would be a more appropriate name.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T18:57:26Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    def input_set(tx):\n+        tx_struct = FromHex(CTransaction(), tx)\n+        input_set = set()\n+        for tx_in in tx_struct.vin:\n+            input_set.add(tx_in.prevout)\n+        return input_set\n+\n+    # Make sure additional inputs exist\n+    rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    original_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+    assert_equal(len(original_input_set), 1)\n+    original_item = list(original_input_set)[0]\n+    # Keep bumping until we out-spend change output\n+    orig_fee = 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273192482",
      "id" : 273192482,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzE5MjQ4Mg==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 46,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273192482",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273192616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273192616"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: `item` is vague here. Why not `txin`?",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T18:57:50Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    def input_set(tx):\n+        tx_struct = FromHex(CTransaction(), tx)\n+        input_set = set()\n+        for tx_in in tx_struct.vin:\n+            input_set.add(tx_in.prevout)\n+        return input_set\n+\n+    # Make sure additional inputs exist\n+    rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    original_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+    assert_equal(len(original_input_set), 1)\n+    original_item = list(original_input_set)[0]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273192616",
      "id" : 273192616,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzE5MjYxNg==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 44,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273192616",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273194972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273194972"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why a set rather than a list?",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T19:04:28Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    def input_set(tx):\n+        tx_struct = FromHex(CTransaction(), tx)\n+        input_set = set()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273194972",
      "id" : 273194972,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzE5NDk3Mg==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 34,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273194972",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273196250"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273196250"
         }
      },
      "author_association" : "MEMBER",
      "body" : "More concise:\r\n\r\n```python\r\n    assert [txin for txin in final_input_set\r\n            if txin.hash == original_item.hash\r\n            and txin.n == original_item.n]\r\n```",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T19:08:10Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    def input_set(tx):\n+        tx_struct = FromHex(CTransaction(), tx)\n+        input_set = set()\n+        for tx_in in tx_struct.vin:\n+            input_set.add(tx_in.prevout)\n+        return input_set\n+\n+    # Make sure additional inputs exist\n+    rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    original_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+    assert_equal(len(original_input_set), 1)\n+    original_item = list(original_input_set)[0]\n+    # Keep bumping until we out-spend change output\n+    orig_fee = 0\n+    while orig_fee < Decimal(\"0.0005\"):\n+        new_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+        new_item = list(new_input_set)[0]\n+        assert_equal(len(original_input_set), 1)\n+        assert_equal(original_item.hash, new_item.hash)\n+        assert_equal(original_item.n, new_item.n)\n+        rbfid_new_det = rbf_node.bumpfee(rbfid)\n+        rbfid_new = rbfid_new_det[\"txid\"]\n+        raw_pool = rbf_node.getrawmempool()\n+        assert(rbfid not in raw_pool)\n+        assert(rbfid_new in raw_pool)\n+        rbfid = rbfid_new\n+        orig_fee = rbfid_new_det[\"origfee\"]\n+\n+    # input(s) have been added\n+    final_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+    assert_greater_than(len(final_input_set), 1)\n+    # Original input is in final set\n+    found_original = False",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273196250",
      "id" : 273196250,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzE5NjI1MA==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 65,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273196250",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273221315"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273221315"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a shame. At the moment I think the subtests can be run in any order. It'd be nice to keep that property (so, for example, anyone adding new subtests doesn't need to worry about state carried over from previous tests). Is it possible to rewrite your subtests in such a way to only use the existing outputs and not generate new blocks? For the `test_no_more_inputs_fails()` test you could lock all outputs and then unlock them, for example.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T20:19:45Z",
      "diff_hunk" : "@@ -73,6 +73,10 @@ def run_test(self):\n         test_unconfirmed_not_spendable(rbf_node, rbf_node_address)\n         test_bumpfee_metadata(rbf_node, dest_address)\n         test_locked_wallet_fails(rbf_node, dest_address)\n+        test_change_script_match(rbf_node, dest_address)\n+        # These tests wipe out a number of utxos that are expected in other tests",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273221315",
      "id" : 273221315,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzIyMTMxNQ==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 14,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : 5,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273221315",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273230985"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273230985"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this could do with a doc string explaining what this subtest is testing.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T20:45:02Z",
      "diff_hunk" : "@@ -272,19 +325,43 @@ def test_locked_wallet_fails(rbf_node, dest_address):\n     rbf_node.walletlock()\n     assert_raises_rpc_error(-13, \"Please enter the wallet passphrase with walletpassphrase first.\",\n                             rbf_node.bumpfee, rbfid)\n+    rbf_node.walletpassphrase(WALLET_PASSPHRASE, WALLET_PASSPHRASE_TIMEOUT)\n \n-\n-def spend_one_input(node, dest_address):\n+def test_change_script_match(rbf_node, dest_address):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273230985",
      "id" : 273230985,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzIzMDk4NQ==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 84,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : 58,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273230985",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273231524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273231524"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A bit more concise:\r\n\r\n```python\r\ndef test_change_script_match(rbf_node, dest_address):\r\n    \"\"\"Test that the same change addresses is used for the replacement transaction when possible.\"\"\"\r\n    def get_change_address(tx):\r\n        tx_details = rbf_node.getrawtransaction(tx, 1)\r\n        txout_addresses = [txout['scriptPubKey']['addresses'][0] for txout in tx_details[\"vout\"]]\r\n        return [address for address in txout_addresses if rbf_node.getaddressinfo(address)[\"ischange\"]]\r\n\r\n    # Check that there is only one change output\r\n    rbfid = spend_one_input(rbf_node, dest_address)\r\n    change_addresses = get_change_address(rbfid)\r\n    assert_equal(len(change_addresses), 1)\r\n\r\n    # Now find that address in each subsequent tx, and no other change\r\n    bumped_total_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 2000})\r\n    assert_equal(change_addresses, get_change_address(bumped_total_tx['txid']))\r\n    bumped_rate_tx = rbf_node.bumpfee(bumped_total_tx[\"txid\"])\r\n    assert_equal(change_addresses, get_change_address(bumped_rate_tx['txid']))\r\n```",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-08T20:46:24Z",
      "diff_hunk" : "@@ -272,19 +325,43 @@ def test_locked_wallet_fails(rbf_node, dest_address):\n     rbf_node.walletlock()\n     assert_raises_rpc_error(-13, \"Please enter the wallet passphrase with walletpassphrase first.\",\n                             rbf_node.bumpfee, rbfid)\n+    rbf_node.walletpassphrase(WALLET_PASSPHRASE, WALLET_PASSPHRASE_TIMEOUT)\n \n-\n-def spend_one_input(node, dest_address):\n+def test_change_script_match(rbf_node, dest_address):\n+    rbfid = spend_one_input(rbf_node, dest_address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r273231524",
      "id" : 273231524,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzIzMTUyNA==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 85,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 224013180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273231524",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I left a bunch of nits, mostly on Python code style, which you should feel free to ignore.\r\n\r\nI think functionally this is fine. My main concern is the introduction of a lot of duplicate code between `CreateTotalBumpTransaction()` and `CreateRateBumpTransaction()`, but I don't think that should prevent merge.",
      "created_at" : "2019-04-08T20:50:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-481002887",
      "id" : 481002887,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTAwMjg4Nw==",
      "updated_at" : "2019-04-08T20:50:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481002887",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274118509"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274118509"
         }
      },
      "author_association" : "MEMBER",
      "body" : "details :) ill expand",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-10T19:20:25Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    def input_set(tx):\n+        tx_struct = FromHex(CTransaction(), tx)\n+        input_set = set()\n+        for tx_in in tx_struct.vin:\n+            input_set.add(tx_in.prevout)\n+        return input_set\n+\n+    # Make sure additional inputs exist\n+    rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    original_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+    assert_equal(len(original_input_set), 1)\n+    original_item = list(original_input_set)[0]\n+    # Keep bumping until we out-spend change output\n+    orig_fee = 0\n+    while orig_fee < Decimal(\"0.0005\"):\n+        new_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+        new_item = list(new_input_set)[0]\n+        assert_equal(len(original_input_set), 1)\n+        assert_equal(original_item.hash, new_item.hash)\n+        assert_equal(original_item.n, new_item.n)\n+        rbfid_new_det = rbf_node.bumpfee(rbfid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274118509",
      "id" : 274118509,
      "in_reply_to_id" : 273191204,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDExODUwOQ==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 53,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 225168391,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274118509",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> My main concern is the introduction of a lot of duplicate code between CreateTotalBumpTransaction() and CreateRateBumpTransaction()\r\n\r\nIf I have proper concept ACKs my next step would likely be removing the total bump altogether, which will mostly involve re-jiggering test coverage.",
      "created_at" : "2019-04-10T19:22:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-481827790",
      "id" : 481827790,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTgyNzc5MA==",
      "updated_at" : "2019-04-10T19:22:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481827790",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274121693"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274121693"
         }
      },
      "author_association" : "MEMBER",
      "body" : "good suggestions, will use",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-10T19:29:34Z",
      "diff_hunk" : "@@ -210,6 +194,112 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                                 CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {\n+            CRecipient recipient = {output.scriptPubKey, output.nValue, false};\n+            recipients.push_back(recipient);\n+        } else {\n+            CTxDestination change_dest;\n+            ExtractDestination(output.scriptPubKey, change_dest);\n+            new_coin_control.destChange = change_dest;\n+        }\n+    }\n+\n+    // Old transaction stuff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274121693",
      "id" : 274121693,
      "in_reply_to_id" : 273180654,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDEyMTY5Mw==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 128,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 225172458,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274121693",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274121751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274121751"
         }
      },
      "author_association" : "MEMBER",
      "body" : "sure",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-10T19:29:43Z",
      "diff_hunk" : "@@ -210,6 +194,112 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                                 CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274121751",
      "id" : 274121751,
      "in_reply_to_id" : 273180722,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDEyMTc1MQ==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 115,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 225172529,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274121751",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274122185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274122185"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-10T19:30:48Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274122185",
      "id" : 274122185,
      "in_reply_to_id" : 273187375,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDEyMjE4NQ==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 24,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 225173038,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274122185",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274122467"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274122467"
         }
      },
      "author_association" : "MEMBER",
      "body" : "not immediately apparent to the reader(me) imo. leaving this in.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-10T19:31:37Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    def input_set(tx):\n+        tx_struct = FromHex(CTransaction(), tx)\n+        input_set = set()\n+        for tx_in in tx_struct.vin:\n+            input_set.add(tx_in.prevout)\n+        return input_set\n+\n+    # Make sure additional inputs exist\n+    rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    original_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+    assert_equal(len(original_input_set), 1)\n+    original_item = list(original_input_set)[0]\n+    # Keep bumping until we out-spend change output\n+    orig_fee = 0\n+    while orig_fee < Decimal(\"0.0005\"):\n+        new_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+        new_item = list(new_input_set)[0]\n+        assert_equal(len(original_input_set), 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274122467",
      "id" : 274122467,
      "in_reply_to_id" : 273190655,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDEyMjQ2Nw==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 50,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 225173414,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274122467",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274124591"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274124591"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think I had a reason but can't recall, will adapt",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-10T19:37:44Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    def input_set(tx):\n+        tx_struct = FromHex(CTransaction(), tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274124591",
      "id" : 274124591,
      "in_reply_to_id" : 273192108,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDEyNDU5MQ==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 33,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 225176206,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274124591",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274124642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274124642"
         }
      },
      "author_association" : "MEMBER",
      "body" : "sure",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-10T19:37:53Z",
      "diff_hunk" : "@@ -173,6 +177,55 @@ def test_small_output_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n+def test_no_more_inputs_fails(rbf_node, dest_address):\n+    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    rbf_node.generatetoaddress(1, dest_address)\n+    # spend all funds, no change output\n+    rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n+\n+def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n+    def input_set(tx):\n+        tx_struct = FromHex(CTransaction(), tx)\n+        input_set = set()\n+        for tx_in in tx_struct.vin:\n+            input_set.add(tx_in.prevout)\n+        return input_set\n+\n+    # Make sure additional inputs exist\n+    rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    original_input_set = input_set(rbf_node.getrawtransaction(rbfid))\n+    assert_equal(len(original_input_set), 1)\n+    original_item = list(original_input_set)[0]\n+    # Keep bumping until we out-spend change output\n+    orig_fee = 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274124642",
      "id" : 274124642,
      "in_reply_to_id" : 273192482,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDEyNDY0Mg==",
      "original_commit_id" : "51643056558fcc104063a46f112f9efee792dc51",
      "original_position" : 46,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 225176274,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274124642",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed most comments with more concise/clear code and tests.",
      "created_at" : "2019-04-10T20:01:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-481840629",
      "id" : 481840629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTg0MDYyOQ==",
      "updated_at" : "2019-04-10T20:01:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481840629",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274183524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274183524"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Remove this new import of `FromHex` to satisfy the linter.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-10T22:07:50Z",
      "diff_hunk" : "@@ -17,7 +17,7 @@\n import io\n \n from test_framework.blocktools import add_witness_commitment, create_block, create_coinbase, send_to_witness\n-from test_framework.messages import BIP125_SEQUENCE_NUMBER, CTransaction\n+from test_framework.messages import BIP125_SEQUENCE_NUMBER, CTransaction, FromHex",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274183524",
      "id" : 274183524,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDE4MzUyNA==",
      "original_commit_id" : "b6dcb6a2141160c2c6ca015478cc74c9d803ed83",
      "original_position" : 5,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 225243287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274183524",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274187876"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274187876"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-10T22:25:33Z",
      "diff_hunk" : "@@ -17,7 +17,7 @@\n import io\n \n from test_framework.blocktools import add_witness_commitment, create_block, create_coinbase, send_to_witness\n-from test_framework.messages import BIP125_SEQUENCE_NUMBER, CTransaction\n+from test_framework.messages import BIP125_SEQUENCE_NUMBER, CTransaction, FromHex",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274187876",
      "id" : 274187876,
      "in_reply_to_id" : 274183524,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDE4Nzg3Ng==",
      "original_commit_id" : "b6dcb6a2141160c2c6ca015478cc74c9d803ed83",
      "original_position" : 5,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 225248700,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T11:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274187876",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't have as much time as I'd like to perfect my tests sadly, thanks for the robust feedback. ",
      "created_at" : "2019-04-10T22:26:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-481889540",
      "id" : 481889540,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTg4OTU0MA==",
      "updated_at" : "2019-04-10T22:26:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481889540",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 184f8785f710d58d9ef82e611591c9cbff5ab89d\r\n\r\n@ryanofsky - are you able to reACK? Should be minor changes since your last ACK.\r\n\r\n@Sjors @promag @stevenroose - you've all concept ACKed this. Are you able to review? Code changes are very clear so this should be a fairly easy review.",
      "created_at" : "2019-04-11T14:31:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-482139144",
      "id" : 482139144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MjEzOTE0NA==",
      "updated_at" : "2019-04-11T14:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482139144",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Someone can reply to this https://github.com/bitcoin/bitcoin/pull/15557#discussion_r267522514?",
      "created_at" : "2019-04-11T14:58:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-482150216",
      "id" : 482150216,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MjE1MDIxNg==",
      "updated_at" : "2019-04-11T14:58:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482150216",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274483048"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274483048"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's acceptable. I don't believe that Bitcoin Core wallet will produce transactions with more than one change output.\r\n\r\nEDIT: ... and if a user manually creates a transaction with more than one change output, I think it's fine for bumpfee to aggregate them into a single change output (since there's no way for the user to specify which change output should have the fee delta removed).",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-11T15:27:32Z",
      "diff_hunk" : "@@ -208,6 +193,103 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                         CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {\n+            CRecipient recipient = {output.scriptPubKey, output.nValue, false};\n+            recipients.push_back(recipient);\n+        } else {\n+            CTxDestination change_dest;\n+            ExtractDestination(output.scriptPubKey, change_dest);\n+            new_coin_control.destChange = change_dest;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274483048",
      "id" : 274483048,
      "in_reply_to_id" : 267522514,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDQ4MzA0OA==",
      "original_commit_id" : "06155d16cbc3f96db26ecb22a35153cb87eec6b0",
      "original_position" : 96,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 124,
      "pull_request_review_id" : 225611479,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T15:30:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274483048",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274487083"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274487083"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r272314642\r\n\r\n> good catch, fixed.\r\n\r\nThis was a pretty serious bug right? At least a privacy leak? Or am I mistaken?\r\n\r\nAssuming this was serious, it seems like we should do something to prevent this happening in the future, like asserting in the `CReserveKey` destructor that either KeepKey or Reservekey was previously called.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-11T15:35:33Z",
      "diff_hunk" : "@@ -210,6 +194,109 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                                 CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {\n+            CRecipient recipient = {output.scriptPubKey, output.nValue, false};\n+            recipients.push_back(recipient);\n+        } else {\n+            CTxDestination change_dest;\n+            ExtractDestination(output.scriptPubKey, change_dest);\n+            new_coin_control.destChange = change_dest;\n+        }\n+    }\n+\n+    // Old transaction stuff\n+    // return old fee first\n+    old_fee = wtx.GetDebit(ISMINE_SPENDABLE) - wtx.tx->GetValueOut();\n+    int64_t txSize = GetVirtualTransactionSize(*(wtx.tx));\n+    // Feerate of thing we are bumping\n+    CFeeRate old_feerate(old_fee, txSize);\n+\n+    // The wallet uses a conservative WALLET_INCREMENTAL_RELAY_FEE value to\n+    // future proof against changes to network wide policy for incremental relay\n+    // fee that our node may not be aware of.\n+    CFeeRate nodeIncrementalRelayFee = wallet->chain().relayIncrementalFee();\n+    CFeeRate walletIncrementalRelayFee = CFeeRate(WALLET_INCREMENTAL_RELAY_FEE);\n+    if (nodeIncrementalRelayFee > walletIncrementalRelayFee) {\n+        walletIncrementalRelayFee = nodeIncrementalRelayFee;\n+    }\n+\n+    // Compute required fee rate / total fee to hit\n+    // We must be >= to this rate, and since tx will be as large or larger we should pass bip125 total fee check\n+    CFeeRate min_new_feerate(old_feerate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK());\n+\n+    // Feerate calculated by GetMinimumFeeRate may not actually hit bip125 requirements\n+    // so pick the larger of the two\n+    CFeeRate block_feerate(GetMinimumFeeRate(*wallet, new_coin_control, /* feeCalc */ nullptr));\n+    if (block_feerate.GetFeePerK() > min_new_feerate.GetFeePerK()) {\n+        min_new_feerate = block_feerate;\n+    }\n+    // Finally, set required feerate.\n+    new_coin_control.m_feerate = min_new_feerate;\n+\n+    // Fill in required inputs we are double-spending(all of them)\n+    // N.B.: bip125 doesn't require all the inputs in the replaced transaction to be\n+    // used in the replacement transaction, but it's very important for wallets to make\n+    // sure that happens. If not, it would be possible to bump a transaction A twice to\n+    // A2 and A3 where A2 and A3 don't conflict (or alternatively bump A to A2 and A2\n+    // to A3 where A and A3 don't conflict). If both later get confirmed then the sender\n+    // has accidentally double paid.\n+    for (const auto& inputs : wtx.tx->vin) {\n+        new_coin_control.Select(COutPoint(inputs.prevout));\n+    }\n+    new_coin_control.fAllowOtherInputs = true;\n+\n+    // We cannot source new unconfirmed inputs(bip125 rule 2)\n+    new_coin_control.m_min_depth = 1;\n+\n+    CTransactionRef tx_new = MakeTransactionRef();\n+    CReserveKey reservekey(wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274487083",
      "id" : 274487083,
      "in_reply_to_id" : 271956393,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDQ4NzA4Mw==",
      "original_commit_id" : "e9f1a9f71bd5cfe6857198919e853e5ad8d05584",
      "original_position" : 173,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 170,
      "pull_request_review_id" : 225616510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T15:46:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274487083",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If you intentionally send to a raw change address it may but that's not\nreally an intended work flow.\n\nOn Thu, Apr 11, 2019, 11:30 AM John Newbery <notifications@github.com>\nwrote:\n\n> *@jnewbery* commented on this pull request.\n> ------------------------------\n>\n> In src/wallet/feebumper.cpp\n> <https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274483048>:\n>\n> > +\n> +    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n> +    if (result != Result::OK) {\n> +        return result;\n> +    }\n> +\n> +    // Fill in recipients(and preserve a change key)\n> +    std::vector<CRecipient> recipients;\n> +    for (const auto& output : wtx.tx->vout) {\n> +        if (!wallet->IsChange(output)) {\n> +            CRecipient recipient = {output.scriptPubKey, output.nValue, false};\n> +            recipients.push_back(recipient);\n> +        } else {\n> +            CTxDestination change_dest;\n> +            ExtractDestination(output.scriptPubKey, change_dest);\n> +            new_coin_control.destChange = change_dest;\n>\n> I think it's acceptable. I don't believe that Bitcoin Core wallet will\n> produce transactions with more than one change output.\n>\n> Ã¢ÂÂ\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274483048>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AFgC01LBorTrP3srT4XrUdUuXq0FVtekks5vf1UagaJpZM4bjzhN>\n> .\n>\n",
      "created_at" : "2019-04-11T15:37:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-482166159",
      "id" : 482166159,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MjE2NjE1OQ==",
      "updated_at" : "2019-04-11T15:37:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482166159",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274501295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274501295"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this would happen if you bumped the transaction, created a new change output, and then make another change output before the next block is seen. Otherwise the keypool-scanning we do would have taken care of it as soon as it's seen in a block.\r\n\r\nA more conservative change that doesn't involve asserting would be to replace the `ReturnKey` call in the destructor to `KeepKey`, the idea being it's ok to burn a couple keys accidentally rather than repeat a script.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-11T16:07:19Z",
      "diff_hunk" : "@@ -210,6 +194,109 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                                 CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {\n+            CRecipient recipient = {output.scriptPubKey, output.nValue, false};\n+            recipients.push_back(recipient);\n+        } else {\n+            CTxDestination change_dest;\n+            ExtractDestination(output.scriptPubKey, change_dest);\n+            new_coin_control.destChange = change_dest;\n+        }\n+    }\n+\n+    // Old transaction stuff\n+    // return old fee first\n+    old_fee = wtx.GetDebit(ISMINE_SPENDABLE) - wtx.tx->GetValueOut();\n+    int64_t txSize = GetVirtualTransactionSize(*(wtx.tx));\n+    // Feerate of thing we are bumping\n+    CFeeRate old_feerate(old_fee, txSize);\n+\n+    // The wallet uses a conservative WALLET_INCREMENTAL_RELAY_FEE value to\n+    // future proof against changes to network wide policy for incremental relay\n+    // fee that our node may not be aware of.\n+    CFeeRate nodeIncrementalRelayFee = wallet->chain().relayIncrementalFee();\n+    CFeeRate walletIncrementalRelayFee = CFeeRate(WALLET_INCREMENTAL_RELAY_FEE);\n+    if (nodeIncrementalRelayFee > walletIncrementalRelayFee) {\n+        walletIncrementalRelayFee = nodeIncrementalRelayFee;\n+    }\n+\n+    // Compute required fee rate / total fee to hit\n+    // We must be >= to this rate, and since tx will be as large or larger we should pass bip125 total fee check\n+    CFeeRate min_new_feerate(old_feerate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK());\n+\n+    // Feerate calculated by GetMinimumFeeRate may not actually hit bip125 requirements\n+    // so pick the larger of the two\n+    CFeeRate block_feerate(GetMinimumFeeRate(*wallet, new_coin_control, /* feeCalc */ nullptr));\n+    if (block_feerate.GetFeePerK() > min_new_feerate.GetFeePerK()) {\n+        min_new_feerate = block_feerate;\n+    }\n+    // Finally, set required feerate.\n+    new_coin_control.m_feerate = min_new_feerate;\n+\n+    // Fill in required inputs we are double-spending(all of them)\n+    // N.B.: bip125 doesn't require all the inputs in the replaced transaction to be\n+    // used in the replacement transaction, but it's very important for wallets to make\n+    // sure that happens. If not, it would be possible to bump a transaction A twice to\n+    // A2 and A3 where A2 and A3 don't conflict (or alternatively bump A to A2 and A2\n+    // to A3 where A and A3 don't conflict). If both later get confirmed then the sender\n+    // has accidentally double paid.\n+    for (const auto& inputs : wtx.tx->vin) {\n+        new_coin_control.Select(COutPoint(inputs.prevout));\n+    }\n+    new_coin_control.fAllowOtherInputs = true;\n+\n+    // We cannot source new unconfirmed inputs(bip125 rule 2)\n+    new_coin_control.m_min_depth = 1;\n+\n+    CTransactionRef tx_new = MakeTransactionRef();\n+    CReserveKey reservekey(wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274501295",
      "id" : 274501295,
      "in_reply_to_id" : 271956393,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDUwMTI5NQ==",
      "original_commit_id" : "e9f1a9f71bd5cfe6857198919e853e5ad8d05584",
      "original_position" : 173,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 170,
      "pull_request_review_id" : 225634647,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T16:07:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274501295",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274514853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274514853"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The worst possible outcome would have been reusing a keypool address for change in multiple transactions. It's a marginal privacy leak but not disastrous.\r\n\r\nThe whole `CReserveKey` `GetReservedKey()`-`ReturnKey()`-`KeepKey()` cycle seems pretty brittle to me, and I think should be refactored. I haven't figured out exactly how yet, but I have a PR here: #15777 that documents how it currently works.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-11T16:38:40Z",
      "diff_hunk" : "@@ -210,6 +194,109 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                                 CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {\n+            CRecipient recipient = {output.scriptPubKey, output.nValue, false};\n+            recipients.push_back(recipient);\n+        } else {\n+            CTxDestination change_dest;\n+            ExtractDestination(output.scriptPubKey, change_dest);\n+            new_coin_control.destChange = change_dest;\n+        }\n+    }\n+\n+    // Old transaction stuff\n+    // return old fee first\n+    old_fee = wtx.GetDebit(ISMINE_SPENDABLE) - wtx.tx->GetValueOut();\n+    int64_t txSize = GetVirtualTransactionSize(*(wtx.tx));\n+    // Feerate of thing we are bumping\n+    CFeeRate old_feerate(old_fee, txSize);\n+\n+    // The wallet uses a conservative WALLET_INCREMENTAL_RELAY_FEE value to\n+    // future proof against changes to network wide policy for incremental relay\n+    // fee that our node may not be aware of.\n+    CFeeRate nodeIncrementalRelayFee = wallet->chain().relayIncrementalFee();\n+    CFeeRate walletIncrementalRelayFee = CFeeRate(WALLET_INCREMENTAL_RELAY_FEE);\n+    if (nodeIncrementalRelayFee > walletIncrementalRelayFee) {\n+        walletIncrementalRelayFee = nodeIncrementalRelayFee;\n+    }\n+\n+    // Compute required fee rate / total fee to hit\n+    // We must be >= to this rate, and since tx will be as large or larger we should pass bip125 total fee check\n+    CFeeRate min_new_feerate(old_feerate.GetFeePerK() + 1 + walletIncrementalRelayFee.GetFeePerK());\n+\n+    // Feerate calculated by GetMinimumFeeRate may not actually hit bip125 requirements\n+    // so pick the larger of the two\n+    CFeeRate block_feerate(GetMinimumFeeRate(*wallet, new_coin_control, /* feeCalc */ nullptr));\n+    if (block_feerate.GetFeePerK() > min_new_feerate.GetFeePerK()) {\n+        min_new_feerate = block_feerate;\n+    }\n+    // Finally, set required feerate.\n+    new_coin_control.m_feerate = min_new_feerate;\n+\n+    // Fill in required inputs we are double-spending(all of them)\n+    // N.B.: bip125 doesn't require all the inputs in the replaced transaction to be\n+    // used in the replacement transaction, but it's very important for wallets to make\n+    // sure that happens. If not, it would be possible to bump a transaction A twice to\n+    // A2 and A3 where A2 and A3 don't conflict (or alternatively bump A to A2 and A2\n+    // to A3 where A and A3 don't conflict). If both later get confirmed then the sender\n+    // has accidentally double paid.\n+    for (const auto& inputs : wtx.tx->vin) {\n+        new_coin_control.Select(COutPoint(inputs.prevout));\n+    }\n+    new_coin_control.fAllowOtherInputs = true;\n+\n+    // We cannot source new unconfirmed inputs(bip125 rule 2)\n+    new_coin_control.m_min_depth = 1;\n+\n+    CTransactionRef tx_new = MakeTransactionRef();\n+    CReserveKey reservekey(wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r274514853",
      "id" : 274514853,
      "in_reply_to_id" : 271956393,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDUxNDg1Mw==",
      "original_commit_id" : "e9f1a9f71bd5cfe6857198919e853e5ad8d05584",
      "original_position" : 173,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 170,
      "pull_request_review_id" : 225650825,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-11T16:38:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274514853",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r275158551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275158551"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks @jnewbery.",
      "commit_id" : "184f8785f710d58d9ef82e611591c9cbff5ab89d",
      "created_at" : "2019-04-14T14:05:37Z",
      "diff_hunk" : "@@ -208,6 +193,103 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+    return Result::OK;\n+}\n+\n+\n+Result CreateRateBumpTransaction(CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, std::vector<std::string>& errors,\n+                         CAmount& old_fee, CAmount& new_fee, CMutableTransaction& mtx)\n+{\n+    // We are going to modify coin control later, copy to re-use\n+    CCoinControl new_coin_control(coin_control);\n+\n+    auto locked_chain = wallet->chain().lock();\n+    LOCK(wallet->cs_wallet);\n+    errors.clear();\n+    auto it = wallet->mapWallet.find(txid);\n+    if (it == wallet->mapWallet.end()) {\n+        errors.push_back(\"Invalid or non-wallet transaction id\");\n+        return Result::INVALID_ADDRESS_OR_KEY;\n+    }\n+    const CWalletTx& wtx = it->second;\n+\n+    Result result = PreconditionChecks(*locked_chain, wallet, wtx, errors);\n+    if (result != Result::OK) {\n+        return result;\n+    }\n+\n+    // Fill in recipients(and preserve a change key)\n+    std::vector<CRecipient> recipients;\n+    for (const auto& output : wtx.tx->vout) {\n+        if (!wallet->IsChange(output)) {\n+            CRecipient recipient = {output.scriptPubKey, output.nValue, false};\n+            recipients.push_back(recipient);\n+        } else {\n+            CTxDestination change_dest;\n+            ExtractDestination(output.scriptPubKey, change_dest);\n+            new_coin_control.destChange = change_dest;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#discussion_r275158551",
      "id" : 275158551,
      "in_reply_to_id" : 267522514,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTE1ODU1MQ==",
      "original_commit_id" : "06155d16cbc3f96db26ecb22a35153cb87eec6b0",
      "original_position" : 96,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 124,
      "pull_request_review_id" : 226397163,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
      "updated_at" : "2019-04-14T14:05:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275158551",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 01c1cb8.",
      "created_at" : "2019-04-14T14:17:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15557#issuecomment-482985563",
      "id" : 482985563,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4Mjk4NTU2Mw==",
      "updated_at" : "2019-04-14T14:17:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482985563",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
