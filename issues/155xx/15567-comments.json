[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15452](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15452.html) (Replace CScriptID and CKeyID in CTxDestination with dedicated types by instagibbs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-03-09T12:40:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-471173672",
      "id" : 471173672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15567",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MTE3MzY3Mg==",
      "updated_at" : "2019-03-09T12:40:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/471173672",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, will take a look :)",
      "created_at" : "2019-03-10T00:23:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-471234622",
      "id" : 471234622,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15567",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MTIzNDYyMg==",
      "updated_at" : "2019-03-10T00:23:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/471234622",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It would be better to use Optional\\<OutputType> than to add an OutputType::NONE enum. There may be some contexts where it's valid for the output type to be unset, but in most places it's not valid, and using the optional type would do a better job communicating and enforcing this.",
      "created_at" : "2019-03-11T17:06:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-471631201",
      "id" : 471631201,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15567",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MTYzMTIwMQ==",
      "updated_at" : "2019-03-11T17:07:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/471631201",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15567#discussion_r264340168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15567"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264340168"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: in commit b2da4c74d891fe719b21411f692e3edd4b968c\r\n\r\nDo as scripted diff? ",
      "commit_id" : "d3585d157a52474e6672f5414dedb1045ce0524a",
      "created_at" : "2019-03-11T17:19:00Z",
      "diff_hunk" : "@@ -20,13 +20,13 @@ static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n bool ParseOutputType(const std::string& type, OutputType& output_type)\n {\n     if (type == OUTPUT_TYPE_STRING_LEGACY) {\n-        output_type = OutputType::LEGACY;\n+        output_type = OutputType::PKH;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15567#discussion_r264340168",
      "id" : 264340168,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDM0MDE2OA==",
      "original_commit_id" : "b2da4c74d891fe719b21411f692e3edd4b968cdd",
      "original_position" : 5,
      "path" : "src/outputtype.cpp",
      "position" : 5,
      "pull_request_review_id" : 212973282,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15567",
      "updated_at" : "2019-03-11T17:19:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264340168",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't understand the motivation for splitting up OutputTypes further.\n\nWhen you request a Bech32 address from the wallet, getting a P2WPKH or P2WSH are both fine, and which one depends on the context currently (getnewaddress vs addmultisigaddress). In a future descriptor-based design there should just be one default source for all Bech32 addresses - which can be either P2WPKH or P2WSH (which depends on the setup and spending policy you want, not on what you're requesting.",
      "created_at" : "2019-03-11T17:33:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-471642299",
      "id" : 471642299,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15567",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MTY0MjI5OQ==",
      "updated_at" : "2019-03-11T18:00:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/471642299",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky I also thought about using `Optional`. I can switch to that unless others see a problem.\r\n\r\n@sipa we current use OutputType for three different tasks\r\n\r\n1. distinguish between PKH, SH-WPKH and WPKH. That distinction is historical, because it happens to be the three different output types the wallet supports. Most other (non-multisig) wallets also use these three types.\r\n2. distinguish what we expect other wallets can handle. All existing wallets can send to both PKH and SH-WPKH, but not all wallets can send to WPKH.\r\n3. keep support for generating fresh PKH addresses\r\n\r\nI think we should introduce a new type for task (2): `AddressType`: bech32 or base58. Then there could be a simple mapping from OutputType to AddressType. For backwards compatibility all we need for OutputType is PKH, SH-WPKH and WPKH, so I could remove the others, although they're trivial.\r\n\r\nAs you pointed out, for descriptor based wallets, we only need to care about `AddressType`. The wallet can link to one base58 and one bech32 descriptor. Those descriptors would be set upon wallet creation, by default they would be SH-WPKH (bech32) and SH-WPKH (base58). Someone can also create a legacy wallet with only PKH (base58) and no bech32.   (this assumes that we encourage users to create multiple wallets if they want both PKH and SH-WPKH)\r\n\r\nFor a descriptor wallet that relies on external keys, e.g. BIP44/49/84, we could fetch the BIP49 (base58) and BIP84 (bech32) derivation xpubs from the device.\r\n\r\nFor legacy wallets we would keep using OutputType, and by making that more precise we hopefully avoid problems later.",
      "created_at" : "2019-03-12T17:15:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-472095806",
      "id" : 472095806,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15567",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MjA5NTgwNg==",
      "updated_at" : "2019-03-12T17:19:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472095806",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors Not really. LEGACY refers to pkh or p2sh-multisig; P2SH_SEGWIT refers to p2sh-pwpkh or p2sh-p2wsh-multisig; BECH32 refers to p2wpkh or p2wsh-multisig.\n\nThey indeed serve two different goals (a) selecting between bech32 support in the receiver or not and (b) choosing non-segwit outputs.\n\nI still don't see what in de codebase needs further differentiation between multisig or not etc.",
      "created_at" : "2019-03-12T17:46:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-472108793",
      "id" : 472108793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15567",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MjEwODc5Mw==",
      "updated_at" : "2019-03-12T17:46:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472108793",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "IIUC the only interaction the user has with `OutputType` is through `getnewaddress` and `addmultisigaddress`. So far I've only considered `getnewaddress`, where `legacy` refers to `pkh`.\r\n\r\nWith `addmultisigaddress` the `address_type` argument would map to different output types, i.e. `P2SH`, `P2SH_WSH` and `WSH`. That's still compatible with the idea of a simple `OutputType` -> `AddressType` mapping in descriptor wallets,\r\n\r\nHowever, interpreting `bitcoind -addresstype=...` as `OutputType::PKH` (etc) makes no sense in that case, so I'd have to rethink this PR. \r\n\r\nI'm not advocating `OutputType` to be even more fine grained. E.g. `MultisigDescriptor` would have `OutputType::WSH`.\r\n\r\n\r\nAn alternative could be to \"deprecate\" `OutputType`, i.e. only use it in the context of a legacy wallet.  The `bitcoind -address_type` parameter could be ignored for descriptor wallets, and the `address_type` argument for  `getnewaddress` could be constrained to `bech32` and `base58` for descriptor wallets. (`addmultisigaddress` is not needed for descriptor wallets)\r\n\r\nIn that case this PR won't be necessary, but then I do have to find another solution for deciding which descriptor to import from a hardware wallet into a legacy wallet (#14912). Right now it considers the current `address_type` and then matches the descriptor string prefix. However it might be better to make that PR contingent on descriptor wallets anyway, because if the user switch `-addresstype` or calls `getnewaddress` with a different address type than during key import, they'll end up generating addresses on the wrong derivation path. That breaks compatibility with the manufacturer software wallets which assume BIP44/49/84. Descriptor wallets solve that problem, because each descriptor can have its own derivation path.",
      "created_at" : "2019-03-13T09:33:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-472346373",
      "id" : 472346373,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15567",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MjM0NjM3Mw==",
      "updated_at" : "2019-03-13T09:39:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472346373",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm trying a different approach in #15590.",
      "created_at" : "2019-03-13T12:19:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-472399124",
      "id" : 472399124,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15567",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MjM5OTEyNA==",
      "updated_at" : "2019-03-13T12:19:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472399124",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
