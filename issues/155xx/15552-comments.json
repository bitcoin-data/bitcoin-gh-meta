[
   {
      "author_association" : "MEMBER",
      "body" : "correct-trivial-rebase-ACK 519b0bc5dc5155b6f7e2362c2105552bb7618ad0",
      "created_at" : "2019-03-06T22:15:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15552#issuecomment-470299193",
      "id" : 470299193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15552",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MDI5OTE5Mw==",
      "updated_at" : "2019-03-06T22:15:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470299193",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15552#discussion_r263162206"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263162206"
         }
      },
      "author_association" : "NONE",
      "body" : "Nit: successful.",
      "commit_id" : "519b0bc5dc5155b6f7e2362c2105552bb7618ad0",
      "created_at" : "2019-03-06T22:22:01Z",
      "diff_hunk" : "@@ -2787,64 +2795,85 @@ bool PreciousBlock(CValidationState& state, const CChainParams& params, CBlockIn\n \n bool CChainState::InvalidateBlock(CValidationState& state, const CChainParams& chainparams, CBlockIndex *pindex)\n {\n-    AssertLockHeld(cs_main);\n+    CBlockIndex* to_mark_failed = pindex;\n+    bool pindex_was_in_chain = false;\n+    int disconnected = 0;\n \n-    // We first disconnect backwards and then mark the blocks as invalid.\n-    // This prevents a case where pruned nodes may fail to invalidateblock\n-    // and be left unable to start as they have no tip candidates (as there\n-    // are no blocks that meet the \"have data and are not invalid per\n-    // nStatus\" criteria for inclusion in setBlockIndexCandidates).\n+    // Disconnect (descendants of) pindex, and mark them invalid.\n+    while (true) {\n+        if (ShutdownRequested()) break;\n \n-    bool pindex_was_in_chain = false;\n-    CBlockIndex *invalid_walk_tip = chainActive.Tip();\n+        // Make sure the queue of validation callbacks doesn't grow unboundedly.\n+        LimitValidationInterfaceQueue();\n \n-    DisconnectedBlockTransactions disconnectpool;\n-    while (chainActive.Contains(pindex)) {\n+        LOCK(cs_main);\n+        if (!chainActive.Contains(pindex)) break;\n         pindex_was_in_chain = true;\n+        CBlockIndex *invalid_walk_tip = chainActive.Tip();\n+\n         // ActivateBestChain considers blocks already in chainActive\n         // unconditionally valid already, so force disconnect away from it.\n-        if (!DisconnectTip(state, chainparams, &disconnectpool)) {\n-            // It's probably hopeless to try to make the mempool consistent\n-            // here if DisconnectTip failed, but we can try.\n-            UpdateMempoolForReorg(disconnectpool, false);\n-            return false;\n-        }\n-    }\n-\n-    // Now mark the blocks we just disconnected as descendants invalid\n-    // (note this may not be all descendants).\n-    while (pindex_was_in_chain && invalid_walk_tip != pindex) {\n-        invalid_walk_tip->nStatus |= BLOCK_FAILED_CHILD;\n+        DisconnectedBlockTransactions disconnectpool;\n+        bool ret = DisconnectTip(state, chainparams, &disconnectpool);\n+        // DisconnectTip will add transactions to disconnectpool.\n+        // Adjust the mempool to be consistent with the new tip, adding\n+        // transactions back to the mempool if disconnecting was succesful,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15552#discussion_r263162206",
      "id" : 263162206,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzE2MjIwNg==",
      "original_commit_id" : "519b0bc5dc5155b6f7e2362c2105552bb7618ad0",
      "original_position" : 107,
      "path" : "src/validation.cpp",
      "position" : 107,
      "pull_request_review_id" : 211507480,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15552",
      "updated_at" : "2019-03-06T22:22:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263162206",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15552#discussion_r263407452"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263407452"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@jonatack that should go in the original #15402 (though probably won't be fixed in order not to lose existing ACKs)",
      "commit_id" : "519b0bc5dc5155b6f7e2362c2105552bb7618ad0",
      "created_at" : "2019-03-07T14:32:36Z",
      "diff_hunk" : "@@ -2787,64 +2795,85 @@ bool PreciousBlock(CValidationState& state, const CChainParams& params, CBlockIn\n \n bool CChainState::InvalidateBlock(CValidationState& state, const CChainParams& chainparams, CBlockIndex *pindex)\n {\n-    AssertLockHeld(cs_main);\n+    CBlockIndex* to_mark_failed = pindex;\n+    bool pindex_was_in_chain = false;\n+    int disconnected = 0;\n \n-    // We first disconnect backwards and then mark the blocks as invalid.\n-    // This prevents a case where pruned nodes may fail to invalidateblock\n-    // and be left unable to start as they have no tip candidates (as there\n-    // are no blocks that meet the \"have data and are not invalid per\n-    // nStatus\" criteria for inclusion in setBlockIndexCandidates).\n+    // Disconnect (descendants of) pindex, and mark them invalid.\n+    while (true) {\n+        if (ShutdownRequested()) break;\n \n-    bool pindex_was_in_chain = false;\n-    CBlockIndex *invalid_walk_tip = chainActive.Tip();\n+        // Make sure the queue of validation callbacks doesn't grow unboundedly.\n+        LimitValidationInterfaceQueue();\n \n-    DisconnectedBlockTransactions disconnectpool;\n-    while (chainActive.Contains(pindex)) {\n+        LOCK(cs_main);\n+        if (!chainActive.Contains(pindex)) break;\n         pindex_was_in_chain = true;\n+        CBlockIndex *invalid_walk_tip = chainActive.Tip();\n+\n         // ActivateBestChain considers blocks already in chainActive\n         // unconditionally valid already, so force disconnect away from it.\n-        if (!DisconnectTip(state, chainparams, &disconnectpool)) {\n-            // It's probably hopeless to try to make the mempool consistent\n-            // here if DisconnectTip failed, but we can try.\n-            UpdateMempoolForReorg(disconnectpool, false);\n-            return false;\n-        }\n-    }\n-\n-    // Now mark the blocks we just disconnected as descendants invalid\n-    // (note this may not be all descendants).\n-    while (pindex_was_in_chain && invalid_walk_tip != pindex) {\n-        invalid_walk_tip->nStatus |= BLOCK_FAILED_CHILD;\n+        DisconnectedBlockTransactions disconnectpool;\n+        bool ret = DisconnectTip(state, chainparams, &disconnectpool);\n+        // DisconnectTip will add transactions to disconnectpool.\n+        // Adjust the mempool to be consistent with the new tip, adding\n+        // transactions back to the mempool if disconnecting was succesful,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15552#discussion_r263407452",
      "id" : 263407452,
      "in_reply_to_id" : 263162206,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzQwNzQ1Mg==",
      "original_commit_id" : "519b0bc5dc5155b6f7e2362c2105552bb7618ad0",
      "original_position" : 107,
      "path" : "src/validation.cpp",
      "position" : 107,
      "pull_request_review_id" : 211813920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15552",
      "updated_at" : "2019-03-07T14:32:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263407452",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
