[
   {
      "body" : "We test somewhere that sizeof(uint256) is 256 bits, so in principle these constructions should be safe. That said, using begin() is better code style.\r\n\r\n#5478 does away with external access to uint256's guts completely, which means big-endian can work. This change still makes sense for blob256 tho.\r\n",
      "created_at" : "2014-12-16T05:11:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5480#issuecomment-67113359",
      "id" : 67113359,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5480",
      "updated_at" : "2014-12-16T05:11:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67113359",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Not sure how far you want to take this, but BTW also ALL usages of BEGIN and END could be replaced, except for (6) which is special as it covers the entire block header:\r\n```\r\n1. main.cpp:                    hashRand = Hash(BEGIN(hashRand), END(hashRand));\r\n2. main.cpp:                        hashKey = Hash(BEGIN(hashKey), END(hashKey));\r\n3. main.cpp:                    hashRand = Hash(BEGIN(hashRand), END(hashRand));\r\n4. merkleblock.cpp:        return Hash(BEGIN(left), END(left), BEGIN(right), END(right));\r\n5. merkleblock.cpp:        return Hash(BEGIN(left), END(left), BEGIN(right), END(right));\r\n6. primitives/block.cpp:    return Hash(BEGIN(nVersion), END(nNonce));\r\n7. primitives/block.cpp:            vMerkleTree.push_back(Hash(BEGIN(vMerkleTree[j+i]),  8. END(vMerkleTree[j+i]),\r\n8. primitives/block.cpp:                                       BEGIN(vMerkleTree[j+i2]), END(vMerkleTree[j+i2])));\r\n9. primitives/block.cpp:            hash = Hash(BEGIN(*it), END(*it), BEGIN(hash), END(hash));\r\n10. primitives/block.cpp:            hash = Hash(BEGIN(hash), END(hash), BEGIN(*it), END(*it));\r\n```\r\nThere's also a rogue FLATDATA in `COutPoint`:\r\n```\r\nprimitives/transaction.h:        READWRITE(FLATDATA(*this));\r\n```\r\nThis covers the entire structure which is a blob256 and an int. I had to replace this with\r\n```\r\n     template <typename Stream, typename Operation>\r\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\r\n-        READWRITE(FLATDATA(*this));\r\n+        READWRITE(hash);\r\n+        READWRITE(n);\r\n     }\r\n```\r\n... but I'd leave above (6) and this one for a different pull (e.g. when we actually introduce bigendian compatibility) and just focus on using `.begin()` / `.end()` in this one for the cases that span one object.\r\n\r\n(n.b the size test I mentioned above didn't actually exist yet, I added this to blob256_tests.cpp in #5487 to verify that there is no unnecessary space in the structures, just in case\r\n```\r\nBOOST_CHECK(R1S.size() == sizeof(R1S));\r\nBOOST_CHECK(sizeof(R1S) == 32);\r\nBOOST_CHECK(R1L.size() == sizeof(R1L));\r\nBOOST_CHECK(sizeof(R1L) == 20);\r\n```\r\n)\r\n\r\n",
      "created_at" : "2014-12-16T09:12:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5480#issuecomment-67130948",
      "id" : 67130948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5480",
      "updated_at" : "2014-12-16T09:13:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67130948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Yes, since the size is tested, I suppose these are always safe. I'll wait until after #5478 to mess with this.\r\n\r\nDo you consider this change to be worth making? Since it boils down to little more than style (as long as no storage is added to the underlying hash container), I'm fine with just letting it go.",
      "created_at" : "2014-12-17T02:59:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5480#issuecomment-67270738",
      "id" : 67270738,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5480",
      "updated_at" : "2014-12-17T02:59:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67270738",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Needs rebase.\r\n\r\nI don't think this is needed anymore after #5478, but it's a style improvement.",
      "created_at" : "2015-02-22T09:23:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5480#issuecomment-75426950",
      "id" : 75426950,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5480",
      "updated_at" : "2015-02-22T09:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/75426950",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Closing this, I agree it is a little bit of a style improvement, but seems too low-priority to bother.\r\n",
      "created_at" : "2015-03-18T09:23:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5480#issuecomment-82844848",
      "id" : 82844848,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5480",
      "updated_at" : "2015-03-18T09:23:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/82844848",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
