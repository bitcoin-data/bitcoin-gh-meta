[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This appears to be unused now:\n\n```\nsrc/test/uint256_tests.cpp:const double R1Sdouble = 0.7096329412477836074; \n```\n",
      "created_at" : "2014-12-15T20:46:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#issuecomment-67062561",
      "id" : 67062561,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5478",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDYyNTYx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67062561/reactions"
      },
      "updated_at" : "2014-12-15T20:46:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67062561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "node_id" : "MDQ6VXNlcjY4NDg3NjQ=",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@paveljanik Thanks, I'll remove it. All *S variables in `uint256_tests.cpp` are for testing uint160, which went away.\n",
      "created_at" : "2014-12-16T05:16:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#issuecomment-67113660",
      "id" : 67113660,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5478",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTEzNjYw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67113660/reactions"
      },
      "updated_at" : "2014-12-16T05:16:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67113660",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Re: people complaining about rebasing their pulls, if the large diff in 'A: pure renames' is problematic, we could cheat by changing uint256 and uint160 to be blob types and introduce a new type for actual 256 bit integer arithmetic. But as clear type names are important I don't really like this.\n",
      "created_at" : "2014-12-16T07:45:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#issuecomment-67123372",
      "id" : 67123372,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5478",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTIzMzcy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67123372/reactions"
      },
      "updated_at" : "2014-12-16T08:40:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67123372",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891455"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891455"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it break anything if we defined the ordering of blob256 as platform-dependent? That would allow using memcmp for this operator too.\n",
      "commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "created_at" : "2014-12-16T11:24:25Z",
      "diff_hunk" : "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891455",
      "id" : 21891455,
      "line" : 57,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkxNDU1",
      "original_commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_line" : null,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/blob256.h",
      "position" : 57,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891455/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-12-16T11:24:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891455",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891628"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891628"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In fact, I think that would allow implementing blob\\* as wrappers around byte arrays, and leave all integer conversion to uint*.\n\nEDIT: Sorry, they already are byte-arrays; I should read more before commenting.\n\nEDIT2: In fact, I think the implementation below is already identical to just \"memcmp(a.data, b.data, sizeof(a.data)) < 0\".\n",
      "commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "created_at" : "2014-12-16T11:28:45Z",
      "diff_hunk" : "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891628",
      "id" : 21891628,
      "line" : 57,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkxNjI4",
      "original_commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_line" : null,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/blob256.h",
      "position" : 57,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891628/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-12-16T11:32:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891628",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891914"
         }
      },
      "author_association" : "MEMBER",
      "body" : "memcpy?\n\nOr just the default copy constructor, really.\n",
      "commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "created_at" : "2014-12-16T11:35:58Z",
      "diff_hunk" : "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891914",
      "id" : 21891914,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkxOTE0",
      "original_commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_line" : null,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/blob256.h",
      "position" : 31,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891914/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-12-16T11:36:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891916"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891916"
         }
      },
      "author_association" : "MEMBER",
      "body" : "memset?\n",
      "commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "created_at" : "2014-12-16T11:36:03Z",
      "diff_hunk" : "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891916",
      "id" : 21891916,
      "line" : 26,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkxOTE2",
      "original_commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_line" : null,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/blob256.h",
      "position" : 26,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891916/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-12-16T11:36:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891916",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891982"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891982"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This can probably be local to blob256.h?\n",
      "commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "created_at" : "2014-12-16T11:37:43Z",
      "diff_hunk" : "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {\n+        for (int i = 0; i < WIDTH; i++)\n+        {\n+            if (a.data[i] < b.data[i])\n+                return true;\n+            else if (a.data[i] > b.data[i])\n+                return false;\n+        }\n+        return false;\n+    }\n+\n+    std::string GetHex() const;\n+    void SetHex(const char* psz);\n+    void SetHex(const std::string& str);\n+    std::string ToString() const;\n+\n+    unsigned char* begin()\n+    {\n+        return &data[0];\n+    }\n+\n+    unsigned char* end()\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    const unsigned char* begin() const\n+    {\n+        return &data[0];\n+    }\n+\n+    const unsigned char* end() const\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    unsigned int size() const\n+    {\n+        return sizeof(data);\n+    }\n+    unsigned int GetSerializeSize(int nType, int nVersion) const\n+    {\n+        return sizeof(data);\n+    }\n+\n+    template<typename Stream>\n+    void Serialize(Stream& s, int nType, int nVersion) const\n+    {\n+        s.write((char*)data, sizeof(data));\n+    }\n+\n+    template<typename Stream>\n+    void Unserialize(Stream& s, int nType, int nVersion)\n+    {\n+        s.read((char*)data, sizeof(data));\n+    }\n+\n+    /** A cheap hash function that just returns 64 bits from the result, it can be\n+     * used when the contents are considered uniformly random. It is not appropriate\n+     * when the value can easily be influenced from outside as e.g. a network adversary could\n+     * provide values to trigger worst-case behavior.\n+     * @note The result of this function is not stable between little and big endian.\n+     */\n+    uint64_t GetCheapHash() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21891982",
      "id" : 21891982,
      "line" : 120,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkxOTgy",
      "original_commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_line" : null,
      "original_position" : 120,
      "original_start_line" : null,
      "path" : "src/blob256.h",
      "position" : 120,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891982/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-12-16T11:37:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21891982",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892272"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892272"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How that? There are four uses of this function in addrman.cpp and one in main.h.\n",
      "commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "created_at" : "2014-12-16T11:44:54Z",
      "diff_hunk" : "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {\n+        for (int i = 0; i < WIDTH; i++)\n+        {\n+            if (a.data[i] < b.data[i])\n+                return true;\n+            else if (a.data[i] > b.data[i])\n+                return false;\n+        }\n+        return false;\n+    }\n+\n+    std::string GetHex() const;\n+    void SetHex(const char* psz);\n+    void SetHex(const std::string& str);\n+    std::string ToString() const;\n+\n+    unsigned char* begin()\n+    {\n+        return &data[0];\n+    }\n+\n+    unsigned char* end()\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    const unsigned char* begin() const\n+    {\n+        return &data[0];\n+    }\n+\n+    const unsigned char* end() const\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    unsigned int size() const\n+    {\n+        return sizeof(data);\n+    }\n+    unsigned int GetSerializeSize(int nType, int nVersion) const\n+    {\n+        return sizeof(data);\n+    }\n+\n+    template<typename Stream>\n+    void Serialize(Stream& s, int nType, int nVersion) const\n+    {\n+        s.write((char*)data, sizeof(data));\n+    }\n+\n+    template<typename Stream>\n+    void Unserialize(Stream& s, int nType, int nVersion)\n+    {\n+        s.read((char*)data, sizeof(data));\n+    }\n+\n+    /** A cheap hash function that just returns 64 bits from the result, it can be\n+     * used when the contents are considered uniformly random. It is not appropriate\n+     * when the value can easily be influenced from outside as e.g. a network adversary could\n+     * provide values to trigger worst-case behavior.\n+     * @note The result of this function is not stable between little and big endian.\n+     */\n+    uint64_t GetCheapHash() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892272",
      "id" : 21892272,
      "line" : 120,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkyMjcy",
      "original_commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_line" : null,
      "original_position" : 120,
      "original_start_line" : null,
      "path" : "src/blob256.h",
      "position" : 120,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892272/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-12-16T11:45:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892296"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892296"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, it's identical to memcmp, good catch. Will use that.\n",
      "commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "created_at" : "2014-12-16T11:45:25Z",
      "diff_hunk" : "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892296",
      "id" : 21892296,
      "line" : 57,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkyMjk2",
      "original_commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_line" : null,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/blob256.h",
      "position" : 57,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892296/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-12-16T11:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892296",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892309"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892309"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ACK\n",
      "commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "created_at" : "2014-12-16T11:45:51Z",
      "diff_hunk" : "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892309",
      "id" : 21892309,
      "line" : 26,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkyMzA5",
      "original_commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_line" : null,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/blob256.h",
      "position" : 26,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892309/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-12-16T11:45:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892406"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892406"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry, that was confused. I mean making it specific to the blob256 type, as opposed to base_blob.\n",
      "commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "created_at" : "2014-12-16T11:48:15Z",
      "diff_hunk" : "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {\n+        for (int i = 0; i < WIDTH; i++)\n+        {\n+            if (a.data[i] < b.data[i])\n+                return true;\n+            else if (a.data[i] > b.data[i])\n+                return false;\n+        }\n+        return false;\n+    }\n+\n+    std::string GetHex() const;\n+    void SetHex(const char* psz);\n+    void SetHex(const std::string& str);\n+    std::string ToString() const;\n+\n+    unsigned char* begin()\n+    {\n+        return &data[0];\n+    }\n+\n+    unsigned char* end()\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    const unsigned char* begin() const\n+    {\n+        return &data[0];\n+    }\n+\n+    const unsigned char* end() const\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    unsigned int size() const\n+    {\n+        return sizeof(data);\n+    }\n+    unsigned int GetSerializeSize(int nType, int nVersion) const\n+    {\n+        return sizeof(data);\n+    }\n+\n+    template<typename Stream>\n+    void Serialize(Stream& s, int nType, int nVersion) const\n+    {\n+        s.write((char*)data, sizeof(data));\n+    }\n+\n+    template<typename Stream>\n+    void Unserialize(Stream& s, int nType, int nVersion)\n+    {\n+        s.read((char*)data, sizeof(data));\n+    }\n+\n+    /** A cheap hash function that just returns 64 bits from the result, it can be\n+     * used when the contents are considered uniformly random. It is not appropriate\n+     * when the value can easily be influenced from outside as e.g. a network adversary could\n+     * provide values to trigger worst-case behavior.\n+     * @note The result of this function is not stable between little and big endian.\n+     */\n+    uint64_t GetCheapHash() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892406",
      "id" : 21892406,
      "line" : 120,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkyNDA2",
      "original_commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_line" : null,
      "original_position" : 120,
      "original_start_line" : null,
      "path" : "src/blob256.h",
      "position" : 120,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892406/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-12-16T11:48:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892406",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892775"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892775"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point. The default POD copy constructor (as well as assignment operator?) will do the right thing here.\n",
      "commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "created_at" : "2014-12-16T11:58:31Z",
      "diff_hunk" : "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21892775",
      "id" : 21892775,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkyNzc1",
      "original_commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_line" : null,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/blob256.h",
      "position" : 31,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892775/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-12-16T11:58:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21892775",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21893340"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21893340"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yup, the assignment operator too. Though perhaps those are needed to make the inherited blob256/uint256 work; unsure.\n",
      "commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "created_at" : "2014-12-16T12:13:51Z",
      "diff_hunk" : "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21893340",
      "id" : 21893340,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkzMzQw",
      "original_commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_line" : null,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/blob256.h",
      "position" : 31,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21893340/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-12-16T12:13:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21893340",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21894230"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21894230"
         }
      },
      "author_association" : "MEMBER",
      "body" : "SGTM\n",
      "commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "created_at" : "2014-12-16T12:31:40Z",
      "diff_hunk" : "@@ -0,0 +1,170 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOB256_H\n+#define BITCOIN_BLOB256_H\n+\n+#include <assert.h>\n+#include <cstring>\n+#include <stdexcept>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+/** Template base class for fixed-sized opaque blobs. */\n+template<unsigned int BITS>\n+class base_blob\n+{\n+protected:\n+    enum { WIDTH=BITS/8 };\n+    uint8_t data[WIDTH];\n+public:\n+    base_blob()\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = 0;\n+    }\n+\n+    base_blob(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+    }\n+\n+    base_blob& operator=(const base_blob& b)\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            data[i] = b.data[i];\n+        return *this;\n+    }\n+    explicit base_blob(const std::vector<unsigned char>& vch);\n+\n+    bool IsNull() const\n+    {\n+        for (int i = 0; i < WIDTH; i++)\n+            if (data[i] != 0)\n+                return false;\n+        return true;\n+    }\n+    void SetNull()\n+    {\n+        memset(data, 0, sizeof(data));\n+    }\n+\n+    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }\n+    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }\n+    friend inline bool operator<(const base_blob& a, const base_blob& b) {\n+        for (int i = 0; i < WIDTH; i++)\n+        {\n+            if (a.data[i] < b.data[i])\n+                return true;\n+            else if (a.data[i] > b.data[i])\n+                return false;\n+        }\n+        return false;\n+    }\n+\n+    std::string GetHex() const;\n+    void SetHex(const char* psz);\n+    void SetHex(const std::string& str);\n+    std::string ToString() const;\n+\n+    unsigned char* begin()\n+    {\n+        return &data[0];\n+    }\n+\n+    unsigned char* end()\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    const unsigned char* begin() const\n+    {\n+        return &data[0];\n+    }\n+\n+    const unsigned char* end() const\n+    {\n+        return &data[WIDTH];\n+    }\n+\n+    unsigned int size() const\n+    {\n+        return sizeof(data);\n+    }\n+    unsigned int GetSerializeSize(int nType, int nVersion) const\n+    {\n+        return sizeof(data);\n+    }\n+\n+    template<typename Stream>\n+    void Serialize(Stream& s, int nType, int nVersion) const\n+    {\n+        s.write((char*)data, sizeof(data));\n+    }\n+\n+    template<typename Stream>\n+    void Unserialize(Stream& s, int nType, int nVersion)\n+    {\n+        s.read((char*)data, sizeof(data));\n+    }\n+\n+    /** A cheap hash function that just returns 64 bits from the result, it can be\n+     * used when the contents are considered uniformly random. It is not appropriate\n+     * when the value can easily be influenced from outside as e.g. a network adversary could\n+     * provide values to trigger worst-case behavior.\n+     * @note The result of this function is not stable between little and big endian.\n+     */\n+    uint64_t GetCheapHash() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#discussion_r21894230",
      "id" : 21894230,
      "line" : 120,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODk0MjMw",
      "original_commit_id" : "8f1563a3a5c259fe4ff034f206df0788c565365e",
      "original_line" : null,
      "original_position" : 120,
      "original_start_line" : null,
      "path" : "src/blob256.h",
      "position" : 120,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21894230/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-12-16T12:31:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21894230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I would actually like the PR as a whole to just introduce arith_uint256 or something (for the version with arithmetic semantics) and leave uint256/uint160 in place (for the version without). That will result in a much smaller patchset, and require much less rebasings while this is being reviewed.\n\nPerhaps later there can be mass rename that is trivial to review and merge.\n",
      "created_at" : "2014-12-16T12:44:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#issuecomment-67154146",
      "id" : 67154146,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5478",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTU0MTQ2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67154146/reactions"
      },
      "updated_at" : "2014-12-16T12:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67154146",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok, reluctantly agreed... As I say above already I hate the idea of using uint160/uint256 for what are not actually integers and introduce a yes_this_is_really_an_int256 for real uint256 arithmetic, but yes the diff will be much smaller.\n",
      "created_at" : "2014-12-16T13:25:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#issuecomment-67158692",
      "id" : 67158692,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5478",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTU4Njky",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67158692/reactions"
      },
      "updated_at" : "2014-12-16T13:25:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67158692",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing, will reopen after reorganization.\n\nContinued in #5490\n",
      "created_at" : "2014-12-16T14:05:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478#issuecomment-67163551",
      "id" : 67163551,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5478",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTYzNTUx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67163551/reactions"
      },
      "updated_at" : "2014-12-17T10:06:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67163551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
