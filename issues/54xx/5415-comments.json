[
   {
      "author_association" : "MEMBER",
      "body" : "Testing with boost 1.56.0 and ./configure CXXFLAGS=\"-DDEBUG_LOCKORDER -g -std=c++11\"\n\nThe changes fix the issue described in #5166, but introduce a new compile error.\n\n```\nIn file included from ./allocators.h:9:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:423:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__tree:16:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/memory:598:\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/utility:253:9: error: field has incomplete type 'const CScriptID'\n    _T1 first;\n        ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:2023:27: note: in instantiation of template class 'std::__1::pair<const CScriptID, CScript>' requested here\n                 decltype(__is_constructible_test(declval<_Tp>(), declval<_Args>()...))\n                          ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:2072:14: note: in instantiation of template class 'std::__1::__is_constructible<false, std::__1::allocator<std::__1::pair<const CScriptID,\n      CScript> >>' requested here\n    : public __is_constructible<is_scalar<_Tp>::value || is_reference<_Tp>::value,\n             ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:2098:14: note: in instantiation of template class 'std::__1::__is_constructible_void_check<false, std::__1::allocator<std::__1::pair<const\n      CScriptID, CScript> >>' requested here\n    : public __is_constructible_void_check<__contains_void<_Tp, _Args...>::value\n             ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:2578:34: note: in instantiation of template class 'std::__1::is_constructible<std::__1::allocator<std::__1::pair<const CScriptID, CScript>\n      >>' requested here\n    : __is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, _Tp, _Args...>\n                                 ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:2700:14: note: in instantiation of template class 'std::__1::is_nothrow_constructible<std::__1::allocator<std::__1::pair<const CScriptID,\n      CScript> >>' requested here\n    : public is_nothrow_constructible<_Tp>\n             ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:840:13: note: in instantiation of template class 'std::__1::is_nothrow_default_constructible<std::__1::allocator<std::__1::pair<const CScriptID,\n      CScript> > >' requested here\n            is_nothrow_default_constructible<allocator_type>::value &&\n            ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config:332:34: note: expanded from macro '_NOEXCEPT_'\n#  define _NOEXCEPT_(x) noexcept(x)\n                                 ^\n./keystore.h:55:7: note: in instantiation of exception specification for 'map' requested here\nclass CBasicKeyStore : public CKeyStore\n      ^\n./keystore.h:17:7: note: forward declaration of 'CScriptID'\nclass CScriptID;\n      ^\nIn file included from keystore.cpp:6:\nIn file included from ./keystore.h:9:\nIn file included from ./key.h:9:\nIn file included from ./allocators.h:9:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:423:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__tree:16:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/memory:598:\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/utility:254:9: error: field has incomplete type 'CScript'\n    _T2 second;\n        ^\n./serialize.h:21:7: note: forward declaration of 'CScript'\nclass CScript;\n      ^\n./crypter.h:139:5: note: implicit default constructor for 'CBasicKeyStore' first required here\n    CCryptoKeyStore() : fUseCrypto(false), fDecryptionThoroughlyChecked(false)\n    ^\nIn file included from keystore.cpp:6:\nIn file included from ./keystore.h:9:\nIn file included from ./key.h:9:\nIn file included from ./allocators.h:9:\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:1384:53: error: static_cast from 'pointer' (aka 'std::__1::__tree_node<std::__1::__value_type<CScriptID, CScript>, void *> *') to\n      '__node_base_pointer' (aka 'std::__1::__tree_node_base<void *> *') is not allowed\n        __tree_.__insert_node_at(__parent, __child, static_cast<__node_base_pointer>(__h.get()));\n                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nkeystore.cpp:42:15: note: in instantiation of member function 'std::__1::map<CScriptID, CScript, std::__1::less<CScriptID>, std::__1::allocator<std::__1::pair<const CScriptID, CScript> > >::operator[]' requested here\n    mapScripts[CScriptID(redeemScript)] = redeemScript;\n              ^\nIn file included from keystore.cpp:6:\nIn file included from ./keystore.h:9:\nIn file included from ./key.h:9:\nIn file included from ./allocators.h:9:\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:1219:16: error: static_cast from '__node_pointer' (aka 'std::__1::__tree_node<std::__1::__value_type<CScriptID, CScript>, void *> *') to\n      '__node_base_pointer' (aka 'std::__1::__tree_node_base<void *> *') is not allowed\n    __parent = static_cast<__node_base_pointer>(__tree_.__end_node());\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:1379:36: note: in instantiation of member function 'std::__1::map<CScriptID, CScript, std::__1::less<CScriptID>,\n      std::__1::allocator<std::__1::pair<const CScriptID, CScript> > >::__find_equal_key' requested here\n    __node_base_pointer& __child = __find_equal_key(__parent, __k);\n                                   ^\nkeystore.cpp:42:15: note: in instantiation of member function 'std::__1::map<CScriptID, CScript, std::__1::less<CScriptID>, std::__1::allocator<std::__1::pair<const CScriptID, CScript> > >::operator[]' requested here\n    mapScripts[CScriptID(redeemScript)] = redeemScript;\n              ^\nIn file included from keystore.cpp:6:\nIn file included from ./keystore.h:9:\nIn file included from ./key.h:9:\nIn file included from ./allocators.h:9:\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:967:50: error: no viable conversion from 'const_iterator' (aka '__tree_const_iterator<value_type, __node_pointer, difference_type>') to\n      'const_iterator' (aka '__map_const_iterator<typename __base::const_iterator>')\n    const_iterator end() const _NOEXCEPT {return __tree_.end();}\n                                                 ^~~~~~~~~~~~~\nkeystore.cpp:56:26: note: in instantiation of member function 'std::__1::map<CScriptID, CScript, std::__1::less<CScriptID>, std::__1::allocator<std::__1::pair<const CScriptID, CScript> > >::end' requested here\n    if (mi != mapScripts.end())\n                         ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:713:29: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'const_iterator'\n      (aka '__tree_const_iterator<value_type, __node_pointer, difference_type>') to 'const std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<CScriptID, CScript>, std::__1::__tree_node<std::__1::__value_type<CScriptID,\n      CScript>, void *> *, long> > &' for 1st argument\nclass _LIBCPP_TYPE_VIS_ONLY __map_const_iterator\n                            ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:713:29: note: candidate constructor (the implicit move constructor) not viable: no known conversion from 'const_iterator'\n      (aka '__tree_const_iterator<value_type, __node_pointer, difference_type>') to 'std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<CScriptID, CScript>, std::__1::__tree_node<std::__1::__value_type<CScriptID, CScript>,\n      void *> *, long> > &&' for 1st argument\nclass _LIBCPP_TYPE_VIS_ONLY __map_const_iterator\n                            ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:739:5: note: candidate constructor not viable: no known conversion from 'const_iterator'\n      (aka '__tree_const_iterator<value_type, __node_pointer, difference_type>') to '__map_iterator<typename __tree_const_iterator<__value_type<CScriptID, CScript>, __tree_node<__value_type<CScriptID, CScript>, void *> *, long>::__non_const_iterator>' for\n      1st argument\n    __map_const_iterator(\n    ^\n5 errors generated.\nmake[2]: *** [libbitcoin_common_a-keystore.o] Error 1\nmake[1]: *** [check-recursive] Error 1\nmake: *** [check-recursive] Error 1\n```\n",
      "created_at" : "2014-12-03T13:50:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5415#issuecomment-65408890",
      "id" : 65408890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5415",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NDA4ODkw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65408890/reactions"
      },
      "updated_at" : "2014-12-03T13:50:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65408890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok, closing then, it's not a fix if it causes a new problem.\n",
      "created_at" : "2014-12-03T13:58:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5415#issuecomment-65409997",
      "id" : 65409997,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5415",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NDA5OTk3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65409997/reactions"
      },
      "updated_at" : "2014-12-03T13:58:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65409997",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fwiw, that doesn't look like a \"new\" problem. It appears to just get past the first issue and further into the build before it runs into a different c++11 incompatibility.\n",
      "created_at" : "2014-12-08T20:06:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5415#issuecomment-66177830",
      "id" : 66177830,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5415",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MTc3ODMw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/66177830/reactions"
      },
      "updated_at" : "2014-12-08T20:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/66177830",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I submitted this under the pretense that this was the only c++11 incompatibility. Seemingly it's one of many so it's not worth doing this now.\n",
      "created_at" : "2014-12-09T08:06:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5415#issuecomment-66247227",
      "id" : 66247227,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5415",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MjQ3MjI3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/66247227/reactions"
      },
      "updated_at" : "2014-12-09T08:06:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/66247227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Just posting for posterity: This was indeed the only incompatibility I ran into in Linux.\n\nThe error above is libstdc++-specific, but it's a legitimate bug in c++11 mode. See: http://llvm.org/bugs/show_bug.cgi?id=13471\n\nI have it hack-fixed locally, but it involves a good bit of code movement.\n",
      "created_at" : "2014-12-18T04:28:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5415#issuecomment-67440015",
      "id" : 67440015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5415",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDQwMDE1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67440015/reactions"
      },
      "updated_at" : "2014-12-18T04:28:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67440015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "err.. s/libstdc++/libc++/\n",
      "created_at" : "2014-12-18T05:16:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5415#issuecomment-67442395",
      "id" : 67442395,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5415",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDQyMzk1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67442395/reactions"
      },
      "updated_at" : "2014-12-18T05:16:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67442395",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   }
]
