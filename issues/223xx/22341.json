{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "This PR introduces a new wallet RPC `getxpub`. It takes a BIP32 path as argument and returns the xpub, along with the master key fingerprint.\r\n\r\nIt paves the way for using Bitcoin Core as one signer in a multisig setup. It simplifies the proposed flow in #22067.\r\n\r\nThe recommended flow would be:\r\n1. Create a blank wallet with a seed, but no descriptors\r\n2. Call `getxpub m/87h/0h/0h` (as suggested in [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki))\r\n3. (Manually or with something like Specter) craft a multisig descriptor containing this xpub\r\n4. Call `importdescriptors` which will allow the import if its own fingerprint is recognized (and after checking the xpub)\r\n5. The usual flow with `getnewaddress`, `send` and `walletprocesspsbt` (and their GUI equivalents)\r\n\r\nOn the GUI side a wizard could perform the above steps and guide the user, where they either:\r\n* export their own xpub and then import a descriptor from somewhere else (performing some sanity checks); or\r\n* import xpub(s) from other wallets, compose a multisig and get the descriptors for export; or\r\n* get xpub(s) from connected hardware devices and configure a multisig (with or without a key on their machine)\r\n\r\n_The current draft implementation is not usable._\r\n\r\nTodo:\r\n- [ ] allow blank wallets with only a seed (perhaps a separate PR; not strictly needed here)\r\n- [ ] parse path string (reuse descriptor.cpp parsing code?) \r\n- [ ] add CWallet method to obtain an xpub for a given path\r\n  - probably for descriptor wallets only\r\n  - it should get the seed without having to go through a ScriptPubKeyMan (so it works on a blank wallet with seed)\r\n- [ ] `importdescriptors` should treat an `xpub` as if it was an `xpriv`, after checking that it can derive the xpub from the seed (that matches the fingerprint)",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/comments",
   "created_at" : "2021-06-25T15:12:03Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/22341",
   "id" : 930266556,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0Njc3OTg5MzM4",
   "number" : 22341,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/22341.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22341",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/22341.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22341"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "rpc: add getxpub",
   "updated_at" : "2021-06-25T15:17:29Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22341",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
      "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
      "followers_url" : "https://api.github.com/users/Sjors/followers",
      "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/Sjors",
      "id" : 10217,
      "login" : "Sjors",
      "node_id" : "MDQ6VXNlcjEwMjE3",
      "organizations_url" : "https://api.github.com/users/Sjors/orgs",
      "received_events_url" : "https://api.github.com/users/Sjors/received_events",
      "repos_url" : "https://api.github.com/users/Sjors/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/Sjors"
   }
}
