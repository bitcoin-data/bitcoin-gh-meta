[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK (Haven't really looked at the code).\nI think a sweep function would be a great feature. One could import \"old\" private keys into a new HD wallet for example.\n\nPossible extension: `sweepseed` could be an extended version of that, moving all funds form a HD seed to a new one, generating large lookup-windows on different chainpathes. It could also be UTXO set only not requiring a -rescan.\n",
      "created_at" : "2016-11-14T07:41:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-260267890",
      "id" : 260267890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI2MDI2Nzg5MA==",
      "updated_at" : "2016-11-14T07:41:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260267890",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "From a raw flow perspective, the generation of the sweep transaction is something that works from public information and should be possible on an online node without access to the private keys... so that one should be a 'createrawsweeptransaction' which takes a list of adresses/pubkeys/redeemscripts (and maybe private keys ... maybe some kind of BIP32 chain spec) and returns a transaction that spends all coins assigned to matching keys, potentially with arguments to limit the set of inputs collected.\n",
      "created_at" : "2016-11-15T17:29:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-260708687",
      "id" : 260708687,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI2MDcwODY4Nw==",
      "updated_at" : "2016-11-15T17:29:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260708687",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, what about extending RPC `importprivkey` with another optional argument `sweep` defaulting to `false`?\n",
      "created_at" : "2016-11-17T11:20:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-261222140",
      "id" : 261222140,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI2MTIyMjE0MA==",
      "updated_at" : "2016-11-17T11:20:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261222140",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "node_id" : "MDQ6VXNlcjY4NDg3NjQ=",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "sweepprivkeys is intended for users, and not to import keys. Users should never use importprivkey.\n",
      "created_at" : "2016-11-17T11:32:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-261224370",
      "id" : 261224370,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI2MTIyNDM3MA==",
      "updated_at" : "2016-11-17T11:32:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261224370",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r94074507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/94074507"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It might be appropriate to loop over mapCoins calling CTxMemPool::pruneSpent, on each entry, to avoid trying to sweep from an output that is already in the process of being spent.",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2016-12-28T20:31:23Z",
      "diff_hunk" : "@@ -972,6 +990,153 @@ UniValue sendmany(const JSONRPCRequest& request)\n     return wtx.GetHash().GetHex();\n }\n \n+UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    CWallet *&pwallet = pwalletMain;\n+    if (!EnsureWalletIsAvailable(request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw runtime_error(\n+            \"sweepprivkeys {\\\"privkeys\\\": [\\\"bitcoinprivkey\\\",...], other options}\\n\"\n+            \"\\nSends bitcoins controlled by private key to specified destinations.\\n\"\n+            \"\\nOptions:\\n\"\n+            \"  \\\"privkeys\\\":[\\\"bitcoinprivkey\\\",...]   (array of strings, required) An array of WIF private key(s)\\n\"\n+            \"  \\\"label\\\":\\\"actuallabelname\\\"           (string, optional) Label for received bitcoins\\n\"\n+            \"  \\\"comment\\\":\\\"description\\\"             (string, optional) Local comment for the receive transaction\\n\"\n+        );\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VOBJ));\n+\n+    // Parse options\n+    std::set<CScript> setscriptSearch;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string strLabel, strComment;\n+    CAmount nTotalIn = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string strSecret = privkey_wif.get_str();\n+                CKey key;\n+                CPubKey pubkey;\n+                ParseWIFPrivKey(strSecret, key, pubkey);\n+\n+                tempKeystore.AddKey(key);\n+                CKeyID vchAddress = pubkey.GetID();\n+                CScript script = GetScriptForDestination(vchAddress);\n+                if (!script.empty()) {\n+                    setscriptSearch.insert(script);\n+                }\n+                script = GetScriptForRawPubKey(pubkey);\n+                if (!script.empty()) {\n+                    setscriptSearch.insert(script);\n+                }\n+            }\n+        } else if (optname == \"label\") {\n+            strLabel = AccountFromValue(optval.get_str());\n+        } else if (optname == \"comment\") {\n+            strComment = optval.get_str();\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unrecognised option '%s'\", optname));\n+        }\n+    }\n+\n+    // Ensure keypool is filled if possible\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n+\n+        if (!pwallet->IsLocked()) {\n+            pwallet->TopUpKeyPool();\n+        }\n+    }\n+\n+    // Reserve the key we will be using\n+    CReserveKey reservekey(pwallet);\n+    CPubKey vchPubKey;\n+    if (!reservekey.GetReservedKey(vchPubKey)) {\n+        throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n+    }\n+\n+    // Scan UTXO set for inputs\n+    std::vector<CTxOut> vInTXOs;\n+    {\n+        // Collect all possible inputs\n+        std::map<uint256, CCoins> mapcoins;\n+        {\n+            LOCK(cs_main);\n+            mempool.FindScriptPubKey(setscriptSearch, mapcoins);\n+            FlushStateToDisk();\n+            pcoinsTip->FindScriptPubKey(setscriptSearch, mapcoins);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r94074507",
      "id" : 94074507,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk0MDc0NTA3",
      "original_commit_id" : "ed604747289c12d605f219b3f859a9bef376174e",
      "original_position" : 120,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 14605089,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/94074507",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\n> Hmm, what about extending RPC importprivkey with another optional argument sweep defaulting to false?\r\n\r\nPlease don't do this. People confuse `import` and `sweep` all over the place. The least we can do is make them separate RPCs with separate documentation.",
      "created_at" : "2017-02-27T09:31:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-282670040",
      "id" : 282670040,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI4MjY3MDA0MA==",
      "updated_at" : "2017-02-27T09:31:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282670040",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Seems this won't be making it for 0.15. Untagging.",
      "created_at" : "2017-07-12T22:50:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-314919860",
      "id" : 314919860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMxNDkxOTg2MA==",
      "updated_at" : "2017-07-12T22:50:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314919860",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept Re-ACK. Needs rebase. I guess this is also something we could want for 0.16.\r\nI have no strong opinion about sweep versus createrawsweep. The approach we took for bumpfee was also to do the non raw one first, although I agree that the ramification of sweep is different then a bump.",
      "created_at" : "2017-08-15T20:14:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-322575985",
      "id" : 322575985,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMyMjU3NTk4NQ==",
      "updated_at" : "2017-08-15T20:14:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322575985",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and added a simple functional test.",
      "created_at" : "2017-08-19T03:55:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-323497915",
      "id" : 323497915,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMyMzQ5NzkxNQ==",
      "updated_at" : "2017-08-19T03:55:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323497915",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134094095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134094095"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Throw if duplicate? Add test.",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2017-08-19T15:17:04Z",
      "diff_hunk" : "@@ -1064,6 +1065,153 @@ UniValue sendmany(const JSONRPCRequest& request)\n     return wtx.GetHash().GetHex();\n }\n \n+UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"sweepprivkeys {\\\"privkeys\\\": [\\\"bitcoinprivkey\\\",...], other options}\\n\"\n+            \"\\nSends bitcoins controlled by private key to specified destinations.\\n\"\n+            \"\\nOptions:\\n\"\n+            \"  \\\"privkeys\\\":[\\\"bitcoinprivkey\\\",...]   (array of strings, required) An array of WIF private key(s)\\n\"\n+            \"  \\\"label\\\":\\\"actuallabelname\\\"           (string, optional) Label for received bitcoins\\n\"\n+        );\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, {UniValue::VOBJ});\n+\n+    // Parse options\n+    std::set<CScript> needles;\n+    CCoinControl coin_control;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string label;\n+    CAmount total_in = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string wif_secret = privkey_wif.get_str();\n+                CKey key;\n+                CPubKey pubkey;\n+                ParseWIFPrivKey(wif_secret, key, &pubkey);\n+\n+                tempKeystore.AddKey(key);\n+                CKeyID address = pubkey.GetID();\n+                CScript script = GetScriptForDestination(address);\n+                if (!script.empty()) {\n+                    needles.insert(script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134094095",
      "id" : 134094095,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDA5NDA5NQ==",
      "original_commit_id" : "c0bd1d3ff54e1f3bbd512264430348e7a9aaba3c",
      "original_position" : 54,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 79,
      "pull_request_review_id" : 57352361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134094095",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134094100"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134094100"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Throw if duplicate? Add test.",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2017-08-19T15:17:10Z",
      "diff_hunk" : "@@ -1064,6 +1065,153 @@ UniValue sendmany(const JSONRPCRequest& request)\n     return wtx.GetHash().GetHex();\n }\n \n+UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"sweepprivkeys {\\\"privkeys\\\": [\\\"bitcoinprivkey\\\",...], other options}\\n\"\n+            \"\\nSends bitcoins controlled by private key to specified destinations.\\n\"\n+            \"\\nOptions:\\n\"\n+            \"  \\\"privkeys\\\":[\\\"bitcoinprivkey\\\",...]   (array of strings, required) An array of WIF private key(s)\\n\"\n+            \"  \\\"label\\\":\\\"actuallabelname\\\"           (string, optional) Label for received bitcoins\\n\"\n+        );\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, {UniValue::VOBJ});\n+\n+    // Parse options\n+    std::set<CScript> needles;\n+    CCoinControl coin_control;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string label;\n+    CAmount total_in = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string wif_secret = privkey_wif.get_str();\n+                CKey key;\n+                CPubKey pubkey;\n+                ParseWIFPrivKey(wif_secret, key, &pubkey);\n+\n+                tempKeystore.AddKey(key);\n+                CKeyID address = pubkey.GetID();\n+                CScript script = GetScriptForDestination(address);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+                script = GetScriptForRawPubKey(pubkey);\n+                if (!script.empty()) {\n+                    needles.insert(script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134094100",
      "id" : 134094100,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDA5NDEwMA==",
      "original_commit_id" : "c0bd1d3ff54e1f3bbd512264430348e7a9aaba3c",
      "original_position" : 58,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 83,
      "pull_request_review_id" : 57352361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134094100",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134094129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134094129"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Throw if needles is empty? Add test.",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2017-08-19T15:18:38Z",
      "diff_hunk" : "@@ -1064,6 +1065,153 @@ UniValue sendmany(const JSONRPCRequest& request)\n     return wtx.GetHash().GetHex();\n }\n \n+UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"sweepprivkeys {\\\"privkeys\\\": [\\\"bitcoinprivkey\\\",...], other options}\\n\"\n+            \"\\nSends bitcoins controlled by private key to specified destinations.\\n\"\n+            \"\\nOptions:\\n\"\n+            \"  \\\"privkeys\\\":[\\\"bitcoinprivkey\\\",...]   (array of strings, required) An array of WIF private key(s)\\n\"\n+            \"  \\\"label\\\":\\\"actuallabelname\\\"           (string, optional) Label for received bitcoins\\n\"\n+        );\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, {UniValue::VOBJ});\n+\n+    // Parse options\n+    std::set<CScript> needles;\n+    CCoinControl coin_control;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string label;\n+    CAmount total_in = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string wif_secret = privkey_wif.get_str();\n+                CKey key;\n+                CPubKey pubkey;\n+                ParseWIFPrivKey(wif_secret, key, &pubkey);\n+\n+                tempKeystore.AddKey(key);\n+                CKeyID address = pubkey.GetID();\n+                CScript script = GetScriptForDestination(address);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+                script = GetScriptForRawPubKey(pubkey);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+            }\n+        } else if (optname == \"label\") {\n+            label = AccountFromValue(optval.get_str());\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unrecognised option '%s'\", optname));\n+        }\n+    }\n+\n+    // Ensure keypool is filled if possible",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134094129",
      "id" : 134094129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDA5NDEyOQ==",
      "original_commit_id" : "c0bd1d3ff54e1f3bbd512264430348e7a9aaba3c",
      "original_position" : 68,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 93,
      "pull_request_review_id" : 57352361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134094129",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134094162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134094162"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Add test for this error?",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2017-08-19T15:20:53Z",
      "diff_hunk" : "@@ -1064,6 +1065,153 @@ UniValue sendmany(const JSONRPCRequest& request)\n     return wtx.GetHash().GetHex();\n }\n \n+UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"sweepprivkeys {\\\"privkeys\\\": [\\\"bitcoinprivkey\\\",...], other options}\\n\"\n+            \"\\nSends bitcoins controlled by private key to specified destinations.\\n\"\n+            \"\\nOptions:\\n\"\n+            \"  \\\"privkeys\\\":[\\\"bitcoinprivkey\\\",...]   (array of strings, required) An array of WIF private key(s)\\n\"\n+            \"  \\\"label\\\":\\\"actuallabelname\\\"           (string, optional) Label for received bitcoins\\n\"\n+        );\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, {UniValue::VOBJ});\n+\n+    // Parse options\n+    std::set<CScript> needles;\n+    CCoinControl coin_control;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string label;\n+    CAmount total_in = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string wif_secret = privkey_wif.get_str();\n+                CKey key;\n+                CPubKey pubkey;\n+                ParseWIFPrivKey(wif_secret, key, &pubkey);\n+\n+                tempKeystore.AddKey(key);\n+                CKeyID address = pubkey.GetID();\n+                CScript script = GetScriptForDestination(address);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+                script = GetScriptForRawPubKey(pubkey);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+            }\n+        } else if (optname == \"label\") {\n+            label = AccountFromValue(optval.get_str());\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unrecognised option '%s'\", optname));\n+        }\n+    }\n+\n+    // Ensure keypool is filled if possible\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n+\n+        if (!pwallet->IsLocked()) {\n+            pwallet->TopUpKeyPool();\n+        }\n+    }\n+\n+    // Reserve the key we will be using\n+    CReserveKey reservekey(pwallet);\n+    CPubKey pubkey;\n+    if (!reservekey.GetReservedKey(pubkey)) {\n+        throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134094162",
      "id" : 134094162,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDA5NDE2Mg==",
      "original_commit_id" : "c0bd1d3ff54e1f3bbd512264430348e7a9aaba3c",
      "original_position" : 81,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 106,
      "pull_request_review_id" : 57352361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134094162",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134094173"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134094173"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Unnecessary block?",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2017-08-19T15:21:27Z",
      "diff_hunk" : "@@ -1064,6 +1065,153 @@ UniValue sendmany(const JSONRPCRequest& request)\n     return wtx.GetHash().GetHex();\n }\n \n+UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"sweepprivkeys {\\\"privkeys\\\": [\\\"bitcoinprivkey\\\",...], other options}\\n\"\n+            \"\\nSends bitcoins controlled by private key to specified destinations.\\n\"\n+            \"\\nOptions:\\n\"\n+            \"  \\\"privkeys\\\":[\\\"bitcoinprivkey\\\",...]   (array of strings, required) An array of WIF private key(s)\\n\"\n+            \"  \\\"label\\\":\\\"actuallabelname\\\"           (string, optional) Label for received bitcoins\\n\"\n+        );\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, {UniValue::VOBJ});\n+\n+    // Parse options\n+    std::set<CScript> needles;\n+    CCoinControl coin_control;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string label;\n+    CAmount total_in = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string wif_secret = privkey_wif.get_str();\n+                CKey key;\n+                CPubKey pubkey;\n+                ParseWIFPrivKey(wif_secret, key, &pubkey);\n+\n+                tempKeystore.AddKey(key);\n+                CKeyID address = pubkey.GetID();\n+                CScript script = GetScriptForDestination(address);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+                script = GetScriptForRawPubKey(pubkey);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+            }\n+        } else if (optname == \"label\") {\n+            label = AccountFromValue(optval.get_str());\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unrecognised option '%s'\", optname));\n+        }\n+    }\n+\n+    // Ensure keypool is filled if possible\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n+\n+        if (!pwallet->IsLocked()) {\n+            pwallet->TopUpKeyPool();\n+        }\n+    }\n+\n+    // Reserve the key we will be using\n+    CReserveKey reservekey(pwallet);\n+    CPubKey pubkey;\n+    if (!reservekey.GetReservedKey(pubkey)) {\n+        throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n+    }\n+\n+    // Scan UTXO set for inputs\n+    std::vector<CTxOut> input_txos;\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134094173",
      "id" : 134094173,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDA5NDE3Mw==",
      "original_commit_id" : "c0bd1d3ff54e1f3bbd512264430348e7a9aaba3c",
      "original_position" : 86,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 111,
      "pull_request_review_id" : 57352361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134094173",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134094260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134094260"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Take this out of fee loop?",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2017-08-19T15:27:11Z",
      "diff_hunk" : "@@ -1064,6 +1065,153 @@ UniValue sendmany(const JSONRPCRequest& request)\n     return wtx.GetHash().GetHex();\n }\n \n+UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"sweepprivkeys {\\\"privkeys\\\": [\\\"bitcoinprivkey\\\",...], other options}\\n\"\n+            \"\\nSends bitcoins controlled by private key to specified destinations.\\n\"\n+            \"\\nOptions:\\n\"\n+            \"  \\\"privkeys\\\":[\\\"bitcoinprivkey\\\",...]   (array of strings, required) An array of WIF private key(s)\\n\"\n+            \"  \\\"label\\\":\\\"actuallabelname\\\"           (string, optional) Label for received bitcoins\\n\"\n+        );\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, {UniValue::VOBJ});\n+\n+    // Parse options\n+    std::set<CScript> needles;\n+    CCoinControl coin_control;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string label;\n+    CAmount total_in = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string wif_secret = privkey_wif.get_str();\n+                CKey key;\n+                CPubKey pubkey;\n+                ParseWIFPrivKey(wif_secret, key, &pubkey);\n+\n+                tempKeystore.AddKey(key);\n+                CKeyID address = pubkey.GetID();\n+                CScript script = GetScriptForDestination(address);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+                script = GetScriptForRawPubKey(pubkey);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+            }\n+        } else if (optname == \"label\") {\n+            label = AccountFromValue(optval.get_str());\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unrecognised option '%s'\", optname));\n+        }\n+    }\n+\n+    // Ensure keypool is filled if possible\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n+\n+        if (!pwallet->IsLocked()) {\n+            pwallet->TopUpKeyPool();\n+        }\n+    }\n+\n+    // Reserve the key we will be using\n+    CReserveKey reservekey(pwallet);\n+    CPubKey pubkey;\n+    if (!reservekey.GetReservedKey(pubkey)) {\n+        throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n+    }\n+\n+    // Scan UTXO set for inputs\n+    std::vector<CTxOut> input_txos;\n+    {\n+        // Collect all possible inputs\n+        std::map<COutPoint, Coin> coins;\n+        {\n+            LOCK(cs_main);\n+            mempool.FindScriptPubKey(needles, coins);\n+            FlushStateToDisk();\n+            pcoinsdbview->FindScriptPubKey(needles, coins);\n+        }\n+\n+        // Add them as inputs to the transaction, and count the total value\n+        for (auto& it : coins) {\n+            const COutPoint& outpoint = it.first;\n+            const Coin& coin = it.second;\n+            const CTxOut& txo = coin.out;\n+            tx.vin.emplace_back(outpoint.hash, outpoint.n);\n+            input_txos.push_back(txo);\n+            total_in += txo.nValue;\n+        }\n+    }\n+\n+    if (total_in == 0) {\n+        throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"No value to sweep\");\n+    }\n+\n+    CKeyID keyID = pubkey.GetID();\n+    CTxDestination txdest = CBitcoinAddress(keyID).Get();\n+\n+    tx.vout.emplace_back(total_in, GetScriptForDestination(txdest));\n+\n+    while (true) {\n+        if (IsDust(tx.vout[0], ::minRelayTxFee)) {\n+            throw JSONRPCError(RPC_VERIFY_REJECTED, \"Swept value would be dust\");\n+        }\n+        for (size_t input_index = 0; input_index < tx.vin.size(); ++input_index) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134094260",
      "id" : 134094260,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDA5NDI2MA==",
      "original_commit_id" : "c0bd1d3ff54e1f3bbd512264430348e7a9aaba3c",
      "original_position" : 120,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 154,
      "pull_request_review_id" : 57352361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134094260",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134138130"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134138130"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't see why a duplicate privkey should be an error.",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2017-08-21T02:55:04Z",
      "diff_hunk" : "@@ -1064,6 +1065,153 @@ UniValue sendmany(const JSONRPCRequest& request)\n     return wtx.GetHash().GetHex();\n }\n \n+UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"sweepprivkeys {\\\"privkeys\\\": [\\\"bitcoinprivkey\\\",...], other options}\\n\"\n+            \"\\nSends bitcoins controlled by private key to specified destinations.\\n\"\n+            \"\\nOptions:\\n\"\n+            \"  \\\"privkeys\\\":[\\\"bitcoinprivkey\\\",...]   (array of strings, required) An array of WIF private key(s)\\n\"\n+            \"  \\\"label\\\":\\\"actuallabelname\\\"           (string, optional) Label for received bitcoins\\n\"\n+        );\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, {UniValue::VOBJ});\n+\n+    // Parse options\n+    std::set<CScript> needles;\n+    CCoinControl coin_control;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string label;\n+    CAmount total_in = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string wif_secret = privkey_wif.get_str();\n+                CKey key;\n+                CPubKey pubkey;\n+                ParseWIFPrivKey(wif_secret, key, &pubkey);\n+\n+                tempKeystore.AddKey(key);\n+                CKeyID address = pubkey.GetID();\n+                CScript script = GetScriptForDestination(address);\n+                if (!script.empty()) {\n+                    needles.insert(script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134138130",
      "id" : 134138130,
      "in_reply_to_id" : 134094095,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDEzODEzMA==",
      "original_commit_id" : "c0bd1d3ff54e1f3bbd512264430348e7a9aaba3c",
      "original_position" : 54,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 79,
      "pull_request_review_id" : 57394925,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134138130",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134138212"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134138212"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If it's empty, we'll throw \"No value to sweep\" later on. And so long as the user provides something, it will never be empty.",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2017-08-21T02:56:19Z",
      "diff_hunk" : "@@ -1064,6 +1065,153 @@ UniValue sendmany(const JSONRPCRequest& request)\n     return wtx.GetHash().GetHex();\n }\n \n+UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"sweepprivkeys {\\\"privkeys\\\": [\\\"bitcoinprivkey\\\",...], other options}\\n\"\n+            \"\\nSends bitcoins controlled by private key to specified destinations.\\n\"\n+            \"\\nOptions:\\n\"\n+            \"  \\\"privkeys\\\":[\\\"bitcoinprivkey\\\",...]   (array of strings, required) An array of WIF private key(s)\\n\"\n+            \"  \\\"label\\\":\\\"actuallabelname\\\"           (string, optional) Label for received bitcoins\\n\"\n+        );\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, {UniValue::VOBJ});\n+\n+    // Parse options\n+    std::set<CScript> needles;\n+    CCoinControl coin_control;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string label;\n+    CAmount total_in = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string wif_secret = privkey_wif.get_str();\n+                CKey key;\n+                CPubKey pubkey;\n+                ParseWIFPrivKey(wif_secret, key, &pubkey);\n+\n+                tempKeystore.AddKey(key);\n+                CKeyID address = pubkey.GetID();\n+                CScript script = GetScriptForDestination(address);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+                script = GetScriptForRawPubKey(pubkey);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+            }\n+        } else if (optname == \"label\") {\n+            label = AccountFromValue(optval.get_str());\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unrecognised option '%s'\", optname));\n+        }\n+    }\n+\n+    // Ensure keypool is filled if possible",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134138212",
      "id" : 134138212,
      "in_reply_to_id" : 134094129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDEzODIxMg==",
      "original_commit_id" : "c0bd1d3ff54e1f3bbd512264430348e7a9aaba3c",
      "original_position" : 68,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 93,
      "pull_request_review_id" : 57394994,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134138212",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134138904"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134138904"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't know how, and the two tests currently \"testing\" it don't make logical sense.",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2017-08-21T03:07:42Z",
      "diff_hunk" : "@@ -1064,6 +1065,153 @@ UniValue sendmany(const JSONRPCRequest& request)\n     return wtx.GetHash().GetHex();\n }\n \n+UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"sweepprivkeys {\\\"privkeys\\\": [\\\"bitcoinprivkey\\\",...], other options}\\n\"\n+            \"\\nSends bitcoins controlled by private key to specified destinations.\\n\"\n+            \"\\nOptions:\\n\"\n+            \"  \\\"privkeys\\\":[\\\"bitcoinprivkey\\\",...]   (array of strings, required) An array of WIF private key(s)\\n\"\n+            \"  \\\"label\\\":\\\"actuallabelname\\\"           (string, optional) Label for received bitcoins\\n\"\n+        );\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, {UniValue::VOBJ});\n+\n+    // Parse options\n+    std::set<CScript> needles;\n+    CCoinControl coin_control;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string label;\n+    CAmount total_in = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string wif_secret = privkey_wif.get_str();\n+                CKey key;\n+                CPubKey pubkey;\n+                ParseWIFPrivKey(wif_secret, key, &pubkey);\n+\n+                tempKeystore.AddKey(key);\n+                CKeyID address = pubkey.GetID();\n+                CScript script = GetScriptForDestination(address);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+                script = GetScriptForRawPubKey(pubkey);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+            }\n+        } else if (optname == \"label\") {\n+            label = AccountFromValue(optval.get_str());\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unrecognised option '%s'\", optname));\n+        }\n+    }\n+\n+    // Ensure keypool is filled if possible\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n+\n+        if (!pwallet->IsLocked()) {\n+            pwallet->TopUpKeyPool();\n+        }\n+    }\n+\n+    // Reserve the key we will be using\n+    CReserveKey reservekey(pwallet);\n+    CPubKey pubkey;\n+    if (!reservekey.GetReservedKey(pubkey)) {\n+        throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134138904",
      "id" : 134138904,
      "in_reply_to_id" : 134094162,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDEzODkwNA==",
      "original_commit_id" : "c0bd1d3ff54e1f3bbd512264430348e7a9aaba3c",
      "original_position" : 81,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 106,
      "pull_request_review_id" : 57395721,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134138904",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134138919"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134138919"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Scope for `coins`",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2017-08-21T03:08:04Z",
      "diff_hunk" : "@@ -1064,6 +1065,153 @@ UniValue sendmany(const JSONRPCRequest& request)\n     return wtx.GetHash().GetHex();\n }\n \n+UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"sweepprivkeys {\\\"privkeys\\\": [\\\"bitcoinprivkey\\\",...], other options}\\n\"\n+            \"\\nSends bitcoins controlled by private key to specified destinations.\\n\"\n+            \"\\nOptions:\\n\"\n+            \"  \\\"privkeys\\\":[\\\"bitcoinprivkey\\\",...]   (array of strings, required) An array of WIF private key(s)\\n\"\n+            \"  \\\"label\\\":\\\"actuallabelname\\\"           (string, optional) Label for received bitcoins\\n\"\n+        );\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, {UniValue::VOBJ});\n+\n+    // Parse options\n+    std::set<CScript> needles;\n+    CCoinControl coin_control;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string label;\n+    CAmount total_in = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string wif_secret = privkey_wif.get_str();\n+                CKey key;\n+                CPubKey pubkey;\n+                ParseWIFPrivKey(wif_secret, key, &pubkey);\n+\n+                tempKeystore.AddKey(key);\n+                CKeyID address = pubkey.GetID();\n+                CScript script = GetScriptForDestination(address);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+                script = GetScriptForRawPubKey(pubkey);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+            }\n+        } else if (optname == \"label\") {\n+            label = AccountFromValue(optval.get_str());\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unrecognised option '%s'\", optname));\n+        }\n+    }\n+\n+    // Ensure keypool is filled if possible\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n+\n+        if (!pwallet->IsLocked()) {\n+            pwallet->TopUpKeyPool();\n+        }\n+    }\n+\n+    // Reserve the key we will be using\n+    CReserveKey reservekey(pwallet);\n+    CPubKey pubkey;\n+    if (!reservekey.GetReservedKey(pubkey)) {\n+        throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n+    }\n+\n+    // Scan UTXO set for inputs\n+    std::vector<CTxOut> input_txos;\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134138919",
      "id" : 134138919,
      "in_reply_to_id" : 134094173,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDEzODkxOQ==",
      "original_commit_id" : "c0bd1d3ff54e1f3bbd512264430348e7a9aaba3c",
      "original_position" : 86,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 111,
      "pull_request_review_id" : 57395742,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134138919",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134139181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134139181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fee changes require resigning. Perhaps it could be made to sign only before and after the loop, but the time here is trivial in comparison to the UTXO search.",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2017-08-21T03:12:51Z",
      "diff_hunk" : "@@ -1064,6 +1065,153 @@ UniValue sendmany(const JSONRPCRequest& request)\n     return wtx.GetHash().GetHex();\n }\n \n+UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"sweepprivkeys {\\\"privkeys\\\": [\\\"bitcoinprivkey\\\",...], other options}\\n\"\n+            \"\\nSends bitcoins controlled by private key to specified destinations.\\n\"\n+            \"\\nOptions:\\n\"\n+            \"  \\\"privkeys\\\":[\\\"bitcoinprivkey\\\",...]   (array of strings, required) An array of WIF private key(s)\\n\"\n+            \"  \\\"label\\\":\\\"actuallabelname\\\"           (string, optional) Label for received bitcoins\\n\"\n+        );\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, {UniValue::VOBJ});\n+\n+    // Parse options\n+    std::set<CScript> needles;\n+    CCoinControl coin_control;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string label;\n+    CAmount total_in = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string wif_secret = privkey_wif.get_str();\n+                CKey key;\n+                CPubKey pubkey;\n+                ParseWIFPrivKey(wif_secret, key, &pubkey);\n+\n+                tempKeystore.AddKey(key);\n+                CKeyID address = pubkey.GetID();\n+                CScript script = GetScriptForDestination(address);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+                script = GetScriptForRawPubKey(pubkey);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+            }\n+        } else if (optname == \"label\") {\n+            label = AccountFromValue(optval.get_str());\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unrecognised option '%s'\", optname));\n+        }\n+    }\n+\n+    // Ensure keypool is filled if possible\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n+\n+        if (!pwallet->IsLocked()) {\n+            pwallet->TopUpKeyPool();\n+        }\n+    }\n+\n+    // Reserve the key we will be using\n+    CReserveKey reservekey(pwallet);\n+    CPubKey pubkey;\n+    if (!reservekey.GetReservedKey(pubkey)) {\n+        throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n+    }\n+\n+    // Scan UTXO set for inputs\n+    std::vector<CTxOut> input_txos;\n+    {\n+        // Collect all possible inputs\n+        std::map<COutPoint, Coin> coins;\n+        {\n+            LOCK(cs_main);\n+            mempool.FindScriptPubKey(needles, coins);\n+            FlushStateToDisk();\n+            pcoinsdbview->FindScriptPubKey(needles, coins);\n+        }\n+\n+        // Add them as inputs to the transaction, and count the total value\n+        for (auto& it : coins) {\n+            const COutPoint& outpoint = it.first;\n+            const Coin& coin = it.second;\n+            const CTxOut& txo = coin.out;\n+            tx.vin.emplace_back(outpoint.hash, outpoint.n);\n+            input_txos.push_back(txo);\n+            total_in += txo.nValue;\n+        }\n+    }\n+\n+    if (total_in == 0) {\n+        throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"No value to sweep\");\n+    }\n+\n+    CKeyID keyID = pubkey.GetID();\n+    CTxDestination txdest = CBitcoinAddress(keyID).Get();\n+\n+    tx.vout.emplace_back(total_in, GetScriptForDestination(txdest));\n+\n+    while (true) {\n+        if (IsDust(tx.vout[0], ::minRelayTxFee)) {\n+            throw JSONRPCError(RPC_VERIFY_REJECTED, \"Swept value would be dust\");\n+        }\n+        for (size_t input_index = 0; input_index < tx.vin.size(); ++input_index) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r134139181",
      "id" : 134139181,
      "in_reply_to_id" : 134094260,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDEzOTE4MQ==",
      "original_commit_id" : "c0bd1d3ff54e1f3bbd512264430348e7a9aaba3c",
      "original_position" : 120,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 154,
      "pull_request_review_id" : 57396045,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134139181",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed the test failure (missing `cs_main` lock on `AcceptToMemoryPool`)",
      "created_at" : "2017-08-21T03:18:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-323637548",
      "id" : 323637548,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMyMzYzNzU0OA==",
      "updated_at" : "2017-08-21T03:18:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323637548",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr: can you rebase this once again? Thanks",
      "created_at" : "2017-11-30T06:24:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-348094250",
      "id" : 348094250,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM0ODA5NDI1MA==",
      "updated_at" : "2017-11-30T06:24:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348094250",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2017-11-30T06:59:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-348100082",
      "id" : 348100082,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM0ODEwMDA4Mg==",
      "updated_at" : "2017-11-30T06:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348100082",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK a397deb247fc404064cf76ede8d64eb68f4fefe6 (will test soon).\r\nI personally dislike the \"direct\"-approach. I would like to \"see\" the transaction before submitting.\r\n\r\nPossible extensions:\r\n* Remove the signing and broadcasting, accept a pubkey and rename it to `createrawsweeptransaction` (or similar)\r\n* Add support for HD sweep (xpub/xpriv)",
      "created_at" : "2017-12-01T07:18:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-348420470",
      "id" : 348420470,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM0ODQyMDQ3MA==",
      "updated_at" : "2017-12-01T07:18:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348420470",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK using a397deb247fc40. This is a great feature many people need.\r\nI'm moving on to test it on mainnet using the v0.15.0.knots20170914 build.\r\nI encourage inclusion and later on apply extensions (esp what @jonasschnelli recommends above).",
      "created_at" : "2017-12-06T18:09:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-349726160",
      "id" : 349726160,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM0OTcyNjE2MA==",
      "updated_at" : "2017-12-06T18:09:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349726160",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/148059?v=4",
         "events_url" : "https://api.github.com/users/jaromil/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jaromil/followers",
         "following_url" : "https://api.github.com/users/jaromil/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jaromil/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jaromil",
         "id" : 148059,
         "login" : "jaromil",
         "node_id" : "MDQ6VXNlcjE0ODA1OQ==",
         "organizations_url" : "https://api.github.com/users/jaromil/orgs",
         "received_events_url" : "https://api.github.com/users/jaromil/received_events",
         "repos_url" : "https://api.github.com/users/jaromil/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jaromil/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jaromil/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jaromil"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r155965988"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155965988"
         }
      },
      "author_association" : "MEMBER",
      "body" : "seems like unused imports?",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2017-12-11T00:26:41Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the sweepprivkeys RPC.\"\"\"\n+\n+import decimal\n+import math",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r155965988",
      "id" : 155965988,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTk2NTk4OA==",
      "original_commit_id" : "a397deb247fc404064cf76ede8d64eb68f4fefe6",
      "original_position" : 8,
      "path" : "test/functional/sweepprivkeys.py",
      "position" : null,
      "pull_request_review_id" : 82368721,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155965988",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The check fail is unrelated to this PR and limited to the ARM build, lacking the \"flake8\" python library.\r\n```\r\ncontrib/devtools/lint-python.sh: 10: contrib/devtools/lint-python.sh: flake8: not found\r\n```\r\nremoving unused imports won't fix lint-python.sh either.",
      "created_at" : "2017-12-11T16:39:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-350780401",
      "id" : 350780401,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM1MDc4MDQwMQ==",
      "updated_at" : "2017-12-11T16:39:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350780401",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/148059?v=4",
         "events_url" : "https://api.github.com/users/jaromil/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jaromil/followers",
         "following_url" : "https://api.github.com/users/jaromil/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jaromil/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jaromil",
         "id" : 148059,
         "login" : "jaromil",
         "node_id" : "MDQ6VXNlcjE0ODA1OQ==",
         "organizations_url" : "https://api.github.com/users/jaromil/orgs",
         "received_events_url" : "https://api.github.com/users/jaromil/received_events",
         "repos_url" : "https://api.github.com/users/jaromil/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jaromil/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jaromil/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jaromil"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ping and HNY everyone :^P",
      "created_at" : "2018-01-08T15:29:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-355998155",
      "id" : 355998155,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM1NTk5ODE1NQ==",
      "updated_at" : "2018-01-08T15:29:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355998155",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/148059?v=4",
         "events_url" : "https://api.github.com/users/jaromil/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jaromil/followers",
         "following_url" : "https://api.github.com/users/jaromil/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jaromil/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jaromil",
         "id" : 148059,
         "login" : "jaromil",
         "node_id" : "MDQ6VXNlcjE0ODA1OQ==",
         "organizations_url" : "https://api.github.com/users/jaromil/orgs",
         "received_events_url" : "https://api.github.com/users/jaromil/received_events",
         "repos_url" : "https://api.github.com/users/jaromil/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jaromil/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jaromil/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jaromil"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Since the keys are not added to the wallet, and thus bumpfee won't work, it makes sense to set nSequence to support rbf and return a list of signed raw transactions that each pay a slightly higher fee?",
      "created_at" : "2018-01-15T00:08:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-357554723",
      "id" : 357554723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM1NzU1NDcyMw==",
      "updated_at" : "2018-01-15T00:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357554723",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke I believe yours is a brilliant idea. Just to be clear, you mean a list of signed raw transactions that are ready to replace the one made and can be fired up from the lowest fee to the higher to bump if necessary, right? such transactions should be discarded once enough confirmations are present.",
      "created_at" : "2018-01-15T10:57:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-357649890",
      "id" : 357649890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM1NzY0OTg5MA==",
      "updated_at" : "2018-01-15T10:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357649890",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/148059?v=4",
         "events_url" : "https://api.github.com/users/jaromil/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jaromil/followers",
         "following_url" : "https://api.github.com/users/jaromil/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jaromil/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jaromil",
         "id" : 148059,
         "login" : "jaromil",
         "node_id" : "MDQ6VXNlcjE0ODA1OQ==",
         "organizations_url" : "https://api.github.com/users/jaromil/orgs",
         "received_events_url" : "https://api.github.com/users/jaromil/received_events",
         "repos_url" : "https://api.github.com/users/jaromil/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jaromil/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jaromil/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jaromil"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If we still want this, it needs rebase/implementation in terms of #12196.\r\nBut I'm going to close it for now, it's been open since 2016 and there's no clear progress.\r\n\r\nIt might make sense to open a new PR if you start work on this again, or you can ask me to reopen it.",
      "created_at" : "2018-08-31T08:53:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-417599200",
      "id" : 417599200,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzU5OTIwMA==",
      "updated_at" : "2018-08-31T08:53:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417599200",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Interesting revamp. I have read the whole thread in #12196, is there some documentation being worked about use examples for `scantxoutset` to be used in place of sweeping? I like to try to sort out my needs using that, but haven't kept myself up to date enough to understand it without handholding. There is the integration test in python, but...",
      "created_at" : "2018-08-31T14:21:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-417679596",
      "id" : 417679596,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzY3OTU5Ng==",
      "updated_at" : "2018-08-31T14:21:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417679596",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/148059?v=4",
         "events_url" : "https://api.github.com/users/jaromil/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jaromil/followers",
         "following_url" : "https://api.github.com/users/jaromil/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jaromil/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jaromil",
         "id" : 148059,
         "login" : "jaromil",
         "node_id" : "MDQ6VXNlcjE0ODA1OQ==",
         "organizations_url" : "https://api.github.com/users/jaromil/orgs",
         "received_events_url" : "https://api.github.com/users/jaromil/received_events",
         "repos_url" : "https://api.github.com/users/jaromil/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jaromil/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jaromil/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jaromil"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased, please reopen @laanwj ",
      "created_at" : "2018-10-29T18:39:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-434030739",
      "id" : 434030739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNDAzMDczOQ==",
      "updated_at" : "2018-10-29T18:39:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/434030739",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr You can only (force) push after it has been reopened. If the branch is different in any way, it won't reopen.",
      "created_at" : "2018-10-29T19:11:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-434041815",
      "id" : 434041815,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNDA0MTgxNQ==",
      "updated_at" : "2018-10-29T19:11:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/434041815",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "NOTE: Currently needs #14602 for tests to pass\r\n\r\n",
      "created_at" : "2018-10-29T20:56:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-434076483",
      "id" : 434076483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNDA3NjQ4Mw==",
      "updated_at" : "2018-10-29T20:56:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/434076483",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16129](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16129.html) (refactor: Remove unused includes by practicalswift)\n* [#13756](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13756.html) (wallet: \"avoid_reuse\" wallet flag for improved privacy by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-10-29T23:04:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-434113031",
      "id" : 434113031,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNDExMzAzMQ==",
      "updated_at" : "2019-06-02T14:16:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/434113031",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r229235768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229235768"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could be const reference?",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2018-10-30T09:44:30Z",
      "diff_hunk" : "@@ -904,6 +906,171 @@ static UniValue sendmany(const JSONRPCRequest& request)\n     return tx->GetHash().GetHex();\n }\n \n+// defined in rpc/blockchain.cpp\n+bool FindScriptPubKey(std::atomic<int>& scan_progress, const std::atomic<bool>& should_abort, int64_t& count, CCoinsViewCursor* cursor, const std::set<CScript>& needles, std::map<COutPoint, Coin>& out_results);\n+\n+static UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"sweepprivkeys {\\\"privkeys\\\": [\\\"bitcoinprivkey\\\",...], other options}\\n\"\n+            \"\\nSends bitcoins controlled by private key to specified destinations.\\n\"\n+            \"\\nOptions:\\n\"\n+            \"  \\\"privkeys\\\":[\\\"bitcoinprivkey\\\",...]   (array of strings, required) An array of WIF private key(s)\\n\"\n+            \"  \\\"label\\\":\\\"actuallabelname\\\"           (string, optional) Label for received bitcoins\\n\"\n+        );\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, {UniValue::VOBJ});\n+\n+    // Parse options\n+    std::set<CScript> needles;\n+    CCoinControl coin_control;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string label;\n+    CAmount total_in = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string wif_secret = privkey_wif.get_str();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r229235768",
      "id" : 229235768,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTIzNTc2OA==",
      "original_commit_id" : "e341211bf77d2792ac4c69bdd9d2a63eb25262a1",
      "original_position" : 55,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 69,
      "pull_request_review_id" : 169683833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-05-02T03:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229235768",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-11-05T11:18:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-435839867",
      "id" : 435839867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNTgzOTg2Nw==",
      "updated_at" : "2018-11-05T11:18:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/435839867",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Still needs rebase. IMO this should be reworked to take a descriptor which would address the points above about accepting pubkeys/HD keys. Agree that returning the raw transaction is preferable (`createrawsweeptransaction`)\r\n",
      "created_at" : "2018-11-15T19:34:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-439163148",
      "id" : 439163148,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTE2MzE0OA==",
      "updated_at" : "2018-11-15T19:34:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439163148",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-02-14T09:10:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-463550205",
      "id" : 463550205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MzU1MDIwNQ==",
      "updated_at" : "2019-02-14T09:10:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463550205",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm afraid this PR doesn't build when rebased on `master`.",
      "created_at" : "2019-05-07T15:55:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-490140192",
      "id" : 490140192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDE0MDE5Mg==",
      "updated_at" : "2019-05-07T15:55:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490140192",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-06-06T15:24:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-499542763",
      "id" : 499542763,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5OTU0Mjc2Mw==",
      "updated_at" : "2019-06-06T15:24:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499542763",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-06-06T22:29:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-499691635",
      "id" : 499691635,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5OTY5MTYzNQ==",
      "updated_at" : "2019-06-06T22:29:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499691635",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This should probably use \"scantxoutset\" internally (rebase issue).\r\nI also think it should be a `createrawsweep` call (rather then directly signing and executing).\r\nMaybe you can change this to be an argument for \"scantxoutset\" that would also spit out a rawtransaction (with configurable fee and eventually configurable target address) for the sweep transaction.",
      "created_at" : "2019-06-07T12:27:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-499865461",
      "id" : 499865461,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5OTg2NTQ2MQ==",
      "updated_at" : "2019-06-07T12:27:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499865461",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r314278807"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314278807"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This says \"specified destinations\" but you can't specify the destinations. Can you also make it clear that coins are sweeped one by one to unique addresses (per priv key)?",
      "commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "created_at" : "2019-08-15T12:04:44Z",
      "diff_hunk" : "@@ -957,6 +959,172 @@ static UniValue sendmany(const JSONRPCRequest& request)\n     return tx->GetHash().GetHex();\n }\n \n+// defined in rpc/blockchain.cpp\n+bool FindScriptPubKey(std::atomic<int>& scan_progress, const std::atomic<bool>& should_abort, int64_t& count, CCoinsViewCursor* cursor, const std::set<CScript>& needles, std::map<COutPoint, Coin>& out_results);\n+\n+static UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            RPCHelpMan{\"sweepprivkeys\",\n+                \"\\nSends bitcoins controlled by private key to specified destinations.\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#discussion_r314278807",
      "id" : 314278807,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDI3ODgwNw==",
      "original_commit_id" : "e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "original_position" : 33,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 33,
      "pull_request_review_id" : 275391546,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9152",
      "updated_at" : "2019-08-15T12:16:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314278807",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't see any sane way to rebase this post-`bitcoin-wallet`, so going to have to just make it a Knots-only hack for now. :/",
      "created_at" : "2019-10-14T20:31:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-541904504",
      "id" : 541904504,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MTkwNDUwNA==",
      "updated_at" : "2019-10-14T20:31:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541904504",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I don't see any sane way to rebase this post-bitcoin-wallet\r\n\r\nI don't think it should be too bad if someone wants to pick it up. It should just require a new `interfaces::Chain` method to wrap `FindScriptPubKey` calls, since wallet code can no longer access  `mempool` and `pcoinsdbview` globals directly.",
      "created_at" : "2019-10-15T16:47:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-542304839",
      "id" : 542304839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjMwNDgzOQ==",
      "updated_at" : "2019-10-15T16:47:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542304839",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Maintainers maybe remove \"Waiting for author\" and \"Needs rebase\" tags and mark \"Up for grabs\"",
      "created_at" : "2019-10-24T16:04:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9152#issuecomment-545988127",
      "id" : 545988127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9152",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTk4ODEyNw==",
      "updated_at" : "2019-10-24T16:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545988127",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
