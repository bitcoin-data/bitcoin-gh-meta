[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "On the db_dump/db_load error, I think this would have to be caused by an accidental `\\fc` -> `_` replacement in a part of the dump that wasn't an address name. I don't know how many replacements you had to make, but if it was not too many, I might try visually inspecting a diff of the dump file before and after the replacements, or maybe just starting with a few replacements and then adding more so you can identify which one(s) cause the warning. Also if there aren't too many transactions, it might be easier to use the wallet gui interface to change the address labels rather than work with dump/load.\n\nOn the underlying bug which caused latin1 to be stored in the database rather than utf8, it looks like it was fixed in 2011 with the `setCodecForCStrings` call added here:\n\nhttps://github.com/bitcoin/bitcoin/commit/3f0816e3d926e0ea78ac7b6cd43efe62355885c8#diff-8c9d79ba40bf702f01685008550ac100R116\n\nOne improvement that might be a good idea to make now would be to have `UniValue::setStr` validate that strings passed to it are utf8. There actually already is utf8 validation code in the UniValue library (used during parsing), but it just isn't called right now by `UniValue::setStr`. Changing this could ensure that bitcoin never outputs invalid JSON, and make bugs like this one easier to track down and fix.\n",
      "created_at" : "2016-11-15T20:32:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9166#issuecomment-260758872",
      "id" : 260758872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9166",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI2MDc1ODg3Mg==",
      "updated_at" : "2016-11-15T20:32:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260758872",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> One improvement that might be a good idea to make now would be to have UniValue::setStr validate that strings passed to it are utf8. \n\nThis would make sense, and I considered it at the time - however, it's not quite clear what to do in the case where it is not. It could raise an exception, but this would still make it impossible to list those transactions. And it'd fail server-side instead of client-side :(\n",
      "created_at" : "2016-11-16T13:01:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9166#issuecomment-260940649",
      "id" : 260940649,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9166",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI2MDk0MDY0OQ==",
      "updated_at" : "2016-11-16T13:01:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260940649",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > One improvement that might be a good idea to make now would be to have UniValue::setStr validate that strings passed to it are utf8.\n> \n> This would make sense, and I considered it at the time - however, it's not quite clear what to do in the case where it is not. It could raise an exception, but this would still make it impossible to list those transactions. And it'd fail server-side instead of client-side :(\n\nWould it be possible to sanitize a string in such cases (resulting in a string with stripped out [or similar]  chars)?\n",
      "created_at" : "2016-11-16T13:16:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9166#issuecomment-260943707",
      "id" : 260943707,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9166",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI2MDk0MzcwNw==",
      "updated_at" : "2016-11-16T13:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260943707",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Would it be possible to sanitize a string in such cases (resulting in a string with stripped out [or similar] chars)?\n\nSure! But please don't do that in univalue. It shouldn't do its own hidden munging of data. In this case it may make sense to have a two-pronged approach:\n- Make univalue validate strings as unicode, raise an exception if not.\n- Make sure bitcoind never feeds it invalid unicode. This means strings read from the wallet database will need to be sanitized. I don't think we have any other un-sanitized sources of strings that are reported on RPC (e.g. \"user agent\" strings from the network are already sanitized in an extremely strict way.)\n  - It should already be impossible for new non-unicode strings to get into the database, as unicode is checked on parsing the incoming JSON. So at least there will be no new cases.\n",
      "created_at" : "2016-11-16T13:25:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9166#issuecomment-260945587",
      "id" : 260945587,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9166",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI2MDk0NTU4Nw==",
      "updated_at" : "2016-11-16T13:28:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260945587",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@ryanofsky \n\nIt's not about the labels (well, maybe?) but about the TX comments in my case.\n\nI used `db_dump -p` to dump the `wallet.dat`. I then used vim and searched for the string `comment`. I found the TX comments with the comment being there in plain text. The Ã¼ chracter in this case was written as the 3 chars `\\fc`. I just replaced these 3 chars with `ue`, saved the file, reimported it via `db_load` and fired up bitcoind with the above mentioned error message.\n\nI did _not_ do a search/replace for `\\fc`. I did only edit the TX comments by hand.\n\nBut I guess bitcoind saves checksums over all the TXs in the wallet so this might have triggered the error message.\n\nAt the moment we have no solution so far.\n",
      "created_at" : "2016-11-16T13:30:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9166#issuecomment-260946755",
      "id" : 260946755,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9166",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI2MDk0Njc1NQ==",
      "updated_at" : "2016-11-16T13:30:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260946755",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/20477825?v=4",
         "events_url" : "https://api.github.com/users/c0deright/events{/privacy}",
         "followers_url" : "https://api.github.com/users/c0deright/followers",
         "following_url" : "https://api.github.com/users/c0deright/following{/other_user}",
         "gists_url" : "https://api.github.com/users/c0deright/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/c0deright",
         "id" : 20477825,
         "login" : "c0deright",
         "node_id" : "MDQ6VXNlcjIwNDc3ODI1",
         "organizations_url" : "https://api.github.com/users/c0deright/orgs",
         "received_events_url" : "https://api.github.com/users/c0deright/received_events",
         "repos_url" : "https://api.github.com/users/c0deright/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/c0deright/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/c0deright/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/c0deright"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> At the moment we have no solution so far.\n\nQuick fix would be to delete the transaction from the database (using the db_dump/db_load trick) and do a rescan. It will be back without metadata.\n",
      "created_at" : "2016-11-16T13:36:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9166#issuecomment-260948001",
      "id" : 260948001,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9166",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI2MDk0ODAwMQ==",
      "updated_at" : "2016-11-16T13:36:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260948001",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@adminblogger, I think the problem is replacing a single byte `\\fc` with two bytes `ue`. The boost serialization in bitcoin uses length-prefixed strings, so you would need to find and update the length fields before the strings if you wanted to add the extra bytes.\n",
      "created_at" : "2016-11-16T18:40:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9166#issuecomment-261033086",
      "id" : 261033086,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9166",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI2MTAzMzA4Ng==",
      "updated_at" : "2016-11-16T18:40:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261033086",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@ryanofsky Thanks for that hint. I should have thought of this myself.\n\nI'll try to do the dump/load thing again while replacing the 1byte special char with 1 char instead of 2 chars. That might work.\n\n**EDIT**\n\nI can confirm that this is working. I just modified 2 production wallets that way. Will edit first post to reflect this.\n\n**EDIT**\n\nWith a third wallet the JSON parser still complained. Debugging this showed that one doesn't find all the comments through grepping for `comment` in the dump file.\n\nThe preferable way still would be that `bitcoind` would handle this somehow.\n",
      "created_at" : "2016-11-17T08:38:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9166#issuecomment-261187113",
      "id" : 261187113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9166",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI2MTE4NzExMw==",
      "updated_at" : "2016-11-17T14:56:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261187113",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/20477825?v=4",
         "events_url" : "https://api.github.com/users/c0deright/events{/privacy}",
         "followers_url" : "https://api.github.com/users/c0deright/followers",
         "following_url" : "https://api.github.com/users/c0deright/following{/other_user}",
         "gists_url" : "https://api.github.com/users/c0deright/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/c0deright",
         "id" : 20477825,
         "login" : "c0deright",
         "node_id" : "MDQ6VXNlcjIwNDc3ODI1",
         "organizations_url" : "https://api.github.com/users/c0deright/orgs",
         "received_events_url" : "https://api.github.com/users/c0deright/received_events",
         "repos_url" : "https://api.github.com/users/c0deright/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/c0deright/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/c0deright/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/c0deright"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The preferable way still would be that bitcoind would handle this somehow.\r\n\r\nYes. But I'm afraid you're going to have to do that yourself (have given some suggestions how above), this comes up extremely rarely. Wallets grandfathered in from that time are rare in themselves, and having non-unicode stuff in the database is doubly rare.",
      "created_at" : "2016-11-21T08:11:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9166#issuecomment-261870472",
      "id" : 261870472,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9166",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI2MTg3MDQ3Mg==",
      "updated_at" : "2016-11-21T08:11:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261870472",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The feature request didn't seem to attract much attention in the past. Also, the issue seems not important enough right now to keep it sitting around idle in the list of open issues.\r\n\r\nClosing due to lack of interest. Pull requests with improvements are always welcome.",
      "created_at" : "2020-04-26T21:15:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9166#issuecomment-619626071",
      "id" : 619626071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9166",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxOTYyNjA3MQ==",
      "updated_at" : "2020-04-26T21:15:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619626071",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
