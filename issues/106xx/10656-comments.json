[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "IMO f108f58235e35f3eb07d24d9d330f6098234137dd505bbd19ff249d809254f2d is not conflicted, it's source is.\r\n\r\nWhat would you like to have in the response?",
      "created_at" : "2017-12-07T00:24:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10656#issuecomment-349819883",
      "id" : 349819883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10656",
      "updated_at" : "2017-12-07T00:24:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349819883",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This would require a pretty decent refactor of the wallet as we'd have to store dependants of wallet transactions in the wallet, which would also be a pretty big blowup of wallet on-disk size.",
      "created_at" : "2017-12-08T00:13:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10656#issuecomment-350134084",
      "id" : 350134084,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10656",
      "updated_at" : "2017-12-08T00:13:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350134084",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> What would you like to have in the response?\r\n\r\nWell the whole point of `listsinceblock` is to return transactions you should care about (for processing, or what ever). So in this case the API response is identical to \"you have a pending receive\"  but the reality is the transaction is orphaned and it's now impossible for it to ever confirm. This is a distinction worth making.\r\n\r\n(FWIW, I don't care too much about this issue as I don't use `listsinceblock` as despite having the perfect API for me -- it's pretty much unusuable due to bugs/quirks/bad-behavior/etc. This issue was an attempt at documenting some of the problems I found, but I think it might just be better to deprecate the whole command)",
      "created_at" : "2017-12-08T00:27:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10656#issuecomment-350136331",
      "id" : 350136331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10656",
      "updated_at" : "2017-12-08T00:27:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350136331",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9326759?v=4",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "An easy fix we could do is to add a \"inmempool\" flag to the output and note the behavior, but anything else would be a huge blow-up in wallet size just to provide a non-promise that we could tell a user when something has a conflicted dependant (as the dependant could be 100 deep and we can't store that much).\n\nI'm curious what other issues you have with listsinceblock? I assume there's issues for them?\n\nOn December 7, 2017 7:27:53 PM EST, Ryan Havar <notifications@github.com> wrote:\n>> What would you like to have in the response?\n>\n>Well the whole point of `listsinceblock` is to return transactions you\n>should care about (for processing, or what ever). So in this case the\n>API response is identical to \"you have a pending receive\"  but the\n>reality is the transaction is orphaned and it's now impossible for it\n>to ever confirm. This is a distinction worth making.\n>\n>(FWIW, I don't care too much about this issue as I don't use\n>`listsinceblock` as despite having the perfect API for me -- it's\n>pretty much unusuable due to bugs/quirks/bad-behavior/etc. This issue\n>was an attempt at documenting some of the problems I found, but I think\n>it might just be better to deprecate the whole command)\n>\n>-- \n>You are receiving this because you commented.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/issues/10656#issuecomment-350136331\n",
      "created_at" : "2017-12-08T00:34:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10656#issuecomment-350137369",
      "id" : 350137369,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10656",
      "updated_at" : "2017-12-08T00:34:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350137369",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> but anything else would be a huge blow-up in wallet size just to provide a non-promise that we could tell a user when something has a conflicted dependant (as the dependant could be 100 deep and we can't store that much).\r\n\r\nReally? I don't have the Qt stuff installed, so I can't really see -- but what happens in the UI? Surely you don't see an impossible-to-confirm transaction as perpetually \"pending\"...   That'd be a pretty serious bug.\r\n\r\n> I'm curious what other issues you have with listsinceblock? I assume there's issues for them?\r\n\r\nCan't really remember how many of them have issues or not, but I can file them if there's any interest in making it work properly.\r\n\r\nBut really the first step in fixing it though would be writing some extensive description of what the behavior *should* be (especially in the edge cases: conflicts, replaced, this issue, sending-to-self etc) and then it would be a lot easier to see if it makes sense or not -- and report deviations of it. Right now it's pretty wtf, and you can't tell if it's intentional or not. Like the `blockhash` filter doesn't even work for conflicted transactions (at least when I tried a year ago)",
      "created_at" : "2017-12-08T11:12:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10656#issuecomment-350238518",
      "id" : 350238518,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10656",
      "updated_at" : "2017-12-08T11:13:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350238518",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9326759?v=4",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Indeed, also in Qt, if you have a transaction who's dependant four-parents-deep is conflicted the transaction will not neccessarily be marked conflicted, as its not possible to know that without storing an immense amount of data. The only thing we can determine is that the transaction failed to get into our mempool. Of course if the transaction *itself* is conflicted we track that, but as we don't store the parents of all wallet transactions (recursively) we cant figure out that it is dependant-conflicted.\r\n\r\nAs for returning conflicted transactionsr repeatedly, I opened #11853.",
      "created_at" : "2017-12-08T14:59:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10656#issuecomment-350283813",
      "id" : 350283813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10656",
      "updated_at" : "2017-12-08T14:59:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350283813",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">  as its not possible to know that without storing an immense amount of data. \r\n\r\nYou only really need to store unconfirmed ancestors, which is currently bounded at pretty low number. I think the only issue I see is just the amount of fragile and complex you need to do in order to handle things like reorgs :/ \r\n\r\nIn my own wallet, I just mark any transaction that gets evicted from the mempool as conflicted. Although, I suppose you can argue that it's really orphaned and not conflicted, but I'm not sure that is a distinction particularly useful to anyone. But if it is, you could always just have an \"is_orphaned\" flag or something",
      "created_at" : "2017-12-08T15:20:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10656#issuecomment-350289031",
      "id" : 350289031,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10656",
      "updated_at" : "2017-12-08T15:20:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350289031",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9326759?v=4",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> You only really need to store unconfirmed ancestors\r\n\r\nThat is an option, but in the case of even a 1-block reorg you'd be back in the same state where you can't guarantee anything about reporting conflicts. Also, note that even storing unconfirmed ancestors would potentially be a huge blowup in wallet size for some users, as it could potentially include up to 25 transactions of up to 100KB per wallet transaction.\r\n\r\n> In my own wallet, I just mark any transaction that gets evicted from the mempool as conflicted\r\n\r\nIndeed, my point above was that a transaction which is not in mempool is actually a pretty decent proxy for \"quite possibly conflicted, but even if its not, it not being in your mempool probably means its not going to be confirmed any time soon, so just treat it was conflicted\".",
      "created_at" : "2017-12-08T15:26:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10656#issuecomment-350290591",
      "id" : 350290591,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10656",
      "updated_at" : "2017-12-08T15:26:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350290591",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Agree about not being in the mempool is a good enough proxy. But I don't think your solution is ideal because you need more than \"is_not_in_mempool\" but also a time/block or something.\r\n\r\nBecause I care if the transaction was orphaned recently  (for instance, I probably want to take action based on this fact) but I don't really want to see for eternity (when I'm only asking for recent events)",
      "created_at" : "2017-12-08T15:32:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10656#issuecomment-350292196",
      "id" : 350292196,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10656",
      "updated_at" : "2017-12-08T15:32:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350292196",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9326759?v=4",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   }
]
